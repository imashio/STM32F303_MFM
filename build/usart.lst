ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"usart.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	MX_USART1_UART_Init
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_USART1_UART_Init:
  27              	.LFB123:
  28              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Description        : This file provides code for the configuration
   5:Src/usart.c   ****   *                      of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   * @attention
   8:Src/usart.c   ****   *
   9:Src/usart.c   ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/usart.c   ****   * All rights reserved.</center></h2>
  11:Src/usart.c   ****   *
  12:Src/usart.c   ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/usart.c   ****   * the "License"; You may not use this file except in compliance with the
  14:Src/usart.c   ****   * License. You may obtain a copy of the License at:
  15:Src/usart.c   ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/usart.c   ****   *
  17:Src/usart.c   ****   ******************************************************************************
  18:Src/usart.c   ****   */
  19:Src/usart.c   **** 
  20:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  21:Src/usart.c   **** #include "usart.h"
  22:Src/usart.c   **** 
  23:Src/usart.c   **** /* USER CODE BEGIN 0 */
  24:Src/usart.c   **** 
  25:Src/usart.c   **** /* USER CODE END 0 */
  26:Src/usart.c   **** 
  27:Src/usart.c   **** UART_HandleTypeDef huart1;
  28:Src/usart.c   **** UART_HandleTypeDef huart2;
  29:Src/usart.c   **** 
  30:Src/usart.c   **** /* USART1 init function */
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s 			page 2


  31:Src/usart.c   **** 
  32:Src/usart.c   **** void MX_USART1_UART_Init(void)
  33:Src/usart.c   **** {
  29              		.loc 1 33 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 3, -16
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  34:Src/usart.c   **** 
  35:Src/usart.c   ****   huart1.Instance = USART1;
  40              		.loc 1 35 0
  41 0002 0E4B     		ldr	r3, .L6
  42 0004 0E4A     		ldr	r2, .L6+4
  43 0006 1A60     		str	r2, [r3]
  36:Src/usart.c   ****   huart1.Init.BaudRate = 19200;
  44              		.loc 1 36 0
  45 0008 4FF49642 		mov	r2, #19200
  37:Src/usart.c   ****   huart1.Init.WordLength = UART_WORDLENGTH_9B;
  46              		.loc 1 37 0
  47 000c 4FF48055 		mov	r5, #4096
  38:Src/usart.c   ****   huart1.Init.StopBits = UART_STOPBITS_1;
  39:Src/usart.c   ****   huart1.Init.Parity = UART_PARITY_EVEN;
  48              		.loc 1 39 0
  49 0010 4FF48064 		mov	r4, #1024
  40:Src/usart.c   ****   huart1.Init.Mode = UART_MODE_TX_RX;
  50              		.loc 1 40 0
  51 0014 0C21     		movs	r1, #12
  36:Src/usart.c   ****   huart1.Init.WordLength = UART_WORDLENGTH_9B;
  52              		.loc 1 36 0
  53 0016 5A60     		str	r2, [r3, #4]
  41:Src/usart.c   ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  42:Src/usart.c   ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  43:Src/usart.c   ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  44:Src/usart.c   ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  45:Src/usart.c   ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  54              		.loc 1 45 0
  55 0018 1846     		mov	r0, r3
  38:Src/usart.c   ****   huart1.Init.Parity = UART_PARITY_EVEN;
  56              		.loc 1 38 0
  57 001a 0022     		movs	r2, #0
  37:Src/usart.c   ****   huart1.Init.StopBits = UART_STOPBITS_1;
  58              		.loc 1 37 0
  59 001c 9D60     		str	r5, [r3, #8]
  40:Src/usart.c   ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  60              		.loc 1 40 0
  61 001e C3E90441 		strd	r4, r1, [r3, #16]
  38:Src/usart.c   ****   huart1.Init.Parity = UART_PARITY_EVEN;
  62              		.loc 1 38 0
  63 0022 DA60     		str	r2, [r3, #12]
  42:Src/usart.c   ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  64              		.loc 1 42 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s 			page 3


  65 0024 C3E90622 		strd	r2, r2, [r3, #24]
  44:Src/usart.c   ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  66              		.loc 1 44 0
  67 0028 C3E90822 		strd	r2, r2, [r3, #32]
  68              		.loc 1 45 0
  69 002c FFF7FEFF 		bl	HAL_UART_Init
  70              	.LVL0:
  71 0030 00B9     		cbnz	r0, .L5
  46:Src/usart.c   ****   {
  47:Src/usart.c   ****     Error_Handler();
  48:Src/usart.c   ****   }
  49:Src/usart.c   **** 
  50:Src/usart.c   **** }
  72              		.loc 1 50 0
  73 0032 38BD     		pop	{r3, r4, r5, pc}
  74              	.L5:
  75 0034 BDE83840 		pop	{r3, r4, r5, lr}
  76              	.LCFI1:
  77              		.cfi_restore 14
  78              		.cfi_restore 5
  79              		.cfi_restore 4
  80              		.cfi_restore 3
  81              		.cfi_def_cfa_offset 0
  47:Src/usart.c   ****   }
  82              		.loc 1 47 0
  83 0038 FFF7FEBF 		b	Error_Handler
  84              	.LVL1:
  85              	.L7:
  86              		.align	2
  87              	.L6:
  88 003c 00000000 		.word	huart1
  89 0040 00380140 		.word	1073821696
  90              		.cfi_endproc
  91              	.LFE123:
  93              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  94              		.align	1
  95              		.p2align 2,,3
  96              		.global	MX_USART2_UART_Init
  97              		.syntax unified
  98              		.thumb
  99              		.thumb_func
 100              		.fpu fpv4-sp-d16
 102              	MX_USART2_UART_Init:
 103              	.LFB124:
  51:Src/usart.c   **** /* USART2 init function */
  52:Src/usart.c   **** 
  53:Src/usart.c   **** void MX_USART2_UART_Init(void)
  54:Src/usart.c   **** {
 104              		.loc 1 54 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108 0000 38B5     		push	{r3, r4, r5, lr}
 109              	.LCFI2:
 110              		.cfi_def_cfa_offset 16
 111              		.cfi_offset 3, -16
 112              		.cfi_offset 4, -12
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s 			page 4


 113              		.cfi_offset 5, -8
 114              		.cfi_offset 14, -4
  55:Src/usart.c   **** 
  56:Src/usart.c   ****   huart2.Instance = USART2;
 115              		.loc 1 56 0
 116 0002 0E4B     		ldr	r3, .L12
 117 0004 0E4A     		ldr	r2, .L12+4
 118 0006 1A60     		str	r2, [r3]
  57:Src/usart.c   ****   huart2.Init.BaudRate = 19200;
 119              		.loc 1 57 0
 120 0008 4FF49642 		mov	r2, #19200
  58:Src/usart.c   ****   huart2.Init.WordLength = UART_WORDLENGTH_9B;
 121              		.loc 1 58 0
 122 000c 4FF48055 		mov	r5, #4096
  59:Src/usart.c   ****   huart2.Init.StopBits = UART_STOPBITS_1;
  60:Src/usart.c   ****   huart2.Init.Parity = UART_PARITY_EVEN;
 123              		.loc 1 60 0
 124 0010 4FF48064 		mov	r4, #1024
  61:Src/usart.c   ****   huart2.Init.Mode = UART_MODE_TX_RX;
 125              		.loc 1 61 0
 126 0014 0C21     		movs	r1, #12
  57:Src/usart.c   ****   huart2.Init.WordLength = UART_WORDLENGTH_9B;
 127              		.loc 1 57 0
 128 0016 5A60     		str	r2, [r3, #4]
  62:Src/usart.c   ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
  63:Src/usart.c   ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
  64:Src/usart.c   ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
  65:Src/usart.c   ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
  66:Src/usart.c   ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 129              		.loc 1 66 0
 130 0018 1846     		mov	r0, r3
  59:Src/usart.c   ****   huart2.Init.Parity = UART_PARITY_EVEN;
 131              		.loc 1 59 0
 132 001a 0022     		movs	r2, #0
  58:Src/usart.c   ****   huart2.Init.StopBits = UART_STOPBITS_1;
 133              		.loc 1 58 0
 134 001c 9D60     		str	r5, [r3, #8]
  61:Src/usart.c   ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 135              		.loc 1 61 0
 136 001e C3E90441 		strd	r4, r1, [r3, #16]
  59:Src/usart.c   ****   huart2.Init.Parity = UART_PARITY_EVEN;
 137              		.loc 1 59 0
 138 0022 DA60     		str	r2, [r3, #12]
  63:Src/usart.c   ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 139              		.loc 1 63 0
 140 0024 C3E90622 		strd	r2, r2, [r3, #24]
  65:Src/usart.c   ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 141              		.loc 1 65 0
 142 0028 C3E90822 		strd	r2, r2, [r3, #32]
 143              		.loc 1 66 0
 144 002c FFF7FEFF 		bl	HAL_UART_Init
 145              	.LVL2:
 146 0030 00B9     		cbnz	r0, .L11
  67:Src/usart.c   ****   {
  68:Src/usart.c   ****     Error_Handler();
  69:Src/usart.c   ****   }
  70:Src/usart.c   **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s 			page 5


  71:Src/usart.c   **** }
 147              		.loc 1 71 0
 148 0032 38BD     		pop	{r3, r4, r5, pc}
 149              	.L11:
 150 0034 BDE83840 		pop	{r3, r4, r5, lr}
 151              	.LCFI3:
 152              		.cfi_restore 14
 153              		.cfi_restore 5
 154              		.cfi_restore 4
 155              		.cfi_restore 3
 156              		.cfi_def_cfa_offset 0
  68:Src/usart.c   ****   }
 157              		.loc 1 68 0
 158 0038 FFF7FEBF 		b	Error_Handler
 159              	.LVL3:
 160              	.L13:
 161              		.align	2
 162              	.L12:
 163 003c 00000000 		.word	huart2
 164 0040 00440040 		.word	1073759232
 165              		.cfi_endproc
 166              	.LFE124:
 168              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 169              		.align	1
 170              		.p2align 2,,3
 171              		.global	HAL_UART_MspInit
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu fpv4-sp-d16
 177              	HAL_UART_MspInit:
 178              	.LFB125:
  72:Src/usart.c   **** 
  73:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
  74:Src/usart.c   **** {
 179              		.loc 1 74 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 40
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              	.LVL4:
 184 0000 70B5     		push	{r4, r5, r6, lr}
 185              	.LCFI4:
 186              		.cfi_def_cfa_offset 16
 187              		.cfi_offset 4, -16
 188              		.cfi_offset 5, -12
 189              		.cfi_offset 6, -8
 190              		.cfi_offset 14, -4
  75:Src/usart.c   **** 
  76:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  77:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 191              		.loc 1 77 0
 192 0002 0368     		ldr	r3, [r0]
 193 0004 324A     		ldr	r2, .L20
  74:Src/usart.c   **** 
 194              		.loc 1 74 0
 195 0006 8AB0     		sub	sp, sp, #40
 196              	.LCFI5:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s 			page 6


 197              		.cfi_def_cfa_offset 56
  76:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 198              		.loc 1 76 0
 199 0008 0024     		movs	r4, #0
 200              		.loc 1 77 0
 201 000a 9342     		cmp	r3, r2
  76:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 202              		.loc 1 76 0
 203 000c CDE90544 		strd	r4, r4, [sp, #20]
 204 0010 CDE90744 		strd	r4, r4, [sp, #28]
 205 0014 0994     		str	r4, [sp, #36]
 206              		.loc 1 77 0
 207 0016 2FD0     		beq	.L18
  78:Src/usart.c   ****   {
  79:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 0 */
  80:Src/usart.c   **** 
  81:Src/usart.c   ****   /* USER CODE END USART1_MspInit 0 */
  82:Src/usart.c   ****     /* USART1 clock enable */
  83:Src/usart.c   ****     __HAL_RCC_USART1_CLK_ENABLE();
  84:Src/usart.c   ****   
  85:Src/usart.c   ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  86:Src/usart.c   ****     /**USART1 GPIO Configuration    
  87:Src/usart.c   ****     PA9     ------> USART1_TX
  88:Src/usart.c   ****     PA10     ------> USART1_RX 
  89:Src/usart.c   ****     */
  90:Src/usart.c   ****     GPIO_InitStruct.Pin = USART1__Defi_TX_Pin|USART1__Defi_RX_Pin;
  91:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
  92:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
  93:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
  94:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
  95:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  96:Src/usart.c   **** 
  97:Src/usart.c   ****     /* USART1 interrupt Init */
  98:Src/usart.c   ****     HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
  99:Src/usart.c   ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 100:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 1 */
 101:Src/usart.c   **** 
 102:Src/usart.c   ****   /* USER CODE END USART1_MspInit 1 */
 103:Src/usart.c   ****   }
 104:Src/usart.c   ****   else if(uartHandle->Instance==USART2)
 208              		.loc 1 104 0
 209 0018 2E4A     		ldr	r2, .L20+4
 210 001a 9342     		cmp	r3, r2
 211 001c 01D0     		beq	.L19
 105:Src/usart.c   ****   {
 106:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 0 */
 107:Src/usart.c   **** 
 108:Src/usart.c   ****   /* USER CODE END USART2_MspInit 0 */
 109:Src/usart.c   ****     /* USART2 clock enable */
 110:Src/usart.c   ****     __HAL_RCC_USART2_CLK_ENABLE();
 111:Src/usart.c   ****   
 112:Src/usart.c   ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 113:Src/usart.c   ****     /**USART2 GPIO Configuration    
 114:Src/usart.c   ****     PA2     ------> USART2_TX
 115:Src/usart.c   ****     PA15     ------> USART2_RX 
 116:Src/usart.c   ****     */
 117:Src/usart.c   ****     GPIO_InitStruct.Pin = USART2__USB_TX_Pin|USART2__USB_RX_Pin;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s 			page 7


 118:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 119:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 120:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 121:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 122:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 123:Src/usart.c   **** 
 124:Src/usart.c   ****     /* USART2 interrupt Init */
 125:Src/usart.c   ****     HAL_NVIC_SetPriority(USART2_IRQn, 15, 0);
 126:Src/usart.c   ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
 127:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 1 */
 128:Src/usart.c   **** 
 129:Src/usart.c   ****   /* USER CODE END USART2_MspInit 1 */
 130:Src/usart.c   ****   }
 131:Src/usart.c   **** }
 212              		.loc 1 131 0
 213 001e 0AB0     		add	sp, sp, #40
 214              	.LCFI6:
 215              		.cfi_remember_state
 216              		.cfi_def_cfa_offset 16
 217              		@ sp needed
 218 0020 70BD     		pop	{r4, r5, r6, pc}
 219              	.L19:
 220              	.LCFI7:
 221              		.cfi_restore_state
 222              	.LBB2:
 110:Src/usart.c   ****   
 223              		.loc 1 110 0
 224 0022 2D4B     		ldr	r3, .L20+8
 225 0024 DA69     		ldr	r2, [r3, #28]
 226 0026 42F40032 		orr	r2, r2, #131072
 227 002a DA61     		str	r2, [r3, #28]
 228 002c DA69     		ldr	r2, [r3, #28]
 229 002e 02F40032 		and	r2, r2, #131072
 230 0032 0392     		str	r2, [sp, #12]
 231 0034 039A     		ldr	r2, [sp, #12]
 232              	.LBE2:
 233              	.LBB3:
 112:Src/usart.c   ****     /**USART2 GPIO Configuration    
 234              		.loc 1 112 0
 235 0036 5A69     		ldr	r2, [r3, #20]
 236 0038 42F40032 		orr	r2, r2, #131072
 237 003c 5A61     		str	r2, [r3, #20]
 238 003e 5B69     		ldr	r3, [r3, #20]
 239              	.LBE3:
 117:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 240              		.loc 1 117 0
 241 0040 48F20400 		movw	r0, #32772
 242              	.LVL5:
 243              	.LBB4:
 112:Src/usart.c   ****     /**USART2 GPIO Configuration    
 244              		.loc 1 112 0
 245 0044 03F40033 		and	r3, r3, #131072
 246 0048 0493     		str	r3, [sp, #16]
 247              	.LBE4:
 122:Src/usart.c   **** 
 248              		.loc 1 122 0
 249 004a 05A9     		add	r1, sp, #20
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s 			page 8


 121:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 250              		.loc 1 121 0
 251 004c 0723     		movs	r3, #7
 120:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 252              		.loc 1 120 0
 253 004e 0322     		movs	r2, #3
 117:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 254              		.loc 1 117 0
 255 0050 0590     		str	r0, [sp, #20]
 118:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 256              		.loc 1 118 0
 257 0052 0225     		movs	r5, #2
 122:Src/usart.c   **** 
 258              		.loc 1 122 0
 259 0054 4FF09040 		mov	r0, #1207959552
 121:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 260              		.loc 1 121 0
 261 0058 CDE90823 		strd	r2, r3, [sp, #32]
 262              	.LBB5:
 112:Src/usart.c   ****     /**USART2 GPIO Configuration    
 263              		.loc 1 112 0
 264 005c 049E     		ldr	r6, [sp, #16]
 265              	.LBE5:
 118:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 266              		.loc 1 118 0
 267 005e 0695     		str	r5, [sp, #24]
 122:Src/usart.c   **** 
 268              		.loc 1 122 0
 269 0060 FFF7FEFF 		bl	HAL_GPIO_Init
 270              	.LVL6:
 125:Src/usart.c   ****     HAL_NVIC_EnableIRQ(USART2_IRQn);
 271              		.loc 1 125 0
 272 0064 2246     		mov	r2, r4
 273 0066 0F21     		movs	r1, #15
 274 0068 2620     		movs	r0, #38
 275 006a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 276              	.LVL7:
 126:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 1 */
 277              		.loc 1 126 0
 278 006e 2620     		movs	r0, #38
 279 0070 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 280              	.LVL8:
 281              		.loc 1 131 0
 282 0074 0AB0     		add	sp, sp, #40
 283              	.LCFI8:
 284              		.cfi_remember_state
 285              		.cfi_def_cfa_offset 16
 286              		@ sp needed
 287 0076 70BD     		pop	{r4, r5, r6, pc}
 288              	.LVL9:
 289              	.L18:
 290              	.LCFI9:
 291              		.cfi_restore_state
 292              	.LBB6:
  83:Src/usart.c   ****   
 293              		.loc 1 83 0
 294 0078 174B     		ldr	r3, .L20+8
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s 			page 9


 295 007a 9A69     		ldr	r2, [r3, #24]
 296 007c 42F48042 		orr	r2, r2, #16384
 297 0080 9A61     		str	r2, [r3, #24]
 298 0082 9A69     		ldr	r2, [r3, #24]
 299 0084 02F48042 		and	r2, r2, #16384
 300 0088 0192     		str	r2, [sp, #4]
 301 008a 019A     		ldr	r2, [sp, #4]
 302              	.LBE6:
 303              	.LBB7:
  85:Src/usart.c   ****     /**USART1 GPIO Configuration    
 304              		.loc 1 85 0
 305 008c 5A69     		ldr	r2, [r3, #20]
 306 008e 42F40032 		orr	r2, r2, #131072
 307 0092 5A61     		str	r2, [r3, #20]
 308 0094 5B69     		ldr	r3, [r3, #20]
 309              	.LBE7:
  90:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 310              		.loc 1 90 0
 311 0096 4FF4C060 		mov	r0, #1536
 312              	.LVL10:
 313              	.LBB8:
  85:Src/usart.c   ****     /**USART1 GPIO Configuration    
 314              		.loc 1 85 0
 315 009a 03F40033 		and	r3, r3, #131072
 316 009e 0293     		str	r3, [sp, #8]
 317              	.LBE8:
  95:Src/usart.c   **** 
 318              		.loc 1 95 0
 319 00a0 05A9     		add	r1, sp, #20
  94:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 320              		.loc 1 94 0
 321 00a2 0723     		movs	r3, #7
  93:Src/usart.c   ****     GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 322              		.loc 1 93 0
 323 00a4 0322     		movs	r2, #3
  90:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 324              		.loc 1 90 0
 325 00a6 0590     		str	r0, [sp, #20]
  91:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 326              		.loc 1 91 0
 327 00a8 0225     		movs	r5, #2
  95:Src/usart.c   **** 
 328              		.loc 1 95 0
 329 00aa 4FF09040 		mov	r0, #1207959552
  94:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 330              		.loc 1 94 0
 331 00ae CDE90823 		strd	r2, r3, [sp, #32]
 332              	.LBB9:
  85:Src/usart.c   ****     /**USART1 GPIO Configuration    
 333              		.loc 1 85 0
 334 00b2 029E     		ldr	r6, [sp, #8]
 335              	.LBE9:
  91:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 336              		.loc 1 91 0
 337 00b4 0695     		str	r5, [sp, #24]
  95:Src/usart.c   **** 
 338              		.loc 1 95 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s 			page 10


 339 00b6 FFF7FEFF 		bl	HAL_GPIO_Init
 340              	.LVL11:
  98:Src/usart.c   ****     HAL_NVIC_EnableIRQ(USART1_IRQn);
 341              		.loc 1 98 0
 342 00ba 2246     		mov	r2, r4
 343 00bc 0521     		movs	r1, #5
 344 00be 2520     		movs	r0, #37
 345 00c0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 346              	.LVL12:
  99:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 1 */
 347              		.loc 1 99 0
 348 00c4 2520     		movs	r0, #37
 349 00c6 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 350              	.LVL13:
 351              		.loc 1 131 0
 352 00ca 0AB0     		add	sp, sp, #40
 353              	.LCFI10:
 354              		.cfi_def_cfa_offset 16
 355              		@ sp needed
 356 00cc 70BD     		pop	{r4, r5, r6, pc}
 357              	.L21:
 358 00ce 00BF     		.align	2
 359              	.L20:
 360 00d0 00380140 		.word	1073821696
 361 00d4 00440040 		.word	1073759232
 362 00d8 00100240 		.word	1073876992
 363              		.cfi_endproc
 364              	.LFE125:
 366              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 367              		.align	1
 368              		.p2align 2,,3
 369              		.global	HAL_UART_MspDeInit
 370              		.syntax unified
 371              		.thumb
 372              		.thumb_func
 373              		.fpu fpv4-sp-d16
 375              	HAL_UART_MspDeInit:
 376              	.LFB126:
 132:Src/usart.c   **** 
 133:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 134:Src/usart.c   **** {
 377              		.loc 1 134 0
 378              		.cfi_startproc
 379              		@ args = 0, pretend = 0, frame = 0
 380              		@ frame_needed = 0, uses_anonymous_args = 0
 381              	.LVL14:
 382 0000 08B5     		push	{r3, lr}
 383              	.LCFI11:
 384              		.cfi_def_cfa_offset 8
 385              		.cfi_offset 3, -8
 386              		.cfi_offset 14, -4
 135:Src/usart.c   **** 
 136:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 387              		.loc 1 136 0
 388 0002 154A     		ldr	r2, .L28
 389 0004 0368     		ldr	r3, [r0]
 390 0006 9342     		cmp	r3, r2
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s 			page 11


 391 0008 14D0     		beq	.L26
 137:Src/usart.c   ****   {
 138:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 139:Src/usart.c   **** 
 140:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 0 */
 141:Src/usart.c   ****     /* Peripheral clock disable */
 142:Src/usart.c   ****     __HAL_RCC_USART1_CLK_DISABLE();
 143:Src/usart.c   ****   
 144:Src/usart.c   ****     /**USART1 GPIO Configuration    
 145:Src/usart.c   ****     PA9     ------> USART1_TX
 146:Src/usart.c   ****     PA10     ------> USART1_RX 
 147:Src/usart.c   ****     */
 148:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, USART1__Defi_TX_Pin|USART1__Defi_RX_Pin);
 149:Src/usart.c   **** 
 150:Src/usart.c   ****     /* USART1 interrupt Deinit */
 151:Src/usart.c   ****     HAL_NVIC_DisableIRQ(USART1_IRQn);
 152:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 153:Src/usart.c   **** 
 154:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 1 */
 155:Src/usart.c   ****   }
 156:Src/usart.c   ****   else if(uartHandle->Instance==USART2)
 392              		.loc 1 156 0
 393 000a 144A     		ldr	r2, .L28+4
 394 000c 9342     		cmp	r3, r2
 395 000e 00D0     		beq	.L27
 157:Src/usart.c   ****   {
 158:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
 159:Src/usart.c   **** 
 160:Src/usart.c   ****   /* USER CODE END USART2_MspDeInit 0 */
 161:Src/usart.c   ****     /* Peripheral clock disable */
 162:Src/usart.c   ****     __HAL_RCC_USART2_CLK_DISABLE();
 163:Src/usart.c   ****   
 164:Src/usart.c   ****     /**USART2 GPIO Configuration    
 165:Src/usart.c   ****     PA2     ------> USART2_TX
 166:Src/usart.c   ****     PA15     ------> USART2_RX 
 167:Src/usart.c   ****     */
 168:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, USART2__USB_TX_Pin|USART2__USB_RX_Pin);
 169:Src/usart.c   **** 
 170:Src/usart.c   ****     /* USART2 interrupt Deinit */
 171:Src/usart.c   ****     HAL_NVIC_DisableIRQ(USART2_IRQn);
 172:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 173:Src/usart.c   **** 
 174:Src/usart.c   ****   /* USER CODE END USART2_MspDeInit 1 */
 175:Src/usart.c   ****   }
 176:Src/usart.c   **** } 
 396              		.loc 1 176 0
 397 0010 08BD     		pop	{r3, pc}
 398              	.L27:
 162:Src/usart.c   ****   
 399              		.loc 1 162 0
 400 0012 02F5E632 		add	r2, r2, #117760
 168:Src/usart.c   **** 
 401              		.loc 1 168 0
 402 0016 4FF09040 		mov	r0, #1207959552
 403              	.LVL15:
 162:Src/usart.c   ****   
 404              		.loc 1 162 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s 			page 12


 405 001a D369     		ldr	r3, [r2, #28]
 406 001c 23F40033 		bic	r3, r3, #131072
 407 0020 D361     		str	r3, [r2, #28]
 168:Src/usart.c   **** 
 408              		.loc 1 168 0
 409 0022 48F20401 		movw	r1, #32772
 410 0026 FFF7FEFF 		bl	HAL_GPIO_DeInit
 411              	.LVL16:
 171:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 412              		.loc 1 171 0
 413 002a 2620     		movs	r0, #38
 414              		.loc 1 176 0
 415 002c BDE80840 		pop	{r3, lr}
 416              	.LCFI12:
 417              		.cfi_remember_state
 418              		.cfi_restore 14
 419              		.cfi_restore 3
 420              		.cfi_def_cfa_offset 0
 171:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 1 */
 421              		.loc 1 171 0
 422 0030 FFF7FEBF 		b	HAL_NVIC_DisableIRQ
 423              	.LVL17:
 424              	.L26:
 425              	.LCFI13:
 426              		.cfi_restore_state
 142:Src/usart.c   ****   
 427              		.loc 1 142 0
 428 0034 02F55842 		add	r2, r2, #55296
 148:Src/usart.c   **** 
 429              		.loc 1 148 0
 430 0038 4FF09040 		mov	r0, #1207959552
 431              	.LVL18:
 142:Src/usart.c   ****   
 432              		.loc 1 142 0
 433 003c 9369     		ldr	r3, [r2, #24]
 434 003e 23F48043 		bic	r3, r3, #16384
 435 0042 9361     		str	r3, [r2, #24]
 148:Src/usart.c   **** 
 436              		.loc 1 148 0
 437 0044 4FF4C061 		mov	r1, #1536
 438 0048 FFF7FEFF 		bl	HAL_GPIO_DeInit
 439              	.LVL19:
 151:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 440              		.loc 1 151 0
 441 004c 2520     		movs	r0, #37
 442              		.loc 1 176 0
 443 004e BDE80840 		pop	{r3, lr}
 444              	.LCFI14:
 445              		.cfi_restore 14
 446              		.cfi_restore 3
 447              		.cfi_def_cfa_offset 0
 151:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 448              		.loc 1 151 0
 449 0052 FFF7FEBF 		b	HAL_NVIC_DisableIRQ
 450              	.LVL20:
 451              	.L29:
 452 0056 00BF     		.align	2
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s 			page 13


 453              	.L28:
 454 0058 00380140 		.word	1073821696
 455 005c 00440040 		.word	1073759232
 456              		.cfi_endproc
 457              	.LFE126:
 459              		.comm	huart2,128,4
 460              		.comm	huart1,128,4
 461              		.text
 462              	.Letext0:
 463              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 464              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 465              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 466              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 467              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 468              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 469              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 470              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 471              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 472              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 473              		.file 12 "Inc/usart.h"
 474              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 475              		.file 14 "Inc/main.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s:18     .text.MX_USART1_UART_Init:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s:26     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s:88     .text.MX_USART1_UART_Init:000000000000003c $d
                            *COM*:0000000000000080 huart1
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s:94     .text.MX_USART2_UART_Init:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s:102    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s:163    .text.MX_USART2_UART_Init:000000000000003c $d
                            *COM*:0000000000000080 huart2
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s:169    .text.HAL_UART_MspInit:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s:177    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s:360    .text.HAL_UART_MspInit:00000000000000d0 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s:367    .text.HAL_UART_MspDeInit:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s:375    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccmTDlkJ.s:454    .text.HAL_UART_MspDeInit:0000000000000058 $d

UNDEFINED SYMBOLS
HAL_UART_Init
Error_Handler
HAL_GPIO_Init
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_DeInit
HAL_NVIC_DisableIRQ
