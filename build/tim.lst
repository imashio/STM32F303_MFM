ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"tim.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_TIM2_Init,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	MX_TIM2_Init
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_TIM2_Init:
  27              	.LFB124:
  28              		.file 1 "Src/tim.c"
   1:Src/tim.c     **** /**
   2:Src/tim.c     ****   ******************************************************************************
   3:Src/tim.c     ****   * File Name          : TIM.c
   4:Src/tim.c     ****   * Description        : This file provides code for the configuration
   5:Src/tim.c     ****   *                      of the TIM instances.
   6:Src/tim.c     ****   ******************************************************************************
   7:Src/tim.c     ****   * @attention
   8:Src/tim.c     ****   *
   9:Src/tim.c     ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/tim.c     ****   * All rights reserved.</center></h2>
  11:Src/tim.c     ****   *
  12:Src/tim.c     ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/tim.c     ****   * the "License"; You may not use this file except in compliance with the
  14:Src/tim.c     ****   * License. You may obtain a copy of the License at:
  15:Src/tim.c     ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/tim.c     ****   *
  17:Src/tim.c     ****   ******************************************************************************
  18:Src/tim.c     ****   */
  19:Src/tim.c     **** 
  20:Src/tim.c     **** /* Includes ------------------------------------------------------------------*/
  21:Src/tim.c     **** #include "tim.h"
  22:Src/tim.c     **** 
  23:Src/tim.c     **** /* USER CODE BEGIN 0 */
  24:Src/tim.c     **** 
  25:Src/tim.c     **** /* USER CODE END 0 */
  26:Src/tim.c     **** 
  27:Src/tim.c     **** TIM_HandleTypeDef htim1;
  28:Src/tim.c     **** TIM_HandleTypeDef htim2;
  29:Src/tim.c     **** TIM_HandleTypeDef htim3;
  30:Src/tim.c     **** TIM_HandleTypeDef htim6;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 2


  31:Src/tim.c     **** TIM_HandleTypeDef htim7;
  32:Src/tim.c     **** TIM_HandleTypeDef htim16;
  33:Src/tim.c     **** 
  34:Src/tim.c     **** /* TIM1 init function */
  35:Src/tim.c     **** void MX_TIM1_Init(void)
  36:Src/tim.c     **** {
  37:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  38:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  39:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
  40:Src/tim.c     ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
  41:Src/tim.c     **** 
  42:Src/tim.c     ****   htim1.Instance = TIM1;
  43:Src/tim.c     ****   htim1.Init.Prescaler = 72-1;
  44:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
  45:Src/tim.c     ****   htim1.Init.Period = 100-1;
  46:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
  47:Src/tim.c     ****   htim1.Init.RepetitionCounter = 0;
  48:Src/tim.c     ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  49:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
  50:Src/tim.c     ****   {
  51:Src/tim.c     ****     Error_Handler();
  52:Src/tim.c     ****   }
  53:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  54:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
  55:Src/tim.c     ****   {
  56:Src/tim.c     ****     Error_Handler();
  57:Src/tim.c     ****   }
  58:Src/tim.c     ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
  59:Src/tim.c     ****   {
  60:Src/tim.c     ****     Error_Handler();
  61:Src/tim.c     ****   }
  62:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
  63:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
  64:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
  65:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
  66:Src/tim.c     ****   {
  67:Src/tim.c     ****     Error_Handler();
  68:Src/tim.c     ****   }
  69:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_ASSYMETRIC_PWM2;
  70:Src/tim.c     ****   sConfigOC.Pulse = 0;
  71:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
  72:Src/tim.c     ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
  73:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
  74:Src/tim.c     ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
  75:Src/tim.c     ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
  76:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
  77:Src/tim.c     ****   {
  78:Src/tim.c     ****     Error_Handler();
  79:Src/tim.c     ****   }
  80:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
  81:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
  82:Src/tim.c     ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
  83:Src/tim.c     ****   sBreakDeadTimeConfig.DeadTime = 0;
  84:Src/tim.c     ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
  85:Src/tim.c     ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
  86:Src/tim.c     ****   sBreakDeadTimeConfig.BreakFilter = 0;
  87:Src/tim.c     ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 3


  88:Src/tim.c     ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
  89:Src/tim.c     ****   sBreakDeadTimeConfig.Break2Filter = 0;
  90:Src/tim.c     ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
  91:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
  92:Src/tim.c     ****   {
  93:Src/tim.c     ****     Error_Handler();
  94:Src/tim.c     ****   }
  95:Src/tim.c     ****   HAL_TIM_MspPostInit(&htim1);
  96:Src/tim.c     **** 
  97:Src/tim.c     **** }
  98:Src/tim.c     **** /* TIM2 init function */
  99:Src/tim.c     **** void MX_TIM2_Init(void)
 100:Src/tim.c     **** {
  29              		.loc 1 100 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 56
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
 101:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 102:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 103:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
 104:Src/tim.c     **** 
 105:Src/tim.c     ****   htim2.Instance = TIM2;
  37              		.loc 1 105 0
  38 0002 284A     		ldr	r2, .L28
  39 0004 4FF08043 		mov	r3, #1073741824
 100:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
  40              		.loc 1 100 0
  41 0008 8FB0     		sub	sp, sp, #60
  42              	.LCFI1:
  43              		.cfi_def_cfa_offset 64
  44              		.loc 1 105 0
  45 000a 1360     		str	r3, [r2]
 106:Src/tim.c     ****   htim2.Init.Prescaler = 720-1;
 107:Src/tim.c     ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 108:Src/tim.c     ****   htim2.Init.Period = 2000-1;
  46              		.loc 1 108 0
  47 000c 40F2CF73 		movw	r3, #1999
 106:Src/tim.c     ****   htim2.Init.Prescaler = 720-1;
  48              		.loc 1 106 0
  49 0010 40F2CF21 		movw	r1, #719
  50              		.loc 1 108 0
  51 0014 D360     		str	r3, [r2, #12]
 109:Src/tim.c     ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 110:Src/tim.c     ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 111:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
  52              		.loc 1 111 0
  53 0016 1046     		mov	r0, r2
 101:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  54              		.loc 1 101 0
  55 0018 0023     		movs	r3, #0
 106:Src/tim.c     ****   htim2.Init.Prescaler = 720-1;
  56              		.loc 1 106 0
  57 001a 5160     		str	r1, [r2, #4]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 4


 107:Src/tim.c     ****   htim2.Init.Period = 2000-1;
  58              		.loc 1 107 0
  59 001c 9360     		str	r3, [r2, #8]
 101:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  60              		.loc 1 101 0
  61 001e 0393     		str	r3, [sp, #12]
 102:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
  62              		.loc 1 102 0
  63 0020 0093     		str	r3, [sp]
 103:Src/tim.c     **** 
  64              		.loc 1 103 0
  65 0022 0793     		str	r3, [sp, #28]
 109:Src/tim.c     ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
  66              		.loc 1 109 0
  67 0024 1361     		str	r3, [r2, #16]
 110:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
  68              		.loc 1 110 0
  69 0026 9361     		str	r3, [r2, #24]
 101:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
  70              		.loc 1 101 0
  71 0028 CDE90433 		strd	r3, r3, [sp, #16]
  72 002c 0693     		str	r3, [sp, #24]
 102:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
  73              		.loc 1 102 0
  74 002e CDE90133 		strd	r3, r3, [sp, #4]
 103:Src/tim.c     **** 
  75              		.loc 1 103 0
  76 0032 CDE90833 		strd	r3, r3, [sp, #32]
  77 0036 CDE90A33 		strd	r3, r3, [sp, #40]
  78 003a CDE90C33 		strd	r3, r3, [sp, #48]
  79              		.loc 1 111 0
  80 003e FFF7FEFF 		bl	HAL_TIM_Base_Init
  81              	.LVL0:
  82 0042 60BB     		cbnz	r0, .L24
  83              	.L2:
 112:Src/tim.c     ****   {
 113:Src/tim.c     ****     Error_Handler();
 114:Src/tim.c     ****   }
 115:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
  84              		.loc 1 115 0
  85 0044 4FF48053 		mov	r3, #4096
 116:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
  86              		.loc 1 116 0
  87 0048 03A9     		add	r1, sp, #12
  88 004a 1648     		ldr	r0, .L28
 115:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
  89              		.loc 1 115 0
  90 004c 0393     		str	r3, [sp, #12]
  91              		.loc 1 116 0
  92 004e FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
  93              	.LVL1:
  94 0052 08BB     		cbnz	r0, .L25
  95              	.L3:
 117:Src/tim.c     ****   {
 118:Src/tim.c     ****     Error_Handler();
 119:Src/tim.c     ****   }
 120:Src/tim.c     ****   if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 5


  96              		.loc 1 120 0
  97 0054 1348     		ldr	r0, .L28
  98 0056 FFF7FEFF 		bl	HAL_TIM_OC_Init
  99              	.LVL2:
 100 005a D0B9     		cbnz	r0, .L26
 101              	.L4:
 121:Src/tim.c     ****   {
 122:Src/tim.c     ****     Error_Handler();
 123:Src/tim.c     ****   }
 124:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 102              		.loc 1 124 0
 103 005c 0023     		movs	r3, #0
 125:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 126:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 104              		.loc 1 126 0
 105 005e 6946     		mov	r1, sp
 106 0060 1048     		ldr	r0, .L28
 124:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 107              		.loc 1 124 0
 108 0062 0093     		str	r3, [sp]
 125:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 109              		.loc 1 125 0
 110 0064 0293     		str	r3, [sp, #8]
 111              		.loc 1 126 0
 112 0066 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 113              	.LVL3:
 114 006a 78B9     		cbnz	r0, .L27
 115              	.L5:
 127:Src/tim.c     ****   {
 128:Src/tim.c     ****     Error_Handler();
 129:Src/tim.c     ****   }
 130:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 116              		.loc 1 130 0
 117 006c 0023     		movs	r3, #0
 131:Src/tim.c     ****   sConfigOC.Pulse = 0;
 132:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 133:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 134:Src/tim.c     ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 118              		.loc 1 134 0
 119 006e 07A9     		add	r1, sp, #28
 120 0070 1A46     		mov	r2, r3
 121 0072 0C48     		ldr	r0, .L28
 132:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 122              		.loc 1 132 0
 123 0074 0993     		str	r3, [sp, #36]
 131:Src/tim.c     ****   sConfigOC.Pulse = 0;
 124              		.loc 1 131 0
 125 0076 CDE90733 		strd	r3, r3, [sp, #28]
 133:Src/tim.c     ****   if (HAL_TIM_OC_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 126              		.loc 1 133 0
 127 007a 0B93     		str	r3, [sp, #44]
 128              		.loc 1 134 0
 129 007c FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 130              	.LVL4:
 131 0080 08B1     		cbz	r0, .L1
 135:Src/tim.c     ****   {
 136:Src/tim.c     ****     Error_Handler();
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 6


 132              		.loc 1 136 0
 133 0082 FFF7FEFF 		bl	Error_Handler
 134              	.LVL5:
 135              	.L1:
 137:Src/tim.c     ****   }
 138:Src/tim.c     **** 
 139:Src/tim.c     **** }
 136              		.loc 1 139 0
 137 0086 0FB0     		add	sp, sp, #60
 138              	.LCFI2:
 139              		.cfi_remember_state
 140              		.cfi_def_cfa_offset 4
 141              		@ sp needed
 142 0088 5DF804FB 		ldr	pc, [sp], #4
 143              	.L27:
 144              	.LCFI3:
 145              		.cfi_restore_state
 128:Src/tim.c     ****   }
 146              		.loc 1 128 0
 147 008c FFF7FEFF 		bl	Error_Handler
 148              	.LVL6:
 149 0090 ECE7     		b	.L5
 150              	.L26:
 122:Src/tim.c     ****   }
 151              		.loc 1 122 0
 152 0092 FFF7FEFF 		bl	Error_Handler
 153              	.LVL7:
 154 0096 E1E7     		b	.L4
 155              	.L25:
 118:Src/tim.c     ****   }
 156              		.loc 1 118 0
 157 0098 FFF7FEFF 		bl	Error_Handler
 158              	.LVL8:
 159 009c DAE7     		b	.L3
 160              	.L24:
 113:Src/tim.c     ****   }
 161              		.loc 1 113 0
 162 009e FFF7FEFF 		bl	Error_Handler
 163              	.LVL9:
 164 00a2 CFE7     		b	.L2
 165              	.L29:
 166              		.align	2
 167              	.L28:
 168 00a4 00000000 		.word	htim2
 169              		.cfi_endproc
 170              	.LFE124:
 172              		.section	.text.MX_TIM3_Init,"ax",%progbits
 173              		.align	1
 174              		.p2align 2,,3
 175              		.global	MX_TIM3_Init
 176              		.syntax unified
 177              		.thumb
 178              		.thumb_func
 179              		.fpu fpv4-sp-d16
 181              	MX_TIM3_Init:
 182              	.LFB125:
 140:Src/tim.c     **** /* TIM3 init function */
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 7


 141:Src/tim.c     **** void MX_TIM3_Init(void)
 142:Src/tim.c     **** {
 183              		.loc 1 142 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 56
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187 0000 00B5     		push	{lr}
 188              	.LCFI4:
 189              		.cfi_def_cfa_offset 4
 190              		.cfi_offset 14, -4
 143:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 144:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 145:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
 146:Src/tim.c     **** 
 147:Src/tim.c     ****   htim3.Instance = TIM3;
 191              		.loc 1 147 0
 192 0002 284A     		ldr	r2, .L56
 193 0004 284B     		ldr	r3, .L56+4
 194 0006 1360     		str	r3, [r2]
 142:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 195              		.loc 1 142 0
 196 0008 8FB0     		sub	sp, sp, #60
 197              	.LCFI5:
 198              		.cfi_def_cfa_offset 64
 148:Src/tim.c     ****   htim3.Init.Prescaler = 360-1;
 149:Src/tim.c     ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 150:Src/tim.c     ****   htim3.Init.Period = 65536-1;
 199              		.loc 1 150 0
 200 000a 4FF6FF73 		movw	r3, #65535
 148:Src/tim.c     ****   htim3.Init.Prescaler = 360-1;
 201              		.loc 1 148 0
 202 000e 40F26711 		movw	r1, #359
 203              		.loc 1 150 0
 204 0012 D360     		str	r3, [r2, #12]
 151:Src/tim.c     ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 152:Src/tim.c     ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 153:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 205              		.loc 1 153 0
 206 0014 1046     		mov	r0, r2
 143:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 207              		.loc 1 143 0
 208 0016 0023     		movs	r3, #0
 148:Src/tim.c     ****   htim3.Init.Prescaler = 360-1;
 209              		.loc 1 148 0
 210 0018 5160     		str	r1, [r2, #4]
 149:Src/tim.c     ****   htim3.Init.Period = 65536-1;
 211              		.loc 1 149 0
 212 001a 9360     		str	r3, [r2, #8]
 143:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 213              		.loc 1 143 0
 214 001c 0393     		str	r3, [sp, #12]
 144:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
 215              		.loc 1 144 0
 216 001e 0093     		str	r3, [sp]
 145:Src/tim.c     **** 
 217              		.loc 1 145 0
 218 0020 0793     		str	r3, [sp, #28]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 8


 151:Src/tim.c     ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 219              		.loc 1 151 0
 220 0022 1361     		str	r3, [r2, #16]
 152:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 221              		.loc 1 152 0
 222 0024 9361     		str	r3, [r2, #24]
 143:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 223              		.loc 1 143 0
 224 0026 CDE90433 		strd	r3, r3, [sp, #16]
 225 002a 0693     		str	r3, [sp, #24]
 144:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
 226              		.loc 1 144 0
 227 002c CDE90133 		strd	r3, r3, [sp, #4]
 145:Src/tim.c     **** 
 228              		.loc 1 145 0
 229 0030 CDE90833 		strd	r3, r3, [sp, #32]
 230 0034 CDE90A33 		strd	r3, r3, [sp, #40]
 231 0038 CDE90C33 		strd	r3, r3, [sp, #48]
 232              		.loc 1 153 0
 233 003c FFF7FEFF 		bl	HAL_TIM_Base_Init
 234              	.LVL10:
 235 0040 60BB     		cbnz	r0, .L52
 236              	.L31:
 154:Src/tim.c     ****   {
 155:Src/tim.c     ****     Error_Handler();
 156:Src/tim.c     ****   }
 157:Src/tim.c     ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 237              		.loc 1 157 0
 238 0042 4FF48053 		mov	r3, #4096
 158:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 239              		.loc 1 158 0
 240 0046 03A9     		add	r1, sp, #12
 241 0048 1648     		ldr	r0, .L56
 157:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 242              		.loc 1 157 0
 243 004a 0393     		str	r3, [sp, #12]
 244              		.loc 1 158 0
 245 004c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 246              	.LVL11:
 247 0050 08BB     		cbnz	r0, .L53
 248              	.L32:
 159:Src/tim.c     ****   {
 160:Src/tim.c     ****     Error_Handler();
 161:Src/tim.c     ****   }
 162:Src/tim.c     ****   if (HAL_TIM_OC_Init(&htim3) != HAL_OK)
 249              		.loc 1 162 0
 250 0052 1448     		ldr	r0, .L56
 251 0054 FFF7FEFF 		bl	HAL_TIM_OC_Init
 252              	.LVL12:
 253 0058 D0B9     		cbnz	r0, .L54
 254              	.L33:
 163:Src/tim.c     ****   {
 164:Src/tim.c     ****     Error_Handler();
 165:Src/tim.c     ****   }
 166:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 255              		.loc 1 166 0
 256 005a 0023     		movs	r3, #0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 9


 167:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 168:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 257              		.loc 1 168 0
 258 005c 6946     		mov	r1, sp
 259 005e 1148     		ldr	r0, .L56
 166:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 260              		.loc 1 166 0
 261 0060 0093     		str	r3, [sp]
 167:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 262              		.loc 1 167 0
 263 0062 0293     		str	r3, [sp, #8]
 264              		.loc 1 168 0
 265 0064 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 266              	.LVL13:
 267 0068 78B9     		cbnz	r0, .L55
 268              	.L34:
 169:Src/tim.c     ****   {
 170:Src/tim.c     ****     Error_Handler();
 171:Src/tim.c     ****   }
 172:Src/tim.c     ****   sConfigOC.OCMode = TIM_OCMODE_TIMING;
 269              		.loc 1 172 0
 270 006a 0023     		movs	r3, #0
 173:Src/tim.c     ****   sConfigOC.Pulse = 0;
 174:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 175:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 176:Src/tim.c     ****   if (HAL_TIM_OC_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 271              		.loc 1 176 0
 272 006c 07A9     		add	r1, sp, #28
 273 006e 1A46     		mov	r2, r3
 274 0070 0C48     		ldr	r0, .L56
 174:Src/tim.c     ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 275              		.loc 1 174 0
 276 0072 0993     		str	r3, [sp, #36]
 173:Src/tim.c     ****   sConfigOC.Pulse = 0;
 277              		.loc 1 173 0
 278 0074 CDE90733 		strd	r3, r3, [sp, #28]
 175:Src/tim.c     ****   if (HAL_TIM_OC_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 279              		.loc 1 175 0
 280 0078 0B93     		str	r3, [sp, #44]
 281              		.loc 1 176 0
 282 007a FFF7FEFF 		bl	HAL_TIM_OC_ConfigChannel
 283              	.LVL14:
 284 007e 08B1     		cbz	r0, .L30
 177:Src/tim.c     ****   {
 178:Src/tim.c     ****     Error_Handler();
 285              		.loc 1 178 0
 286 0080 FFF7FEFF 		bl	Error_Handler
 287              	.LVL15:
 288              	.L30:
 179:Src/tim.c     ****   }
 180:Src/tim.c     **** 
 181:Src/tim.c     **** }
 289              		.loc 1 181 0
 290 0084 0FB0     		add	sp, sp, #60
 291              	.LCFI6:
 292              		.cfi_remember_state
 293              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 10


 294              		@ sp needed
 295 0086 5DF804FB 		ldr	pc, [sp], #4
 296              	.L55:
 297              	.LCFI7:
 298              		.cfi_restore_state
 170:Src/tim.c     ****   }
 299              		.loc 1 170 0
 300 008a FFF7FEFF 		bl	Error_Handler
 301              	.LVL16:
 302 008e ECE7     		b	.L34
 303              	.L54:
 164:Src/tim.c     ****   }
 304              		.loc 1 164 0
 305 0090 FFF7FEFF 		bl	Error_Handler
 306              	.LVL17:
 307 0094 E1E7     		b	.L33
 308              	.L53:
 160:Src/tim.c     ****   }
 309              		.loc 1 160 0
 310 0096 FFF7FEFF 		bl	Error_Handler
 311              	.LVL18:
 312 009a DAE7     		b	.L32
 313              	.L52:
 155:Src/tim.c     ****   }
 314              		.loc 1 155 0
 315 009c FFF7FEFF 		bl	Error_Handler
 316              	.LVL19:
 317 00a0 CFE7     		b	.L31
 318              	.L57:
 319 00a2 00BF     		.align	2
 320              	.L56:
 321 00a4 00000000 		.word	htim3
 322 00a8 00040040 		.word	1073742848
 323              		.cfi_endproc
 324              	.LFE125:
 326              		.section	.text.MX_TIM6_Init,"ax",%progbits
 327              		.align	1
 328              		.p2align 2,,3
 329              		.global	MX_TIM6_Init
 330              		.syntax unified
 331              		.thumb
 332              		.thumb_func
 333              		.fpu fpv4-sp-d16
 335              	MX_TIM6_Init:
 336              	.LFB126:
 182:Src/tim.c     **** /* TIM6 init function */
 183:Src/tim.c     **** void MX_TIM6_Init(void)
 184:Src/tim.c     **** {
 337              		.loc 1 184 0
 338              		.cfi_startproc
 339              		@ args = 0, pretend = 0, frame = 16
 340              		@ frame_needed = 0, uses_anonymous_args = 0
 341 0000 10B5     		push	{r4, lr}
 342              	.LCFI8:
 343              		.cfi_def_cfa_offset 8
 344              		.cfi_offset 4, -8
 345              		.cfi_offset 14, -4
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 11


 185:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 186:Src/tim.c     **** 
 187:Src/tim.c     ****   htim6.Instance = TIM6;
 346              		.loc 1 187 0
 347 0002 114B     		ldr	r3, .L69
 348 0004 114A     		ldr	r2, .L69+4
 349 0006 1A60     		str	r2, [r3]
 184:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 350              		.loc 1 184 0
 351 0008 84B0     		sub	sp, sp, #16
 352              	.LCFI9:
 353              		.cfi_def_cfa_offset 24
 185:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 354              		.loc 1 185 0
 355 000a 0022     		movs	r2, #0
 188:Src/tim.c     ****   htim6.Init.Prescaler = 360-1;
 356              		.loc 1 188 0
 357 000c 40F26714 		movw	r4, #359
 189:Src/tim.c     ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 190:Src/tim.c     ****   htim6.Init.Period = 65536-1;
 358              		.loc 1 190 0
 359 0010 4FF6FF71 		movw	r1, #65535
 191:Src/tim.c     ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 192:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 360              		.loc 1 192 0
 361 0014 1846     		mov	r0, r3
 188:Src/tim.c     ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 362              		.loc 1 188 0
 363 0016 5C60     		str	r4, [r3, #4]
 189:Src/tim.c     ****   htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 364              		.loc 1 189 0
 365 0018 C3E90221 		strd	r2, r1, [r3, #8]
 185:Src/tim.c     **** 
 366              		.loc 1 185 0
 367 001c 0192     		str	r2, [sp, #4]
 191:Src/tim.c     ****   htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 368              		.loc 1 191 0
 369 001e 9A61     		str	r2, [r3, #24]
 185:Src/tim.c     **** 
 370              		.loc 1 185 0
 371 0020 CDE90222 		strd	r2, r2, [sp, #8]
 372              		.loc 1 192 0
 373 0024 FFF7FEFF 		bl	HAL_TIM_Base_Init
 374              	.LVL20:
 375 0028 58B9     		cbnz	r0, .L68
 376              	.L59:
 193:Src/tim.c     ****   {
 194:Src/tim.c     ****     Error_Handler();
 195:Src/tim.c     ****   }
 196:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 377              		.loc 1 196 0
 378 002a 0023     		movs	r3, #0
 197:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 198:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 379              		.loc 1 198 0
 380 002c 01A9     		add	r1, sp, #4
 381 002e 0648     		ldr	r0, .L69
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 12


 196:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 382              		.loc 1 196 0
 383 0030 0193     		str	r3, [sp, #4]
 197:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 384              		.loc 1 197 0
 385 0032 0393     		str	r3, [sp, #12]
 386              		.loc 1 198 0
 387 0034 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 388              	.LVL21:
 389 0038 08B1     		cbz	r0, .L58
 199:Src/tim.c     ****   {
 200:Src/tim.c     ****     Error_Handler();
 390              		.loc 1 200 0
 391 003a FFF7FEFF 		bl	Error_Handler
 392              	.LVL22:
 393              	.L58:
 201:Src/tim.c     ****   }
 202:Src/tim.c     **** 
 203:Src/tim.c     **** }
 394              		.loc 1 203 0
 395 003e 04B0     		add	sp, sp, #16
 396              	.LCFI10:
 397              		.cfi_remember_state
 398              		.cfi_def_cfa_offset 8
 399              		@ sp needed
 400 0040 10BD     		pop	{r4, pc}
 401              	.L68:
 402              	.LCFI11:
 403              		.cfi_restore_state
 194:Src/tim.c     ****   }
 404              		.loc 1 194 0
 405 0042 FFF7FEFF 		bl	Error_Handler
 406              	.LVL23:
 407 0046 F0E7     		b	.L59
 408              	.L70:
 409              		.align	2
 410              	.L69:
 411 0048 00000000 		.word	htim6
 412 004c 00100040 		.word	1073745920
 413              		.cfi_endproc
 414              	.LFE126:
 416              		.section	.text.MX_TIM7_Init,"ax",%progbits
 417              		.align	1
 418              		.p2align 2,,3
 419              		.global	MX_TIM7_Init
 420              		.syntax unified
 421              		.thumb
 422              		.thumb_func
 423              		.fpu fpv4-sp-d16
 425              	MX_TIM7_Init:
 426              	.LFB127:
 204:Src/tim.c     **** /* TIM7 init function */
 205:Src/tim.c     **** void MX_TIM7_Init(void)
 206:Src/tim.c     **** {
 427              		.loc 1 206 0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 16
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 13


 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431 0000 10B5     		push	{r4, lr}
 432              	.LCFI12:
 433              		.cfi_def_cfa_offset 8
 434              		.cfi_offset 4, -8
 435              		.cfi_offset 14, -4
 207:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 208:Src/tim.c     **** 
 209:Src/tim.c     ****   htim7.Instance = TIM7;
 436              		.loc 1 209 0
 437 0002 114B     		ldr	r3, .L82
 438 0004 114A     		ldr	r2, .L82+4
 439 0006 1A60     		str	r2, [r3]
 206:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 440              		.loc 1 206 0
 441 0008 84B0     		sub	sp, sp, #16
 442              	.LCFI13:
 443              		.cfi_def_cfa_offset 24
 207:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 444              		.loc 1 207 0
 445 000a 0022     		movs	r2, #0
 210:Src/tim.c     ****   htim7.Init.Prescaler = 720-1;
 446              		.loc 1 210 0
 447 000c 40F2CF24 		movw	r4, #719
 211:Src/tim.c     ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 212:Src/tim.c     ****   htim7.Init.Period = 10000-1;
 448              		.loc 1 212 0
 449 0010 42F20F71 		movw	r1, #9999
 213:Src/tim.c     ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 214:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 450              		.loc 1 214 0
 451 0014 1846     		mov	r0, r3
 210:Src/tim.c     ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 452              		.loc 1 210 0
 453 0016 5C60     		str	r4, [r3, #4]
 211:Src/tim.c     ****   htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 454              		.loc 1 211 0
 455 0018 C3E90221 		strd	r2, r1, [r3, #8]
 207:Src/tim.c     **** 
 456              		.loc 1 207 0
 457 001c 0192     		str	r2, [sp, #4]
 213:Src/tim.c     ****   htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 458              		.loc 1 213 0
 459 001e 9A61     		str	r2, [r3, #24]
 207:Src/tim.c     **** 
 460              		.loc 1 207 0
 461 0020 CDE90222 		strd	r2, r2, [sp, #8]
 462              		.loc 1 214 0
 463 0024 FFF7FEFF 		bl	HAL_TIM_Base_Init
 464              	.LVL24:
 465 0028 58B9     		cbnz	r0, .L81
 466              	.L72:
 215:Src/tim.c     ****   {
 216:Src/tim.c     ****     Error_Handler();
 217:Src/tim.c     ****   }
 218:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 467              		.loc 1 218 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 14


 468 002a 0023     		movs	r3, #0
 219:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 220:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 469              		.loc 1 220 0
 470 002c 01A9     		add	r1, sp, #4
 471 002e 0648     		ldr	r0, .L82
 218:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 472              		.loc 1 218 0
 473 0030 0193     		str	r3, [sp, #4]
 219:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 474              		.loc 1 219 0
 475 0032 0393     		str	r3, [sp, #12]
 476              		.loc 1 220 0
 477 0034 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 478              	.LVL25:
 479 0038 08B1     		cbz	r0, .L71
 221:Src/tim.c     ****   {
 222:Src/tim.c     ****     Error_Handler();
 480              		.loc 1 222 0
 481 003a FFF7FEFF 		bl	Error_Handler
 482              	.LVL26:
 483              	.L71:
 223:Src/tim.c     ****   }
 224:Src/tim.c     **** 
 225:Src/tim.c     **** }
 484              		.loc 1 225 0
 485 003e 04B0     		add	sp, sp, #16
 486              	.LCFI14:
 487              		.cfi_remember_state
 488              		.cfi_def_cfa_offset 8
 489              		@ sp needed
 490 0040 10BD     		pop	{r4, pc}
 491              	.L81:
 492              	.LCFI15:
 493              		.cfi_restore_state
 216:Src/tim.c     ****   }
 494              		.loc 1 216 0
 495 0042 FFF7FEFF 		bl	Error_Handler
 496              	.LVL27:
 497 0046 F0E7     		b	.L72
 498              	.L83:
 499              		.align	2
 500              	.L82:
 501 0048 00000000 		.word	htim7
 502 004c 00140040 		.word	1073746944
 503              		.cfi_endproc
 504              	.LFE127:
 506              		.section	.text.MX_TIM16_Init,"ax",%progbits
 507              		.align	1
 508              		.p2align 2,,3
 509              		.global	MX_TIM16_Init
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 513              		.fpu fpv4-sp-d16
 515              	MX_TIM16_Init:
 516              	.LFB128:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 15


 226:Src/tim.c     **** /* TIM16 init function */
 227:Src/tim.c     **** void MX_TIM16_Init(void)
 228:Src/tim.c     **** {
 517              		.loc 1 228 0
 518              		.cfi_startproc
 519              		@ args = 0, pretend = 0, frame = 0
 520              		@ frame_needed = 0, uses_anonymous_args = 0
 229:Src/tim.c     **** 
 230:Src/tim.c     ****   htim16.Instance = TIM16;
 521              		.loc 1 230 0
 522 0000 0B4B     		ldr	r3, .L88
 523 0002 0C4A     		ldr	r2, .L88+4
 228:Src/tim.c     **** 
 524              		.loc 1 228 0
 525 0004 10B5     		push	{r4, lr}
 526              	.LCFI16:
 527              		.cfi_def_cfa_offset 8
 528              		.cfi_offset 4, -8
 529              		.cfi_offset 14, -4
 231:Src/tim.c     ****   htim16.Init.Prescaler = 2198-1;
 232:Src/tim.c     ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 233:Src/tim.c     ****   htim16.Init.Period = 32767-1;
 530              		.loc 1 233 0
 531 0006 47F6FE71 		movw	r1, #32766
 230:Src/tim.c     ****   htim16.Init.Prescaler = 2198-1;
 532              		.loc 1 230 0
 533 000a 1A60     		str	r2, [r3]
 231:Src/tim.c     ****   htim16.Init.Prescaler = 2198-1;
 534              		.loc 1 231 0
 535 000c 40F69504 		movw	r4, #2197
 232:Src/tim.c     ****   htim16.Init.Period = 32767-1;
 536              		.loc 1 232 0
 537 0010 0022     		movs	r2, #0
 234:Src/tim.c     ****   htim16.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 235:Src/tim.c     ****   htim16.Init.RepetitionCounter = 0;
 236:Src/tim.c     ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 237:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 538              		.loc 1 237 0
 539 0012 1846     		mov	r0, r3
 231:Src/tim.c     ****   htim16.Init.CounterMode = TIM_COUNTERMODE_UP;
 540              		.loc 1 231 0
 541 0014 5C60     		str	r4, [r3, #4]
 232:Src/tim.c     ****   htim16.Init.Period = 32767-1;
 542              		.loc 1 232 0
 543 0016 C3E90221 		strd	r2, r1, [r3, #8]
 235:Src/tim.c     ****   htim16.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 544              		.loc 1 235 0
 545 001a C3E90422 		strd	r2, r2, [r3, #16]
 236:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim16) != HAL_OK)
 546              		.loc 1 236 0
 547 001e 9A61     		str	r2, [r3, #24]
 548              		.loc 1 237 0
 549 0020 FFF7FEFF 		bl	HAL_TIM_Base_Init
 550              	.LVL28:
 551 0024 00B9     		cbnz	r0, .L87
 238:Src/tim.c     ****   {
 239:Src/tim.c     ****     Error_Handler();
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 16


 240:Src/tim.c     ****   }
 241:Src/tim.c     **** 
 242:Src/tim.c     **** }
 552              		.loc 1 242 0
 553 0026 10BD     		pop	{r4, pc}
 554              	.L87:
 555 0028 BDE81040 		pop	{r4, lr}
 556              	.LCFI17:
 557              		.cfi_restore 14
 558              		.cfi_restore 4
 559              		.cfi_def_cfa_offset 0
 239:Src/tim.c     ****   }
 560              		.loc 1 239 0
 561 002c FFF7FEBF 		b	Error_Handler
 562              	.LVL29:
 563              	.L89:
 564              		.align	2
 565              	.L88:
 566 0030 00000000 		.word	htim16
 567 0034 00440140 		.word	1073824768
 568              		.cfi_endproc
 569              	.LFE128:
 571              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 572              		.align	1
 573              		.p2align 2,,3
 574              		.global	HAL_TIM_Base_MspInit
 575              		.syntax unified
 576              		.thumb
 577              		.thumb_func
 578              		.fpu fpv4-sp-d16
 580              	HAL_TIM_Base_MspInit:
 581              	.LFB129:
 243:Src/tim.c     **** 
 244:Src/tim.c     **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
 245:Src/tim.c     **** {
 582              		.loc 1 245 0
 583              		.cfi_startproc
 584              		@ args = 0, pretend = 0, frame = 24
 585              		@ frame_needed = 0, uses_anonymous_args = 0
 586              	.LVL30:
 587 0000 00B5     		push	{lr}
 588              	.LCFI18:
 589              		.cfi_def_cfa_offset 4
 590              		.cfi_offset 14, -4
 246:Src/tim.c     **** 
 247:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM1)
 591              		.loc 1 247 0
 592 0002 0368     		ldr	r3, [r0]
 593 0004 444A     		ldr	r2, .L106
 594 0006 9342     		cmp	r3, r2
 245:Src/tim.c     **** 
 595              		.loc 1 245 0
 596 0008 87B0     		sub	sp, sp, #28
 597              	.LCFI19:
 598              		.cfi_def_cfa_offset 32
 599              		.loc 1 247 0
 600 000a 26D0     		beq	.L100
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 17


 248:Src/tim.c     ****   {
 249:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 0 */
 250:Src/tim.c     **** 
 251:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 0 */
 252:Src/tim.c     ****     /* TIM1 clock enable */
 253:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_ENABLE();
 254:Src/tim.c     **** 
 255:Src/tim.c     ****     /* TIM1 interrupt Init */
 256:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, 15, 0);
 257:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 258:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspInit 1 */
 259:Src/tim.c     **** 
 260:Src/tim.c     ****   /* USER CODE END TIM1_MspInit 1 */
 261:Src/tim.c     ****   }
 262:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM2)
 601              		.loc 1 262 0
 602 000c B3F1804F 		cmp	r3, #1073741824
 603 0010 38D0     		beq	.L101
 263:Src/tim.c     ****   {
 264:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 0 */
 265:Src/tim.c     **** 
 266:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 0 */
 267:Src/tim.c     ****     /* TIM2 clock enable */
 268:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_ENABLE();
 269:Src/tim.c     **** 
 270:Src/tim.c     ****     /* TIM2 interrupt Init */
 271:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM2_IRQn, 3, 0);
 272:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 273:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 274:Src/tim.c     **** 
 275:Src/tim.c     ****   /* USER CODE END TIM2_MspInit 1 */
 276:Src/tim.c     ****   }
 277:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM3)
 604              		.loc 1 277 0
 605 0012 424A     		ldr	r2, .L106+4
 606 0014 9342     		cmp	r3, r2
 607 0016 4BD0     		beq	.L102
 278:Src/tim.c     ****   {
 279:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 280:Src/tim.c     **** 
 281:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 0 */
 282:Src/tim.c     ****     /* TIM3 clock enable */
 283:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_ENABLE();
 284:Src/tim.c     **** 
 285:Src/tim.c     ****     /* TIM3 interrupt Init */
 286:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 287:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM3_IRQn);
 288:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 289:Src/tim.c     **** 
 290:Src/tim.c     ****   /* USER CODE END TIM3_MspInit 1 */
 291:Src/tim.c     ****   }
 292:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM6)
 608              		.loc 1 292 0
 609 0018 414A     		ldr	r2, .L106+8
 610 001a 9342     		cmp	r3, r2
 611 001c 5DD0     		beq	.L103
 293:Src/tim.c     ****   {
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 18


 294:Src/tim.c     ****   /* USER CODE BEGIN TIM6_MspInit 0 */
 295:Src/tim.c     **** 
 296:Src/tim.c     ****   /* USER CODE END TIM6_MspInit 0 */
 297:Src/tim.c     ****     /* TIM6 clock enable */
 298:Src/tim.c     ****     __HAL_RCC_TIM6_CLK_ENABLE();
 299:Src/tim.c     **** 
 300:Src/tim.c     ****     /* TIM6 interrupt Init */
 301:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM6_DAC1_IRQn, 4, 0);
 302:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM6_DAC1_IRQn);
 303:Src/tim.c     ****   /* USER CODE BEGIN TIM6_MspInit 1 */
 304:Src/tim.c     **** 
 305:Src/tim.c     ****   /* USER CODE END TIM6_MspInit 1 */
 306:Src/tim.c     ****   }
 307:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM7)
 612              		.loc 1 307 0
 613 001e 414A     		ldr	r2, .L106+12
 614 0020 9342     		cmp	r3, r2
 615 0022 05D0     		beq	.L104
 308:Src/tim.c     ****   {
 309:Src/tim.c     ****   /* USER CODE BEGIN TIM7_MspInit 0 */
 310:Src/tim.c     **** 
 311:Src/tim.c     ****   /* USER CODE END TIM7_MspInit 0 */
 312:Src/tim.c     ****     /* TIM7 clock enable */
 313:Src/tim.c     ****     __HAL_RCC_TIM7_CLK_ENABLE();
 314:Src/tim.c     **** 
 315:Src/tim.c     ****     /* TIM7 interrupt Init */
 316:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM7_DAC2_IRQn, 11, 0);
 317:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM7_DAC2_IRQn);
 318:Src/tim.c     ****   /* USER CODE BEGIN TIM7_MspInit 1 */
 319:Src/tim.c     **** 
 320:Src/tim.c     ****   /* USER CODE END TIM7_MspInit 1 */
 321:Src/tim.c     ****   }
 322:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM16)
 616              		.loc 1 322 0
 617 0024 404A     		ldr	r2, .L106+16
 618 0026 9342     		cmp	r3, r2
 619 0028 68D0     		beq	.L105
 323:Src/tim.c     ****   {
 324:Src/tim.c     ****   /* USER CODE BEGIN TIM16_MspInit 0 */
 325:Src/tim.c     **** 
 326:Src/tim.c     ****   /* USER CODE END TIM16_MspInit 0 */
 327:Src/tim.c     ****     /* TIM16 clock enable */
 328:Src/tim.c     ****     __HAL_RCC_TIM16_CLK_ENABLE();
 329:Src/tim.c     **** 
 330:Src/tim.c     ****     /* TIM16 interrupt Init */
 331:Src/tim.c     ****     HAL_NVIC_SetPriority(TIM1_UP_TIM16_IRQn, 15, 0);
 332:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 333:Src/tim.c     ****   /* USER CODE BEGIN TIM16_MspInit 1 */
 334:Src/tim.c     **** 
 335:Src/tim.c     ****   /* USER CODE END TIM16_MspInit 1 */
 336:Src/tim.c     ****   }
 337:Src/tim.c     **** }
 620              		.loc 1 337 0
 621 002a 07B0     		add	sp, sp, #28
 622              	.LCFI20:
 623              		.cfi_remember_state
 624              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 19


 625              		@ sp needed
 626 002c 5DF804FB 		ldr	pc, [sp], #4
 627              	.L104:
 628              	.LCFI21:
 629              		.cfi_restore_state
 630              	.LBB2:
 313:Src/tim.c     **** 
 631              		.loc 1 313 0
 632 0030 3E4B     		ldr	r3, .L106+20
 633 0032 DA69     		ldr	r2, [r3, #28]
 634 0034 42F02002 		orr	r2, r2, #32
 635 0038 DA61     		str	r2, [r3, #28]
 636 003a DB69     		ldr	r3, [r3, #28]
 637 003c 03F02003 		and	r3, r3, #32
 638 0040 0493     		str	r3, [sp, #16]
 639              	.LBE2:
 316:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM7_DAC2_IRQn);
 640              		.loc 1 316 0
 641 0042 3720     		movs	r0, #55
 642              	.LVL31:
 643 0044 0022     		movs	r2, #0
 644 0046 0B21     		movs	r1, #11
 645              	.LBB3:
 313:Src/tim.c     **** 
 646              		.loc 1 313 0
 647 0048 049B     		ldr	r3, [sp, #16]
 648              	.LBE3:
 316:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM7_DAC2_IRQn);
 649              		.loc 1 316 0
 650 004a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 651              	.LVL32:
 317:Src/tim.c     ****   /* USER CODE BEGIN TIM7_MspInit 1 */
 652              		.loc 1 317 0
 653 004e 3720     		movs	r0, #55
 654              	.L99:
 655              		.loc 1 337 0
 656 0050 07B0     		add	sp, sp, #28
 657              	.LCFI22:
 658              		.cfi_remember_state
 659              		.cfi_def_cfa_offset 4
 660              		@ sp needed
 661 0052 5DF804EB 		ldr	lr, [sp], #4
 662              	.LCFI23:
 663              		.cfi_restore 14
 664              		.cfi_def_cfa_offset 0
 332:Src/tim.c     ****   /* USER CODE BEGIN TIM16_MspInit 1 */
 665              		.loc 1 332 0
 666 0056 FFF7FEBF 		b	HAL_NVIC_EnableIRQ
 667              	.LVL33:
 668              	.L100:
 669              	.LCFI24:
 670              		.cfi_restore_state
 671              	.LBB4:
 253:Src/tim.c     **** 
 672              		.loc 1 253 0
 673 005a 344B     		ldr	r3, .L106+20
 674 005c 9A69     		ldr	r2, [r3, #24]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 20


 675 005e 42F40062 		orr	r2, r2, #2048
 676 0062 9A61     		str	r2, [r3, #24]
 677 0064 9B69     		ldr	r3, [r3, #24]
 678 0066 03F40063 		and	r3, r3, #2048
 679 006a 0093     		str	r3, [sp]
 680 006c 009B     		ldr	r3, [sp]
 681              	.LBE4:
 256:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 682              		.loc 1 256 0
 683 006e 0022     		movs	r2, #0
 684 0070 0F21     		movs	r1, #15
 685 0072 1920     		movs	r0, #25
 686              	.LVL34:
 687              	.L98:
 331:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 688              		.loc 1 331 0
 689 0074 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 690              	.LVL35:
 332:Src/tim.c     ****   /* USER CODE BEGIN TIM16_MspInit 1 */
 691              		.loc 1 332 0
 692 0078 1920     		movs	r0, #25
 693              		.loc 1 337 0
 694 007a 07B0     		add	sp, sp, #28
 695              	.LCFI25:
 696              		.cfi_remember_state
 697              		.cfi_def_cfa_offset 4
 698              		@ sp needed
 699 007c 5DF804EB 		ldr	lr, [sp], #4
 700              	.LCFI26:
 701              		.cfi_restore 14
 702              		.cfi_def_cfa_offset 0
 332:Src/tim.c     ****   /* USER CODE BEGIN TIM16_MspInit 1 */
 703              		.loc 1 332 0
 704 0080 FFF7FEBF 		b	HAL_NVIC_EnableIRQ
 705              	.LVL36:
 706              	.L101:
 707              	.LCFI27:
 708              		.cfi_restore_state
 709              	.LBB5:
 268:Src/tim.c     **** 
 710              		.loc 1 268 0
 711 0084 03F50433 		add	r3, r3, #135168
 712              	.LBE5:
 271:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 713              		.loc 1 271 0
 714 0088 0321     		movs	r1, #3
 715              	.LBB6:
 268:Src/tim.c     **** 
 716              		.loc 1 268 0
 717 008a DA69     		ldr	r2, [r3, #28]
 718 008c 42F00102 		orr	r2, r2, #1
 719 0090 DA61     		str	r2, [r3, #28]
 720 0092 DB69     		ldr	r3, [r3, #28]
 721 0094 03F00103 		and	r3, r3, #1
 722 0098 0193     		str	r3, [sp, #4]
 723              	.LBE6:
 271:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 21


 724              		.loc 1 271 0
 725 009a 0022     		movs	r2, #0
 726 009c 1C20     		movs	r0, #28
 727              	.LVL37:
 728              	.LBB7:
 268:Src/tim.c     **** 
 729              		.loc 1 268 0
 730 009e 019B     		ldr	r3, [sp, #4]
 731              	.LBE7:
 271:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM2_IRQn);
 732              		.loc 1 271 0
 733 00a0 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 734              	.LVL38:
 272:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspInit 1 */
 735              		.loc 1 272 0
 736 00a4 1C20     		movs	r0, #28
 737              		.loc 1 337 0
 738 00a6 07B0     		add	sp, sp, #28
 739              	.LCFI28:
 740              		.cfi_remember_state
 741              		.cfi_def_cfa_offset 4
 742              		@ sp needed
 743 00a8 5DF804EB 		ldr	lr, [sp], #4
 744              	.LCFI29:
 745              		.cfi_restore 14
 746              		.cfi_def_cfa_offset 0
 332:Src/tim.c     ****   /* USER CODE BEGIN TIM16_MspInit 1 */
 747              		.loc 1 332 0
 748 00ac FFF7FEBF 		b	HAL_NVIC_EnableIRQ
 749              	.LVL39:
 750              	.L102:
 751              	.LCFI30:
 752              		.cfi_restore_state
 753              	.LBB8:
 283:Src/tim.c     **** 
 754              		.loc 1 283 0
 755 00b0 1E4B     		ldr	r3, .L106+20
 756 00b2 DA69     		ldr	r2, [r3, #28]
 757 00b4 42F00202 		orr	r2, r2, #2
 758 00b8 DA61     		str	r2, [r3, #28]
 759 00ba DB69     		ldr	r3, [r3, #28]
 760              	.LBE8:
 286:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM3_IRQn);
 761              		.loc 1 286 0
 762 00bc 0022     		movs	r2, #0
 763              	.LBB9:
 283:Src/tim.c     **** 
 764              		.loc 1 283 0
 765 00be 03F00203 		and	r3, r3, #2
 766 00c2 0293     		str	r3, [sp, #8]
 767              	.LBE9:
 286:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM3_IRQn);
 768              		.loc 1 286 0
 769 00c4 1146     		mov	r1, r2
 770 00c6 1D20     		movs	r0, #29
 771              	.LVL40:
 772              	.LBB10:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 22


 283:Src/tim.c     **** 
 773              		.loc 1 283 0
 774 00c8 029B     		ldr	r3, [sp, #8]
 775              	.LBE10:
 286:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM3_IRQn);
 776              		.loc 1 286 0
 777 00ca FFF7FEFF 		bl	HAL_NVIC_SetPriority
 778              	.LVL41:
 287:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 779              		.loc 1 287 0
 780 00ce 1D20     		movs	r0, #29
 781              		.loc 1 337 0
 782 00d0 07B0     		add	sp, sp, #28
 783              	.LCFI31:
 784              		.cfi_remember_state
 785              		.cfi_def_cfa_offset 4
 786              		@ sp needed
 787 00d2 5DF804EB 		ldr	lr, [sp], #4
 788              	.LCFI32:
 789              		.cfi_restore 14
 790              		.cfi_def_cfa_offset 0
 332:Src/tim.c     ****   /* USER CODE BEGIN TIM16_MspInit 1 */
 791              		.loc 1 332 0
 792 00d6 FFF7FEBF 		b	HAL_NVIC_EnableIRQ
 793              	.LVL42:
 794              	.L103:
 795              	.LCFI33:
 796              		.cfi_restore_state
 797              	.LBB11:
 298:Src/tim.c     **** 
 798              		.loc 1 298 0
 799 00da 144B     		ldr	r3, .L106+20
 800 00dc DA69     		ldr	r2, [r3, #28]
 801 00de 42F01002 		orr	r2, r2, #16
 802 00e2 DA61     		str	r2, [r3, #28]
 803 00e4 DB69     		ldr	r3, [r3, #28]
 804 00e6 03F01003 		and	r3, r3, #16
 805 00ea 0393     		str	r3, [sp, #12]
 806              	.LBE11:
 301:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM6_DAC1_IRQn);
 807              		.loc 1 301 0
 808 00ec 3620     		movs	r0, #54
 809              	.LVL43:
 810 00ee 0022     		movs	r2, #0
 811 00f0 0421     		movs	r1, #4
 812              	.LBB12:
 298:Src/tim.c     **** 
 813              		.loc 1 298 0
 814 00f2 039B     		ldr	r3, [sp, #12]
 815              	.LBE12:
 301:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM6_DAC1_IRQn);
 816              		.loc 1 301 0
 817 00f4 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 818              	.LVL44:
 302:Src/tim.c     ****   /* USER CODE BEGIN TIM6_MspInit 1 */
 819              		.loc 1 302 0
 820 00f8 3620     		movs	r0, #54
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 23


 821 00fa A9E7     		b	.L99
 822              	.LVL45:
 823              	.L105:
 824              	.LBB13:
 328:Src/tim.c     **** 
 825              		.loc 1 328 0
 826 00fc 0B4B     		ldr	r3, .L106+20
 827 00fe 9A69     		ldr	r2, [r3, #24]
 828 0100 42F40032 		orr	r2, r2, #131072
 829 0104 9A61     		str	r2, [r3, #24]
 830 0106 9B69     		ldr	r3, [r3, #24]
 831 0108 03F40033 		and	r3, r3, #131072
 832 010c 0593     		str	r3, [sp, #20]
 833              	.LBE13:
 331:Src/tim.c     ****     HAL_NVIC_EnableIRQ(TIM1_UP_TIM16_IRQn);
 834              		.loc 1 331 0
 835 010e 0022     		movs	r2, #0
 836 0110 0F21     		movs	r1, #15
 837 0112 1920     		movs	r0, #25
 838              	.LVL46:
 839              	.LBB14:
 328:Src/tim.c     **** 
 840              		.loc 1 328 0
 841 0114 059B     		ldr	r3, [sp, #20]
 842 0116 ADE7     		b	.L98
 843              	.L107:
 844              		.align	2
 845              	.L106:
 846 0118 002C0140 		.word	1073818624
 847 011c 00040040 		.word	1073742848
 848 0120 00100040 		.word	1073745920
 849 0124 00140040 		.word	1073746944
 850 0128 00440140 		.word	1073824768
 851 012c 00100240 		.word	1073876992
 852              	.LBE14:
 853              		.cfi_endproc
 854              	.LFE129:
 856              		.section	.text.HAL_TIM_MspPostInit,"ax",%progbits
 857              		.align	1
 858              		.p2align 2,,3
 859              		.global	HAL_TIM_MspPostInit
 860              		.syntax unified
 861              		.thumb
 862              		.thumb_func
 863              		.fpu fpv4-sp-d16
 865              	HAL_TIM_MspPostInit:
 866              	.LFB130:
 338:Src/tim.c     **** void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
 339:Src/tim.c     **** {
 867              		.loc 1 339 0
 868              		.cfi_startproc
 869              		@ args = 0, pretend = 0, frame = 24
 870              		@ frame_needed = 0, uses_anonymous_args = 0
 871              	.LVL47:
 872 0000 30B5     		push	{r4, r5, lr}
 873              	.LCFI34:
 874              		.cfi_def_cfa_offset 12
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 24


 875              		.cfi_offset 4, -12
 876              		.cfi_offset 5, -8
 877              		.cfi_offset 14, -4
 340:Src/tim.c     **** 
 341:Src/tim.c     ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 342:Src/tim.c     ****   if(timHandle->Instance==TIM1)
 878              		.loc 1 342 0
 879 0002 0168     		ldr	r1, [r0]
 880 0004 134A     		ldr	r2, .L112
 339:Src/tim.c     **** 
 881              		.loc 1 339 0
 882 0006 87B0     		sub	sp, sp, #28
 883              	.LCFI35:
 884              		.cfi_def_cfa_offset 40
 341:Src/tim.c     ****   if(timHandle->Instance==TIM1)
 885              		.loc 1 341 0
 886 0008 0023     		movs	r3, #0
 887              		.loc 1 342 0
 888 000a 9142     		cmp	r1, r2
 341:Src/tim.c     ****   if(timHandle->Instance==TIM1)
 889              		.loc 1 341 0
 890 000c CDE90133 		strd	r3, r3, [sp, #4]
 891 0010 CDE90333 		strd	r3, r3, [sp, #12]
 892 0014 0593     		str	r3, [sp, #20]
 893              		.loc 1 342 0
 894 0016 01D0     		beq	.L111
 343:Src/tim.c     ****   {
 344:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspPostInit 0 */
 345:Src/tim.c     **** 
 346:Src/tim.c     ****   /* USER CODE END TIM1_MspPostInit 0 */
 347:Src/tim.c     ****   
 348:Src/tim.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
 349:Src/tim.c     ****     /**TIM1 GPIO Configuration    
 350:Src/tim.c     ****     PA8     ------> TIM1_CH1 
 351:Src/tim.c     ****     */
 352:Src/tim.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_8;
 353:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 354:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 355:Src/tim.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 356:Src/tim.c     ****     GPIO_InitStruct.Alternate = GPIO_AF6_TIM1;
 357:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 358:Src/tim.c     **** 
 359:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspPostInit 1 */
 360:Src/tim.c     **** 
 361:Src/tim.c     ****   /* USER CODE END TIM1_MspPostInit 1 */
 362:Src/tim.c     ****   }
 363:Src/tim.c     **** 
 364:Src/tim.c     **** }
 895              		.loc 1 364 0
 896 0018 07B0     		add	sp, sp, #28
 897              	.LCFI36:
 898              		.cfi_remember_state
 899              		.cfi_def_cfa_offset 12
 900              		@ sp needed
 901 001a 30BD     		pop	{r4, r5, pc}
 902              	.L111:
 903              	.LCFI37:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 25


 904              		.cfi_restore_state
 905              	.LBB15:
 348:Src/tim.c     ****     /**TIM1 GPIO Configuration    
 906              		.loc 1 348 0
 907 001c 03F18043 		add	r3, r3, #1073741824
 908 0020 03F50433 		add	r3, r3, #135168
 909              	.LBE15:
 357:Src/tim.c     **** 
 910              		.loc 1 357 0
 911 0024 01A9     		add	r1, sp, #4
 912              	.LBB16:
 348:Src/tim.c     ****     /**TIM1 GPIO Configuration    
 913              		.loc 1 348 0
 914 0026 5A69     		ldr	r2, [r3, #20]
 915 0028 42F40032 		orr	r2, r2, #131072
 916 002c 5A61     		str	r2, [r3, #20]
 917 002e 5B69     		ldr	r3, [r3, #20]
 918 0030 03F40033 		and	r3, r3, #131072
 919 0034 0093     		str	r3, [sp]
 920              	.LBE16:
 353:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 921              		.loc 1 353 0
 922 0036 0222     		movs	r2, #2
 356:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 923              		.loc 1 356 0
 924 0038 0623     		movs	r3, #6
 352:Src/tim.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 925              		.loc 1 352 0
 926 003a 4FF48074 		mov	r4, #256
 357:Src/tim.c     **** 
 927              		.loc 1 357 0
 928 003e 4FF09040 		mov	r0, #1207959552
 929              	.LVL48:
 930              	.LBB17:
 348:Src/tim.c     ****     /**TIM1 GPIO Configuration    
 931              		.loc 1 348 0
 932 0042 009D     		ldr	r5, [sp]
 933              	.LBE17:
 356:Src/tim.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 934              		.loc 1 356 0
 935 0044 0593     		str	r3, [sp, #20]
 353:Src/tim.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 936              		.loc 1 353 0
 937 0046 CDE90142 		strd	r4, r2, [sp, #4]
 357:Src/tim.c     **** 
 938              		.loc 1 357 0
 939 004a FFF7FEFF 		bl	HAL_GPIO_Init
 940              	.LVL49:
 941              		.loc 1 364 0
 942 004e 07B0     		add	sp, sp, #28
 943              	.LCFI38:
 944              		.cfi_def_cfa_offset 12
 945              		@ sp needed
 946 0050 30BD     		pop	{r4, r5, pc}
 947              	.L113:
 948 0052 00BF     		.align	2
 949              	.L112:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 26


 950 0054 002C0140 		.word	1073818624
 951              		.cfi_endproc
 952              	.LFE130:
 954              		.section	.text.MX_TIM1_Init,"ax",%progbits
 955              		.align	1
 956              		.p2align 2,,3
 957              		.global	MX_TIM1_Init
 958              		.syntax unified
 959              		.thumb
 960              		.thumb_func
 961              		.fpu fpv4-sp-d16
 963              	MX_TIM1_Init:
 964              	.LFB123:
  36:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 965              		.loc 1 36 0
 966              		.cfi_startproc
 967              		@ args = 0, pretend = 0, frame = 104
 968              		@ frame_needed = 0, uses_anonymous_args = 0
 969 0000 30B5     		push	{r4, r5, lr}
 970              	.LCFI39:
 971              		.cfi_def_cfa_offset 12
 972              		.cfi_offset 4, -12
 973              		.cfi_offset 5, -8
 974              		.cfi_offset 14, -4
  37:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 975              		.loc 1 37 0
 976 0002 0024     		movs	r4, #0
  36:Src/tim.c     ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 977              		.loc 1 36 0
 978 0004 9BB0     		sub	sp, sp, #108
 979              	.LCFI40:
 980              		.cfi_def_cfa_offset 120
  40:Src/tim.c     **** 
 981              		.loc 1 40 0
 982 0006 2146     		mov	r1, r4
 983 0008 2C22     		movs	r2, #44
 984 000a 0FA8     		add	r0, sp, #60
  37:Src/tim.c     ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 985              		.loc 1 37 0
 986 000c CDE90444 		strd	r4, r4, [sp, #16]
 987 0010 CDE90644 		strd	r4, r4, [sp, #24]
  38:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
 988              		.loc 1 38 0
 989 0014 0194     		str	r4, [sp, #4]
  39:Src/tim.c     ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 990              		.loc 1 39 0
 991 0016 0894     		str	r4, [sp, #32]
  38:Src/tim.c     ****   TIM_OC_InitTypeDef sConfigOC = {0};
 992              		.loc 1 38 0
 993 0018 CDE90244 		strd	r4, r4, [sp, #8]
  39:Src/tim.c     ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 994              		.loc 1 39 0
 995 001c CDE90944 		strd	r4, r4, [sp, #36]
 996 0020 CDE90B44 		strd	r4, r4, [sp, #44]
 997 0024 CDE90D44 		strd	r4, r4, [sp, #52]
  40:Src/tim.c     **** 
 998              		.loc 1 40 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 27


 999 0028 FFF7FEFF 		bl	memset
 1000              	.LVL50:
  42:Src/tim.c     ****   htim1.Init.Prescaler = 72-1;
 1001              		.loc 1 42 0
 1002 002c 304B     		ldr	r3, .L145
 1003 002e 314D     		ldr	r5, .L145+4
  44:Src/tim.c     ****   htim1.Init.Period = 100-1;
 1004              		.loc 1 44 0
 1005 0030 9C60     		str	r4, [r3, #8]
  43:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1006              		.loc 1 43 0
 1007 0032 4721     		movs	r1, #71
  45:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1008              		.loc 1 45 0
 1009 0034 6322     		movs	r2, #99
  49:Src/tim.c     ****   {
 1010              		.loc 1 49 0
 1011 0036 1846     		mov	r0, r3
  47:Src/tim.c     ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 1012              		.loc 1 47 0
 1013 0038 C3E90444 		strd	r4, r4, [r3, #16]
  48:Src/tim.c     ****   if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 1014              		.loc 1 48 0
 1015 003c 9C61     		str	r4, [r3, #24]
  43:Src/tim.c     ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 1016              		.loc 1 43 0
 1017 003e C3E90051 		strd	r5, r1, [r3]
  45:Src/tim.c     ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 1018              		.loc 1 45 0
 1019 0042 DA60     		str	r2, [r3, #12]
  49:Src/tim.c     ****   {
 1020              		.loc 1 49 0
 1021 0044 FFF7FEFF 		bl	HAL_TIM_Base_Init
 1022              	.LVL51:
 1023 0048 0028     		cmp	r0, #0
 1024 004a 4DD1     		bne	.L140
 1025              	.L115:
  53:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1026              		.loc 1 53 0
 1027 004c 4FF48053 		mov	r3, #4096
  54:Src/tim.c     ****   {
 1028              		.loc 1 54 0
 1029 0050 04A9     		add	r1, sp, #16
 1030 0052 2748     		ldr	r0, .L145
  53:Src/tim.c     ****   if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 1031              		.loc 1 53 0
 1032 0054 0493     		str	r3, [sp, #16]
  54:Src/tim.c     ****   {
 1033              		.loc 1 54 0
 1034 0056 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 1035              	.LVL52:
 1036 005a 0028     		cmp	r0, #0
 1037 005c 41D1     		bne	.L141
 1038              	.L116:
  58:Src/tim.c     ****   {
 1039              		.loc 1 58 0
 1040 005e 2448     		ldr	r0, .L145
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 28


 1041 0060 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 1042              	.LVL53:
 1043 0064 0028     		cmp	r0, #0
 1044 0066 39D1     		bne	.L142
 1045              	.L117:
  62:Src/tim.c     ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 1046              		.loc 1 62 0
 1047 0068 0023     		movs	r3, #0
  65:Src/tim.c     ****   {
 1048              		.loc 1 65 0
 1049 006a 01A9     		add	r1, sp, #4
 1050 006c 2048     		ldr	r0, .L145
  64:Src/tim.c     ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 1051              		.loc 1 64 0
 1052 006e 0393     		str	r3, [sp, #12]
  63:Src/tim.c     ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 1053              		.loc 1 63 0
 1054 0070 CDE90133 		strd	r3, r3, [sp, #4]
  65:Src/tim.c     ****   {
 1055              		.loc 1 65 0
 1056 0074 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 1057              	.LVL54:
 1058 0078 68BB     		cbnz	r0, .L143
 1059              	.L118:
  70:Src/tim.c     ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 1060              		.loc 1 70 0
 1061 007a 0023     		movs	r3, #0
  69:Src/tim.c     ****   sConfigOC.Pulse = 0;
 1062              		.loc 1 69 0
 1063 007c 1E4C     		ldr	r4, .L145+8
  76:Src/tim.c     ****   {
 1064              		.loc 1 76 0
 1065 007e 1C48     		ldr	r0, .L145
  69:Src/tim.c     ****   sConfigOC.Pulse = 0;
 1066              		.loc 1 69 0
 1067 0080 0894     		str	r4, [sp, #32]
  76:Src/tim.c     ****   {
 1068              		.loc 1 76 0
 1069 0082 08A9     		add	r1, sp, #32
 1070 0084 1A46     		mov	r2, r3
  71:Src/tim.c     ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 1071              		.loc 1 71 0
 1072 0086 CDE90933 		strd	r3, r3, [sp, #36]
  73:Src/tim.c     ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 1073              		.loc 1 73 0
 1074 008a CDE90B33 		strd	r3, r3, [sp, #44]
  75:Src/tim.c     ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 1075              		.loc 1 75 0
 1076 008e CDE90D33 		strd	r3, r3, [sp, #52]
  76:Src/tim.c     ****   {
 1077              		.loc 1 76 0
 1078 0092 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 1079              	.LVL55:
 1080 0096 D8B9     		cbnz	r0, .L144
 1081              	.L119:
  80:Src/tim.c     ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 1082              		.loc 1 80 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 29


 1083 0098 0023     		movs	r3, #0
  85:Src/tim.c     ****   sBreakDeadTimeConfig.BreakFilter = 0;
 1084              		.loc 1 85 0
 1085 009a 4FF40054 		mov	r4, #8192
  88:Src/tim.c     ****   sBreakDeadTimeConfig.Break2Filter = 0;
 1086              		.loc 1 88 0
 1087 009e 4FF00072 		mov	r2, #33554432
  91:Src/tim.c     ****   {
 1088              		.loc 1 91 0
 1089 00a2 0FA9     		add	r1, sp, #60
 1090 00a4 1248     		ldr	r0, .L145
  84:Src/tim.c     ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 1091              		.loc 1 84 0
 1092 00a6 1393     		str	r3, [sp, #76]
  81:Src/tim.c     ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 1093              		.loc 1 81 0
 1094 00a8 CDE90F33 		strd	r3, r3, [sp, #60]
  83:Src/tim.c     ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 1095              		.loc 1 83 0
 1096 00ac CDE91133 		strd	r3, r3, [sp, #68]
  87:Src/tim.c     ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 1097              		.loc 1 87 0
 1098 00b0 CDE91533 		strd	r3, r3, [sp, #84]
  90:Src/tim.c     ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 1099              		.loc 1 90 0
 1100 00b4 CDE91833 		strd	r3, r3, [sp, #96]
  85:Src/tim.c     ****   sBreakDeadTimeConfig.BreakFilter = 0;
 1101              		.loc 1 85 0
 1102 00b8 1494     		str	r4, [sp, #80]
  88:Src/tim.c     ****   sBreakDeadTimeConfig.Break2Filter = 0;
 1103              		.loc 1 88 0
 1104 00ba 1792     		str	r2, [sp, #92]
  91:Src/tim.c     ****   {
 1105              		.loc 1 91 0
 1106 00bc FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 1107              	.LVL56:
 1108 00c0 08B1     		cbz	r0, .L120
  93:Src/tim.c     ****   }
 1109              		.loc 1 93 0
 1110 00c2 FFF7FEFF 		bl	Error_Handler
 1111              	.LVL57:
 1112              	.L120:
  95:Src/tim.c     **** 
 1113              		.loc 1 95 0
 1114 00c6 0A48     		ldr	r0, .L145
 1115 00c8 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 1116              	.LVL58:
  97:Src/tim.c     **** /* TIM2 init function */
 1117              		.loc 1 97 0
 1118 00cc 1BB0     		add	sp, sp, #108
 1119              	.LCFI41:
 1120              		.cfi_remember_state
 1121              		.cfi_def_cfa_offset 12
 1122              		@ sp needed
 1123 00ce 30BD     		pop	{r4, r5, pc}
 1124              	.L144:
 1125              	.LCFI42:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 30


 1126              		.cfi_restore_state
  78:Src/tim.c     ****   }
 1127              		.loc 1 78 0
 1128 00d0 FFF7FEFF 		bl	Error_Handler
 1129              	.LVL59:
 1130 00d4 E0E7     		b	.L119
 1131              	.L143:
  67:Src/tim.c     ****   }
 1132              		.loc 1 67 0
 1133 00d6 FFF7FEFF 		bl	Error_Handler
 1134              	.LVL60:
 1135 00da CEE7     		b	.L118
 1136              	.L142:
  60:Src/tim.c     ****   }
 1137              		.loc 1 60 0
 1138 00dc FFF7FEFF 		bl	Error_Handler
 1139              	.LVL61:
 1140 00e0 C2E7     		b	.L117
 1141              	.L141:
  56:Src/tim.c     ****   }
 1142              		.loc 1 56 0
 1143 00e2 FFF7FEFF 		bl	Error_Handler
 1144              	.LVL62:
 1145 00e6 BAE7     		b	.L116
 1146              	.L140:
  51:Src/tim.c     ****   }
 1147              		.loc 1 51 0
 1148 00e8 FFF7FEFF 		bl	Error_Handler
 1149              	.LVL63:
 1150 00ec AEE7     		b	.L115
 1151              	.L146:
 1152 00ee 00BF     		.align	2
 1153              	.L145:
 1154 00f0 00000000 		.word	htim1
 1155 00f4 002C0140 		.word	1073818624
 1156 00f8 70000100 		.word	65648
 1157              		.cfi_endproc
 1158              	.LFE123:
 1160              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 1161              		.align	1
 1162              		.p2align 2,,3
 1163              		.global	HAL_TIM_Base_MspDeInit
 1164              		.syntax unified
 1165              		.thumb
 1166              		.thumb_func
 1167              		.fpu fpv4-sp-d16
 1169              	HAL_TIM_Base_MspDeInit:
 1170              	.LFB131:
 365:Src/tim.c     **** 
 366:Src/tim.c     **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* tim_baseHandle)
 367:Src/tim.c     **** {
 1171              		.loc 1 367 0
 1172              		.cfi_startproc
 1173              		@ args = 0, pretend = 0, frame = 0
 1174              		@ frame_needed = 0, uses_anonymous_args = 0
 1175              		@ link register save eliminated.
 1176              	.LVL64:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 31


 368:Src/tim.c     **** 
 369:Src/tim.c     ****   if(tim_baseHandle->Instance==TIM1)
 1177              		.loc 1 369 0
 1178 0000 0368     		ldr	r3, [r0]
 1179 0002 214A     		ldr	r2, .L159
 1180 0004 9342     		cmp	r3, r2
 1181 0006 15D0     		beq	.L154
 370:Src/tim.c     ****   {
 371:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 0 */
 372:Src/tim.c     **** 
 373:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 0 */
 374:Src/tim.c     ****     /* Peripheral clock disable */
 375:Src/tim.c     ****     __HAL_RCC_TIM1_CLK_DISABLE();
 376:Src/tim.c     **** 
 377:Src/tim.c     ****     /* TIM1 interrupt Deinit */
 378:Src/tim.c     ****   /* USER CODE BEGIN TIM1:TIM1_UP_TIM16_IRQn disable */
 379:Src/tim.c     ****     /**
 380:Src/tim.c     ****     * Uncomment the line below to disable the "TIM1_UP_TIM16_IRQn" interrupt
 381:Src/tim.c     ****     * Be aware, disabling shared interrupt may affect other IPs
 382:Src/tim.c     ****     */
 383:Src/tim.c     ****     /* HAL_NVIC_DisableIRQ(TIM1_UP_TIM16_IRQn); */
 384:Src/tim.c     ****   /* USER CODE END TIM1:TIM1_UP_TIM16_IRQn disable */
 385:Src/tim.c     **** 
 386:Src/tim.c     ****   /* USER CODE BEGIN TIM1_MspDeInit 1 */
 387:Src/tim.c     **** 
 388:Src/tim.c     ****   /* USER CODE END TIM1_MspDeInit 1 */
 389:Src/tim.c     ****   }
 390:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM2)
 1182              		.loc 1 390 0
 1183 0008 B3F1804F 		cmp	r3, #1073741824
 1184 000c 22D0     		beq	.L155
 391:Src/tim.c     ****   {
 392:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 0 */
 393:Src/tim.c     **** 
 394:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 0 */
 395:Src/tim.c     ****     /* Peripheral clock disable */
 396:Src/tim.c     ****     __HAL_RCC_TIM2_CLK_DISABLE();
 397:Src/tim.c     **** 
 398:Src/tim.c     ****     /* TIM2 interrupt Deinit */
 399:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM2_IRQn);
 400:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 401:Src/tim.c     **** 
 402:Src/tim.c     ****   /* USER CODE END TIM2_MspDeInit 1 */
 403:Src/tim.c     ****   }
 404:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM3)
 1185              		.loc 1 404 0
 1186 000e 1F4A     		ldr	r2, .L159+4
 1187 0010 9342     		cmp	r3, r2
 1188 0012 27D0     		beq	.L156
 405:Src/tim.c     ****   {
 406:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 407:Src/tim.c     **** 
 408:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 0 */
 409:Src/tim.c     ****     /* Peripheral clock disable */
 410:Src/tim.c     ****     __HAL_RCC_TIM3_CLK_DISABLE();
 411:Src/tim.c     **** 
 412:Src/tim.c     ****     /* TIM3 interrupt Deinit */
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 32


 413:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM3_IRQn);
 414:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 415:Src/tim.c     **** 
 416:Src/tim.c     ****   /* USER CODE END TIM3_MspDeInit 1 */
 417:Src/tim.c     ****   }
 418:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM6)
 1189              		.loc 1 418 0
 1190 0014 1E4A     		ldr	r2, .L159+8
 1191 0016 9342     		cmp	r3, r2
 1192 0018 13D0     		beq	.L157
 419:Src/tim.c     ****   {
 420:Src/tim.c     ****   /* USER CODE BEGIN TIM6_MspDeInit 0 */
 421:Src/tim.c     **** 
 422:Src/tim.c     ****   /* USER CODE END TIM6_MspDeInit 0 */
 423:Src/tim.c     ****     /* Peripheral clock disable */
 424:Src/tim.c     ****     __HAL_RCC_TIM6_CLK_DISABLE();
 425:Src/tim.c     **** 
 426:Src/tim.c     ****     /* TIM6 interrupt Deinit */
 427:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM6_DAC1_IRQn);
 428:Src/tim.c     ****   /* USER CODE BEGIN TIM6_MspDeInit 1 */
 429:Src/tim.c     **** 
 430:Src/tim.c     ****   /* USER CODE END TIM6_MspDeInit 1 */
 431:Src/tim.c     ****   }
 432:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM7)
 1193              		.loc 1 432 0
 1194 001a 1E4A     		ldr	r2, .L159+12
 1195 001c 9342     		cmp	r3, r2
 1196 001e 2AD0     		beq	.L158
 433:Src/tim.c     ****   {
 434:Src/tim.c     ****   /* USER CODE BEGIN TIM7_MspDeInit 0 */
 435:Src/tim.c     **** 
 436:Src/tim.c     ****   /* USER CODE END TIM7_MspDeInit 0 */
 437:Src/tim.c     ****     /* Peripheral clock disable */
 438:Src/tim.c     ****     __HAL_RCC_TIM7_CLK_DISABLE();
 439:Src/tim.c     **** 
 440:Src/tim.c     ****     /* TIM7 interrupt Deinit */
 441:Src/tim.c     ****     HAL_NVIC_DisableIRQ(TIM7_DAC2_IRQn);
 442:Src/tim.c     ****   /* USER CODE BEGIN TIM7_MspDeInit 1 */
 443:Src/tim.c     **** 
 444:Src/tim.c     ****   /* USER CODE END TIM7_MspDeInit 1 */
 445:Src/tim.c     ****   }
 446:Src/tim.c     ****   else if(tim_baseHandle->Instance==TIM16)
 1197              		.loc 1 446 0
 1198 0020 1D4A     		ldr	r2, .L159+16
 1199 0022 9342     		cmp	r3, r2
 1200 0024 05D1     		bne	.L147
 447:Src/tim.c     ****   {
 448:Src/tim.c     ****   /* USER CODE BEGIN TIM16_MspDeInit 0 */
 449:Src/tim.c     **** 
 450:Src/tim.c     ****   /* USER CODE END TIM16_MspDeInit 0 */
 451:Src/tim.c     ****     /* Peripheral clock disable */
 452:Src/tim.c     ****     __HAL_RCC_TIM16_CLK_DISABLE();
 1201              		.loc 1 452 0
 1202 0026 02F54C42 		add	r2, r2, #52224
 1203 002a 9369     		ldr	r3, [r2, #24]
 1204 002c 23F40033 		bic	r3, r3, #131072
 1205 0030 9361     		str	r3, [r2, #24]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 33


 1206              	.L147:
 453:Src/tim.c     **** 
 454:Src/tim.c     ****     /* TIM16 interrupt Deinit */
 455:Src/tim.c     ****   /* USER CODE BEGIN TIM16:TIM1_UP_TIM16_IRQn disable */
 456:Src/tim.c     ****     /**
 457:Src/tim.c     ****     * Uncomment the line below to disable the "TIM1_UP_TIM16_IRQn" interrupt
 458:Src/tim.c     ****     * Be aware, disabling shared interrupt may affect other IPs
 459:Src/tim.c     ****     */
 460:Src/tim.c     ****     /* HAL_NVIC_DisableIRQ(TIM1_UP_TIM16_IRQn); */
 461:Src/tim.c     ****   /* USER CODE END TIM16:TIM1_UP_TIM16_IRQn disable */
 462:Src/tim.c     **** 
 463:Src/tim.c     ****   /* USER CODE BEGIN TIM16_MspDeInit 1 */
 464:Src/tim.c     **** 
 465:Src/tim.c     ****   /* USER CODE END TIM16_MspDeInit 1 */
 466:Src/tim.c     ****   }
 467:Src/tim.c     **** } 
 1207              		.loc 1 467 0
 1208 0032 7047     		bx	lr
 1209              	.L154:
 375:Src/tim.c     **** 
 1210              		.loc 1 375 0
 1211 0034 02F56442 		add	r2, r2, #58368
 1212 0038 9369     		ldr	r3, [r2, #24]
 1213 003a 23F40063 		bic	r3, r3, #2048
 1214 003e 9361     		str	r3, [r2, #24]
 1215 0040 7047     		bx	lr
 1216              	.L157:
 424:Src/tim.c     **** 
 1217              		.loc 1 424 0
 1218 0042 02F50032 		add	r2, r2, #131072
 427:Src/tim.c     ****   /* USER CODE BEGIN TIM6_MspDeInit 1 */
 1219              		.loc 1 427 0
 1220 0046 3620     		movs	r0, #54
 1221              	.LVL65:
 424:Src/tim.c     **** 
 1222              		.loc 1 424 0
 1223 0048 D369     		ldr	r3, [r2, #28]
 1224 004a 23F01003 		bic	r3, r3, #16
 1225 004e D361     		str	r3, [r2, #28]
 427:Src/tim.c     ****   /* USER CODE BEGIN TIM6_MspDeInit 1 */
 1226              		.loc 1 427 0
 1227 0050 FFF7FEBF 		b	HAL_NVIC_DisableIRQ
 1228              	.LVL66:
 1229              	.L155:
 396:Src/tim.c     **** 
 1230              		.loc 1 396 0
 1231 0054 114A     		ldr	r2, .L159+20
 1232 0056 D369     		ldr	r3, [r2, #28]
 1233 0058 23F00103 		bic	r3, r3, #1
 1234 005c D361     		str	r3, [r2, #28]
 399:Src/tim.c     ****   /* USER CODE BEGIN TIM2_MspDeInit 1 */
 1235              		.loc 1 399 0
 1236 005e 1C20     		movs	r0, #28
 1237              	.LVL67:
 1238 0060 FFF7FEBF 		b	HAL_NVIC_DisableIRQ
 1239              	.LVL68:
 1240              	.L156:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 34


 410:Src/tim.c     **** 
 1241              		.loc 1 410 0
 1242 0064 02F50332 		add	r2, r2, #134144
 413:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 1243              		.loc 1 413 0
 1244 0068 1D20     		movs	r0, #29
 1245              	.LVL69:
 410:Src/tim.c     **** 
 1246              		.loc 1 410 0
 1247 006a D369     		ldr	r3, [r2, #28]
 1248 006c 23F00203 		bic	r3, r3, #2
 1249 0070 D361     		str	r3, [r2, #28]
 413:Src/tim.c     ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 1250              		.loc 1 413 0
 1251 0072 FFF7FEBF 		b	HAL_NVIC_DisableIRQ
 1252              	.LVL70:
 1253              	.L158:
 438:Src/tim.c     **** 
 1254              		.loc 1 438 0
 1255 0076 02F5FE32 		add	r2, r2, #130048
 441:Src/tim.c     ****   /* USER CODE BEGIN TIM7_MspDeInit 1 */
 1256              		.loc 1 441 0
 1257 007a 3720     		movs	r0, #55
 1258              	.LVL71:
 438:Src/tim.c     **** 
 1259              		.loc 1 438 0
 1260 007c D369     		ldr	r3, [r2, #28]
 1261 007e 23F02003 		bic	r3, r3, #32
 1262 0082 D361     		str	r3, [r2, #28]
 441:Src/tim.c     ****   /* USER CODE BEGIN TIM7_MspDeInit 1 */
 1263              		.loc 1 441 0
 1264 0084 FFF7FEBF 		b	HAL_NVIC_DisableIRQ
 1265              	.LVL72:
 1266              	.L160:
 1267              		.align	2
 1268              	.L159:
 1269 0088 002C0140 		.word	1073818624
 1270 008c 00040040 		.word	1073742848
 1271 0090 00100040 		.word	1073745920
 1272 0094 00140040 		.word	1073746944
 1273 0098 00440140 		.word	1073824768
 1274 009c 00100240 		.word	1073876992
 1275              		.cfi_endproc
 1276              	.LFE131:
 1278              		.comm	htim16,64,4
 1279              		.comm	htim7,64,4
 1280              		.comm	htim6,64,4
 1281              		.comm	htim3,64,4
 1282              		.comm	htim2,64,4
 1283              		.comm	htim1,64,4
 1284              		.text
 1285              	.Letext0:
 1286              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 1287              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 1288              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1289              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 1290              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 35


 1291              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1292              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1293              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1294              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1295              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 1296              		.file 12 "Inc/tim.h"
 1297              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 1298              		.file 14 "Inc/main.h"
 1299              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim_ex.h"
 1300              		.file 16 "<built-in>"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s 			page 36


DEFINED SYMBOLS
                            *ABS*:0000000000000000 tim.c
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:18     .text.MX_TIM2_Init:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:26     .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:168    .text.MX_TIM2_Init:00000000000000a4 $d
                            *COM*:0000000000000040 htim2
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:173    .text.MX_TIM3_Init:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:181    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:321    .text.MX_TIM3_Init:00000000000000a4 $d
                            *COM*:0000000000000040 htim3
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:327    .text.MX_TIM6_Init:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:335    .text.MX_TIM6_Init:0000000000000000 MX_TIM6_Init
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:411    .text.MX_TIM6_Init:0000000000000048 $d
                            *COM*:0000000000000040 htim6
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:417    .text.MX_TIM7_Init:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:425    .text.MX_TIM7_Init:0000000000000000 MX_TIM7_Init
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:501    .text.MX_TIM7_Init:0000000000000048 $d
                            *COM*:0000000000000040 htim7
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:507    .text.MX_TIM16_Init:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:515    .text.MX_TIM16_Init:0000000000000000 MX_TIM16_Init
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:566    .text.MX_TIM16_Init:0000000000000030 $d
                            *COM*:0000000000000040 htim16
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:572    .text.HAL_TIM_Base_MspInit:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:580    .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:846    .text.HAL_TIM_Base_MspInit:0000000000000118 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:857    .text.HAL_TIM_MspPostInit:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:865    .text.HAL_TIM_MspPostInit:0000000000000000 HAL_TIM_MspPostInit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:950    .text.HAL_TIM_MspPostInit:0000000000000054 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:955    .text.MX_TIM1_Init:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:963    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:1154   .text.MX_TIM1_Init:00000000000000f0 $d
                            *COM*:0000000000000040 htim1
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:1161   .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:1169   .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccx80vNW.s:1269   .text.HAL_TIM_Base_MspDeInit:0000000000000088 $d

UNDEFINED SYMBOLS
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_OC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_OC_ConfigChannel
Error_Handler
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_GPIO_Init
memset
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_NVIC_DisableIRQ
