ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBfGHK3.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"adc.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_ADC1_Init,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	MX_ADC1_Init
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	MX_ADC1_Init:
  27              	.LFB123:
  28              		.file 1 "Src/adc.c"
   1:Src/adc.c     **** /**
   2:Src/adc.c     ****   ******************************************************************************
   3:Src/adc.c     ****   * File Name          : ADC.c
   4:Src/adc.c     ****   * Description        : This file provides code for the configuration
   5:Src/adc.c     ****   *                      of the ADC instances.
   6:Src/adc.c     ****   ******************************************************************************
   7:Src/adc.c     ****   * @attention
   8:Src/adc.c     ****   *
   9:Src/adc.c     ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/adc.c     ****   * All rights reserved.</center></h2>
  11:Src/adc.c     ****   *
  12:Src/adc.c     ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/adc.c     ****   * the "License"; You may not use this file except in compliance with the
  14:Src/adc.c     ****   * License. You may obtain a copy of the License at:
  15:Src/adc.c     ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/adc.c     ****   *
  17:Src/adc.c     ****   ******************************************************************************
  18:Src/adc.c     ****   */
  19:Src/adc.c     **** 
  20:Src/adc.c     **** /* Includes ------------------------------------------------------------------*/
  21:Src/adc.c     **** #include "adc.h"
  22:Src/adc.c     **** 
  23:Src/adc.c     **** /* USER CODE BEGIN 0 */
  24:Src/adc.c     **** 
  25:Src/adc.c     **** /* USER CODE END 0 */
  26:Src/adc.c     **** 
  27:Src/adc.c     **** ADC_HandleTypeDef hadc1;
  28:Src/adc.c     **** DMA_HandleTypeDef hdma_adc1;
  29:Src/adc.c     **** 
  30:Src/adc.c     **** /* ADC1 init function */
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBfGHK3.s 			page 2


  31:Src/adc.c     **** void MX_ADC1_Init(void)
  32:Src/adc.c     **** {
  29              		.loc 1 32 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 40
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 10B5     		push	{r4, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  33:Src/adc.c     ****   ADC_MultiModeTypeDef multimode = {0};
  34:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig = {0};
  35:Src/adc.c     **** 
  36:Src/adc.c     ****   /** Common config 
  37:Src/adc.c     ****   */
  38:Src/adc.c     ****   hadc1.Instance = ADC1;
  38              		.loc 1 38 0
  39 0002 294B     		ldr	r3, .L23
  40 0004 4FF0A041 		mov	r1, #1342177280
  39:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
  41              		.loc 1 39 0
  42 0008 4FF44032 		mov	r2, #196608
  32:Src/adc.c     ****   ADC_MultiModeTypeDef multimode = {0};
  43              		.loc 1 32 0
  44 000c 8AB0     		sub	sp, sp, #40
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 48
  40:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_8B;
  47              		.loc 1 40 0
  48 000e 1020     		movs	r0, #16
  38:Src/adc.c     ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
  49              		.loc 1 38 0
  50 0010 1960     		str	r1, [r3]
  39:Src/adc.c     ****   hadc1.Init.Resolution = ADC_RESOLUTION_8B;
  51              		.loc 1 39 0
  52 0012 5A60     		str	r2, [r3, #4]
  41:Src/adc.c     ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
  42:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = ENABLE;
  43:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  44:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  45:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  46:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  47:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 2;
  53              		.loc 1 47 0
  54 0014 0221     		movs	r1, #2
  48:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = ENABLE;
  49:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  55              		.loc 1 49 0
  56 0016 0422     		movs	r2, #4
  40:Src/adc.c     ****   hadc1.Init.ScanConvMode = ADC_SCAN_ENABLE;
  57              		.loc 1 40 0
  58 0018 9860     		str	r0, [r3, #8]
  47:Src/adc.c     ****   hadc1.Init.DMAContinuousRequests = ENABLE;
  59              		.loc 1 47 0
  60 001a D961     		str	r1, [r3, #28]
  61              		.loc 1 49 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBfGHK3.s 			page 3


  62 001c 5A61     		str	r2, [r3, #20]
  41:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = ENABLE;
  63              		.loc 1 41 0
  64 001e 0121     		movs	r1, #1
  33:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig = {0};
  65              		.loc 1 33 0
  66 0020 0022     		movs	r2, #0
  50:Src/adc.c     ****   hadc1.Init.LowPowerAutoWait = DISABLE;
  51:Src/adc.c     ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
  52:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  67              		.loc 1 52 0
  68 0022 1846     		mov	r0, r3
  41:Src/adc.c     ****   hadc1.Init.ContinuousConvMode = ENABLE;
  69              		.loc 1 41 0
  70 0024 1961     		str	r1, [r3, #16]
  42:Src/adc.c     ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
  71              		.loc 1 42 0
  72 0026 5976     		strb	r1, [r3, #25]
  45:Src/adc.c     ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
  73              		.loc 1 45 0
  74 0028 9962     		str	r1, [r3, #40]
  48:Src/adc.c     ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
  75              		.loc 1 48 0
  76 002a 83F83010 		strb	r1, [r3, #48]
  43:Src/adc.c     ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
  77              		.loc 1 43 0
  78 002e 83F82020 		strb	r2, [r3, #32]
  33:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig = {0};
  79              		.loc 1 33 0
  80 0032 0192     		str	r2, [sp, #4]
  34:Src/adc.c     **** 
  81              		.loc 1 34 0
  82 0034 0492     		str	r2, [sp, #16]
  44:Src/adc.c     ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
  83              		.loc 1 44 0
  84 0036 DA62     		str	r2, [r3, #44]
  46:Src/adc.c     ****   hadc1.Init.NbrOfConversion = 2;
  85              		.loc 1 46 0
  86 0038 DA60     		str	r2, [r3, #12]
  50:Src/adc.c     ****   hadc1.Init.Overrun = ADC_OVR_DATA_OVERWRITTEN;
  87              		.loc 1 50 0
  88 003a 1A76     		strb	r2, [r3, #24]
  51:Src/adc.c     ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
  89              		.loc 1 51 0
  90 003c 5A63     		str	r2, [r3, #52]
  33:Src/adc.c     ****   ADC_ChannelConfTypeDef sConfig = {0};
  91              		.loc 1 33 0
  92 003e CDE90222 		strd	r2, r2, [sp, #8]
  34:Src/adc.c     **** 
  93              		.loc 1 34 0
  94 0042 CDE90522 		strd	r2, r2, [sp, #20]
  95 0046 CDE90722 		strd	r2, r2, [sp, #28]
  96 004a 0992     		str	r2, [sp, #36]
  97              		.loc 1 52 0
  98 004c FFF7FEFF 		bl	HAL_ADC_Init
  99              	.LVL0:
 100 0050 30BB     		cbnz	r0, .L20
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBfGHK3.s 			page 4


 101              	.L2:
  53:Src/adc.c     ****   {
  54:Src/adc.c     ****     Error_Handler();
  55:Src/adc.c     ****   }
  56:Src/adc.c     ****   /** Configure the ADC multi-mode 
  57:Src/adc.c     ****   */
  58:Src/adc.c     ****   multimode.Mode = ADC_MODE_INDEPENDENT;
 102              		.loc 1 58 0
 103 0052 0023     		movs	r3, #0
  59:Src/adc.c     ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 104              		.loc 1 59 0
 105 0054 01A9     		add	r1, sp, #4
 106 0056 1448     		ldr	r0, .L23
  58:Src/adc.c     ****   if (HAL_ADCEx_MultiModeConfigChannel(&hadc1, &multimode) != HAL_OK)
 107              		.loc 1 58 0
 108 0058 0193     		str	r3, [sp, #4]
 109              		.loc 1 59 0
 110 005a FFF7FEFF 		bl	HAL_ADCEx_MultiModeConfigChannel
 111              	.LVL1:
 112 005e E0B9     		cbnz	r0, .L21
 113              	.L3:
  60:Src/adc.c     ****   {
  61:Src/adc.c     ****     Error_Handler();
  62:Src/adc.c     ****   }
  63:Src/adc.c     ****   /** Configure Regular Channel 
  64:Src/adc.c     ****   */
  65:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_1;
  66:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
  67:Src/adc.c     ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 114              		.loc 1 67 0
 115 0060 0023     		movs	r3, #0
  65:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 116              		.loc 1 65 0
 117 0062 0122     		movs	r2, #1
  68:Src/adc.c     ****   sConfig.SamplingTime = ADC_SAMPLETIME_601CYCLES_5;
 118              		.loc 1 68 0
 119 0064 0724     		movs	r4, #7
  69:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
  70:Src/adc.c     ****   sConfig.Offset = 0;
  71:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 120              		.loc 1 71 0
 121 0066 04A9     		add	r1, sp, #16
 122 0068 0F48     		ldr	r0, .L23
  70:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 123              		.loc 1 70 0
 124 006a 0993     		str	r3, [sp, #36]
  66:Src/adc.c     ****   sConfig.SingleDiff = ADC_SINGLE_ENDED;
 125              		.loc 1 66 0
 126 006c CDE90422 		strd	r2, r2, [sp, #16]
  69:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 127              		.loc 1 69 0
 128 0070 CDE90733 		strd	r3, r3, [sp, #28]
  68:Src/adc.c     ****   sConfig.OffsetNumber = ADC_OFFSET_NONE;
 129              		.loc 1 68 0
 130 0074 0694     		str	r4, [sp, #24]
 131              		.loc 1 71 0
 132 0076 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBfGHK3.s 			page 5


 133              	.LVL2:
 134 007a 58B9     		cbnz	r0, .L22
 135              	.L4:
  72:Src/adc.c     ****   {
  73:Src/adc.c     ****     Error_Handler();
  74:Src/adc.c     ****   }
  75:Src/adc.c     ****   /** Configure Regular Channel 
  76:Src/adc.c     ****   */
  77:Src/adc.c     ****   sConfig.Channel = ADC_CHANNEL_2;
 136              		.loc 1 77 0
 137 007c 0223     		movs	r3, #2
  78:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_2;
  79:Src/adc.c     ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 138              		.loc 1 79 0
 139 007e 04A9     		add	r1, sp, #16
 140 0080 0948     		ldr	r0, .L23
  78:Src/adc.c     ****   sConfig.Rank = ADC_REGULAR_RANK_2;
 141              		.loc 1 78 0
 142 0082 CDE90433 		strd	r3, r3, [sp, #16]
 143              		.loc 1 79 0
 144 0086 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 145              	.LVL3:
 146 008a 08B1     		cbz	r0, .L1
  80:Src/adc.c     ****   {
  81:Src/adc.c     ****     Error_Handler();
 147              		.loc 1 81 0
 148 008c FFF7FEFF 		bl	Error_Handler
 149              	.LVL4:
 150              	.L1:
  82:Src/adc.c     ****   }
  83:Src/adc.c     **** 
  84:Src/adc.c     **** }
 151              		.loc 1 84 0
 152 0090 0AB0     		add	sp, sp, #40
 153              	.LCFI2:
 154              		.cfi_remember_state
 155              		.cfi_def_cfa_offset 8
 156              		@ sp needed
 157 0092 10BD     		pop	{r4, pc}
 158              	.L22:
 159              	.LCFI3:
 160              		.cfi_restore_state
  73:Src/adc.c     ****   }
 161              		.loc 1 73 0
 162 0094 FFF7FEFF 		bl	Error_Handler
 163              	.LVL5:
 164 0098 F0E7     		b	.L4
 165              	.L21:
  61:Src/adc.c     ****   }
 166              		.loc 1 61 0
 167 009a FFF7FEFF 		bl	Error_Handler
 168              	.LVL6:
 169 009e DFE7     		b	.L3
 170              	.L20:
  54:Src/adc.c     ****   }
 171              		.loc 1 54 0
 172 00a0 FFF7FEFF 		bl	Error_Handler
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBfGHK3.s 			page 6


 173              	.LVL7:
 174 00a4 D5E7     		b	.L2
 175              	.L24:
 176 00a6 00BF     		.align	2
 177              	.L23:
 178 00a8 00000000 		.word	hadc1
 179              		.cfi_endproc
 180              	.LFE123:
 182              		.section	.text.HAL_ADC_MspInit,"ax",%progbits
 183              		.align	1
 184              		.p2align 2,,3
 185              		.global	HAL_ADC_MspInit
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 189              		.fpu fpv4-sp-d16
 191              	HAL_ADC_MspInit:
 192              	.LFB124:
  85:Src/adc.c     **** 
  86:Src/adc.c     **** void HAL_ADC_MspInit(ADC_HandleTypeDef* adcHandle)
  87:Src/adc.c     **** {
 193              		.loc 1 87 0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 32
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              	.LVL8:
 198 0000 70B5     		push	{r4, r5, r6, lr}
 199              	.LCFI4:
 200              		.cfi_def_cfa_offset 16
 201              		.cfi_offset 4, -16
 202              		.cfi_offset 5, -12
 203              		.cfi_offset 6, -8
 204              		.cfi_offset 14, -4
  88:Src/adc.c     **** 
  89:Src/adc.c     ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  90:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 205              		.loc 1 90 0
 206 0002 0368     		ldr	r3, [r0]
  87:Src/adc.c     **** 
 207              		.loc 1 87 0
 208 0004 88B0     		sub	sp, sp, #32
 209              	.LCFI5:
 210              		.cfi_def_cfa_offset 48
  89:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 211              		.loc 1 89 0
 212 0006 0024     		movs	r4, #0
 213              		.loc 1 90 0
 214 0008 B3F1A04F 		cmp	r3, #1342177280
  89:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 215              		.loc 1 89 0
 216 000c CDE90344 		strd	r4, r4, [sp, #12]
 217 0010 CDE90544 		strd	r4, r4, [sp, #20]
 218 0014 0794     		str	r4, [sp, #28]
 219              		.loc 1 90 0
 220 0016 01D0     		beq	.L32
  91:Src/adc.c     ****   {
  92:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 0 */
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBfGHK3.s 			page 7


  93:Src/adc.c     **** 
  94:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 0 */
  95:Src/adc.c     ****     /* ADC1 clock enable */
  96:Src/adc.c     ****     __HAL_RCC_ADC12_CLK_ENABLE();
  97:Src/adc.c     ****   
  98:Src/adc.c     ****     __HAL_RCC_GPIOA_CLK_ENABLE();
  99:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 100:Src/adc.c     ****     PA0     ------> ADC1_IN1
 101:Src/adc.c     ****     PA1     ------> ADC1_IN2
 102:Src/adc.c     ****     PA3     ------> ADC1_IN4 
 103:Src/adc.c     ****     */
 104:Src/adc.c     ****     GPIO_InitStruct.Pin = ADC__O2_Pin|ADC__FPVOLT_Pin|GPIO_PIN_3;
 105:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 106:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 107:Src/adc.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 108:Src/adc.c     **** 
 109:Src/adc.c     ****     /* ADC1 DMA Init */
 110:Src/adc.c     ****     /* ADC1 Init */
 111:Src/adc.c     ****     hdma_adc1.Instance = DMA1_Channel1;
 112:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 113:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 114:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 115:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 116:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 117:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 118:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 119:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 120:Src/adc.c     ****     {
 121:Src/adc.c     ****       Error_Handler();
 122:Src/adc.c     ****     }
 123:Src/adc.c     **** 
 124:Src/adc.c     ****     __HAL_LINKDMA(adcHandle,DMA_Handle,hdma_adc1);
 125:Src/adc.c     **** 
 126:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspInit 1 */
 127:Src/adc.c     **** 
 128:Src/adc.c     ****   /* USER CODE END ADC1_MspInit 1 */
 129:Src/adc.c     ****   }
 130:Src/adc.c     **** }
 221              		.loc 1 130 0
 222 0018 08B0     		add	sp, sp, #32
 223              	.LCFI6:
 224              		.cfi_remember_state
 225              		.cfi_def_cfa_offset 16
 226              		@ sp needed
 227 001a 70BD     		pop	{r4, r5, r6, pc}
 228              	.L32:
 229              	.LCFI7:
 230              		.cfi_restore_state
 231              	.LBB2:
  96:Src/adc.c     ****   
 232              		.loc 1 96 0
 233 001c 03F17043 		add	r3, r3, #-268435456
 234 0020 03F50433 		add	r3, r3, #135168
 235              	.LBE2:
 111:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 236              		.loc 1 111 0
 237 0024 1B4D     		ldr	r5, .L34
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBfGHK3.s 			page 8


 238              	.LBB3:
  96:Src/adc.c     ****   
 239              		.loc 1 96 0
 240 0026 5A69     		ldr	r2, [r3, #20]
 241 0028 42F08052 		orr	r2, r2, #268435456
 242 002c 5A61     		str	r2, [r3, #20]
 243 002e 5A69     		ldr	r2, [r3, #20]
 244 0030 02F08052 		and	r2, r2, #268435456
 245 0034 0192     		str	r2, [sp, #4]
 246 0036 019A     		ldr	r2, [sp, #4]
 247              	.LBE3:
 248              	.LBB4:
  98:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 249              		.loc 1 98 0
 250 0038 5A69     		ldr	r2, [r3, #20]
 251 003a 42F40032 		orr	r2, r2, #131072
 252 003e 5A61     		str	r2, [r3, #20]
 253 0040 5B69     		ldr	r3, [r3, #20]
 254 0042 03F40033 		and	r3, r3, #131072
 255 0046 0293     		str	r3, [sp, #8]
 256              	.LBE4:
 104:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 257              		.loc 1 104 0
 258 0048 0B22     		movs	r2, #11
 105:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 259              		.loc 1 105 0
 260 004a 0323     		movs	r3, #3
 107:Src/adc.c     **** 
 261              		.loc 1 107 0
 262 004c 03A9     		add	r1, sp, #12
 263 004e 0646     		mov	r6, r0
 264              	.LBB5:
  98:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 265              		.loc 1 98 0
 266 0050 0298     		ldr	r0, [sp, #8]
 267              	.LVL9:
 268              	.LBE5:
 104:Src/adc.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 269              		.loc 1 104 0
 270 0052 0392     		str	r2, [sp, #12]
 107:Src/adc.c     **** 
 271              		.loc 1 107 0
 272 0054 4FF09040 		mov	r0, #1207959552
 105:Src/adc.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 273              		.loc 1 105 0
 274 0058 0493     		str	r3, [sp, #16]
 107:Src/adc.c     **** 
 275              		.loc 1 107 0
 276 005a FFF7FEFF 		bl	HAL_GPIO_Init
 277              	.LVL10:
 111:Src/adc.c     ****     hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 278              		.loc 1 111 0
 279 005e 0E4B     		ldr	r3, .L34+4
 280 0060 2B60     		str	r3, [r5]
 114:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 281              		.loc 1 114 0
 282 0062 8020     		movs	r0, #128
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBfGHK3.s 			page 9


 115:Src/adc.c     ****     hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 283              		.loc 1 115 0
 284 0064 4FF48071 		mov	r1, #256
 116:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 285              		.loc 1 116 0
 286 0068 4FF48062 		mov	r2, #1024
 117:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 287              		.loc 1 117 0
 288 006c 2023     		movs	r3, #32
 114:Src/adc.c     ****     hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 289              		.loc 1 114 0
 290 006e E860     		str	r0, [r5, #12]
 119:Src/adc.c     ****     {
 291              		.loc 1 119 0
 292 0070 2846     		mov	r0, r5
 112:Src/adc.c     ****     hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 293              		.loc 1 112 0
 294 0072 6C60     		str	r4, [r5, #4]
 113:Src/adc.c     ****     hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 295              		.loc 1 113 0
 296 0074 AC60     		str	r4, [r5, #8]
 118:Src/adc.c     ****     if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 297              		.loc 1 118 0
 298 0076 EC61     		str	r4, [r5, #28]
 116:Src/adc.c     ****     hdma_adc1.Init.Mode = DMA_CIRCULAR;
 299              		.loc 1 116 0
 300 0078 C5E90412 		strd	r1, r2, [r5, #16]
 117:Src/adc.c     ****     hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 301              		.loc 1 117 0
 302 007c AB61     		str	r3, [r5, #24]
 119:Src/adc.c     ****     {
 303              		.loc 1 119 0
 304 007e FFF7FEFF 		bl	HAL_DMA_Init
 305              	.LVL11:
 306 0082 18B9     		cbnz	r0, .L33
 307              	.L27:
 124:Src/adc.c     **** 
 308              		.loc 1 124 0
 309 0084 B563     		str	r5, [r6, #56]
 310 0086 6E62     		str	r6, [r5, #36]
 311              		.loc 1 130 0
 312 0088 08B0     		add	sp, sp, #32
 313              	.LCFI8:
 314              		.cfi_remember_state
 315              		.cfi_def_cfa_offset 16
 316              		@ sp needed
 317 008a 70BD     		pop	{r4, r5, r6, pc}
 318              	.LVL12:
 319              	.L33:
 320              	.LCFI9:
 321              		.cfi_restore_state
 121:Src/adc.c     ****     }
 322              		.loc 1 121 0
 323 008c FFF7FEFF 		bl	Error_Handler
 324              	.LVL13:
 325 0090 F8E7     		b	.L27
 326              	.L35:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBfGHK3.s 			page 10


 327 0092 00BF     		.align	2
 328              	.L34:
 329 0094 00000000 		.word	hdma_adc1
 330 0098 08000240 		.word	1073872904
 331              		.cfi_endproc
 332              	.LFE124:
 334              		.section	.text.HAL_ADC_MspDeInit,"ax",%progbits
 335              		.align	1
 336              		.p2align 2,,3
 337              		.global	HAL_ADC_MspDeInit
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 341              		.fpu fpv4-sp-d16
 343              	HAL_ADC_MspDeInit:
 344              	.LFB125:
 131:Src/adc.c     **** 
 132:Src/adc.c     **** void HAL_ADC_MspDeInit(ADC_HandleTypeDef* adcHandle)
 133:Src/adc.c     **** {
 345              		.loc 1 133 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              	.LVL14:
 134:Src/adc.c     **** 
 135:Src/adc.c     ****   if(adcHandle->Instance==ADC1)
 350              		.loc 1 135 0
 351 0000 0368     		ldr	r3, [r0]
 352 0002 B3F1A04F 		cmp	r3, #1342177280
 353 0006 00D0     		beq	.L41
 354 0008 7047     		bx	lr
 355              	.L41:
 136:Src/adc.c     ****   {
 137:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 0 */
 138:Src/adc.c     **** 
 139:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 0 */
 140:Src/adc.c     ****     /* Peripheral clock disable */
 141:Src/adc.c     ****     __HAL_RCC_ADC12_CLK_DISABLE();
 356              		.loc 1 141 0
 357 000a 084A     		ldr	r2, .L42
 133:Src/adc.c     **** 
 358              		.loc 1 133 0
 359 000c 10B5     		push	{r4, lr}
 360              	.LCFI10:
 361              		.cfi_def_cfa_offset 8
 362              		.cfi_offset 4, -8
 363              		.cfi_offset 14, -4
 364              		.loc 1 141 0
 365 000e 5369     		ldr	r3, [r2, #20]
 366 0010 0446     		mov	r4, r0
 367 0012 23F08053 		bic	r3, r3, #268435456
 142:Src/adc.c     ****   
 143:Src/adc.c     ****     /**ADC1 GPIO Configuration    
 144:Src/adc.c     ****     PA0     ------> ADC1_IN1
 145:Src/adc.c     ****     PA1     ------> ADC1_IN2
 146:Src/adc.c     ****     PA3     ------> ADC1_IN4 
 147:Src/adc.c     ****     */
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBfGHK3.s 			page 11


 148:Src/adc.c     ****     HAL_GPIO_DeInit(GPIOA, ADC__O2_Pin|ADC__FPVOLT_Pin|GPIO_PIN_3);
 368              		.loc 1 148 0
 369 0016 4FF09040 		mov	r0, #1207959552
 370              	.LVL15:
 141:Src/adc.c     ****   
 371              		.loc 1 141 0
 372 001a 5361     		str	r3, [r2, #20]
 373              		.loc 1 148 0
 374 001c 0B21     		movs	r1, #11
 375 001e FFF7FEFF 		bl	HAL_GPIO_DeInit
 376              	.LVL16:
 149:Src/adc.c     **** 
 150:Src/adc.c     ****     /* ADC1 DMA DeInit */
 151:Src/adc.c     ****     HAL_DMA_DeInit(adcHandle->DMA_Handle);
 377              		.loc 1 151 0
 378 0022 A06B     		ldr	r0, [r4, #56]
 152:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 153:Src/adc.c     **** 
 154:Src/adc.c     ****   /* USER CODE END ADC1_MspDeInit 1 */
 155:Src/adc.c     ****   }
 156:Src/adc.c     **** } 
 379              		.loc 1 156 0
 380 0024 BDE81040 		pop	{r4, lr}
 381              	.LCFI11:
 382              		.cfi_restore 14
 383              		.cfi_restore 4
 384              		.cfi_def_cfa_offset 0
 385              	.LVL17:
 151:Src/adc.c     ****   /* USER CODE BEGIN ADC1_MspDeInit 1 */
 386              		.loc 1 151 0
 387 0028 FFF7FEBF 		b	HAL_DMA_DeInit
 388              	.LVL18:
 389              	.L43:
 390              		.align	2
 391              	.L42:
 392 002c 00100240 		.word	1073876992
 393              		.cfi_endproc
 394              	.LFE125:
 396              		.comm	hdma_adc1,68,4
 397              		.comm	hadc1,80,4
 398              		.text
 399              	.Letext0:
 400              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 401              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 402              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 403              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 404              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 405              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 406              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 407              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 408              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 409              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 410              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 411              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 412              		.file 14 "Inc/adc.h"
 413              		.file 15 "Inc/main.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBfGHK3.s 			page 12


DEFINED SYMBOLS
                            *ABS*:0000000000000000 adc.c
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBfGHK3.s:18     .text.MX_ADC1_Init:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBfGHK3.s:26     .text.MX_ADC1_Init:0000000000000000 MX_ADC1_Init
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBfGHK3.s:178    .text.MX_ADC1_Init:00000000000000a8 $d
                            *COM*:0000000000000050 hadc1
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBfGHK3.s:183    .text.HAL_ADC_MspInit:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBfGHK3.s:191    .text.HAL_ADC_MspInit:0000000000000000 HAL_ADC_MspInit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBfGHK3.s:329    .text.HAL_ADC_MspInit:0000000000000094 $d
                            *COM*:0000000000000044 hdma_adc1
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBfGHK3.s:335    .text.HAL_ADC_MspDeInit:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBfGHK3.s:343    .text.HAL_ADC_MspDeInit:0000000000000000 HAL_ADC_MspDeInit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBfGHK3.s:392    .text.HAL_ADC_MspDeInit:000000000000002c $d

UNDEFINED SYMBOLS
HAL_ADC_Init
HAL_ADCEx_MultiModeConfigChannel
HAL_ADC_ConfigChannel
Error_Handler
HAL_GPIO_Init
HAL_DMA_Init
HAL_GPIO_DeInit
HAL_DMA_DeInit
