ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	_Error_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Error_Handler:
  26              	.LFB128:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 2


  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  39:Src/main.c    **** #include "main.h"
  40:Src/main.c    **** #include "stm32f3xx_hal.h"
  41:Src/main.c    **** #include "adc.h"
  42:Src/main.c    **** #include "dma.h"
  43:Src/main.c    **** #include "spi.h"
  44:Src/main.c    **** #include "tim.h"
  45:Src/main.c    **** #include "usart.h"
  46:Src/main.c    **** #include "gpio.h"
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN Includes */
  49:Src/main.c    **** #include <stdio.h>
  50:Src/main.c    **** #include <math.h>
  51:Src/main.c    **** 
  52:Src/main.c    **** #include "basic.h"		// original library
  53:Src/main.c    **** #include "u8g2.h"		// graphic display library
  54:Src/main.c    **** #include "u8x8_gpio_STM32F303.h"
  55:Src/main.c    **** #include "u8x8_byte_4wire_hw_spi.h"
  56:Src/main.c    **** 
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END Includes */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN PV */
  63:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  64:Src/main.c    **** u8g2_t u8g2; // a structure which will contain all the data for one display
  65:Src/main.c    **** 
  66:Src/main.c    **** // RPM bar graph parameter definition
  67:Src/main.c    **** #define	rpmbar_x		0
  68:Src/main.c    **** #define	rpmbar_y		0
  69:Src/main.c    **** #define	rpmbar_width	128
  70:Src/main.c    **** #define	rpmbar_height	14
  71:Src/main.c    **** #define	rpm_min			0
  72:Src/main.c    **** #define	rpm_max			9000
  73:Src/main.c    **** 
  74:Src/main.c    **** // measurements display parameter definition
  75:Src/main.c    **** #define	N_meas			6
  76:Src/main.c    **** #define	meas_x			0
  77:Src/main.c    **** #define	meas_y			16
  78:Src/main.c    **** #define	meas_x_offset	2
  79:Src/main.c    **** #define	meas_width1		70
  80:Src/main.c    **** #define	meas_width2		56
  81:Src/main.c    **** #define	meas_height		13
  82:Src/main.c    **** 
  83:Src/main.c    **** // indicators parameter definition
  84:Src/main.c    **** #define	N_idct			2
  85:Src/main.c    **** #define	idct_x			72
  86:Src/main.c    **** #define	idct_y			55
  87:Src/main.c    **** #define	idct_width		27
  88:Src/main.c    **** #define	idct_height		9
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    **** //  Fuel Pump Voltage dosplay parameter definition
  91:Src/main.c    **** #define	FP_x			0
  92:Src/main.c    **** #define	FP_y			52
  93:Src/main.c    **** #define	FP_height		14
  94:Src/main.c    **** #define	FP_volt_width	45
  95:Src/main.c    **** #define	FP_duty_width	70
  96:Src/main.c    **** 
  97:Src/main.c    **** // logo parameter definition
  98:Src/main.c    **** #define logo_width 48
  99:Src/main.c    **** #define logo_height 48
 100:Src/main.c    **** 
 101:Src/main.c    **** const unsigned char logo_bits[] = {
 102:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 103:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 104:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0x3F, 0x00,
 105:Src/main.c    ****   0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x1F, 0x00, 0x80, 0xFF, 0x07,
 106:Src/main.c    ****   0xE0, 0x01, 0x00, 0x80, 0x81, 0x07, 0xE0, 0x01, 0x00, 0x80, 0x81, 0x07,
 107:Src/main.c    ****   0xC0, 0xE1, 0x07, 0xC0, 0x80, 0x03, 0x00, 0xFC, 0x1F, 0xE0, 0x80, 0x03,
 108:Src/main.c    ****   0x00, 0xFE, 0x7F, 0x70, 0xC0, 0x01, 0x00, 0x0F, 0xFE, 0x39, 0xE0, 0x00,
 109:Src/main.c    ****   0x00, 0x07, 0xF8, 0x1F, 0xF0, 0x00, 0x00, 0x0E, 0xE0, 0x1F, 0x78, 0x00,
 110:Src/main.c    ****   0x00, 0x0C, 0xC0, 0xFF, 0x3F, 0x00, 0x00, 0x18, 0x00, 0xFF, 0x1F, 0x00,
 111:Src/main.c    ****   0x00, 0x38, 0xC0, 0xFF, 0x0F, 0x00, 0x00, 0x70, 0xE0, 0xF1, 0x03, 0x00,
 112:Src/main.c    ****   0x00, 0xE0, 0x78, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3F, 0xE0, 0x01, 0x00,
 113:Src/main.c    ****   0x00, 0x80, 0x1F, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00,
 114:Src/main.c    ****   0x00, 0x00, 0x1E, 0x7C, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00,
 115:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00,
 116:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 117:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 118:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4C, 0x1C, 0x00, 0x00, 0x00,
 119:Src/main.c    ****   0x00, 0x32, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x00, 0x18, 0x00,
 120:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFC, 0x39, 0x00, 0x00, 0x4E, 0xC6, 0xB8, 0x31, 0x00,
 121:Src/main.c    ****   0x00, 0x3E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x3C, 0xC6, 0x98, 0x31, 0x00,
 122:Src/main.c    ****   0x00, 0x0E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x4E, 0xCE, 0x99, 0x31, 0x00,
 123:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFD, 0x7B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 124:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 125:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 126:Src/main.c    ****   };
 127:Src/main.c    **** 
 128:Src/main.c    **** /*
 129:Src/main.c    **** #define logo_width 54
 130:Src/main.c    **** #define logo_height 48
 131:Src/main.c    **** 
 132:Src/main.c    **** static unsigned char logo_bits[] = {
 133:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0x0F,
 134:Src/main.c    ****   0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0xE0, 0xFF, 0xFF,
 135:Src/main.c    ****   0xFF, 0xFF, 0xFF, 0x01, 0xF8, 0x3F, 0x00, 0x00, 0xF0, 0xFF, 0x07, 0xF8,
 136:Src/main.c    ****   0x01, 0x00, 0x00, 0x70, 0xE0, 0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x80,
 137:Src/main.c    ****   0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00,
 138:Src/main.c    ****   0x38, 0x80, 0x07, 0x00, 0xF8, 0x3F, 0x00, 0x38, 0x80, 0x07, 0x00, 0xFE,
 139:Src/main.c    ****   0xFF, 0x00, 0x1C, 0xC0, 0x03, 0x80, 0xFF, 0xFF, 0x01, 0x0E, 0xC0, 0x01,
 140:Src/main.c    ****   0xC0, 0x07, 0xFC, 0x07, 0x07, 0xE0, 0x01, 0x80, 0x03, 0xF0, 0x9F, 0x03,
 141:Src/main.c    ****   0xF0, 0x00, 0x80, 0x03, 0xC0, 0xFF, 0x03, 0x78, 0x00, 0x00, 0x07, 0x80,
 142:Src/main.c    ****   0xFF, 0x01, 0x3C, 0x00, 0x00, 0x06, 0x00, 0xFE, 0x87, 0x3F, 0x00, 0x00,
 143:Src/main.c    ****   0x0E, 0x00, 0xF8, 0xFF, 0x1F, 0x00, 0x00, 0x1C, 0x00, 0xF8, 0xFF, 0x07,
 144:Src/main.c    ****   0x00, 0x00, 0x38, 0x00, 0xDE, 0xFF, 0x03, 0x00, 0x00, 0x70, 0x00, 0x0F,
 145:Src/main.c    ****   0x7E, 0x00, 0x00, 0x00, 0xE0, 0xC0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xC0,
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 4


 146:Src/main.c    ****   0xF1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x00, 0x7C, 0x00, 0x00,
 147:Src/main.c    ****   0x00, 0x00, 0x3F, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x1F,
 148:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x3C, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x78,
 149:Src/main.c    ****   0xE0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0x03, 0x00, 0x00, 0x00,
 150:Src/main.c    ****   0x00, 0xC0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00,
 151:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00,
 152:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x4E, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39,
 153:Src/main.c    ****   0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00,
 154:Src/main.c    ****   0x00, 0x7E, 0x3E, 0xC7, 0x3D, 0x1C, 0x00, 0x00, 0x6F, 0x3E, 0xC7, 0x7F,
 155:Src/main.c    ****   0x1C, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x73, 0x18, 0x00, 0x00, 0x07, 0x1C,
 156:Src/main.c    ****   0x86, 0x71, 0x18, 0x00, 0x00, 0x3E, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00,
 157:Src/main.c    ****   0x1F, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x71, 0x18,
 158:Src/main.c    ****   0x00, 0x00, 0x47, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x7F, 0x3E, 0xCF,
 159:Src/main.c    ****   0xFB, 0x3C, 0x00, 0x00, 0x3C, 0x3E, 0xCF, 0xFB, 0x3C, 0x00, 0x00, 0x00,
 160:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 161:Src/main.c    ****   };
 162:Src/main.c    **** */
 163:Src/main.c    **** 
 164:Src/main.c    **** uint16_t	rpm = 0;
 165:Src/main.c    **** uint16_t	speed = 240;
 166:Src/main.c    **** uint8_t		gear = 0;
 167:Src/main.c    **** double		MT[5] = {3.483, 2.015, 1.391, 1.000, 0.806};
 168:Src/main.c    **** 
 169:Src/main.c    **** /*
 170:Src/main.c    **** typedef struct {
 171:Src/main.c    **** 	unsigned char	name;
 172:Src/main.c    **** 	uint8_t			status;
 173:Src/main.c    **** } idct;
 174:Src/main.c    **** */
 175:Src/main.c    **** 
 176:Src/main.c    **** // variables for indicators
 177:Src/main.c    **** const unsigned char idct_name[N_idct][5] = { // length must be (text length + 1)
 178:Src/main.c    **** 		"CAN"	,
 179:Src/main.c    **** 		"O2FB"
 180:Src/main.c    **** };
 181:Src/main.c    **** 
 182:Src/main.c    **** const uint8_t	idct_status[N_idct] = {
 183:Src/main.c    **** 		1	,
 184:Src/main.c    **** 		0
 185:Src/main.c    **** };
 186:Src/main.c    **** 
 187:Src/main.c    **** 
 188:Src/main.c    **** // variables for measurement
 189:Src/main.c    **** const unsigned char meas_name[N_meas][7] = { // length must be (text length + 1)
 190:Src/main.c    **** 		"MAP"	,
 191:Src/main.c    **** 		"OILP"	,
 192:Src/main.c    **** 		"FPVOLT"	,
 193:Src/main.c    **** 		"ECT"	,
 194:Src/main.c    **** 		"OILT"	,
 195:Src/main.c    **** 		"O2"
 196:Src/main.c    **** };
 197:Src/main.c    **** 
 198:Src/main.c    **** const unsigned char meas_unit[N_meas][5] = {
 199:Src/main.c    **** 		"kpa"			,	// MAP
 200:Src/main.c    **** 		"kpa"			,	// OILP
 201:Src/main.c    **** 		"V  "     ,	// FuelPump Voltage
 202:Src/main.c    **** 		{176, 67, 0}	,	// ECT  degC...{176, 67, 0}
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 5


 203:Src/main.c    **** 		{176, 67, 0}	,	// OILT  degC...{176, 67, 0}
 204:Src/main.c    **** 		"V"					// O2
 205:Src/main.c    **** };
 206:Src/main.c    **** 
 207:Src/main.c    **** const uint8_t	meas_digit[N_meas] = {
 208:Src/main.c    **** 		3	,	// MAP
 209:Src/main.c    **** 		3	,	// OILP
 210:Src/main.c    **** 		3	,	// FuelPump Voltage
 211:Src/main.c    **** 		3	,	// ECT
 212:Src/main.c    **** 		3	,	// OILT
 213:Src/main.c    **** 		3		// O2
 214:Src/main.c    **** };
 215:Src/main.c    **** 
 216:Src/main.c    **** const uint8_t	meas_frac[N_meas] = {
 217:Src/main.c    **** 		2	,	// MAP
 218:Src/main.c    **** 		2	,	// OILP
 219:Src/main.c    **** 		1	,	// FuelPump Voltage
 220:Src/main.c    **** 		0	,	// ECT
 221:Src/main.c    **** 		0	,	// OILT
 222:Src/main.c    **** 		2		// O2
 223:Src/main.c    **** };
 224:Src/main.c    **** 
 225:Src/main.c    **** const uint8_t	meas_sign[N_meas] = {
 226:Src/main.c    **** 		1	,	// MAP
 227:Src/main.c    **** 		0	,	// OILP
 228:Src/main.c    **** 		0	,	// FuelPump Voltage
 229:Src/main.c    **** 		0	,	// ECT
 230:Src/main.c    **** 		0	,	// OILT
 231:Src/main.c    **** 		0		// O2
 232:Src/main.c    **** };
 233:Src/main.c    **** 
 234:Src/main.c    **** int16_t	meas_value[N_meas] = {
 235:Src/main.c    **** 		645	,	// FuelPump Voltage
 236:Src/main.c    **** 		105	,	// MAP
 237:Src/main.c    **** 		235	,	// OILP
 238:Src/main.c    **** 		89	,	// ECT
 239:Src/main.c    **** 		73	,	// OILT
 240:Src/main.c    **** 		143		// O2
 241:Src/main.c    **** };
 242:Src/main.c    **** 
 243:Src/main.c    **** // Fuel Pump Voltage
 244:Src/main.c    **** int16_t FP_volt = 330;
 245:Src/main.c    **** 
 246:Src/main.c    **** /* USER CODE END PV */
 247:Src/main.c    **** 
 248:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 249:Src/main.c    **** void SystemClock_Config(void);
 250:Src/main.c    **** 
 251:Src/main.c    **** /* USER CODE BEGIN PFP */
 252:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 253:Src/main.c    **** 
 254:Src/main.c    **** /* USER CODE END PFP */
 255:Src/main.c    **** 
 256:Src/main.c    **** /* USER CODE BEGIN 0 */
 257:Src/main.c    **** 
 258:Src/main.c    **** /* USER CODE END 0 */
 259:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 6


 260:Src/main.c    **** int main(void)
 261:Src/main.c    **** {
 262:Src/main.c    **** 
 263:Src/main.c    ****   /* USER CODE BEGIN 1 */
 264:Src/main.c    **** 
 265:Src/main.c    ****   /* USER CODE END 1 */
 266:Src/main.c    **** 
 267:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 268:Src/main.c    **** 
 269:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 270:Src/main.c    ****   HAL_Init();
 271:Src/main.c    **** 
 272:Src/main.c    ****   /* USER CODE BEGIN Init */
 273:Src/main.c    ****   uint8_t n;
 274:Src/main.c    ****   uint8_t x, y;
 275:Src/main.c    **** 
 276:Src/main.c    ****   uint16_t a = 0;
 277:Src/main.c    ****   uint16_t b = 0;
 278:Src/main.c    **** 
 279:Src/main.c    **** 
 280:Src/main.c    ****   /* USER CODE END Init */
 281:Src/main.c    **** 
 282:Src/main.c    ****   /* Configure the system clock */
 283:Src/main.c    ****   SystemClock_Config();
 284:Src/main.c    **** 
 285:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 286:Src/main.c    **** 
 287:Src/main.c    ****   /* USER CODE END SysInit */
 288:Src/main.c    **** 
 289:Src/main.c    ****   /* Initialize all configured peripherals */
 290:Src/main.c    ****   MX_GPIO_Init();
 291:Src/main.c    ****   MX_DMA_Init();
 292:Src/main.c    ****   MX_USART2_UART_Init();
 293:Src/main.c    ****   MX_TIM1_Init();
 294:Src/main.c    ****   MX_USART1_UART_Init();
 295:Src/main.c    ****   MX_SPI1_Init();
 296:Src/main.c    ****   MX_ADC1_Init();
 297:Src/main.c    **** 
 298:Src/main.c    ****   /* USER CODE BEGIN 2 */
 299:Src/main.c    **** 
 300:Src/main.c    ****   // ADC buffer definition
 301:Src/main.c    ****   enum{ ADC_BUFFER_LENGTH = 1024 };
 302:Src/main.c    ****   uint16_t g_ADCBuffer[ADC_BUFFER_LENGTH];
 303:Src/main.c    ****   memset(g_ADCBuffer, 0, sizeof(g_ADCBuffer));
 304:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, g_ADCBuffer, ADC_BUFFER_LENGTH);
 305:Src/main.c    **** 
 306:Src/main.c    ****   // OLED diaplay initialization
 307:Src/main.c    ****   u8g2_Setup_ssd1309_128x64_noname2_f(&u8g2, U8G2_R0, u8x8_byte_4wire_hw_spi, u8x8_gpio_and_delay_S
 308:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 309:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 310:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 311:Src/main.c    ****   u8g2_SetContrast(&u8g2, 128); // set contrast
 312:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 313:Src/main.c    **** 
 314:Src/main.c    ****   u8g2_ClearBuffer(&u8g2);
 315:Src/main.c    **** 
 316:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 7


 317:Src/main.c    ****   // draw opening
 318:Src/main.c    ****   u8g2_DrawXBMP(&u8g2, 40, 0, logo_width, logo_height, logo_bits );
 319:Src/main.c    **** 
 320:Src/main.c    ****   u8g2_SetFont(&u8g2, u8g2_font_5x7_tf);
 321:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 322:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.1a");
 323:Src/main.c    **** 
 324:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 325:Src/main.c    **** 
 326:Src/main.c    ****   HAL_Delay(2000);
 327:Src/main.c    **** 
 328:Src/main.c    ****   /* USER CODE END 2 */
 329:Src/main.c    **** 
 330:Src/main.c    ****   /* Infinite loop */
 331:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 332:Src/main.c    **** 
 333:Src/main.c    ****   u8g2_ClearBuffer(&u8g2);
 334:Src/main.c    **** 
 335:Src/main.c    **** 
 336:Src/main.c    ****   // draw measurements label & unit
 337:Src/main.c    ****   for( n=0; n<3; n++ ){
 338:Src/main.c    **** 	  x = meas_x;
 339:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 340:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width1, meas_height, meas_name[n], meas_unit[n]);
 341:Src/main.c    ****   }
 342:Src/main.c    ****   for( n=3; n<N_meas; n++ ){
 343:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 344:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 345:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width2, meas_height, meas_name[n], meas_unit[n]);
 346:Src/main.c    ****   }
 347:Src/main.c    **** 
 348:Src/main.c    **** 
 349:Src/main.c    ****   // draw indicators
 350:Src/main.c    ****   for( n=0; n<N_idct; n++ ){
 351:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
 352:Src/main.c    ****   }
 353:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 354:Src/main.c    **** 
 355:Src/main.c    ****   // Fuel Pump voltage & duty
 356:Src/main.c    ****   
 357:Src/main.c    ****   u8g2_SetFont(&u8g2, u8g2_font_5x7_tf);
 358:Src/main.c    ****   u8g2_DrawStr(&u8g2, FP_x, FP_y+12, "DUTY");
 359:Src/main.c    **** //  draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, 100, 3, 0, 0, meas_unit[1]);
 360:Src/main.c    ****   draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, meas_value[n], meas_digit[n], meas_frac[n
 361:Src/main.c    **** 
 362:Src/main.c    ****   // update display
 363:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 364:Src/main.c    **** 
 365:Src/main.c    **** 
 366:Src/main.c    ****   while (1)
 367:Src/main.c    ****   {
 368:Src/main.c    ****   /* USER CODE END WHILE */
 369:Src/main.c    **** 
 370:Src/main.c    ****   /* USER CODE BEGIN 3 */
 371:Src/main.c    **** 
 372:Src/main.c    **** 	  	// start of create dummy data for debug
 373:Src/main.c    **** 		if( rpm <= 8200 ){
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 8


 374:Src/main.c    **** 			  rpm = rpm + (int)(10*MT[gear]);
 375:Src/main.c    **** //			  rpm=rpm+10;
 376:Src/main.c    **** 		}else{
 377:Src/main.c    **** 			if( gear < 4 ){
 378:Src/main.c    **** 				gear++;
 379:Src/main.c    **** 				rpm = (double)speed / (0.002*60.0) * (MT[gear]*4.1);
 380:Src/main.c    **** 			}else{
 381:Src/main.c    **** 				gear = 0;
 382:Src/main.c    **** 				rpm = 1000;
 383:Src/main.c    **** 			}
 384:Src/main.c    **** 		}
 385:Src/main.c    **** 		speed = (double)rpm*0.002*60.0/MT[gear]/4.1;
 386:Src/main.c    **** 		meas_value[0] = speed; // speed
 387:Src/main.c    **** 
 388:Src/main.c    **** 		if( a >= 150){
 389:Src/main.c    **** 			a = 0;
 390:Src/main.c    **** 		}else{
 391:Src/main.c    **** 			a++;
 392:Src/main.c    **** 		}
 393:Src/main.c    **** 		for( n=1; n<=5; n++){
 394:Src/main.c    **** 			if( n==1 ){
 395:Src/main.c    **** 				meas_value[n] = a - 75;
 396:Src/main.c    **** 			}else{
 397:Src/main.c    **** 				meas_value[n] = a;
 398:Src/main.c    **** 			}
 399:Src/main.c    **** 		}
 400:Src/main.c    **** 
 401:Src/main.c    **** 	  	// end of create dummy data for debug
 402:Src/main.c    **** 
 403:Src/main.c    **** 
 404:Src/main.c    **** 		// read O2 sensor ADC output
 405:Src/main.c    **** 		meas_value[2] = (int16_t)(330 * (float)g_ADCBuffer[0]/255);
 406:Src/main.c    **** 		meas_value[5] = (int16_t)(330 * (float)g_ADCBuffer[0]/255);
 407:Src/main.c    **** 
 408:Src/main.c    **** 		// read Fuel Pump Voltage ADC output
 409:Src/main.c    **** 		FP_volt = (int16_t)(330*(float)g_ADCBuffer[0]/255);
 410:Src/main.c    **** 
 411:Src/main.c    **** 		// update Fuel Pump Voltage
 412:Src/main.c    **** //    draw_Value_xs(&u8g2, FP_x+FP_volt_width+2, FP_y, FP_duty_width, FP_height, 100, 3, 0, 0, "%")
 413:Src/main.c    **** 
 414:Src/main.c    **** 		// draw bar graph
 415:Src/main.c    **** 		draw_BarGraph(&u8g2, rpmbar_x, rpmbar_y, rpmbar_width, rpmbar_height, rpm, rpm_min, rpm_max);
 416:Src/main.c    **** 
 417:Src/main.c    **** 		// draw measurement data
 418:Src/main.c    **** 		for( n=0; n<3; n++ ){
 419:Src/main.c    **** 			x = meas_x;
 420:Src/main.c    **** 			y = (n % 3) * meas_height	+ meas_y;
 421:Src/main.c    **** 			draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac[n], me
 422:Src/main.c    **** 		}
 423:Src/main.c    **** 		for( n=3; n<N_meas; n++ ){
 424:Src/main.c    **** 			x = meas_width1 + meas_x + meas_x_offset;
 425:Src/main.c    **** 			y = (n % 3) * meas_height	+ meas_y;
 426:Src/main.c    **** 			draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac[n], me
 427:Src/main.c    **** 		}
 428:Src/main.c    **** 
 429:Src/main.c    **** 
 430:Src/main.c    **** 		// send buffer
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 9


 431:Src/main.c    **** 	    u8g2_SendBuffer(&u8g2);
 432:Src/main.c    **** 
 433:Src/main.c    ****   }
 434:Src/main.c    ****   /* USER CODE END 3 */
 435:Src/main.c    **** 
 436:Src/main.c    **** }
 437:Src/main.c    **** 
 438:Src/main.c    **** /** System Clock Configuration
 439:Src/main.c    **** */
 440:Src/main.c    **** void SystemClock_Config(void)
 441:Src/main.c    **** {
 442:Src/main.c    **** 
 443:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 444:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 445:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 446:Src/main.c    **** 
 447:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 448:Src/main.c    ****     */
 449:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 450:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 451:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 452:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 453:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 454:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 455:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 456:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 457:Src/main.c    ****   {
 458:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 459:Src/main.c    ****   }
 460:Src/main.c    **** 
 461:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 462:Src/main.c    ****     */
 463:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 464:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 465:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 466:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 467:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 468:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 469:Src/main.c    **** 
 470:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 471:Src/main.c    ****   {
 472:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 473:Src/main.c    ****   }
 474:Src/main.c    **** 
 475:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_TIM1;
 476:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 477:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 478:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 479:Src/main.c    ****   {
 480:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 481:Src/main.c    ****   }
 482:Src/main.c    **** 
 483:Src/main.c    ****     /**Configure the Systick interrupt time 
 484:Src/main.c    ****     */
 485:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 486:Src/main.c    **** 
 487:Src/main.c    ****     /**Configure the Systick 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 10


 488:Src/main.c    ****     */
 489:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 490:Src/main.c    **** 
 491:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 492:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 493:Src/main.c    **** }
 494:Src/main.c    **** 
 495:Src/main.c    **** /* USER CODE BEGIN 4 */
 496:Src/main.c    **** 
 497:Src/main.c    **** /* USER CODE END 4 */
 498:Src/main.c    **** 
 499:Src/main.c    **** /**
 500:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 501:Src/main.c    ****   * @param  None
 502:Src/main.c    ****   * @retval None
 503:Src/main.c    ****   */
 504:Src/main.c    **** void _Error_Handler(char * file, int line)
 505:Src/main.c    **** {
  28              		.loc 1 505 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.L2:
  36 0000 FEE7     		b	.L2
  37              		.cfi_endproc
  38              	.LFE128:
  40              		.section	.text.SystemClock_Config,"ax",%progbits
  41              		.align	1
  42              		.global	SystemClock_Config
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	SystemClock_Config:
  49              	.LFB127:
 441:Src/main.c    **** 
  50              		.loc 1 441 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 88
  53              		@ frame_needed = 0, uses_anonymous_args = 0
 441:Src/main.c    **** 
  54              		.loc 1 441 0
  55 0000 00B5     		push	{lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 14, -4
  59 0002 97B0     		sub	sp, sp, #92
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 96
 449:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
  62              		.loc 1 449 0
  63 0004 0123     		movs	r3, #1
  64 0006 0C93     		str	r3, [sp, #48]
 450:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 11


  65              		.loc 1 450 0
  66 0008 4FF4A022 		mov	r2, #327680
  67 000c 0D92     		str	r2, [sp, #52]
 451:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  68              		.loc 1 451 0
  69 000e 0022     		movs	r2, #0
  70 0010 0E92     		str	r2, [sp, #56]
 452:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  71              		.loc 1 452 0
  72 0012 1093     		str	r3, [sp, #64]
 453:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  73              		.loc 1 453 0
  74 0014 0223     		movs	r3, #2
  75 0016 1393     		str	r3, [sp, #76]
 454:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  76              		.loc 1 454 0
  77 0018 4FF48033 		mov	r3, #65536
  78 001c 1493     		str	r3, [sp, #80]
 455:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  79              		.loc 1 455 0
  80 001e 4FF4E013 		mov	r3, #1835008
  81 0022 1593     		str	r3, [sp, #84]
 456:Src/main.c    ****   {
  82              		.loc 1 456 0
  83 0024 0CA8     		add	r0, sp, #48
  84 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
  85              	.LVL1:
  86 002a 58BB     		cbnz	r0, .L8
 463:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  87              		.loc 1 463 0
  88 002c 0F23     		movs	r3, #15
  89 002e 0793     		str	r3, [sp, #28]
 465:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  90              		.loc 1 465 0
  91 0030 0221     		movs	r1, #2
  92 0032 0891     		str	r1, [sp, #32]
 466:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  93              		.loc 1 466 0
  94 0034 0023     		movs	r3, #0
  95 0036 0993     		str	r3, [sp, #36]
 467:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  96              		.loc 1 467 0
  97 0038 4FF48062 		mov	r2, #1024
  98 003c 0A92     		str	r2, [sp, #40]
 468:Src/main.c    **** 
  99              		.loc 1 468 0
 100 003e 0B93     		str	r3, [sp, #44]
 470:Src/main.c    ****   {
 101              		.loc 1 470 0
 102 0040 07A8     		add	r0, sp, #28
 103 0042 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 104              	.LVL2:
 105 0046 10BB     		cbnz	r0, .L9
 475:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 106              		.loc 1 475 0
 107 0048 41F20103 		movw	r3, #4097
 108 004c 0193     		str	r3, [sp, #4]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 12


 476:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 109              		.loc 1 476 0
 110 004e 0023     		movs	r3, #0
 111 0050 0393     		str	r3, [sp, #12]
 477:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 112              		.loc 1 477 0
 113 0052 0693     		str	r3, [sp, #24]
 478:Src/main.c    ****   {
 114              		.loc 1 478 0
 115 0054 01A8     		add	r0, sp, #4
 116 0056 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 117              	.LVL3:
 118 005a E8B9     		cbnz	r0, .L10
 485:Src/main.c    **** 
 119              		.loc 1 485 0
 120 005c FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 121              	.LVL4:
 122 0060 104B     		ldr	r3, .L11
 123 0062 A3FB0030 		umull	r3, r0, r3, r0
 124 0066 8009     		lsrs	r0, r0, #6
 125 0068 FFF7FEFF 		bl	HAL_SYSTICK_Config
 126              	.LVL5:
 489:Src/main.c    **** 
 127              		.loc 1 489 0
 128 006c 0420     		movs	r0, #4
 129 006e FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 130              	.LVL6:
 492:Src/main.c    **** }
 131              		.loc 1 492 0
 132 0072 0022     		movs	r2, #0
 133 0074 1146     		mov	r1, r2
 134 0076 4FF0FF30 		mov	r0, #-1
 135 007a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 136              	.LVL7:
 493:Src/main.c    **** 
 137              		.loc 1 493 0
 138 007e 17B0     		add	sp, sp, #92
 139              	.LCFI2:
 140              		.cfi_remember_state
 141              		.cfi_def_cfa_offset 4
 142              		@ sp needed
 143 0080 5DF804FB 		ldr	pc, [sp], #4
 144              	.L8:
 145              	.LCFI3:
 146              		.cfi_restore_state
 458:Src/main.c    ****   }
 147              		.loc 1 458 0
 148 0084 4FF4E571 		mov	r1, #458
 149 0088 0748     		ldr	r0, .L11+4
 150 008a FFF7FEFF 		bl	_Error_Handler
 151              	.LVL8:
 152              	.L9:
 472:Src/main.c    ****   }
 153              		.loc 1 472 0
 154 008e 4FF4EC71 		mov	r1, #472
 155 0092 0548     		ldr	r0, .L11+4
 156 0094 FFF7FEFF 		bl	_Error_Handler
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 13


 157              	.LVL9:
 158              	.L10:
 480:Src/main.c    ****   }
 159              		.loc 1 480 0
 160 0098 4FF4F071 		mov	r1, #480
 161 009c 0248     		ldr	r0, .L11+4
 162 009e FFF7FEFF 		bl	_Error_Handler
 163              	.LVL10:
 164              	.L12:
 165 00a2 00BF     		.align	2
 166              	.L11:
 167 00a4 D34D6210 		.word	274877907
 168 00a8 00000000 		.word	.LC0
 169              		.cfi_endproc
 170              	.LFE127:
 172              		.global	__aeabi_dmul
 173              		.global	__aeabi_d2iz
 174              		.global	__aeabi_ui2d
 175              		.global	__aeabi_ddiv
 176              		.global	__aeabi_d2uiz
 177              		.section	.text.main,"ax",%progbits
 178              		.align	1
 179              		.global	main
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu fpv4-sp-d16
 185              	main:
 186              	.LFB126:
 261:Src/main.c    **** 
 187              		.loc 1 261 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 2048
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 192              	.LCFI4:
 193              		.cfi_def_cfa_offset 20
 194              		.cfi_offset 4, -20
 195              		.cfi_offset 5, -16
 196              		.cfi_offset 6, -12
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 ADF61C0D 		subw	sp, sp, #2076
 200              	.LCFI5:
 201              		.cfi_def_cfa_offset 2096
 270:Src/main.c    **** 
 202              		.loc 1 270 0
 203 0006 FFF7FEFF 		bl	HAL_Init
 204              	.LVL11:
 283:Src/main.c    **** 
 205              		.loc 1 283 0
 206 000a FFF7FEFF 		bl	SystemClock_Config
 207              	.LVL12:
 290:Src/main.c    ****   MX_DMA_Init();
 208              		.loc 1 290 0
 209 000e FFF7FEFF 		bl	MX_GPIO_Init
 210              	.LVL13:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 14


 291:Src/main.c    ****   MX_USART2_UART_Init();
 211              		.loc 1 291 0
 212 0012 FFF7FEFF 		bl	MX_DMA_Init
 213              	.LVL14:
 292:Src/main.c    ****   MX_TIM1_Init();
 214              		.loc 1 292 0
 215 0016 FFF7FEFF 		bl	MX_USART2_UART_Init
 216              	.LVL15:
 293:Src/main.c    ****   MX_USART1_UART_Init();
 217              		.loc 1 293 0
 218 001a FFF7FEFF 		bl	MX_TIM1_Init
 219              	.LVL16:
 294:Src/main.c    ****   MX_SPI1_Init();
 220              		.loc 1 294 0
 221 001e FFF7FEFF 		bl	MX_USART1_UART_Init
 222              	.LVL17:
 295:Src/main.c    ****   MX_ADC1_Init();
 223              		.loc 1 295 0
 224 0022 FFF7FEFF 		bl	MX_SPI1_Init
 225              	.LVL18:
 296:Src/main.c    **** 
 226              		.loc 1 296 0
 227 0026 FFF7FEFF 		bl	MX_ADC1_Init
 228              	.LVL19:
 303:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, g_ADCBuffer, ADC_BUFFER_LENGTH);
 229              		.loc 1 303 0
 230 002a 4FF40062 		mov	r2, #2048
 231 002e 0021     		movs	r1, #0
 232 0030 06A8     		add	r0, sp, #24
 233 0032 FFF7FEFF 		bl	memset
 234              	.LVL20:
 304:Src/main.c    **** 
 235              		.loc 1 304 0
 236 0036 4FF48062 		mov	r2, #1024
 237 003a 06A9     		add	r1, sp, #24
 238 003c B848     		ldr	r0, .L38+16
 239 003e FFF7FEFF 		bl	HAL_ADC_Start_DMA
 240              	.LVL21:
 307:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 241              		.loc 1 307 0
 242 0042 B84C     		ldr	r4, .L38+20
 243 0044 B84B     		ldr	r3, .L38+24
 244 0046 B94A     		ldr	r2, .L38+28
 245 0048 B949     		ldr	r1, .L38+32
 246 004a 2046     		mov	r0, r4
 247 004c FFF7FEFF 		bl	u8g2_Setup_ssd1309_128x64_noname2_f
 248              	.LVL22:
 308:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 249              		.loc 1 308 0
 250 0050 0122     		movs	r2, #1
 251 0052 0821     		movs	r1, #8
 252 0054 B748     		ldr	r0, .L38+36
 253 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 254              	.LVL23:
 309:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 255              		.loc 1 309 0
 256 005a 2046     		mov	r0, r4
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 15


 257 005c FFF7FEFF 		bl	u8x8_InitDisplay
 258              	.LVL24:
 310:Src/main.c    ****   u8g2_SetContrast(&u8g2, 128); // set contrast
 259              		.loc 1 310 0
 260 0060 0021     		movs	r1, #0
 261 0062 2046     		mov	r0, r4
 262 0064 FFF7FEFF 		bl	u8x8_SetPowerSave
 263              	.LVL25:
 311:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 264              		.loc 1 311 0
 265 0068 8021     		movs	r1, #128
 266 006a 2046     		mov	r0, r4
 267 006c FFF7FEFF 		bl	u8x8_SetContrast
 268              	.LVL26:
 312:Src/main.c    **** 
 269              		.loc 1 312 0
 270 0070 2046     		mov	r0, r4
 271 0072 FFF7FEFF 		bl	u8g2_ClearDisplay
 272              	.LVL27:
 314:Src/main.c    **** 
 273              		.loc 1 314 0
 274 0076 2046     		mov	r0, r4
 275 0078 FFF7FEFF 		bl	u8g2_ClearBuffer
 276              	.LVL28:
 318:Src/main.c    **** 
 277              		.loc 1 318 0
 278 007c AE4B     		ldr	r3, .L38+40
 279 007e 0193     		str	r3, [sp, #4]
 280 0080 3023     		movs	r3, #48
 281 0082 0093     		str	r3, [sp]
 282 0084 0022     		movs	r2, #0
 283 0086 2821     		movs	r1, #40
 284 0088 2046     		mov	r0, r4
 285 008a FFF7FEFF 		bl	u8g2_DrawXBMP
 286              	.LVL29:
 320:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 287              		.loc 1 320 0
 288 008e AB49     		ldr	r1, .L38+44
 289 0090 2046     		mov	r0, r4
 290 0092 FFF7FEFF 		bl	u8g2_SetFont
 291              	.LVL30:
 321:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.1a");
 292              		.loc 1 321 0
 293 0096 AA4B     		ldr	r3, .L38+48
 294 0098 3722     		movs	r2, #55
 295 009a 1021     		movs	r1, #16
 296 009c 2046     		mov	r0, r4
 297 009e FFF7FEFF 		bl	u8g2_DrawStr
 298              	.LVL31:
 322:Src/main.c    **** 
 299              		.loc 1 322 0
 300 00a2 A84B     		ldr	r3, .L38+52
 301 00a4 4022     		movs	r2, #64
 302 00a6 2821     		movs	r1, #40
 303 00a8 2046     		mov	r0, r4
 304 00aa FFF7FEFF 		bl	u8g2_DrawStr
 305              	.LVL32:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 16


 324:Src/main.c    **** 
 306              		.loc 1 324 0
 307 00ae 2046     		mov	r0, r4
 308 00b0 FFF7FEFF 		bl	u8g2_SendBuffer
 309              	.LVL33:
 326:Src/main.c    **** 
 310              		.loc 1 326 0
 311 00b4 4FF4FA60 		mov	r0, #2000
 312 00b8 FFF7FEFF 		bl	HAL_Delay
 313              	.LVL34:
 333:Src/main.c    **** 
 314              		.loc 1 333 0
 315 00bc 2046     		mov	r0, r4
 316 00be FFF7FEFF 		bl	u8g2_ClearBuffer
 317              	.LVL35:
 337:Src/main.c    **** 	  x = meas_x;
 318              		.loc 1 337 0
 319 00c2 0024     		movs	r4, #0
 320 00c4 20E0     		b	.L14
 321              	.LVL36:
 322              	.L15:
 323              	.LBB2:
 339:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width1, meas_height, meas_name[n], meas_unit[n]);
 324              		.loc 1 339 0 discriminator 3
 325 00c6 A04B     		ldr	r3, .L38+56
 326 00c8 A3FB0423 		umull	r2, r3, r3, r4
 327 00cc 5B08     		lsrs	r3, r3, #1
 328 00ce 03EB4303 		add	r3, r3, r3, lsl #1
 329 00d2 E31A     		subs	r3, r4, r3
 330 00d4 03EB4302 		add	r2, r3, r3, lsl #1
 331 00d8 03EB8202 		add	r2, r3, r2, lsl #2
 332 00dc D2B2     		uxtb	r2, r2
 333 00de 1032     		adds	r2, r2, #16
 334              	.LVL37:
 340:Src/main.c    ****   }
 335              		.loc 1 340 0 discriminator 3
 336 00e0 C4EBC401 		rsb	r1, r4, r4, lsl #3
 337 00e4 994B     		ldr	r3, .L38+60
 338 00e6 0B44     		add	r3, r3, r1
 339 00e8 04EB8400 		add	r0, r4, r4, lsl #2
 340 00ec 9849     		ldr	r1, .L38+64
 341 00ee 0144     		add	r1, r1, r0
 342 00f0 0291     		str	r1, [sp, #8]
 343 00f2 0193     		str	r3, [sp, #4]
 344 00f4 0D23     		movs	r3, #13
 345 00f6 0093     		str	r3, [sp]
 346 00f8 4623     		movs	r3, #70
 347 00fa D2B2     		uxtb	r2, r2
 348 00fc 0021     		movs	r1, #0
 349 00fe 8948     		ldr	r0, .L38+20
 350 0100 FFF7FEFF 		bl	draw_MeasLabelUnit
 351              	.LVL38:
 352              	.LBE2:
 337:Src/main.c    **** 	  x = meas_x;
 353              		.loc 1 337 0 discriminator 3
 354 0104 0134     		adds	r4, r4, #1
 355              	.LVL39:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 17


 356 0106 E4B2     		uxtb	r4, r4
 357              	.LVL40:
 358              	.L14:
 337:Src/main.c    **** 	  x = meas_x;
 359              		.loc 1 337 0 is_stmt 0 discriminator 1
 360 0108 022C     		cmp	r4, #2
 361 010a DCD9     		bls	.L15
 342:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 362              		.loc 1 342 0 is_stmt 1
 363 010c 0324     		movs	r4, #3
 364              	.LVL41:
 365 010e 20E0     		b	.L16
 366              	.LVL42:
 367              	.L17:
 368              	.LBB3:
 344:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width2, meas_height, meas_name[n], meas_unit[n]);
 369              		.loc 1 344 0 discriminator 3
 370 0110 8D4B     		ldr	r3, .L38+56
 371 0112 A3FB0423 		umull	r2, r3, r3, r4
 372 0116 5B08     		lsrs	r3, r3, #1
 373 0118 03EB4303 		add	r3, r3, r3, lsl #1
 374 011c E31A     		subs	r3, r4, r3
 375 011e 03EB4302 		add	r2, r3, r3, lsl #1
 376 0122 03EB8202 		add	r2, r3, r2, lsl #2
 377 0126 D2B2     		uxtb	r2, r2
 378 0128 1032     		adds	r2, r2, #16
 379              	.LVL43:
 345:Src/main.c    ****   }
 380              		.loc 1 345 0 discriminator 3
 381 012a C4EBC401 		rsb	r1, r4, r4, lsl #3
 382 012e 874B     		ldr	r3, .L38+60
 383 0130 0B44     		add	r3, r3, r1
 384 0132 04EB8400 		add	r0, r4, r4, lsl #2
 385 0136 8649     		ldr	r1, .L38+64
 386 0138 0144     		add	r1, r1, r0
 387 013a 0291     		str	r1, [sp, #8]
 388 013c 0193     		str	r3, [sp, #4]
 389 013e 0D23     		movs	r3, #13
 390 0140 0093     		str	r3, [sp]
 391 0142 3823     		movs	r3, #56
 392 0144 D2B2     		uxtb	r2, r2
 393 0146 4821     		movs	r1, #72
 394 0148 7648     		ldr	r0, .L38+20
 395 014a FFF7FEFF 		bl	draw_MeasLabelUnit
 396              	.LVL44:
 397              	.LBE3:
 342:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 398              		.loc 1 342 0 discriminator 3
 399 014e 0134     		adds	r4, r4, #1
 400              	.LVL45:
 401 0150 E4B2     		uxtb	r4, r4
 402              	.LVL46:
 403              	.L16:
 342:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 404              		.loc 1 342 0 is_stmt 0 discriminator 1
 405 0152 052C     		cmp	r4, #5
 406 0154 DCD9     		bls	.L17
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 18


 350:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
 407              		.loc 1 350 0 is_stmt 1
 408 0156 0024     		movs	r4, #0
 409              	.LVL47:
 410              	.L18:
 350:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
 411              		.loc 1 350 0 is_stmt 0 discriminator 1
 412 0158 012C     		cmp	r4, #1
 413 015a 16D8     		bhi	.L35
 414              	.LBB4:
 351:Src/main.c    ****   }
 415              		.loc 1 351 0 is_stmt 1 discriminator 3
 416 015c C4EBC401 		rsb	r1, r4, r4, lsl #3
 417 0160 04EB8101 		add	r1, r4, r1, lsl #2
 418 0164 7B4B     		ldr	r3, .L38+68
 419 0166 1A5D     		ldrb	r2, [r3, r4]	@ zero_extendqisi2
 420 0168 04EB8400 		add	r0, r4, r4, lsl #2
 421 016c 7A4B     		ldr	r3, .L38+72
 422 016e 0344     		add	r3, r3, r0
 423 0170 0293     		str	r3, [sp, #8]
 424 0172 0192     		str	r2, [sp, #4]
 425 0174 0923     		movs	r3, #9
 426 0176 0093     		str	r3, [sp]
 427 0178 1B23     		movs	r3, #27
 428 017a 3722     		movs	r2, #55
 429 017c 4831     		adds	r1, r1, #72
 430 017e 6948     		ldr	r0, .L38+20
 431 0180 FFF7FEFF 		bl	draw_IndicatorBox
 432              	.LVL48:
 433              	.LBE4:
 350:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
 434              		.loc 1 350 0 discriminator 3
 435 0184 0134     		adds	r4, r4, #1
 436              	.LVL49:
 437 0186 E4B2     		uxtb	r4, r4
 438              	.LVL50:
 439 0188 E6E7     		b	.L18
 440              	.L35:
 353:Src/main.c    **** 
 441              		.loc 1 353 0
 442 018a 664D     		ldr	r5, .L38+20
 443 018c 2846     		mov	r0, r5
 444 018e FFF7FEFF 		bl	u8g2_SendBuffer
 445              	.LVL51:
 357:Src/main.c    ****   u8g2_DrawStr(&u8g2, FP_x, FP_y+12, "DUTY");
 446              		.loc 1 357 0
 447 0192 6A49     		ldr	r1, .L38+44
 448 0194 2846     		mov	r0, r5
 449 0196 FFF7FEFF 		bl	u8g2_SetFont
 450              	.LVL52:
 358:Src/main.c    **** //  draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, 100, 3, 0, 0, meas_unit[1]);
 451              		.loc 1 358 0
 452 019a 704B     		ldr	r3, .L38+76
 453 019c 4022     		movs	r2, #64
 454 019e 0021     		movs	r1, #0
 455 01a0 2846     		mov	r0, r5
 456 01a2 FFF7FEFF 		bl	u8g2_DrawStr
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 19


 457              	.LVL53:
 360:Src/main.c    **** 
 458              		.loc 1 360 0
 459 01a6 6E4B     		ldr	r3, .L38+80
 460 01a8 33F91420 		ldrsh	r2, [r3, r4, lsl #1]
 461 01ac 6D4B     		ldr	r3, .L38+84
 462 01ae 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 463 01b0 6D4B     		ldr	r3, .L38+88
 464 01b2 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 465 01b4 6D4B     		ldr	r3, .L38+92
 466 01b6 1E5D     		ldrb	r6, [r3, r4]	@ zero_extendqisi2
 467 01b8 04EB8404 		add	r4, r4, r4, lsl #2
 468              	.LVL54:
 469 01bc 644B     		ldr	r3, .L38+64
 470 01be 1C44     		add	r4, r4, r3
 471 01c0 0594     		str	r4, [sp, #20]
 472 01c2 0496     		str	r6, [sp, #16]
 473 01c4 0390     		str	r0, [sp, #12]
 474 01c6 0291     		str	r1, [sp, #8]
 475 01c8 0192     		str	r2, [sp, #4]
 476 01ca 0E23     		movs	r3, #14
 477 01cc 0093     		str	r3, [sp]
 478 01ce 4623     		movs	r3, #70
 479 01d0 3422     		movs	r2, #52
 480 01d2 0021     		movs	r1, #0
 481 01d4 2846     		mov	r0, r5
 482 01d6 FFF7FEFF 		bl	draw_Value
 483              	.LVL55:
 363:Src/main.c    **** 
 484              		.loc 1 363 0
 485 01da 2846     		mov	r0, r5
 486 01dc FFF7FEFF 		bl	u8g2_SendBuffer
 487              	.LVL56:
 276:Src/main.c    ****   uint16_t b = 0;
 488              		.loc 1 276 0
 489 01e0 0025     		movs	r5, #0
 490 01e2 01E1     		b	.L32
 491              	.LVL57:
 492              	.L20:
 493              	.LBB5:
 377:Src/main.c    **** 				gear++;
 494              		.loc 1 377 0
 495 01e4 624B     		ldr	r3, .L38+96
 496 01e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 497 01e8 032B     		cmp	r3, #3
 498 01ea 23D8     		bhi	.L22
 378:Src/main.c    **** 				rpm = (double)speed / (0.002*60.0) * (MT[gear]*4.1);
 499              		.loc 1 378 0
 500 01ec 0133     		adds	r3, r3, #1
 501 01ee DCB2     		uxtb	r4, r3
 502 01f0 5F4B     		ldr	r3, .L38+96
 503 01f2 1C70     		strb	r4, [r3]
 379:Src/main.c    **** 			}else{
 504              		.loc 1 379 0
 505 01f4 5F4B     		ldr	r3, .L38+100
 506 01f6 1888     		ldrh	r0, [r3]
 507 01f8 FFF7FEFF 		bl	__aeabi_ui2d
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 20


 508              	.LVL58:
 509 01fc 44A3     		adr	r3, .L38
 510 01fe D3E90023 		ldrd	r2, [r3]
 511 0202 FFF7FEFF 		bl	__aeabi_ddiv
 512              	.LVL59:
 513 0206 0646     		mov	r6, r0
 514 0208 0F46     		mov	r7, r1
 515 020a 5B4B     		ldr	r3, .L38+104
 516 020c 03EBC404 		add	r4, r3, r4, lsl #3
 517 0210 41A3     		adr	r3, .L38+8
 518 0212 D3E90023 		ldrd	r2, [r3]
 519 0216 D4E90001 		ldrd	r0, [r4]
 520 021a FFF7FEFF 		bl	__aeabi_dmul
 521              	.LVL60:
 522 021e 0246     		mov	r2, r0
 523 0220 0B46     		mov	r3, r1
 524 0222 3046     		mov	r0, r6
 525 0224 3946     		mov	r1, r7
 526 0226 FFF7FEFF 		bl	__aeabi_dmul
 527              	.LVL61:
 528 022a FFF7FEFF 		bl	__aeabi_d2uiz
 529              	.LVL62:
 530 022e 534B     		ldr	r3, .L38+108
 531 0230 1880     		strh	r0, [r3]	@ movhi
 532 0232 F0E0     		b	.L21
 533              	.L22:
 381:Src/main.c    **** 				rpm = 1000;
 534              		.loc 1 381 0
 535 0234 4E4B     		ldr	r3, .L38+96
 536 0236 0022     		movs	r2, #0
 537 0238 1A70     		strb	r2, [r3]
 382:Src/main.c    **** 			}
 538              		.loc 1 382 0
 539 023a 504B     		ldr	r3, .L38+108
 540 023c 4FF47A72 		mov	r2, #1000
 541 0240 1A80     		strh	r2, [r3]	@ movhi
 542 0242 E8E0     		b	.L21
 543              	.L33:
 389:Src/main.c    **** 		}else{
 544              		.loc 1 389 0
 545 0244 0025     		movs	r5, #0
 546              	.LVL63:
 547 0246 0EE1     		b	.L23
 548              	.LVL64:
 549              	.L37:
 395:Src/main.c    **** 			}else{
 550              		.loc 1 395 0
 551 0248 A5F14B02 		sub	r2, r5, #75
 552 024c 4449     		ldr	r1, .L38+80
 553 024e 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 554              	.L26:
 393:Src/main.c    **** 			if( n==1 ){
 555              		.loc 1 393 0 discriminator 2
 556 0252 0133     		adds	r3, r3, #1
 557              	.LVL65:
 558 0254 DBB2     		uxtb	r3, r3
 559              	.LVL66:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 21


 560              	.L24:
 393:Src/main.c    **** 			if( n==1 ){
 561              		.loc 1 393 0 is_stmt 0 discriminator 1
 562 0256 052B     		cmp	r3, #5
 563 0258 05D8     		bhi	.L36
 394:Src/main.c    **** 				meas_value[n] = a - 75;
 564              		.loc 1 394 0 is_stmt 1
 565 025a 012B     		cmp	r3, #1
 566 025c F4D0     		beq	.L37
 397:Src/main.c    **** 			}
 567              		.loc 1 397 0
 568 025e 404A     		ldr	r2, .L38+80
 569 0260 22F81350 		strh	r5, [r2, r3, lsl #1]	@ movhi
 570 0264 F5E7     		b	.L26
 571              	.L36:
 405:Src/main.c    **** 		meas_value[5] = (int16_t)(330 * (float)g_ADCBuffer[0]/255);
 572              		.loc 1 405 0
 573 0266 BDF81830 		ldrh	r3, [sp, #24]
 574              	.LVL67:
 575 026a 07EE103A 		vmov	s14, r3	@ int
 576 026e B8EE477A 		vcvt.f32.u32	s14, s14
 577 0272 DFED437A 		vldr.32	s15, .L38+112
 578 0276 27EE277A 		vmul.f32	s14, s14, s15
 579 027a DFED426A 		vldr.32	s13, .L38+116
 580 027e C7EE267A 		vdiv.f32	s15, s14, s13
 581 0282 FDEEE77A 		vcvt.s32.f32	s15, s15
 582 0286 17EE903A 		vmov	r3, s15	@ int
 583 028a 1BB2     		sxth	r3, r3
 584 028c 344A     		ldr	r2, .L38+80
 585 028e 9380     		strh	r3, [r2, #4]	@ movhi
 406:Src/main.c    **** 
 586              		.loc 1 406 0
 587 0290 5381     		strh	r3, [r2, #10]	@ movhi
 409:Src/main.c    **** 
 588              		.loc 1 409 0
 589 0292 3D4A     		ldr	r2, .L38+120
 590 0294 1380     		strh	r3, [r2]	@ movhi
 415:Src/main.c    **** 
 591              		.loc 1 415 0
 592 0296 42F22833 		movw	r3, #9000
 593 029a 0393     		str	r3, [sp, #12]
 594 029c 0024     		movs	r4, #0
 595 029e 0294     		str	r4, [sp, #8]
 596 02a0 0196     		str	r6, [sp, #4]
 597 02a2 0E23     		movs	r3, #14
 598 02a4 0093     		str	r3, [sp]
 599 02a6 8023     		movs	r3, #128
 600 02a8 2246     		mov	r2, r4
 601 02aa 2146     		mov	r1, r4
 602 02ac 1D48     		ldr	r0, .L38+20
 603 02ae FFF7FEFF 		bl	draw_BarGraph
 604              	.LVL68:
 418:Src/main.c    **** 			x = meas_x;
 605              		.loc 1 418 0
 606 02b2 28E0     		b	.L28
 607              	.LVL69:
 608              	.L29:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 22


 420:Src/main.c    **** 			draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac[n], me
 609              		.loc 1 420 0 discriminator 3
 610 02b4 244B     		ldr	r3, .L38+56
 611 02b6 A3FB0423 		umull	r2, r3, r3, r4
 612 02ba 5B08     		lsrs	r3, r3, #1
 613 02bc 03EB4303 		add	r3, r3, r3, lsl #1
 614 02c0 E31A     		subs	r3, r4, r3
 615 02c2 03EB4302 		add	r2, r3, r3, lsl #1
 616 02c6 03EB8202 		add	r2, r3, r2, lsl #2
 617 02ca D2B2     		uxtb	r2, r2
 618 02cc 1032     		adds	r2, r2, #16
 619              	.LVL70:
 421:Src/main.c    **** 		}
 620              		.loc 1 421 0 discriminator 3
 621 02ce 244B     		ldr	r3, .L38+80
 622 02d0 33F91410 		ldrsh	r1, [r3, r4, lsl #1]
 623 02d4 234B     		ldr	r3, .L38+84
 624 02d6 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 625 02d8 234B     		ldr	r3, .L38+88
 626 02da 1E5D     		ldrb	r6, [r3, r4]	@ zero_extendqisi2
 627 02dc 234B     		ldr	r3, .L38+92
 628 02de 1F5D     		ldrb	r7, [r3, r4]	@ zero_extendqisi2
 629 02e0 04EB840C 		add	ip, r4, r4, lsl #2
 630 02e4 1A4B     		ldr	r3, .L38+64
 631 02e6 6344     		add	r3, r3, ip
 632 02e8 0593     		str	r3, [sp, #20]
 633 02ea 0497     		str	r7, [sp, #16]
 634 02ec 0396     		str	r6, [sp, #12]
 635 02ee 0290     		str	r0, [sp, #8]
 636 02f0 0191     		str	r1, [sp, #4]
 637 02f2 0D23     		movs	r3, #13
 638 02f4 0093     		str	r3, [sp]
 639 02f6 4623     		movs	r3, #70
 640 02f8 D2B2     		uxtb	r2, r2
 641 02fa 0021     		movs	r1, #0
 642 02fc 0948     		ldr	r0, .L38+20
 643 02fe FFF7FEFF 		bl	draw_Value
 644              	.LVL71:
 418:Src/main.c    **** 			x = meas_x;
 645              		.loc 1 418 0 discriminator 3
 646 0302 0134     		adds	r4, r4, #1
 647              	.LVL72:
 648 0304 E4B2     		uxtb	r4, r4
 649              	.LVL73:
 650              	.L28:
 418:Src/main.c    **** 			x = meas_x;
 651              		.loc 1 418 0 is_stmt 0 discriminator 1
 652 0306 022C     		cmp	r4, #2
 653 0308 D4D9     		bls	.L29
 423:Src/main.c    **** 			x = meas_width1 + meas_x + meas_x_offset;
 654              		.loc 1 423 0 is_stmt 1
 655 030a 0324     		movs	r4, #3
 656              	.LVL74:
 657 030c 67E0     		b	.L30
 658              	.L39:
 659 030e 00BF     		.align	3
 660              	.L38:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 23


 661 0310 B81E85EB 		.word	3951369912
 662 0314 51B8BE3F 		.word	1069463633
 663 0318 66666666 		.word	1717986918
 664 031c 66661040 		.word	1074816614
 665 0320 00000000 		.word	hadc1
 666 0324 00000000 		.word	u8g2
 667 0328 00000000 		.word	u8x8_gpio_and_delay_STM32F303
 668 032c 00000000 		.word	u8x8_byte_4wire_hw_spi
 669 0330 00000000 		.word	u8g2_cb_r0
 670 0334 00040048 		.word	1207960576
 671 0338 00000000 		.word	.LANCHOR0
 672 033c 00000000 		.word	u8g2_font_5x7_tf
 673 0340 00000000 		.word	.LC1
 674 0344 18000000 		.word	.LC2
 675 0348 ABAAAAAA 		.word	-1431655765
 676 034c 00000000 		.word	.LANCHOR1
 677 0350 00000000 		.word	.LANCHOR2
 678 0354 00000000 		.word	.LANCHOR3
 679 0358 00000000 		.word	.LANCHOR4
 680 035c 24000000 		.word	.LC3
 681 0360 00000000 		.word	.LANCHOR5
 682 0364 00000000 		.word	.LANCHOR6
 683 0368 00000000 		.word	.LANCHOR7
 684 036c 00000000 		.word	.LANCHOR8
 685 0370 00000000 		.word	.LANCHOR11
 686 0374 00000000 		.word	.LANCHOR12
 687 0378 00000000 		.word	.LANCHOR10
 688 037c 00000000 		.word	.LANCHOR9
 689 0380 0000A543 		.word	1134886912
 690 0384 00007F43 		.word	1132396544
 691 0388 00000000 		.word	.LANCHOR13
 692              	.LVL75:
 693              	.L31:
 425:Src/main.c    **** 			draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac[n], me
 694              		.loc 1 425 0 discriminator 3
 695 038c 3C4A     		ldr	r2, .L40+16
 696 038e A2FB0432 		umull	r3, r2, r2, r4
 697 0392 5208     		lsrs	r2, r2, #1
 698 0394 02EB4202 		add	r2, r2, r2, lsl #1
 699 0398 A21A     		subs	r2, r4, r2
 700 039a 02EB4203 		add	r3, r2, r2, lsl #1
 701 039e 02EB8302 		add	r2, r2, r3, lsl #2
 702 03a2 D2B2     		uxtb	r2, r2
 703 03a4 1032     		adds	r2, r2, #16
 704              	.LVL76:
 426:Src/main.c    **** 		}
 705              		.loc 1 426 0 discriminator 3
 706 03a6 374B     		ldr	r3, .L40+20
 707 03a8 33F91410 		ldrsh	r1, [r3, r4, lsl #1]
 708 03ac 364B     		ldr	r3, .L40+24
 709 03ae 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 710 03b0 364B     		ldr	r3, .L40+28
 711 03b2 1E5D     		ldrb	r6, [r3, r4]	@ zero_extendqisi2
 712 03b4 364B     		ldr	r3, .L40+32
 713 03b6 1F5D     		ldrb	r7, [r3, r4]	@ zero_extendqisi2
 714 03b8 04EB840C 		add	ip, r4, r4, lsl #2
 715 03bc 354B     		ldr	r3, .L40+36
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 24


 716 03be 6344     		add	r3, r3, ip
 717 03c0 0593     		str	r3, [sp, #20]
 718 03c2 0497     		str	r7, [sp, #16]
 719 03c4 0396     		str	r6, [sp, #12]
 720 03c6 0290     		str	r0, [sp, #8]
 721 03c8 0191     		str	r1, [sp, #4]
 722 03ca 0D23     		movs	r3, #13
 723 03cc 0093     		str	r3, [sp]
 724 03ce 3823     		movs	r3, #56
 725 03d0 D2B2     		uxtb	r2, r2
 726 03d2 4821     		movs	r1, #72
 727 03d4 3048     		ldr	r0, .L40+40
 728 03d6 FFF7FEFF 		bl	draw_Value
 729              	.LVL77:
 423:Src/main.c    **** 			x = meas_width1 + meas_x + meas_x_offset;
 730              		.loc 1 423 0 discriminator 3
 731 03da 0134     		adds	r4, r4, #1
 732              	.LVL78:
 733 03dc E4B2     		uxtb	r4, r4
 734              	.LVL79:
 735              	.L30:
 423:Src/main.c    **** 			x = meas_width1 + meas_x + meas_x_offset;
 736              		.loc 1 423 0 is_stmt 0 discriminator 1
 737 03de 052C     		cmp	r4, #5
 738 03e0 D4D9     		bls	.L31
 431:Src/main.c    **** 
 739              		.loc 1 431 0 is_stmt 1
 740 03e2 2D48     		ldr	r0, .L40+40
 741 03e4 FFF7FEFF 		bl	u8g2_SendBuffer
 742              	.LVL80:
 743              	.L32:
 373:Src/main.c    **** 			  rpm = rpm + (int)(10*MT[gear]);
 744              		.loc 1 373 0
 745 03e8 2C4B     		ldr	r3, .L40+44
 746 03ea 1C88     		ldrh	r4, [r3]
 747 03ec 42F20803 		movw	r3, #8200
 748 03f0 9C42     		cmp	r4, r3
 749 03f2 3FF6F7AE 		bhi	.L20
 374:Src/main.c    **** //			  rpm=rpm+10;
 750              		.loc 1 374 0
 751 03f6 2A4B     		ldr	r3, .L40+48
 752 03f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 753 03fa 2A49     		ldr	r1, .L40+52
 754 03fc 01EBC301 		add	r1, r1, r3, lsl #3
 755 0400 0022     		movs	r2, #0
 756 0402 294B     		ldr	r3, .L40+56
 757 0404 D1E90001 		ldrd	r0, [r1]
 758 0408 FFF7FEFF 		bl	__aeabi_dmul
 759              	.LVL81:
 760 040c FFF7FEFF 		bl	__aeabi_d2iz
 761              	.LVL82:
 762 0410 2044     		add	r0, r0, r4
 763 0412 224B     		ldr	r3, .L40+44
 764 0414 1880     		strh	r0, [r3]	@ movhi
 765              	.L21:
 385:Src/main.c    **** 		meas_value[0] = speed; // speed
 766              		.loc 1 385 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 25


 767 0416 214B     		ldr	r3, .L40+44
 768 0418 1E88     		ldrh	r6, [r3]
 769 041a 3046     		mov	r0, r6
 770 041c FFF7FEFF 		bl	__aeabi_ui2d
 771              	.LVL83:
 772 0420 13A3     		adr	r3, .L40
 773 0422 D3E90023 		ldrd	r2, [r3]
 774 0426 FFF7FEFF 		bl	__aeabi_dmul
 775              	.LVL84:
 776 042a 0022     		movs	r2, #0
 777 042c 1F4B     		ldr	r3, .L40+60
 778 042e FFF7FEFF 		bl	__aeabi_dmul
 779              	.LVL85:
 780 0432 1B4B     		ldr	r3, .L40+48
 781 0434 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 782 0436 1B4B     		ldr	r3, .L40+52
 783 0438 03EBC203 		add	r3, r3, r2, lsl #3
 784 043c D3E90023 		ldrd	r2, [r3]
 785 0440 FFF7FEFF 		bl	__aeabi_ddiv
 786              	.LVL86:
 787 0444 0CA3     		adr	r3, .L40+8
 788 0446 D3E90023 		ldrd	r2, [r3]
 789 044a FFF7FEFF 		bl	__aeabi_ddiv
 790              	.LVL87:
 791 044e FFF7FEFF 		bl	__aeabi_d2uiz
 792              	.LVL88:
 793 0452 80B2     		uxth	r0, r0
 794 0454 164B     		ldr	r3, .L40+64
 795 0456 1880     		strh	r0, [r3]	@ movhi
 386:Src/main.c    **** 
 796              		.loc 1 386 0
 797 0458 0A4B     		ldr	r3, .L40+20
 798 045a 1880     		strh	r0, [r3]	@ movhi
 388:Src/main.c    **** 			a = 0;
 799              		.loc 1 388 0
 800 045c 952D     		cmp	r5, #149
 801 045e 3FF6F1AE 		bhi	.L33
 391:Src/main.c    **** 		}
 802              		.loc 1 391 0
 803 0462 0135     		adds	r5, r5, #1
 804              	.LVL89:
 805 0464 ADB2     		uxth	r5, r5
 806              	.LVL90:
 807              	.L23:
 393:Src/main.c    **** 			if( n==1 ){
 808              		.loc 1 393 0
 809 0466 0123     		movs	r3, #1
 810 0468 F5E6     		b	.L24
 811              	.L41:
 812 046a 00BFAFF3 		.align	3
 812      0080
 813              	.L40:
 814 0470 FCA9F1D2 		.word	3539053052
 815 0474 4D62603F 		.word	1063281229
 816 0478 66666666 		.word	1717986918
 817 047c 66661040 		.word	1074816614
 818 0480 ABAAAAAA 		.word	-1431655765
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 26


 819 0484 00000000 		.word	.LANCHOR5
 820 0488 00000000 		.word	.LANCHOR6
 821 048c 00000000 		.word	.LANCHOR7
 822 0490 00000000 		.word	.LANCHOR8
 823 0494 00000000 		.word	.LANCHOR2
 824 0498 00000000 		.word	u8g2
 825 049c 00000000 		.word	.LANCHOR9
 826 04a0 00000000 		.word	.LANCHOR11
 827 04a4 00000000 		.word	.LANCHOR10
 828 04a8 00002440 		.word	1076101120
 829 04ac 00004E40 		.word	1078853632
 830 04b0 00000000 		.word	.LANCHOR12
 831              	.LBE5:
 832              		.cfi_endproc
 833              	.LFE126:
 835              		.section	.text.assert_failed,"ax",%progbits
 836              		.align	1
 837              		.global	assert_failed
 838              		.syntax unified
 839              		.thumb
 840              		.thumb_func
 841              		.fpu fpv4-sp-d16
 843              	assert_failed:
 844              	.LFB129:
 506:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 507:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 508:Src/main.c    ****   while(1) 
 509:Src/main.c    ****   {
 510:Src/main.c    ****   }
 511:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */ 
 512:Src/main.c    **** }
 513:Src/main.c    **** 
 514:Src/main.c    **** #ifdef USE_FULL_ASSERT
 515:Src/main.c    **** 
 516:Src/main.c    **** /**
 517:Src/main.c    ****    * @brief Reports the name of the source file and the source line number
 518:Src/main.c    ****    * where the assert_param error has occurred.
 519:Src/main.c    ****    * @param file: pointer to the source file name
 520:Src/main.c    ****    * @param line: assert_param error line source number
 521:Src/main.c    ****    * @retval None
 522:Src/main.c    ****    */
 523:Src/main.c    **** void assert_failed(uint8_t* file, uint32_t line)
 524:Src/main.c    **** {
 845              		.loc 1 524 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 0
 848              		@ frame_needed = 0, uses_anonymous_args = 0
 849              		@ link register save eliminated.
 850              	.LVL91:
 525:Src/main.c    ****   /* USER CODE BEGIN 6 */
 526:Src/main.c    ****   /* User can add his own implementation to report the file name and line number,
 527:Src/main.c    ****     ex: printf("Wrong parameters value: file %s on line %d¥r¥n", file, line) */
 528:Src/main.c    ****   /* USER CODE END 6 */
 529:Src/main.c    **** 
 530:Src/main.c    **** }
 851              		.loc 1 530 0
 852 0000 7047     		bx	lr
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 27


 853              		.cfi_endproc
 854              	.LFE129:
 856              		.global	FP_volt
 857              		.global	meas_value
 858              		.global	meas_sign
 859              		.global	meas_frac
 860              		.global	meas_digit
 861              		.global	meas_unit
 862              		.global	meas_name
 863              		.global	idct_status
 864              		.global	idct_name
 865              		.global	MT
 866              		.global	gear
 867              		.global	speed
 868              		.global	rpm
 869              		.global	logo_bits
 870              		.comm	u8g2,128,4
 871              		.section	.bss.gear,"aw",%nobits
 872              		.set	.LANCHOR11,. + 0
 875              	gear:
 876 0000 00       		.space	1
 877              		.section	.bss.rpm,"aw",%nobits
 878              		.align	1
 879              		.set	.LANCHOR9,. + 0
 882              	rpm:
 883 0000 0000     		.space	2
 884              		.section	.data.FP_volt,"aw",%progbits
 885              		.align	1
 886              		.set	.LANCHOR13,. + 0
 889              	FP_volt:
 890 0000 4A01     		.short	330
 891              		.section	.data.MT,"aw",%progbits
 892              		.align	3
 893              		.set	.LANCHOR10,. + 0
 896              	MT:
 897 0000 77BE9F1A 		.word	446676599
 898 0004 2FDD0B40 		.word	1074519343
 899 0008 1F85EB51 		.word	1374389535
 900 000c B81E0040 		.word	1073749688
 901 0010 A8C64B37 		.word	927712936
 902 0014 8941F63F 		.word	1073103241
 903 0018 00000000 		.word	0
 904 001c 0000F03F 		.word	1072693248
 905 0020 986E1283 		.word	2199023256
 906 0024 C0CAE93F 		.word	1072286400
 907              		.section	.data.meas_value,"aw",%progbits
 908              		.align	2
 909              		.set	.LANCHOR5,. + 0
 912              	meas_value:
 913 0000 8502     		.short	645
 914 0002 6900     		.short	105
 915 0004 EB00     		.short	235
 916 0006 5900     		.short	89
 917 0008 4900     		.short	73
 918 000a 8F00     		.short	143
 919              		.section	.data.speed,"aw",%progbits
 920              		.align	1
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 28


 921              		.set	.LANCHOR12,. + 0
 924              	speed:
 925 0000 F000     		.short	240
 926              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 927              		.align	2
 928              	.LC0:
 929 0000 5372632F 		.ascii	"Src/main.c\000"
 929      6D61696E 
 929      2E6300
 930              		.section	.rodata.idct_name,"a",%progbits
 931              		.align	2
 932              		.set	.LANCHOR4,. + 0
 935              	idct_name:
 936 0000 43414E00 		.ascii	"CAN\000"
 937 0004 00       		.space	1
 938 0005 4F324642 		.ascii	"O2FB\000"
 938      00
 939              		.section	.rodata.idct_status,"a",%progbits
 940              		.align	2
 941              		.set	.LANCHOR3,. + 0
 944              	idct_status:
 945 0000 01       		.byte	1
 946 0001 00       		.byte	0
 947              		.section	.rodata.logo_bits,"a",%progbits
 948              		.align	2
 949              		.set	.LANCHOR0,. + 0
 952              	logo_bits:
 953 0000 00       		.byte	0
 954 0001 00       		.byte	0
 955 0002 00       		.byte	0
 956 0003 00       		.byte	0
 957 0004 00       		.byte	0
 958 0005 00       		.byte	0
 959 0006 00       		.byte	0
 960 0007 00       		.byte	0
 961 0008 00       		.byte	0
 962 0009 00       		.byte	0
 963 000a 00       		.byte	0
 964 000b 00       		.byte	0
 965 000c 00       		.byte	0
 966 000d 00       		.byte	0
 967 000e 00       		.byte	0
 968 000f 00       		.byte	0
 969 0010 00       		.byte	0
 970 0011 00       		.byte	0
 971 0012 00       		.byte	0
 972 0013 00       		.byte	0
 973 0014 00       		.byte	0
 974 0015 00       		.byte	0
 975 0016 00       		.byte	0
 976 0017 00       		.byte	0
 977 0018 00       		.byte	0
 978 0019 00       		.byte	0
 979 001a F0       		.byte	-16
 980 001b 0F       		.byte	15
 981 001c 00       		.byte	0
 982 001d 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 29


 983 001e 00       		.byte	0
 984 001f FC       		.byte	-4
 985 0020 FF       		.byte	-1
 986 0021 FF       		.byte	-1
 987 0022 3F       		.byte	63
 988 0023 00       		.byte	0
 989 0024 80       		.byte	-128
 990 0025 FF       		.byte	-1
 991 0026 FF       		.byte	-1
 992 0027 FF       		.byte	-1
 993 0028 FF       		.byte	-1
 994 0029 01       		.byte	1
 995 002a E0       		.byte	-32
 996 002b 1F       		.byte	31
 997 002c 00       		.byte	0
 998 002d 80       		.byte	-128
 999 002e FF       		.byte	-1
 1000 002f 07       		.byte	7
 1001 0030 E0       		.byte	-32
 1002 0031 01       		.byte	1
 1003 0032 00       		.byte	0
 1004 0033 80       		.byte	-128
 1005 0034 81       		.byte	-127
 1006 0035 07       		.byte	7
 1007 0036 E0       		.byte	-32
 1008 0037 01       		.byte	1
 1009 0038 00       		.byte	0
 1010 0039 80       		.byte	-128
 1011 003a 81       		.byte	-127
 1012 003b 07       		.byte	7
 1013 003c C0       		.byte	-64
 1014 003d E1       		.byte	-31
 1015 003e 07       		.byte	7
 1016 003f C0       		.byte	-64
 1017 0040 80       		.byte	-128
 1018 0041 03       		.byte	3
 1019 0042 00       		.byte	0
 1020 0043 FC       		.byte	-4
 1021 0044 1F       		.byte	31
 1022 0045 E0       		.byte	-32
 1023 0046 80       		.byte	-128
 1024 0047 03       		.byte	3
 1025 0048 00       		.byte	0
 1026 0049 FE       		.byte	-2
 1027 004a 7F       		.byte	127
 1028 004b 70       		.byte	112
 1029 004c C0       		.byte	-64
 1030 004d 01       		.byte	1
 1031 004e 00       		.byte	0
 1032 004f 0F       		.byte	15
 1033 0050 FE       		.byte	-2
 1034 0051 39       		.byte	57
 1035 0052 E0       		.byte	-32
 1036 0053 00       		.byte	0
 1037 0054 00       		.byte	0
 1038 0055 07       		.byte	7
 1039 0056 F8       		.byte	-8
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 30


 1040 0057 1F       		.byte	31
 1041 0058 F0       		.byte	-16
 1042 0059 00       		.byte	0
 1043 005a 00       		.byte	0
 1044 005b 0E       		.byte	14
 1045 005c E0       		.byte	-32
 1046 005d 1F       		.byte	31
 1047 005e 78       		.byte	120
 1048 005f 00       		.byte	0
 1049 0060 00       		.byte	0
 1050 0061 0C       		.byte	12
 1051 0062 C0       		.byte	-64
 1052 0063 FF       		.byte	-1
 1053 0064 3F       		.byte	63
 1054 0065 00       		.byte	0
 1055 0066 00       		.byte	0
 1056 0067 18       		.byte	24
 1057 0068 00       		.byte	0
 1058 0069 FF       		.byte	-1
 1059 006a 1F       		.byte	31
 1060 006b 00       		.byte	0
 1061 006c 00       		.byte	0
 1062 006d 38       		.byte	56
 1063 006e C0       		.byte	-64
 1064 006f FF       		.byte	-1
 1065 0070 0F       		.byte	15
 1066 0071 00       		.byte	0
 1067 0072 00       		.byte	0
 1068 0073 70       		.byte	112
 1069 0074 E0       		.byte	-32
 1070 0075 F1       		.byte	-15
 1071 0076 03       		.byte	3
 1072 0077 00       		.byte	0
 1073 0078 00       		.byte	0
 1074 0079 E0       		.byte	-32
 1075 007a 78       		.byte	120
 1076 007b 00       		.byte	0
 1077 007c 00       		.byte	0
 1078 007d 00       		.byte	0
 1079 007e 00       		.byte	0
 1080 007f C0       		.byte	-64
 1081 0080 3F       		.byte	63
 1082 0081 E0       		.byte	-32
 1083 0082 01       		.byte	1
 1084 0083 00       		.byte	0
 1085 0084 00       		.byte	0
 1086 0085 80       		.byte	-128
 1087 0086 1F       		.byte	31
 1088 0087 F0       		.byte	-16
 1089 0088 01       		.byte	1
 1090 0089 00       		.byte	0
 1091 008a 00       		.byte	0
 1092 008b 00       		.byte	0
 1093 008c 07       		.byte	7
 1094 008d F8       		.byte	-8
 1095 008e 00       		.byte	0
 1096 008f 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 31


 1097 0090 00       		.byte	0
 1098 0091 00       		.byte	0
 1099 0092 1E       		.byte	30
 1100 0093 7C       		.byte	124
 1101 0094 00       		.byte	0
 1102 0095 00       		.byte	0
 1103 0096 00       		.byte	0
 1104 0097 00       		.byte	0
 1105 0098 F8       		.byte	-8
 1106 0099 1F       		.byte	31
 1107 009a 00       		.byte	0
 1108 009b 00       		.byte	0
 1109 009c 00       		.byte	0
 1110 009d 00       		.byte	0
 1111 009e F0       		.byte	-16
 1112 009f 0F       		.byte	15
 1113 00a0 00       		.byte	0
 1114 00a1 00       		.byte	0
 1115 00a2 00       		.byte	0
 1116 00a3 00       		.byte	0
 1117 00a4 80       		.byte	-128
 1118 00a5 01       		.byte	1
 1119 00a6 00       		.byte	0
 1120 00a7 00       		.byte	0
 1121 00a8 00       		.byte	0
 1122 00a9 00       		.byte	0
 1123 00aa 00       		.byte	0
 1124 00ab 00       		.byte	0
 1125 00ac 00       		.byte	0
 1126 00ad 00       		.byte	0
 1127 00ae 00       		.byte	0
 1128 00af 00       		.byte	0
 1129 00b0 00       		.byte	0
 1130 00b1 00       		.byte	0
 1131 00b2 00       		.byte	0
 1132 00b3 00       		.byte	0
 1133 00b4 00       		.byte	0
 1134 00b5 00       		.byte	0
 1135 00b6 00       		.byte	0
 1136 00b7 00       		.byte	0
 1137 00b8 00       		.byte	0
 1138 00b9 00       		.byte	0
 1139 00ba 00       		.byte	0
 1140 00bb 00       		.byte	0
 1141 00bc 00       		.byte	0
 1142 00bd 00       		.byte	0
 1143 00be 00       		.byte	0
 1144 00bf 00       		.byte	0
 1145 00c0 00       		.byte	0
 1146 00c1 00       		.byte	0
 1147 00c2 00       		.byte	0
 1148 00c3 00       		.byte	0
 1149 00c4 00       		.byte	0
 1150 00c5 00       		.byte	0
 1151 00c6 00       		.byte	0
 1152 00c7 4C       		.byte	76
 1153 00c8 1C       		.byte	28
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 32


 1154 00c9 00       		.byte	0
 1155 00ca 00       		.byte	0
 1156 00cb 00       		.byte	0
 1157 00cc 00       		.byte	0
 1158 00cd 32       		.byte	50
 1159 00ce 0E       		.byte	14
 1160 00cf 00       		.byte	0
 1161 00d0 00       		.byte	0
 1162 00d1 00       		.byte	0
 1163 00d2 00       		.byte	0
 1164 00d3 00       		.byte	0
 1165 00d4 C6       		.byte	-58
 1166 00d5 00       		.byte	0
 1167 00d6 18       		.byte	24
 1168 00d7 00       		.byte	0
 1169 00d8 00       		.byte	0
 1170 00d9 7C       		.byte	124
 1171 00da EF       		.byte	-17
 1172 00db FC       		.byte	-4
 1173 00dc 39       		.byte	57
 1174 00dd 00       		.byte	0
 1175 00de 00       		.byte	0
 1176 00df 4E       		.byte	78
 1177 00e0 C6       		.byte	-58
 1178 00e1 B8       		.byte	-72
 1179 00e2 31       		.byte	49
 1180 00e3 00       		.byte	0
 1181 00e4 00       		.byte	0
 1182 00e5 3E       		.byte	62
 1183 00e6 C6       		.byte	-58
 1184 00e7 98       		.byte	-104
 1185 00e8 31       		.byte	49
 1186 00e9 00       		.byte	0
 1187 00ea 00       		.byte	0
 1188 00eb 3C       		.byte	60
 1189 00ec C6       		.byte	-58
 1190 00ed 98       		.byte	-104
 1191 00ee 31       		.byte	49
 1192 00ef 00       		.byte	0
 1193 00f0 00       		.byte	0
 1194 00f1 0E       		.byte	14
 1195 00f2 C6       		.byte	-58
 1196 00f3 98       		.byte	-104
 1197 00f4 31       		.byte	49
 1198 00f5 00       		.byte	0
 1199 00f6 00       		.byte	0
 1200 00f7 4E       		.byte	78
 1201 00f8 CE       		.byte	-50
 1202 00f9 99       		.byte	-103
 1203 00fa 31       		.byte	49
 1204 00fb 00       		.byte	0
 1205 00fc 00       		.byte	0
 1206 00fd 7C       		.byte	124
 1207 00fe EF       		.byte	-17
 1208 00ff FD       		.byte	-3
 1209 0100 7B       		.byte	123
 1210 0101 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 33


 1211 0102 00       		.byte	0
 1212 0103 00       		.byte	0
 1213 0104 00       		.byte	0
 1214 0105 00       		.byte	0
 1215 0106 00       		.byte	0
 1216 0107 00       		.byte	0
 1217 0108 00       		.byte	0
 1218 0109 00       		.byte	0
 1219 010a 00       		.byte	0
 1220 010b 00       		.byte	0
 1221 010c 00       		.byte	0
 1222 010d 00       		.byte	0
 1223 010e 00       		.byte	0
 1224 010f 00       		.byte	0
 1225 0110 00       		.byte	0
 1226 0111 00       		.byte	0
 1227 0112 00       		.byte	0
 1228 0113 00       		.byte	0
 1229 0114 00       		.byte	0
 1230 0115 00       		.byte	0
 1231 0116 00       		.byte	0
 1232 0117 00       		.byte	0
 1233 0118 00       		.byte	0
 1234 0119 00       		.byte	0
 1235 011a 00       		.byte	0
 1236 011b 00       		.byte	0
 1237 011c 00       		.byte	0
 1238 011d 00       		.byte	0
 1239 011e 00       		.byte	0
 1240 011f 00       		.byte	0
 1241              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1242              		.align	2
 1243              	.LC1:
 1244 0000 4D756C74 		.ascii	"Multi Function Meter\000"
 1244      69204675 
 1244      6E637469 
 1244      6F6E204D 
 1244      65746572 
 1245 0015 000000   		.space	3
 1246              	.LC2:
 1247 0018 5265762E 		.ascii	"Rev. 0.1a\000"
 1247      20302E31 
 1247      6100
 1248 0022 0000     		.space	2
 1249              	.LC3:
 1250 0024 44555459 		.ascii	"DUTY\000"
 1250      00
 1251              		.section	.rodata.meas_digit,"a",%progbits
 1252              		.align	2
 1253              		.set	.LANCHOR6,. + 0
 1256              	meas_digit:
 1257 0000 03       		.byte	3
 1258 0001 03       		.byte	3
 1259 0002 03       		.byte	3
 1260 0003 03       		.byte	3
 1261 0004 03       		.byte	3
 1262 0005 03       		.byte	3
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 34


 1263              		.section	.rodata.meas_frac,"a",%progbits
 1264              		.align	2
 1265              		.set	.LANCHOR7,. + 0
 1268              	meas_frac:
 1269 0000 02       		.byte	2
 1270 0001 02       		.byte	2
 1271 0002 01       		.byte	1
 1272 0003 00       		.byte	0
 1273 0004 00       		.byte	0
 1274 0005 02       		.byte	2
 1275              		.section	.rodata.meas_name,"a",%progbits
 1276              		.align	2
 1277              		.set	.LANCHOR1,. + 0
 1280              	meas_name:
 1281 0000 4D415000 		.ascii	"MAP\000"
 1282 0004 000000   		.space	3
 1283 0007 4F494C50 		.ascii	"OILP\000"
 1283      00
 1284 000c 0000     		.space	2
 1285 000e 4650564F 		.ascii	"FPVOLT\000"
 1285      4C5400
 1286 0015 45435400 		.ascii	"ECT\000"
 1287 0019 000000   		.space	3
 1288 001c 4F494C54 		.ascii	"OILT\000"
 1288      00
 1289 0021 0000     		.space	2
 1290 0023 4F3200   		.ascii	"O2\000"
 1291 0026 00000000 		.space	4
 1292              		.section	.rodata.meas_sign,"a",%progbits
 1293              		.align	2
 1294              		.set	.LANCHOR8,. + 0
 1297              	meas_sign:
 1298 0000 01       		.byte	1
 1299 0001 00       		.byte	0
 1300 0002 00       		.byte	0
 1301 0003 00       		.byte	0
 1302 0004 00       		.byte	0
 1303 0005 00       		.byte	0
 1304              		.section	.rodata.meas_unit,"a",%progbits
 1305              		.align	2
 1306              		.set	.LANCHOR2,. + 0
 1309              	meas_unit:
 1310 0000 6B706100 		.ascii	"kpa\000"
 1311 0004 00       		.space	1
 1312 0005 6B706100 		.ascii	"kpa\000"
 1313 0009 00       		.space	1
 1314 000a 56202000 		.ascii	"V  \000"
 1315 000e 00       		.space	1
 1316 000f B0       		.byte	-80
 1317 0010 43       		.byte	67
 1318 0011 00       		.byte	0
 1319 0012 0000     		.space	2
 1320 0014 B0       		.byte	-80
 1321 0015 43       		.byte	67
 1322 0016 00       		.byte	0
 1323 0017 0000     		.space	2
 1324 0019 5600     		.ascii	"V\000"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 35


 1325 001b 000000   		.space	3
 1326              		.text
 1327              	.Letext0:
 1328              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 1329              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 1330              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1331              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 1332              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 1333              		.file 7 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 1334              		.file 8 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 1335              		.file 9 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 1336              		.file 10 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 1337              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1338              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 1339              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 1340              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1341              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 1342              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 1343              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi.h"
 1344              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1345              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 1346              		.file 20 "Inc/adc.h"
 1347              		.file 21 "Inc/spi.h"
 1348              		.file 22 "Inc/tim.h"
 1349              		.file 23 "Inc/usart.h"
 1350              		.file 24 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/math.h"
 1351              		.file 25 "/Users/imashio/Electronics/ARM/_Library/u8x8.h"
 1352              		.file 26 "/Users/imashio/Electronics/ARM/_Library/u8g2.h"
 1353              		.file 27 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 1354              		.file 28 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 1355              		.file 29 "Inc/gpio.h"
 1356              		.file 30 "Inc/dma.h"
 1357              		.file 31 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1358              		.file 32 "<built-in>"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 36


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:18     .text._Error_Handler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:25     .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:41     .text.SystemClock_Config:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:48     .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:167    .text.SystemClock_Config:00000000000000a4 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:178    .text.main:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:185    .text.main:0000000000000000 main
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:661    .text.main:0000000000000310 $d
                            *COM*:0000000000000080 u8g2
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:695    .text.main:000000000000038c $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:814    .text.main:0000000000000470 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:836    .text.assert_failed:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:843    .text.assert_failed:0000000000000000 assert_failed
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:889    .data.FP_volt:0000000000000000 FP_volt
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:912    .data.meas_value:0000000000000000 meas_value
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:1297   .rodata.meas_sign:0000000000000000 meas_sign
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:1268   .rodata.meas_frac:0000000000000000 meas_frac
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:1256   .rodata.meas_digit:0000000000000000 meas_digit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:1309   .rodata.meas_unit:0000000000000000 meas_unit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:1280   .rodata.meas_name:0000000000000000 meas_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:944    .rodata.idct_status:0000000000000000 idct_status
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:935    .rodata.idct_name:0000000000000000 idct_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:896    .data.MT:0000000000000000 MT
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:875    .bss.gear:0000000000000000 gear
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:924    .data.speed:0000000000000000 speed
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:882    .bss.rpm:0000000000000000 rpm
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:952    .rodata.logo_bits:0000000000000000 logo_bits
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:876    .bss.gear:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:878    .bss.rpm:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:885    .data.FP_volt:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:892    .data.MT:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:908    .data.meas_value:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:920    .data.speed:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:927    .rodata.SystemClock_Config.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:931    .rodata.idct_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:940    .rodata.idct_status:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:948    .rodata.logo_bits:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:1242   .rodata.main.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:1252   .rodata.meas_digit:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:1264   .rodata.meas_frac:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:1276   .rodata.meas_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:1293   .rodata.meas_sign:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s:1305   .rodata.meas_unit:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
__aeabi_dmul
__aeabi_d2iz
__aeabi_ui2d
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccMAHnDr.s 			page 37


__aeabi_ddiv
__aeabi_d2uiz
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_USART2_UART_Init
MX_TIM1_Init
MX_USART1_UART_Init
MX_SPI1_Init
MX_ADC1_Init
memset
HAL_ADC_Start_DMA
u8g2_Setup_ssd1309_128x64_noname2_f
HAL_GPIO_WritePin
u8x8_InitDisplay
u8x8_SetPowerSave
u8x8_SetContrast
u8g2_ClearDisplay
u8g2_ClearBuffer
u8g2_DrawXBMP
u8g2_SetFont
u8g2_DrawStr
u8g2_SendBuffer
HAL_Delay
draw_MeasLabelUnit
draw_IndicatorBox
draw_Value
draw_BarGraph
hadc1
u8x8_gpio_and_delay_STM32F303
u8x8_byte_4wire_hw_spi
u8g2_cb_r0
u8g2_font_5x7_tf
