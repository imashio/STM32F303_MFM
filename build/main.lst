ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.draw_indicators,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	draw_indicators
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	draw_indicators:
  27              	.LFB126:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "adc.h"
  24:Src/main.c    **** #include "can.h"
  25:Src/main.c    **** #include "dma.h"
  26:Src/main.c    **** #include "i2c.h"
  27:Src/main.c    **** #include "spi.h"
  28:Src/main.c    **** #include "tim.h"
  29:Src/main.c    **** #include "usart.h"
  30:Src/main.c    **** #include "gpio.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 2


  31:Src/main.c    **** 
  32:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  33:Src/main.c    **** /* USER CODE BEGIN Includes */
  34:Src/main.c    **** #include <stdio.h>
  35:Src/main.c    **** #include <math.h>
  36:Src/main.c    **** 
  37:Src/main.c    **** // #include "basic.h"  // original library
  38:Src/main.c    **** #include "usart_transmit_printf.h"
  39:Src/main.c    **** #include "u8g2.h"		// graphic display library
  40:Src/main.c    **** #include "u8x8_gpio_STM32F303.h"
  41:Src/main.c    **** #include "u8x8_byte_4wire_hw_spi.h"
  42:Src/main.c    **** #include "draw_Value.h"
  43:Src/main.c    **** #include "draw_BarGraph.h"
  44:Src/main.c    **** #include "draw_IndicatorBox.h"
  45:Src/main.c    **** //#include "draw_Rotary.h"
  46:Src/main.c    **** 
  47:Src/main.c    **** #include "flag.h"
  48:Src/main.c    **** #include "defi_decoder.h"
  49:Src/main.c    **** #include "pulse_counter.h"
  50:Src/main.c    **** #include "can_obd.h"
  51:Src/main.c    **** #include "gsens_ADXL345.h"
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE END Includes */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  56:Src/main.c    **** /* USER CODE BEGIN PTD */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END PTD */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  61:Src/main.c    **** /* USER CODE BEGIN PD */
  62:Src/main.c    **** /* USER CODE END PD */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  65:Src/main.c    **** /* USER CODE BEGIN PM */
  66:Src/main.c    **** /* USER CODE END PM */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE BEGIN PV */
  71:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  72:Src/main.c    **** 
  73:Src/main.c    **** // mode definition
  74:Src/main.c    **** #define N_mode                5
  75:Src/main.c    **** 
  76:Src/main.c    **** #define MODE_BAR_METER        0
  77:Src/main.c    **** #define MODE_CIRCULAR_METER   1
  78:Src/main.c    **** //#define MODE_ROTARY           2
  79:Src/main.c    **** #define MODE_SCOPE_MAP        3
  80:Src/main.c    **** #define MODE_SCOPE_Gsens      4
  81:Src/main.c    **** #define MODE_SETTING          5
  82:Src/main.c    **** 
  83:Src/main.c    **** // RPM bar graph parameter definition
  84:Src/main.c    **** #define	rpmbar_x		  0
  85:Src/main.c    **** #define	rpmbar_y		  0
  86:Src/main.c    **** #define	rpmbar_width	128
  87:Src/main.c    **** #define	rpmbar_height	14
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 3


  88:Src/main.c    **** #define	rpm_min			  0
  89:Src/main.c    **** #define	rpm_max			  9000
  90:Src/main.c    **** 
  91:Src/main.c    **** // measurements display parameter definition
  92:Src/main.c    **** // Bar graph
  93:Src/main.c    **** #define	N_meas			      6
  94:Src/main.c    **** #define	meas_x			      0
  95:Src/main.c    **** #define	meas_y			      16
  96:Src/main.c    **** #define	meas_x_offset   	2
  97:Src/main.c    **** #define	meas_width1		    70
  98:Src/main.c    **** #define	meas_width2		    56
  99:Src/main.c    **** #define	meas_height		    12
 100:Src/main.c    **** // Circular Meter
 101:Src/main.c    **** #define	N_meas_C			    4
 102:Src/main.c    **** #define	meas_C_x			    68
 103:Src/main.c    **** #define	meas_C_y			    2
 104:Src/main.c    **** #define	meas_C_x_offset		2
 105:Src/main.c    **** #define	meas_C_width		  60
 106:Src/main.c    **** #define	meas_C_height		  13
 107:Src/main.c    **** 
 108:Src/main.c    **** // indicators parameter definition
 109:Src/main.c    **** #define	N_idct			      2
 110:Src/main.c    **** #define	idct_x			      72
 111:Src/main.c    **** #define	idct_y			      53
 112:Src/main.c    ****  #define	idct_width		    27 // 2-items
 113:Src/main.c    **** // #define	idct_width		    17 // 3-item
 114:Src/main.c    **** #define	idct_height		    9
 115:Src/main.c    **** 
 116:Src/main.c    **** //  Fuel Pump Voltage display parameter definition
 117:Src/main.c    **** #define	FP_x		    	    0
 118:Src/main.c    **** #define	FP_y              52
 119:Src/main.c    **** #define	FP_height	        12
 120:Src/main.c    **** #define	FP_volt_width	    45
 121:Src/main.c    **** #define	FP_duty_width	    70
 122:Src/main.c    **** 
 123:Src/main.c    **** // wave display parameter definition
 124:Src/main.c    **** #define	wave_x			      0
 125:Src/main.c    **** #define	wave_y			      13
 126:Src/main.c    **** #define	wave_width		    128
 127:Src/main.c    **** #define	wave_height		    52
 128:Src/main.c    **** #define	wave_value_min	  -100
 129:Src/main.c    **** #define	wave_value_max	  +200
 130:Src/main.c    **** 
 131:Src/main.c    **** // logo parameter definition (small 'enfini' logo)
 132:Src/main.c    **** #define logo_width        48
 133:Src/main.c    **** #define logo_height       48
 134:Src/main.c    **** 
 135:Src/main.c    **** const unsigned char logo_bits[] = {
 136:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 137:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 138:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0x3F, 0x00,
 139:Src/main.c    ****   0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x1F, 0x00, 0x80, 0xFF, 0x07,
 140:Src/main.c    ****   0xE0, 0x01, 0x00, 0x80, 0x81, 0x07, 0xE0, 0x01, 0x00, 0x80, 0x81, 0x07,
 141:Src/main.c    ****   0xC0, 0xE1, 0x07, 0xC0, 0x80, 0x03, 0x00, 0xFC, 0x1F, 0xE0, 0x80, 0x03,
 142:Src/main.c    ****   0x00, 0xFE, 0x7F, 0x70, 0xC0, 0x01, 0x00, 0x0F, 0xFE, 0x39, 0xE0, 0x00,
 143:Src/main.c    ****   0x00, 0x07, 0xF8, 0x1F, 0xF0, 0x00, 0x00, 0x0E, 0xE0, 0x1F, 0x78, 0x00,
 144:Src/main.c    ****   0x00, 0x0C, 0xC0, 0xFF, 0x3F, 0x00, 0x00, 0x18, 0x00, 0xFF, 0x1F, 0x00,
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 4


 145:Src/main.c    ****   0x00, 0x38, 0xC0, 0xFF, 0x0F, 0x00, 0x00, 0x70, 0xE0, 0xF1, 0x03, 0x00,
 146:Src/main.c    ****   0x00, 0xE0, 0x78, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3F, 0xE0, 0x01, 0x00,
 147:Src/main.c    ****   0x00, 0x80, 0x1F, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00,
 148:Src/main.c    ****   0x00, 0x00, 0x1E, 0x7C, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00,
 149:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00,
 150:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 151:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 152:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4C, 0x1C, 0x00, 0x00, 0x00,
 153:Src/main.c    ****   0x00, 0x32, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x00, 0x18, 0x00,
 154:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFC, 0x39, 0x00, 0x00, 0x4E, 0xC6, 0xB8, 0x31, 0x00,
 155:Src/main.c    ****   0x00, 0x3E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x3C, 0xC6, 0x98, 0x31, 0x00,
 156:Src/main.c    ****   0x00, 0x0E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x4E, 0xCE, 0x99, 0x31, 0x00,
 157:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFD, 0x7B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 158:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 159:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 160:Src/main.c    ****   };
 161:Src/main.c    **** 
 162:Src/main.c    **** /*
 163:Src/main.c    **** // logo parameter definition (meidium 'enfini' logo)
 164:Src/main.c    **** #define logo_width        54
 165:Src/main.c    **** #define logo_height       48
 166:Src/main.c    **** 
 167:Src/main.c    **** static unsigned char logo_bits[] = {
 168:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0x0F,
 169:Src/main.c    ****   0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0xE0, 0xFF, 0xFF,
 170:Src/main.c    ****   0xFF, 0xFF, 0xFF, 0x01, 0xF8, 0x3F, 0x00, 0x00, 0xF0, 0xFF, 0x07, 0xF8,
 171:Src/main.c    ****   0x01, 0x00, 0x00, 0x70, 0xE0, 0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x80,
 172:Src/main.c    ****   0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00,
 173:Src/main.c    ****   0x38, 0x80, 0x07, 0x00, 0xF8, 0x3F, 0x00, 0x38, 0x80, 0x07, 0x00, 0xFE,
 174:Src/main.c    ****   0xFF, 0x00, 0x1C, 0xC0, 0x03, 0x80, 0xFF, 0xFF, 0x01, 0x0E, 0xC0, 0x01,
 175:Src/main.c    ****   0xC0, 0x07, 0xFC, 0x07, 0x07, 0xE0, 0x01, 0x80, 0x03, 0xF0, 0x9F, 0x03,
 176:Src/main.c    ****   0xF0, 0x00, 0x80, 0x03, 0xC0, 0xFF, 0x03, 0x78, 0x00, 0x00, 0x07, 0x80,
 177:Src/main.c    ****   0xFF, 0x01, 0x3C, 0x00, 0x00, 0x06, 0x00, 0xFE, 0x87, 0x3F, 0x00, 0x00,
 178:Src/main.c    ****   0x0E, 0x00, 0xF8, 0xFF, 0x1F, 0x00, 0x00, 0x1C, 0x00, 0xF8, 0xFF, 0x07,
 179:Src/main.c    ****   0x00, 0x00, 0x38, 0x00, 0xDE, 0xFF, 0x03, 0x00, 0x00, 0x70, 0x00, 0x0F,
 180:Src/main.c    ****   0x7E, 0x00, 0x00, 0x00, 0xE0, 0xC0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xC0,
 181:Src/main.c    ****   0xF1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x00, 0x7C, 0x00, 0x00,
 182:Src/main.c    ****   0x00, 0x00, 0x3F, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x1F,
 183:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x3C, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x78,
 184:Src/main.c    ****   0xE0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0x03, 0x00, 0x00, 0x00,
 185:Src/main.c    ****   0x00, 0xC0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00,
 186:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00,
 187:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x4E, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39,
 188:Src/main.c    ****   0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00,
 189:Src/main.c    ****   0x00, 0x7E, 0x3E, 0xC7, 0x3D, 0x1C, 0x00, 0x00, 0x6F, 0x3E, 0xC7, 0x7F,
 190:Src/main.c    ****   0x1C, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x73, 0x18, 0x00, 0x00, 0x07, 0x1C,
 191:Src/main.c    ****   0x86, 0x71, 0x18, 0x00, 0x00, 0x3E, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00,
 192:Src/main.c    ****   0x1F, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x71, 0x18,
 193:Src/main.c    ****   0x00, 0x00, 0x47, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x7F, 0x3E, 0xCF,
 194:Src/main.c    ****   0xFB, 0x3C, 0x00, 0x00, 0x3C, 0x3E, 0xCF, 0xFB, 0x3C, 0x00, 0x00, 0x00,
 195:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 196:Src/main.c    ****   };
 197:Src/main.c    **** */
 198:Src/main.c    **** 
 199:Src/main.c    **** u8g2_t    u8g2; // a structure which will contain all the data for one display
 200:Src/main.c    **** 
 201:Src/main.c    **** uint8_t   update_display = 0;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 5


 202:Src/main.c    **** 
 203:Src/main.c    **** // uint16_t	rpm = 0;
 204:Src/main.c    **** uint16_t	speed = 240;
 205:Src/main.c    **** uint8_t		gear = 0;
 206:Src/main.c    **** double		MT[5] = {3.483, 2.015, 1.391, 1.000, 0.806};
 207:Src/main.c    **** 
 208:Src/main.c    **** // UI
 209:Src/main.c    **** uint8_t   mode;
 210:Src/main.c    **** uint8_t   setting;
 211:Src/main.c    **** uint8_t   cursor = 0;
 212:Src/main.c    **** 
 213:Src/main.c    **** /*
 214:Src/main.c    **** typedef struct {
 215:Src/main.c    **** 	unsigned char	name;
 216:Src/main.c    **** 	uint8_t			status;
 217:Src/main.c    **** } idct;
 218:Src/main.c    **** */
 219:Src/main.c    **** 
 220:Src/main.c    **** // variables for indicators
 221:Src/main.c    **** const unsigned char idct_name[N_idct][5] = { // length must be (text length + 1)
 222:Src/main.c    **** 		"CAN"	,
 223:Src/main.c    **** 		"GSENS"	,
 224:Src/main.c    **** };
 225:Src/main.c    **** 
 226:Src/main.c    **** uint8_t	idct_status[N_idct] = {
 227:Src/main.c    **** 		0	,
 228:Src/main.c    **** 		0
 229:Src/main.c    **** };
 230:Src/main.c    **** 
 231:Src/main.c    **** // variables for measurement
 232:Src/main.c    **** const unsigned char meas_name[N_meas][7] = { // length must be (text length + 1)
 233:Src/main.c    **** 		"MAP"         ,
 234:Src/main.c    **** 		"OILP"        ,
 235:Src/main.c    **** 		"FPV"         ,
 236:Src/main.c    **** 		"ECT"         ,
 237:Src/main.c    **** 		"OILT"        ,
 238:Src/main.c    **** 		"O2"          
 239:Src/main.c    **** };
 240:Src/main.c    **** 
 241:Src/main.c    **** const unsigned char meas_unit[N_meas][5] = {
 242:Src/main.c    **** 		"kpa"			    ,	// MAP
 243:Src/main.c    **** 		"kpa"			    ,	// OILP
 244:Src/main.c    **** 		"V  "         ,	// FuelPump Voltage
 245:Src/main.c    **** 		{176, 67, 0}  ,	// ECT  degC...{176, 67, 0}
 246:Src/main.c    **** 		{176, 67, 0}	,	// OILT  degC...{176, 67, 0}
 247:Src/main.c    **** 		"V"					    // O2
 248:Src/main.c    **** };
 249:Src/main.c    **** 
 250:Src/main.c    **** const uint8_t	meas_digit[N_meas] = {
 251:Src/main.c    **** 		3	,	// MAP
 252:Src/main.c    **** 		3	,	// OILP
 253:Src/main.c    **** 		3	,	// FuelPump Voltage
 254:Src/main.c    **** 		3	,	// ECT
 255:Src/main.c    **** 		3	,	// OILT
 256:Src/main.c    **** 		3		// O2
 257:Src/main.c    **** };
 258:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 6


 259:Src/main.c    **** const uint8_t	meas_frac[N_meas] = {
 260:Src/main.c    **** 		2	,	// MAP
 261:Src/main.c    **** 		1	,	// OILP
 262:Src/main.c    **** 		1	,	// FuelPump Voltage
 263:Src/main.c    **** 		0	,	// ECT
 264:Src/main.c    **** 		0	,	// OILT
 265:Src/main.c    **** 		2		// O2
 266:Src/main.c    **** };
 267:Src/main.c    **** 
 268:Src/main.c    **** const uint8_t	meas_sign[N_meas] = {
 269:Src/main.c    **** 		1	,	// MAP
 270:Src/main.c    **** 		0	,	// OILP
 271:Src/main.c    **** 		0	,	// FuelPump Voltage
 272:Src/main.c    **** 		0	,	// ECT
 273:Src/main.c    **** 		0	,	// OILT
 274:Src/main.c    **** 		0		// O2
 275:Src/main.c    **** };
 276:Src/main.c    **** 
 277:Src/main.c    **** int16_t	meas_value[N_meas] = {
 278:Src/main.c    **** 		105	,	// MAP
 279:Src/main.c    **** 		235	,	// OILP
 280:Src/main.c    **** 		645	,	// FuelPump Voltage
 281:Src/main.c    **** 		89	,	// ECT
 282:Src/main.c    **** 		73	,	// OILT
 283:Src/main.c    **** 		143		// O2
 284:Src/main.c    **** };
 285:Src/main.c    **** 
 286:Src/main.c    **** // O2 senser Voltage
 287:Src/main.c    **** int16_t   O2_volt = 330;
 288:Src/main.c    **** 
 289:Src/main.c    **** // Fuel Pump Voltage
 290:Src/main.c    **** int16_t   FP_volt = 330;
 291:Src/main.c    **** int16_t   FP_duty = 100;
 292:Src/main.c    **** 
 293:Src/main.c    **** // CAN Tranceiver --------------------------------------------------
 294:Src/main.c    **** uint8_t   CAN_EN;
 295:Src/main.c    **** 
 296:Src/main.c    **** // ADXL345 3-axis acceration sensor --------------------------------
 297:Src/main.c    **** uint8_t   Gsens_EN;
 298:Src/main.c    **** // uint8_t   Gsens_X1;
 299:Src/main.c    **** // uint8_t   Gsens_X0;
 300:Src/main.c    **** int16_t   Gsens_X;
 301:Src/main.c    **** // uint8_t   Gsens_Y1;
 302:Src/main.c    **** // uint8_t   Gsens_Y0;
 303:Src/main.c    **** int16_t   Gsens_Y;
 304:Src/main.c    **** // uint8_t   Gsens_Z1;
 305:Src/main.c    **** // uint8_t   Gsens_Z0;
 306:Src/main.c    **** int16_t   Gsens_Z;
 307:Src/main.c    **** 
 308:Src/main.c    **** #define ADXL0_ADDR 0x1D
 309:Src/main.c    **** // ADXL345     I2C
 310:Src/main.c    **** // SDO/ALT   Address
 311:Src/main.c    **** //    H        0x1D
 312:Src/main.c    **** //    L        0x53
 313:Src/main.c    **** 
 314:Src/main.c    **** /*
 315:Src/main.c    **** void ADXL345_RegWrite(uint8_t slv_addr, uint8_t addr, uint8_t data){
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 7


 316:Src/main.c    ****   uint8_t i2c_buf[2];
 317:Src/main.c    ****   i2c_buf[0] = addr;
 318:Src/main.c    ****   i2c_buf[1] = data;  
 319:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1, slv_addr << 1, &i2c_buf, 2, 10);
 320:Src/main.c    **** }
 321:Src/main.c    **** 
 322:Src/main.c    **** int8_t ADXL345_RegRead_1byte(uint8_t slv_addr, uint8_t addr){
 323:Src/main.c    ****   uint8_t data;
 324:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1, slv_addr << 1, &addr, 1, 10);
 325:Src/main.c    ****   HAL_I2C_Master_Receive(&hi2c1, slv_addr << 1, &data, 1, 10);
 326:Src/main.c    ****   return data;
 327:Src/main.c    **** }
 328:Src/main.c    **** */
 329:Src/main.c    **** 
 330:Src/main.c    **** /* USER CODE END PV */
 331:Src/main.c    **** 
 332:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 333:Src/main.c    **** void SystemClock_Config(void);
 334:Src/main.c    **** /* USER CODE BEGIN PFP */
 335:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 336:Src/main.c    **** 
 337:Src/main.c    **** /* USER CODE END PFP */
 338:Src/main.c    **** 
 339:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 340:Src/main.c    **** /* USER CODE BEGIN 0 */
 341:Src/main.c    **** void draw_indicators(){
  29              		.loc 1 341 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 20
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
 342:Src/main.c    ****   uint8_t n;
 343:Src/main.c    ****   uint8_t x, y;
 344:Src/main.c    ****   // draw indicators
 345:Src/main.c    **** 
 346:Src/main.c    ****   for( n=0; n<N_idct; n++ ){
 347:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
  42              		.loc 1 347 0
  43 0002 0E4F     		ldr	r7, .L4
  44 0004 0E4D     		ldr	r5, .L4+4
  45 0006 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
  46 0008 0E4C     		ldr	r4, .L4+8
 341:Src/main.c    ****   uint8_t n;
  47              		.loc 1 341 0
  48 000a 85B0     		sub	sp, sp, #20
  49              	.LCFI1:
  50              		.cfi_def_cfa_offset 40
  51              		.loc 1 347 0
  52 000c 0926     		movs	r6, #9
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 8


  53 000e 0193     		str	r3, [sp, #4]
  54 0010 2846     		mov	r0, r5
  55 0012 0294     		str	r4, [sp, #8]
  56 0014 0096     		str	r6, [sp]
  57 0016 1B23     		movs	r3, #27
  58 0018 3522     		movs	r2, #53
  59 001a 4821     		movs	r1, #72
  60 001c FFF7FEFF 		bl	draw_IndicatorBox
  61              	.LVL1:
  62 0020 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
  63 0022 0096     		str	r6, [sp]
  64 0024 0534     		adds	r4, r4, #5
  65 0026 CDE90134 		strd	r3, r4, [sp, #4]
  66 002a 2846     		mov	r0, r5
  67 002c 1B23     		movs	r3, #27
  68 002e 3522     		movs	r2, #53
  69 0030 6521     		movs	r1, #101
  70 0032 FFF7FEFF 		bl	draw_IndicatorBox
  71              	.LVL2:
 348:Src/main.c    ****   }
 349:Src/main.c    **** }
  72              		.loc 1 349 0
  73 0036 05B0     		add	sp, sp, #20
  74              	.LCFI2:
  75              		.cfi_def_cfa_offset 20
  76              		@ sp needed
  77 0038 F0BD     		pop	{r4, r5, r6, r7, pc}
  78              	.L5:
  79 003a 00BF     		.align	2
  80              	.L4:
  81 003c 00000000 		.word	.LANCHOR1
  82 0040 00000000 		.word	u8g2
  83 0044 00000000 		.word	.LANCHOR0
  84              		.cfi_endproc
  85              	.LFE126:
  87              		.section	.text.draw_MeasLabels,"ax",%progbits
  88              		.align	1
  89              		.p2align 2,,3
  90              		.global	draw_MeasLabels
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  94              		.fpu fpv4-sp-d16
  96              	draw_MeasLabels:
  97              	.LFB127:
 350:Src/main.c    **** 
 351:Src/main.c    **** void draw_MeasLabels(){
  98              		.loc 1 351 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              	.LVL3:
 103 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 104              	.LCFI3:
 105              		.cfi_def_cfa_offset 20
 106              		.cfi_offset 4, -20
 107              		.cfi_offset 5, -16
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 9


 108              		.cfi_offset 6, -12
 109              		.cfi_offset 7, -8
 110              		.cfi_offset 14, -4
 352:Src/main.c    ****   uint8_t n;
 353:Src/main.c    ****   uint8_t x, y;
 354:Src/main.c    ****   // draw measurements label & unit
 355:Src/main.c    ****   for( n=0; n<3; n++ ){
 356:Src/main.c    **** 	  x = meas_x;
 357:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 358:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width1, meas_height, meas_name[n], meas_unit[n]);
 111              		.loc 1 358 0
 112 0002 334C     		ldr	r4, .L8
 113 0004 334E     		ldr	r6, .L8+4
 114 0006 344F     		ldr	r7, .L8+8
 351:Src/main.c    ****   uint8_t n;
 115              		.loc 1 351 0
 116 0008 87B0     		sub	sp, sp, #28
 117              	.LCFI4:
 118              		.cfi_def_cfa_offset 48
 119              		.loc 1 358 0
 120 000a 0C25     		movs	r5, #12
 121 000c 0297     		str	r7, [sp, #8]
 122 000e 2046     		mov	r0, r4
 123 0010 CDE90056 		strd	r5, r6, [sp]
 124 0014 4623     		movs	r3, #70
 125 0016 1022     		movs	r2, #16
 126 0018 0021     		movs	r1, #0
 127 001a FFF7FEFF 		bl	draw_MeasLabelUnit
 128              	.LVL4:
 129 001e 7A1D     		adds	r2, r7, #5
 130 0020 F31D     		adds	r3, r6, #7
 131 0022 CDE90132 		strd	r3, r2, [sp, #4]
 132 0026 2046     		mov	r0, r4
 133 0028 0095     		str	r5, [sp]
 134 002a 4623     		movs	r3, #70
 135 002c 1C22     		movs	r2, #28
 136 002e 0021     		movs	r1, #0
 137 0030 FFF7FEFF 		bl	draw_MeasLabelUnit
 138              	.LVL5:
 139 0034 07F10A02 		add	r2, r7, #10
 140 0038 06F10E03 		add	r3, r6, #14
 141 003c CDE90132 		strd	r3, r2, [sp, #4]
 142 0040 2046     		mov	r0, r4
 143 0042 0095     		str	r5, [sp]
 144 0044 4623     		movs	r3, #70
 145 0046 2822     		movs	r2, #40
 146 0048 0021     		movs	r1, #0
 147 004a FFF7FEFF 		bl	draw_MeasLabelUnit
 148              	.LVL6:
 359:Src/main.c    ****   }
 360:Src/main.c    ****   for( n=3; n<N_meas; n++ ){
 361:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 362:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 363:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width2, meas_height, meas_name[n], meas_unit[n]);
 149              		.loc 1 363 0
 150 004e 07F10F02 		add	r2, r7, #15
 151 0052 06F11503 		add	r3, r6, #21
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 10


 152 0056 CDE90132 		strd	r3, r2, [sp, #4]
 153 005a 2046     		mov	r0, r4
 154 005c 0095     		str	r5, [sp]
 155 005e 3823     		movs	r3, #56
 156 0060 1022     		movs	r2, #16
 157 0062 4821     		movs	r1, #72
 158 0064 FFF7FEFF 		bl	draw_MeasLabelUnit
 159              	.LVL7:
 160 0068 07F11402 		add	r2, r7, #20
 161 006c 06F11C03 		add	r3, r6, #28
 162 0070 CDE90132 		strd	r3, r2, [sp, #4]
 163 0074 2046     		mov	r0, r4
 164 0076 0095     		str	r5, [sp]
 165 0078 3823     		movs	r3, #56
 166 007a 1C22     		movs	r2, #28
 167 007c 4821     		movs	r1, #72
 168 007e 1937     		adds	r7, r7, #25
 169 0080 2336     		adds	r6, r6, #35
 170 0082 FFF7FEFF 		bl	draw_MeasLabelUnit
 171              	.LVL8:
 172 0086 CDE90167 		strd	r6, r7, [sp, #4]
 173 008a 2046     		mov	r0, r4
 174 008c 0095     		str	r5, [sp]
 175 008e 3823     		movs	r3, #56
 176 0090 2822     		movs	r2, #40
 177 0092 4821     		movs	r1, #72
 178 0094 FFF7FEFF 		bl	draw_MeasLabelUnit
 179              	.LVL9:
 364:Src/main.c    ****   }
 365:Src/main.c    **** 
 366:Src/main.c    ****   // Fuel Pump voltage & duty
 367:Src/main.c    ****   draw_MeasLabelUnit(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, "DUTY", "%  ");
 180              		.loc 1 367 0
 181 0098 104E     		ldr	r6, .L8+12
 182 009a 114B     		ldr	r3, .L8+16
 183 009c 0095     		str	r5, [sp]
 184 009e 2046     		mov	r0, r4
 185 00a0 CDE90136 		strd	r3, r6, [sp, #4]
 186 00a4 3422     		movs	r2, #52
 187 00a6 4623     		movs	r3, #70
 188 00a8 0021     		movs	r1, #0
 189 00aa FFF7FEFF 		bl	draw_MeasLabelUnit
 190              	.LVL10:
 368:Src/main.c    ****   draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, 100, 3, 0, 0, "%  ");
 191              		.loc 1 368 0
 192 00ae 0021     		movs	r1, #0
 193 00b0 0322     		movs	r2, #3
 194 00b2 6423     		movs	r3, #100
 195 00b4 CDE90132 		strd	r3, r2, [sp, #4]
 196 00b8 0596     		str	r6, [sp, #20]
 197 00ba 0095     		str	r5, [sp]
 198 00bc 2046     		mov	r0, r4
 199 00be CDE90311 		strd	r1, r1, [sp, #12]
 200 00c2 4623     		movs	r3, #70
 201 00c4 3422     		movs	r2, #52
 202 00c6 FFF7FEFF 		bl	draw_Value
 203              	.LVL11:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 11


 369:Src/main.c    **** }
 204              		.loc 1 369 0
 205 00ca 07B0     		add	sp, sp, #28
 206              	.LCFI5:
 207              		.cfi_def_cfa_offset 20
 208              		@ sp needed
 209 00cc F0BD     		pop	{r4, r5, r6, r7, pc}
 210              	.L9:
 211 00ce 00BF     		.align	2
 212              	.L8:
 213 00d0 00000000 		.word	u8g2
 214 00d4 00000000 		.word	.LANCHOR3
 215 00d8 00000000 		.word	.LANCHOR2
 216 00dc 00000000 		.word	.LC0
 217 00e0 04000000 		.word	.LC1
 218              		.cfi_endproc
 219              	.LFE127:
 221              		.section	.text.draw_MeasLabels_Rotary,"ax",%progbits
 222              		.align	1
 223              		.p2align 2,,3
 224              		.global	draw_MeasLabels_Rotary
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	draw_MeasLabels_Rotary:
 231              	.LFB128:
 370:Src/main.c    **** 
 371:Src/main.c    **** void draw_MeasLabels_Rotary(){
 232              		.loc 1 371 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              	.LVL12:
 237 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 238              	.LCFI6:
 239              		.cfi_def_cfa_offset 24
 240              		.cfi_offset 4, -24
 241              		.cfi_offset 5, -20
 242              		.cfi_offset 6, -16
 243              		.cfi_offset 7, -12
 244              		.cfi_offset 8, -8
 245              		.cfi_offset 14, -4
 246 0004 0D4E     		ldr	r6, .L14
 247 0006 0E4D     		ldr	r5, .L14+4
 372:Src/main.c    ****   uint8_t n;
 373:Src/main.c    ****   uint8_t x, y;
 374:Src/main.c    ****   // draw measurements label & unit
 375:Src/main.c    ****   for( n=0; n<4; n++ ){
 376:Src/main.c    **** 	  x = meas_x;
 377:Src/main.c    **** 	  y = (n % 4) * meas_height	+ meas_y;
 378:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width1, meas_height, meas_name[n], meas_unit[n]);
 248              		.loc 1 378 0
 249 0008 DFF83880 		ldr	r8, .L14+8
 371:Src/main.c    ****   uint8_t n;
 250              		.loc 1 371 0
 251 000c 84B0     		sub	sp, sp, #16
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 12


 252              	.LCFI7:
 253              		.cfi_def_cfa_offset 40
 371:Src/main.c    ****   uint8_t n;
 254              		.loc 1 371 0
 255 000e 1024     		movs	r4, #16
 256              		.loc 1 378 0
 257 0010 0C27     		movs	r7, #12
 258              	.LVL13:
 259              	.L11:
 260              		.loc 1 378 0 is_stmt 0 discriminator 3
 261 0012 2246     		mov	r2, r4
 262 0014 0C34     		adds	r4, r4, #12
 263              	.LVL14:
 264 0016 CDE90165 		strd	r6, r5, [sp, #4]
 265 001a 0097     		str	r7, [sp]
 266 001c 4623     		movs	r3, #70
 267 001e 0021     		movs	r1, #0
 268 0020 4046     		mov	r0, r8
 269 0022 E4B2     		uxtb	r4, r4
 270 0024 FFF7FEFF 		bl	draw_MeasLabelUnit
 271              	.LVL15:
 375:Src/main.c    **** 	  x = meas_x;
 272              		.loc 1 375 0 is_stmt 1 discriminator 3
 273 0028 402C     		cmp	r4, #64
 274 002a 06F10706 		add	r6, r6, #7
 275 002e 05F10505 		add	r5, r5, #5
 276 0032 EED1     		bne	.L11
 379:Src/main.c    ****   }
 380:Src/main.c    **** }
 277              		.loc 1 380 0
 278 0034 04B0     		add	sp, sp, #16
 279              	.LCFI8:
 280              		.cfi_def_cfa_offset 24
 281              		@ sp needed
 282 0036 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 283              	.L15:
 284 003a 00BF     		.align	2
 285              	.L14:
 286 003c 00000000 		.word	.LANCHOR3
 287 0040 00000000 		.word	.LANCHOR2
 288 0044 00000000 		.word	u8g2
 289              		.cfi_endproc
 290              	.LFE128:
 292              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 293              		.align	1
 294              		.p2align 2,,3
 295              		.global	HAL_ADC_ConvCpltCallback
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 299              		.fpu fpv4-sp-d16
 301              	HAL_ADC_ConvCpltCallback:
 302              	.LFB129:
 381:Src/main.c    **** 
 382:Src/main.c    **** 
 383:Src/main.c    **** // ADC buffer definition
 384:Src/main.c    **** enum{ ADC_BUFFER_LENGTH = 10 };
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 13


 385:Src/main.c    **** uint16_t g_ADCBuffer[ADC_BUFFER_LENGTH];
 386:Src/main.c    **** uint16_t adc[ADC_BUFFER_LENGTH];  
 387:Src/main.c    **** 
 388:Src/main.c    **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc){
 303              		.loc 1 388 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308              	.LVL16:
 309 0000 054B     		ldr	r3, .L19
 310 0002 064A     		ldr	r2, .L19+4
 311 0004 03F11400 		add	r0, r3, #20
 312              	.LVL17:
 313              	.L17:
 314              	.LBB25:
 389:Src/main.c    **** 	for (unsigned int i =0; i<ADC_BUFFER_LENGTH; i++){
 390:Src/main.c    **** 	   adc[i] = g_ADCBuffer[i];  // store the values in adc[]
 315              		.loc 1 390 0 discriminator 3
 316 0008 33F8021B 		ldrh	r1, [r3], #2
 317 000c 22F8021B 		strh	r1, [r2], #2	@ movhi
 389:Src/main.c    **** 	for (unsigned int i =0; i<ADC_BUFFER_LENGTH; i++){
 318              		.loc 1 389 0 discriminator 3
 319 0010 8342     		cmp	r3, r0
 320 0012 F9D1     		bne	.L17
 321              	.LBE25:
 391:Src/main.c    **** 	}
 392:Src/main.c    **** }
 322              		.loc 1 392 0
 323 0014 7047     		bx	lr
 324              	.L20:
 325 0016 00BF     		.align	2
 326              	.L19:
 327 0018 00000000 		.word	g_ADCBuffer
 328 001c 00000000 		.word	adc
 329              		.cfi_endproc
 330              	.LFE129:
 332              		.section	.text.SystemClock_Config,"ax",%progbits
 333              		.align	1
 334              		.p2align 2,,3
 335              		.global	SystemClock_Config
 336              		.syntax unified
 337              		.thumb
 338              		.thumb_func
 339              		.fpu fpv4-sp-d16
 341              	SystemClock_Config:
 342              	.LFB131:
 393:Src/main.c    **** 
 394:Src/main.c    **** /* USER CODE END 0 */
 395:Src/main.c    **** 
 396:Src/main.c    **** /**
 397:Src/main.c    ****   * @brief  The application entry point.
 398:Src/main.c    ****   * @retval int
 399:Src/main.c    ****   */
 400:Src/main.c    **** int main(void)
 401:Src/main.c    **** {
 402:Src/main.c    ****   /* USER CODE BEGIN 1 */
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 14


 403:Src/main.c    **** 
 404:Src/main.c    ****   /* USER CODE END 1 */
 405:Src/main.c    ****   
 406:Src/main.c    **** 
 407:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 408:Src/main.c    **** 
 409:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 410:Src/main.c    ****   HAL_Init();
 411:Src/main.c    **** 
 412:Src/main.c    ****   /* USER CODE BEGIN Init */
 413:Src/main.c    ****   uint8_t n;
 414:Src/main.c    ****   uint8_t x, y;
 415:Src/main.c    **** 
 416:Src/main.c    ****   uint8_t a = 0; // for dummy data
 417:Src/main.c    ****   uint8_t b = 0; // for dummy data
 418:Src/main.c    **** 
 419:Src/main.c    ****   // ROTARY
 420:Src/main.c    ****   uint16_t rpm_integral;
 421:Src/main.c    ****   uint8_t index_animation;
 422:Src/main.c    **** 
 423:Src/main.c    ****   // circular buffer for ADC data
 424:Src/main.c    ****   uint16_t circular_buffer_index = 0;
 425:Src/main.c    ****   int16_t circular_buffer[128]={};
 426:Src/main.c    **** 
 427:Src/main.c    ****   /* USER CODE END Init */
 428:Src/main.c    **** 
 429:Src/main.c    ****   /* Configure the system clock */
 430:Src/main.c    ****   SystemClock_Config();
 431:Src/main.c    **** 
 432:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 433:Src/main.c    **** 
 434:Src/main.c    ****   /* USER CODE END SysInit */
 435:Src/main.c    **** 
 436:Src/main.c    ****   /* Initialize all configured peripherals */
 437:Src/main.c    ****   MX_GPIO_Init();
 438:Src/main.c    ****   MX_DMA_Init();
 439:Src/main.c    ****   MX_ADC1_Init();
 440:Src/main.c    ****   MX_CAN_Init();
 441:Src/main.c    ****   MX_I2C1_Init();
 442:Src/main.c    ****   MX_SPI1_Init();
 443:Src/main.c    ****   MX_TIM1_Init();
 444:Src/main.c    ****   MX_TIM2_Init();
 445:Src/main.c    ****   MX_TIM3_Init();
 446:Src/main.c    ****   MX_TIM6_Init();
 447:Src/main.c    ****   MX_USART1_UART_Init();
 448:Src/main.c    ****   MX_USART2_UART_Init();
 449:Src/main.c    ****   MX_TIM7_Init();
 450:Src/main.c    ****   /* USER CODE BEGIN 2 */
 451:Src/main.c    **** 
 452:Src/main.c    ****   ///// PWM initialize ----------------------------------------------------------------
 453:Src/main.c    **** 
 454:Src/main.c    ****   ///// Timer /////
 455:Src/main.c    ****   // TIM1 - PWM for Fuel Pump Driver (Cycle 100kHz = 1MHz / 100count)
 456:Src/main.c    **** //  if (HAL_TIM_Base_Start_IT(&htim1) != HAL_OK){
 457:Src/main.c    ****   if (HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1) != HAL_OK){
 458:Src/main.c    ****     Error_Handler();
 459:Src/main.c    ****   }
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 15


 460:Src/main.c    **** 
 461:Src/main.c    ****   // TIM2 - display (Cycle 20ms = 1/100kHz x 2,000count)
 462:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim2) != HAL_OK){
 463:Src/main.c    ****     Error_Handler();
 464:Src/main.c    ****   }
 465:Src/main.c    **** 
 466:Src/main.c    ****   // TIM3 - Pulse counter for Tacho (f 200kHz, count 65535)
 467:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim3) != HAL_OK){
 468:Src/main.c    ****     Error_Handler();
 469:Src/main.c    ****   }
 470:Src/main.c    **** 
 471:Src/main.c    ****   // TIM6 - SW interrupt control (Cycle 100ms = 1/100kHz x 10,000count)
 472:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim6) != HAL_OK){
 473:Src/main.c    ****     Error_Handler();
 474:Src/main.c    ****   }
 475:Src/main.c    **** 
 476:Src/main.c    ****   // TIM7 - SW interrupt control (Cycle 1000ms = 1/32.757kHz x 32,768count)
 477:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim7) != HAL_OK){
 478:Src/main.c    ****     Error_Handler();
 479:Src/main.c    ****   }
 480:Src/main.c    **** 
 481:Src/main.c    **** 
 482:Src/main.c    ****   // ADC
 483:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, g_ADCBuffer, ADC_BUFFER_LENGTH);
 484:Src/main.c    **** 
 485:Src/main.c    ****   // UART1 interrupt setup for DEFI decoder
 486:Src/main.c    ****   HAL_UART_Receive_IT(&huart1, &UART1_Data, 1);
 487:Src/main.c    ****   // variables is defined in 'defi.h'
 488:Src/main.c    **** 
 489:Src/main.c    ****   // CAN initialization
 490:Src/main.c    ****   CAN_OBD_Init();
 491:Src/main.c    **** 
 492:Src/main.c    **** 
 493:Src/main.c    ****   // OLED diaplay initialization
 494:Src/main.c    ****   u8g2_Setup_ssd1309_128x64_noname2_f(&u8g2, U8G2_R0, u8x8_byte_4wire_hw_spi, u8x8_gpio_and_delay_S
 495:Src/main.c    **** 
 496:Src/main.c    ****   // OLED display Reset (must be more than 3us!!)
 497:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 0); // Set RES=L (OLED Reset)
 498:Src/main.c    ****   HAL_Delay(5);
 499:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 500:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 501:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 502:Src/main.c    ****   u8g2_SetContrast(&u8g2, 255); // set contrast
 503:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 504:Src/main.c    **** 
 505:Src/main.c    ****   // draw opening
 506:Src/main.c    ****   u8g2_DrawXBMP(&u8g2, 40, 0, logo_width, logo_height, logo_bits );
 507:Src/main.c    **** 
 508:Src/main.c    ****   u8g2_SetFont(&u8g2, u8g2_font_5x7_tf);
 509:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 510:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.2a");
 511:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 512:Src/main.c    **** 
 513:Src/main.c    ****   HAL_Delay(1000);
 514:Src/main.c    **** 
 515:Src/main.c    ****   u8g2_ClearBuffer(&u8g2);
 516:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 16


 517:Src/main.c    ****   HAL_UART_Transmit_printf(&huart2, "Hello. This is MFM.\n");
 518:Src/main.c    **** 
 519:Src/main.c    ****   // Set PWM Duty for Timer1 / Output1 (Asymmetric PWM2)
 520:Src/main.c    ****   TIM1->CCR1 = (100 - FP_duty);
 521:Src/main.c    **** 
 522:Src/main.c    ****   /* USER CODE END 2 */
 523:Src/main.c    **** 
 524:Src/main.c    ****   /* Infinite loop */
 525:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 526:Src/main.c    **** 
 527:Src/main.c    ****   draw_MeasLabels();
 528:Src/main.c    ****   draw_indicators();
 529:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 530:Src/main.c    **** 
 531:Src/main.c    **** 
 532:Src/main.c    ****   // I2C communication to ADXL345(3-axis G-sensor)
 533:Src/main.c    ****   Gsens_EN = Gsens_ADXL345_Init(0);
 534:Src/main.c    **** 
 535:Src/main.c    ****   while(1){
 536:Src/main.c    ****     /* USER CODE END WHILE */
 537:Src/main.c    **** 
 538:Src/main.c    ****     /* USER CODE BEGIN 3 */
 539:Src/main.c    ****     if( flag_status ){
 540:Src/main.c    ****       CAN_EN = 0;
 541:Src/main.c    ****       flag_status = 0;
 542:Src/main.c    ****     }
 543:Src/main.c    ****     ///// STATUS ----------------------------------------------------------------
 544:Src/main.c    ****     if( CAN_EN == 0 ){
 545:Src/main.c    ****       CAN_EN = CAN_Received;
 546:Src/main.c    ****     }
 547:Src/main.c    **** //    CAN_EN = CAN_Received;
 548:Src/main.c    ****     idct_status[0] = CAN_EN;
 549:Src/main.c    ****     idct_status[1] = Gsens_EN;
 550:Src/main.c    **** 
 551:Src/main.c    **** 
 552:Src/main.c    ****     ///// ADC ----------------------------------------------------------------
 553:Src/main.c    **** 
 554:Src/main.c    **** 		// read O2 sensor ADC output
 555:Src/main.c    **** 		O2_volt = (int16_t)(330 * (float)adc[0]/255);
 556:Src/main.c    **** 
 557:Src/main.c    **** 		// read Fuel Pump Voltage ADC output
 558:Src/main.c    **** 		FP_volt = (int16_t)((165/33)*33*(float)adc[1]/255);
 559:Src/main.c    ****     // Ressister attenation ratio '165/33'
 560:Src/main.c    ****     
 561:Src/main.c    ****     ///// Fuel Pump ----------------------------------------------------------------
 562:Src/main.c    ****     // Duty calculation
 563:Src/main.c    ****     if( (rpm >= 3000)|(DEFI_value[0] >= 0) ){
 564:Src/main.c    ****       FP_duty = 100;
 565:Src/main.c    ****     }else{
 566:Src/main.c    ****       FP_duty = (int16_t)(rpm/3000*100);
 567:Src/main.c    ****     }
 568:Src/main.c    ****     // Saturation process
 569:Src/main.c    ****     if( FP_duty > 100 ){
 570:Src/main.c    ****       FP_duty = 100;
 571:Src/main.c    ****     }else if( FP_duty < 60 ){
 572:Src/main.c    ****       FP_duty = 60;
 573:Src/main.c    ****     }
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 17


 574:Src/main.c    **** 
 575:Src/main.c    ****     ///// CAN ----------------------------------------------------------------
 576:Src/main.c    **** 
 577:Src/main.c    ****     //CAN_OBD_Response(MAP, rpm, SPEED, THROTTLE);
 578:Src/main.c    ****     CAN_OBD_Response(DEFI_value[0], rpm, 0x00, 0x00);
 579:Src/main.c    **** 
 580:Src/main.c    ****     ///// Measure data  ----------------------------------------------------------------
 581:Src/main.c    ****     defi_decoder(UART1_RxData); // DEFI decoder
 582:Src/main.c    **** 
 583:Src/main.c    ****     if( flag_meas == 1 ){
 584:Src/main.c    **** 
 585:Src/main.c    **** //      CAN_EN = 0;
 586:Src/main.c    **** 
 587:Src/main.c    ****       // I2C communication to ADXL345(3-axis G-sensor)
 588:Src/main.c    ****       if( Gsens_EN == 1 ){
 589:Src/main.c    ****         // Acceration 1G = 100
 590:Src/main.c    ****         Gsens_X = Gsens_ADXL345_Read_G('x', 0);
 591:Src/main.c    ****         Gsens_Y = Gsens_ADXL345_Read_G('y', 0);
 592:Src/main.c    ****         Gsens_Z = Gsens_ADXL345_Read_G('z', 0);
 593:Src/main.c    **** 
 594:Src/main.c    ****         HAL_UART_Transmit_printf(&huart2, "(%d,%d,%d)\n", Gsens_X, Gsens_Y, Gsens_Z); // debug
 595:Src/main.c    ****         
 596:Src/main.c    ****       }
 597:Src/main.c    **** 
 598:Src/main.c    **** /*
 599:Src/main.c    ****   	  // start of create dummy data for debug
 600:Src/main.c    ****       if( rpm <= 8200 ){
 601:Src/main.c    ****           rpm = rpm + (int)(20*MT[gear]);
 602:Src/main.c    ****           //rpm=rpm+10;
 603:Src/main.c    ****       }else{
 604:Src/main.c    ****         if( gear < 4 ){
 605:Src/main.c    ****           gear++;
 606:Src/main.c    ****           rpm = (double)speed / (0.002*60.0) * (MT[gear]*4.1);
 607:Src/main.c    ****         }else{
 608:Src/main.c    ****           gear = 0;
 609:Src/main.c    ****           rpm = 1000;
 610:Src/main.c    ****         }
 611:Src/main.c    ****       }
 612:Src/main.c    ****       speed = (double)rpm*0.002*60.0/MT[gear]/4.1;
 613:Src/main.c    **** 
 614:Src/main.c    ****       if( a >= 150){
 615:Src/main.c    ****         a = 0;
 616:Src/main.c    ****       }else{
 617:Src/main.c    ****         a++;
 618:Src/main.c    ****       }
 619:Src/main.c    ****   	  // end of create dummy data for debug
 620:Src/main.c    **** */
 621:Src/main.c    **** 
 622:Src/main.c    ****       meas_value[0] = DEFI_value[0];  // MAP
 623:Src/main.c    **** 		  meas_value[1] = DEFI_value[2];  // OILP
 624:Src/main.c    **** 			meas_value[2] = FP_volt;        // FuelPump Voltage
 625:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 626:Src/main.c    **** 			meas_value[4] = DEFI_value[5];  // OILT
 627:Src/main.c    **** 		  meas_value[5] = O2_volt;        // O2
 628:Src/main.c    **** 
 629:Src/main.c    ****       flag_meas = 0; // enable again by TIM2 interrupt
 630:Src/main.c    ****     }
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 18


 631:Src/main.c    **** 
 632:Src/main.c    **** 
 633:Src/main.c    ****     ///// FP driver ----------------------------------------------------------------
 634:Src/main.c    ****     // Set PWM Duty for Timer1 / Output1 (Asymmetric PWM2)
 635:Src/main.c    ****     TIM1->CCR1 = (100 - FP_duty);
 636:Src/main.c    **** 
 637:Src/main.c    **** 
 638:Src/main.c    ****     ///// Switch ----------------------------------------------------------------
 639:Src/main.c    ****     if( flag_sw != 0 ){
 640:Src/main.c    ****       switch( flag_sw ){
 641:Src/main.c    ****         case 1:
 642:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "UP ");
 643:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 644:Src/main.c    ****           // SW "UP"
 645:Src/main.c    ****           if( setting == 0 ){
 646:Src/main.c    ****             if( mode == N_mode-1 ){
 647:Src/main.c    ****               mode = 0;
 648:Src/main.c    ****             }else{
 649:Src/main.c    ****               mode++;
 650:Src/main.c    ****             }
 651:Src/main.c    ****           }
 652:Src/main.c    ****           break;
 653:Src/main.c    ****         case 2:
 654:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "DOWN ");
 655:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 656:Src/main.c    ****           // SW "DOWN"
 657:Src/main.c    ****           if( setting == 0 ){
 658:Src/main.c    ****             if( mode == 0 ){
 659:Src/main.c    ****               mode = N_mode-1;
 660:Src/main.c    ****             }else{
 661:Src/main.c    ****               mode--;
 662:Src/main.c    ****             }
 663:Src/main.c    ****           }
 664:Src/main.c    ****           break;
 665:Src/main.c    ****         case 3:
 666:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "ENTER ");
 667:Src/main.c    ****           HAL_NVIC_DisableIRQ (EXTI1_IRQn);
 668:Src/main.c    ****           // SW "ENTER"
 669:Src/main.c    **** 
 670:Src/main.c    ****           // if( setting == 0 ){
 671:Src/main.c    ****           //   mode = cursor;
 672:Src/main.c    ****           //   u8g2_ClearBuffer(&u8g2);
 673:Src/main.c    ****           // }else{
 674:Src/main.c    ****           //   mode = 10;
 675:Src/main.c    ****           // }
 676:Src/main.c    ****           // break;
 677:Src/main.c    **** 
 678:Src/main.c    ****         default:
 679:Src/main.c    ****           break;
 680:Src/main.c    ****       }
 681:Src/main.c    ****       u8g2_ClearBuffer(&u8g2);
 682:Src/main.c    ****       if( mode == MODE_BAR_METER ){
 683:Src/main.c    ****         draw_MeasLabels();
 684:Src/main.c    ****         draw_indicators();
 685:Src/main.c    **** 
 686:Src/main.c    ****       }else if( mode == MODE_CIRCULAR_METER ){
 687:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 19


 688:Src/main.c    ****           x = meas_C_x;
 689:Src/main.c    ****           y = n * meas_C_height	+ meas_C_y;
 690:Src/main.c    ****           draw_MeasLabelUnit(&u8g2, x, y, meas_C_width, meas_C_height, meas_name[n], meas_unit[n]);
 691:Src/main.c    ****         }
 692:Src/main.c    ****         // draw indicators
 693:Src/main.c    ****         for( n=0; n<4; n++ ){
 694:Src/main.c    ****           draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_s
 695:Src/main.c    ****         }
 696:Src/main.c    ****         draw_CircularMeter_Init(32, 32, 31, 3, -60, 300, 10, 20, -1, -80, 120);
 697:Src/main.c    **** //        draw_CircularMeter_Init(26, 26, 26, 3, -60, 300, 10, 20, -1, -80, 120);
 698:Src/main.c    ****         draw_CircularMeter(&u8g2, 0);
 699:Src/main.c    **** /*
 700:Src/main.c    ****       }else if( mode == MODE_ROTARY ){
 701:Src/main.c    ****         draw_MeasLabels_Rotary();
 702:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 2, meas_width1, meas_height, "TACHO", "rpm");
 703:Src/main.c    **** */
 704:Src/main.c    ****       }else if( mode == MODE_SCOPE_MAP ){
 705:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_m
 706:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "MAP", "kPa");
 707:Src/main.c    **** 
 708:Src/main.c    ****       }else if( mode == MODE_SCOPE_Gsens ){
 709:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, -200, 200, 4);
 710:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "LatG", "G");
 711:Src/main.c    **** 
 712:Src/main.c    ****       }
 713:Src/main.c    ****       u8g2_SendBuffer(&u8g2);
 714:Src/main.c    ****       TIM6->CNT = 0;
 715:Src/main.c    ****       flag_sw = 0;
 716:Src/main.c    ****     }
 717:Src/main.c    **** 
 718:Src/main.c    **** 
 719:Src/main.c    ****     ///// Display sequence ----------------------------------------------------------------
 720:Src/main.c    ****     if( flag_disp ){
 721:Src/main.c    **** 
 722:Src/main.c    ****       ///// multi meter /////
 723:Src/main.c    ****       if( mode == MODE_BAR_METER ){
 724:Src/main.c    ****         // update Fuel Pump Voltage
 725:Src/main.c    ****         draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, FP_duty, 3, 0, 0, "%  ");
 726:Src/main.c    **** 
 727:Src/main.c    ****         // draw bar graph
 728:Src/main.c    ****         draw_BarGraph(&u8g2, rpmbar_x, rpmbar_y, rpmbar_width, rpmbar_height, rpm, rpm_min, rpm_max
 729:Src/main.c    **** 
 730:Src/main.c    ****         // draw measurement data
 731:Src/main.c    ****         for( n=0; n<3; n++ ){
 732:Src/main.c    ****           x = meas_x;
 733:Src/main.c    ****           y = (n % 3) * meas_height	+ meas_y;
 734:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac
 735:Src/main.c    ****         }
 736:Src/main.c    ****         for( n=3; n<N_meas; n++ ){
 737:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 738:Src/main.c    ****           y = (n % 3) * meas_height	+ meas_y;
 739:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 740:Src/main.c    ****         }
 741:Src/main.c    ****         
 742:Src/main.c    ****         draw_indicators();
 743:Src/main.c    **** 
 744:Src/main.c    ****       ///// Circular Meter /////
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 20


 745:Src/main.c    ****       }else if( mode == MODE_CIRCULAR_METER ){
 746:Src/main.c    **** 
 747:Src/main.c    ****         draw_CircularMeter(&u8g2, meas_value[0]);
 748:Src/main.c    ****         
 749:Src/main.c    ****         draw_Value(&u8g2, 36, 33, 30, 16, meas_value[0], 3, 2, 1, "");
 750:Src/main.c    ****         draw_MeasUnit(&u8g2, 38, 40, 28, 16, "kPa");
 751:Src/main.c    **** /*        
 752:Src/main.c    ****         draw_Value(&u8g2, 34, 28, 30, 16, meas_value[0], 3, 2, 1, "");
 753:Src/main.c    ****         draw_MeasUnit(&u8g2, 36, 36, 28, 16, "kPa");
 754:Src/main.c    **** */
 755:Src/main.c    **** 
 756:Src/main.c    ****         // draw measurement data
 757:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 758:Src/main.c    ****           x = meas_C_x;
 759:Src/main.c    ****           y = n * meas_C_height	+ meas_C_y;
 760:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_C_width, meas_C_height, meas_value[n], meas_digit[n], meas_f
 761:Src/main.c    ****         }
 762:Src/main.c    **** 
 763:Src/main.c    **** /*
 764:Src/main.c    ****       }else if( mode == MODE_ROTARY ){
 765:Src/main.c    **** 
 766:Src/main.c    ****         rpm_integral = rpm_integral + rpm;
 767:Src/main.c    ****         if( rpm_integral > 4000 ){
 768:Src/main.c    ****           rpm_integral = rpm_integral - 4000;
 769:Src/main.c    ****         }
 770:Src/main.c    ****         index_animation = (uint8_t)( (float)rpm_integral / 1000.0 );
 771:Src/main.c    **** 
 772:Src/main.c    ****         draw_Rotary(&u8g2, 58, 2, index_animation);
 773:Src/main.c    **** 
 774:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 2, meas_width1, meas_height, "TACHO", "rpm");
 775:Src/main.c    ****         draw_Value(&u8g2, 0, 2, meas_width1, meas_height, rpm, 4, 0, 0, "rpm");
 776:Src/main.c    **** 
 777:Src/main.c    ****         draw_MeasLabels_Rotary();
 778:Src/main.c    ****         // draw measurement data
 779:Src/main.c    ****         for( n=0; n<4; n++ ){
 780:Src/main.c    ****           x = meas_x;
 781:Src/main.c    ****           y = (n % 4) * meas_height	+ meas_y;
 782:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac
 783:Src/main.c    ****         }
 784:Src/main.c    **** */
 785:Src/main.c    **** 
 786:Src/main.c    ****       ///// Scope /////
 787:Src/main.c    ****       }else if( mode == MODE_SCOPE_MAP ){
 788:Src/main.c    **** 
 789:Src/main.c    ****         if( circular_buffer_index > 0 ){
 790:Src/main.c    ****           circular_buffer_index--;
 791:Src/main.c    ****         }else{
 792:Src/main.c    ****           circular_buffer_index = 128;
 793:Src/main.c    ****         }
 794:Src/main.c    ****         circular_buffer[circular_buffer_index] = meas_value[0];
 795:Src/main.c    **** 
 796:Src/main.c    ****         // draw wave
 797:Src/main.c    ****         draw_Wave(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_max, c
 798:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 799:Src/main.c    **** 
 800:Src/main.c    ****       ///// G-Scope /////
 801:Src/main.c    ****       }else if( mode == MODE_SCOPE_Gsens ){
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 21


 802:Src/main.c    **** 
 803:Src/main.c    ****         if( circular_buffer_index > 0 ){
 804:Src/main.c    ****           circular_buffer_index--;
 805:Src/main.c    ****         }else{
 806:Src/main.c    ****           circular_buffer_index = 128;
 807:Src/main.c    ****         }
 808:Src/main.c    ****         circular_buffer[circular_buffer_index] = Gsens_Y;
 809:Src/main.c    **** 
 810:Src/main.c    ****         // draw wave
 811:Src/main.c    ****         draw_Wave(&u8g2, wave_x, wave_y, wave_width, wave_height, -200, +200, circular_buffer, circ
 812:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 813:Src/main.c    **** 
 814:Src/main.c    ****       // mode setting
 815:Src/main.c    ****       }else if( mode == MODE_SETTING ){
 816:Src/main.c    **** 
 817:Src/main.c    ****         u8g2_ClearBuffer(&u8g2);
 818:Src/main.c    ****         u8g2_SetFont(&u8g2, u8g2_font_7x14B_tf);
 819:Src/main.c    ****         u8g2_DrawStr(&u8g2, 2, 15, "Mode Setting" );
 820:Src/main.c    ****         if( cursor == 0 ){
 821:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, ">" );
 822:Src/main.c    ****         }else{
 823:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, " " );
 824:Src/main.c    ****         }
 825:Src/main.c    ****         u8g2_DrawStr(&u8g2,10, 30, "Multi-Meter" );
 826:Src/main.c    ****         if( cursor == 1 ){
 827:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 828:Src/main.c    ****         }else{
 829:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, " " );
 830:Src/main.c    ****         }
 831:Src/main.c    ****         u8g2_DrawStr(&u8g2,10, 45, "Scope" );
 832:Src/main.c    ****         u8g2_SendBuffer(&u8g2);
 833:Src/main.c    ****       }
 834:Src/main.c    ****       // send buffer
 835:Src/main.c    ****       u8g2_SendBuffer(&u8g2);
 836:Src/main.c    **** 
 837:Src/main.c    ****       flag_disp = 0; // enable again by TIM2 interrupt
 838:Src/main.c    ****     }
 839:Src/main.c    **** 
 840:Src/main.c    ****   }
 841:Src/main.c    ****   /* USER CODE END 3 */
 842:Src/main.c    **** }
 843:Src/main.c    **** 
 844:Src/main.c    **** /**
 845:Src/main.c    ****   * @brief System Clock Configuration
 846:Src/main.c    ****   * @retval None
 847:Src/main.c    ****   */
 848:Src/main.c    **** void SystemClock_Config(void)
 849:Src/main.c    **** {
 343              		.loc 1 849 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 88
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347 0000 30B5     		push	{r4, r5, lr}
 348              	.LCFI9:
 349              		.cfi_def_cfa_offset 12
 350              		.cfi_offset 4, -12
 351              		.cfi_offset 5, -8
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 22


 352              		.cfi_offset 14, -4
 353 0002 97B0     		sub	sp, sp, #92
 354              	.LCFI10:
 355              		.cfi_def_cfa_offset 104
 850:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 356              		.loc 1 850 0
 357 0004 0023     		movs	r3, #0
 851:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 852:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 853:Src/main.c    **** 
 854:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 855:Src/main.c    ****   */
 856:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 358              		.loc 1 856 0
 359 0006 0324     		movs	r4, #3
 857:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 360              		.loc 1 857 0
 361 0008 4FF4A022 		mov	r2, #327680
 858:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 859:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 362              		.loc 1 859 0
 363 000c 0120     		movs	r0, #1
 850:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 364              		.loc 1 850 0
 365 000e CDE90E33 		strd	r3, r3, [sp, #56]
 366 0012 1293     		str	r3, [sp, #72]
 851:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 367              		.loc 1 851 0
 368 0014 0193     		str	r3, [sp, #4]
 852:Src/main.c    **** 
 369              		.loc 1 852 0
 370 0016 0693     		str	r3, [sp, #24]
 851:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 371              		.loc 1 851 0
 372 0018 CDE90233 		strd	r3, r3, [sp, #8]
 373 001c CDE90433 		strd	r3, r3, [sp, #16]
 852:Src/main.c    **** 
 374              		.loc 1 852 0
 375 0020 CDE90733 		strd	r3, r3, [sp, #28]
 376 0024 CDE90933 		strd	r3, r3, [sp, #36]
 377 0028 0B93     		str	r3, [sp, #44]
 860:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 378              		.loc 1 860 0
 379 002a 1021     		movs	r1, #16
 856:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 380              		.loc 1 856 0
 381 002c 0C94     		str	r4, [sp, #48]
 857:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 382              		.loc 1 857 0
 383 002e 0D92     		str	r2, [sp, #52]
 861:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 384              		.loc 1 861 0
 385 0030 0224     		movs	r4, #2
 862:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 386              		.loc 1 862 0
 387 0032 4FF48032 		mov	r2, #65536
 859:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 23


 388              		.loc 1 859 0
 389 0036 1090     		str	r0, [sp, #64]
 863:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 390              		.loc 1 863 0
 391 0038 4FF4E013 		mov	r3, #1835008
 864:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 392              		.loc 1 864 0
 393 003c 0CA8     		add	r0, sp, #48
 860:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 394              		.loc 1 860 0
 395 003e 1191     		str	r1, [sp, #68]
 862:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 396              		.loc 1 862 0
 397 0040 CDE91342 		strd	r4, r2, [sp, #76]
 863:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 398              		.loc 1 863 0
 399 0044 1593     		str	r3, [sp, #84]
 400              		.loc 1 864 0
 401 0046 FFF7FEFF 		bl	HAL_RCC_OscConfig
 402              	.LVL18:
 403 004a 00B1     		cbz	r0, .L22
 404              	.L23:
 405 004c FEE7     		b	.L23
 406              	.L22:
 407 004e 0346     		mov	r3, r0
 865:Src/main.c    ****   {
 866:Src/main.c    ****     Error_Handler();
 867:Src/main.c    ****   }
 868:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 869:Src/main.c    ****   */
 870:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 871:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 872:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 873:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 874:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 408              		.loc 1 874 0
 409 0050 4FF48062 		mov	r2, #1024
 875:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 876:Src/main.c    **** 
 877:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 410              		.loc 1 877 0
 411 0054 01A8     		add	r0, sp, #4
 412 0056 2146     		mov	r1, r4
 870:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 413              		.loc 1 870 0
 414 0058 0F25     		movs	r5, #15
 873:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 415              		.loc 1 873 0
 416 005a 0393     		str	r3, [sp, #12]
 875:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 417              		.loc 1 875 0
 418 005c 0593     		str	r3, [sp, #20]
 872:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 419              		.loc 1 872 0
 420 005e 0294     		str	r4, [sp, #8]
 870:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 421              		.loc 1 870 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 24


 422 0060 0195     		str	r5, [sp, #4]
 874:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 423              		.loc 1 874 0
 424 0062 0492     		str	r2, [sp, #16]
 425              		.loc 1 877 0
 426 0064 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 427              	.LVL19:
 428 0068 0346     		mov	r3, r0
 429 006a 00B1     		cbz	r0, .L24
 430              	.L25:
 431 006c FEE7     		b	.L25
 432              	.L24:
 878:Src/main.c    ****   {
 879:Src/main.c    ****     Error_Handler();
 880:Src/main.c    ****   }
 881:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1
 433              		.loc 1 881 0
 434 006e 41F22102 		movw	r2, #4129
 882:Src/main.c    ****                               |RCC_PERIPHCLK_TIM1;
 883:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 884:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 885:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 886:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 435              		.loc 1 886 0
 436 0072 06A8     		add	r0, sp, #24
 884:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 437              		.loc 1 884 0
 438 0074 CDE90833 		strd	r3, r3, [sp, #32]
 885:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 439              		.loc 1 885 0
 440 0078 0B93     		str	r3, [sp, #44]
 881:Src/main.c    ****                               |RCC_PERIPHCLK_TIM1;
 441              		.loc 1 881 0
 442 007a 0692     		str	r2, [sp, #24]
 443              		.loc 1 886 0
 444 007c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 445              	.LVL20:
 446 0080 00B1     		cbz	r0, .L21
 447              	.L27:
 448 0082 FEE7     		b	.L27
 449              	.L21:
 887:Src/main.c    ****   {
 888:Src/main.c    ****     Error_Handler();
 889:Src/main.c    ****   }
 890:Src/main.c    **** }
 450              		.loc 1 890 0
 451 0084 17B0     		add	sp, sp, #92
 452              	.LCFI11:
 453              		.cfi_def_cfa_offset 12
 454              		@ sp needed
 455 0086 30BD     		pop	{r4, r5, pc}
 456              		.cfi_endproc
 457              	.LFE131:
 459              		.section	.text.startup.main,"ax",%progbits
 460              		.align	1
 461              		.p2align 2,,3
 462              		.global	main
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 25


 463              		.syntax unified
 464              		.thumb
 465              		.thumb_func
 466              		.fpu fpv4-sp-d16
 468              	main:
 469              	.LFB130:
 401:Src/main.c    ****   /* USER CODE BEGIN 1 */
 470              		.loc 1 401 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 272
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 475              	.LCFI12:
 476              		.cfi_def_cfa_offset 36
 477              		.cfi_offset 4, -36
 478              		.cfi_offset 5, -32
 479              		.cfi_offset 6, -28
 480              		.cfi_offset 7, -24
 481              		.cfi_offset 8, -20
 482              		.cfi_offset 9, -16
 483              		.cfi_offset 10, -12
 484              		.cfi_offset 11, -8
 485              		.cfi_offset 14, -4
 486 0004 2DED048B 		vpush.64	{d8, d9}
 487              	.LCFI13:
 488              		.cfi_def_cfa_offset 52
 489              		.cfi_offset 80, -52
 490              		.cfi_offset 81, -48
 491              		.cfi_offset 82, -44
 492              		.cfi_offset 83, -40
 493 0008 CDB0     		sub	sp, sp, #308
 494              	.LCFI14:
 495              		.cfi_def_cfa_offset 360
 410:Src/main.c    **** 
 496              		.loc 1 410 0
 497 000a FFF7FEFF 		bl	HAL_Init
 498              	.LVL21:
 425:Src/main.c    **** 
 499              		.loc 1 425 0
 500 000e 0021     		movs	r1, #0
 501 0010 4FF48072 		mov	r2, #256
 502 0014 0CA8     		add	r0, sp, #48
 503 0016 FFF7FEFF 		bl	memset
 504              	.LVL22:
 430:Src/main.c    **** 
 505              		.loc 1 430 0
 506 001a FFF7FEFF 		bl	SystemClock_Config
 507              	.LVL23:
 437:Src/main.c    ****   MX_DMA_Init();
 508              		.loc 1 437 0
 509 001e FFF7FEFF 		bl	MX_GPIO_Init
 510              	.LVL24:
 438:Src/main.c    ****   MX_ADC1_Init();
 511              		.loc 1 438 0
 512 0022 FFF7FEFF 		bl	MX_DMA_Init
 513              	.LVL25:
 439:Src/main.c    ****   MX_CAN_Init();
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 26


 514              		.loc 1 439 0
 515 0026 FFF7FEFF 		bl	MX_ADC1_Init
 516              	.LVL26:
 440:Src/main.c    ****   MX_I2C1_Init();
 517              		.loc 1 440 0
 518 002a FFF7FEFF 		bl	MX_CAN_Init
 519              	.LVL27:
 441:Src/main.c    ****   MX_SPI1_Init();
 520              		.loc 1 441 0
 521 002e FFF7FEFF 		bl	MX_I2C1_Init
 522              	.LVL28:
 442:Src/main.c    ****   MX_TIM1_Init();
 523              		.loc 1 442 0
 524 0032 FFF7FEFF 		bl	MX_SPI1_Init
 525              	.LVL29:
 443:Src/main.c    ****   MX_TIM2_Init();
 526              		.loc 1 443 0
 527 0036 FFF7FEFF 		bl	MX_TIM1_Init
 528              	.LVL30:
 444:Src/main.c    ****   MX_TIM3_Init();
 529              		.loc 1 444 0
 530 003a FFF7FEFF 		bl	MX_TIM2_Init
 531              	.LVL31:
 445:Src/main.c    ****   MX_TIM6_Init();
 532              		.loc 1 445 0
 533 003e FFF7FEFF 		bl	MX_TIM3_Init
 534              	.LVL32:
 446:Src/main.c    ****   MX_USART1_UART_Init();
 535              		.loc 1 446 0
 536 0042 FFF7FEFF 		bl	MX_TIM6_Init
 537              	.LVL33:
 447:Src/main.c    ****   MX_USART2_UART_Init();
 538              		.loc 1 447 0
 539 0046 FFF7FEFF 		bl	MX_USART1_UART_Init
 540              	.LVL34:
 448:Src/main.c    ****   MX_TIM7_Init();
 541              		.loc 1 448 0
 542 004a FFF7FEFF 		bl	MX_USART2_UART_Init
 543              	.LVL35:
 449:Src/main.c    ****   /* USER CODE BEGIN 2 */
 544              		.loc 1 449 0
 545 004e FFF7FEFF 		bl	MX_TIM7_Init
 546              	.LVL36:
 457:Src/main.c    ****     Error_Handler();
 547              		.loc 1 457 0
 548 0052 0021     		movs	r1, #0
 549 0054 B248     		ldr	r0, .L111
 550 0056 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 551              	.LVL37:
 552 005a 00B1     		cbz	r0, .L30
 553              	.L31:
 554 005c FEE7     		b	.L31
 555              	.L30:
 462:Src/main.c    ****     Error_Handler();
 556              		.loc 1 462 0
 557 005e B148     		ldr	r0, .L111+4
 558 0060 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 27


 559              	.LVL38:
 560 0064 00B1     		cbz	r0, .L32
 561              	.L33:
 562 0066 FEE7     		b	.L33
 563              	.L32:
 467:Src/main.c    ****     Error_Handler();
 564              		.loc 1 467 0
 565 0068 AF48     		ldr	r0, .L111+8
 566 006a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 567              	.LVL39:
 568 006e 00B1     		cbz	r0, .L34
 569              	.L35:
 570 0070 FEE7     		b	.L35
 571              	.L34:
 472:Src/main.c    ****     Error_Handler();
 572              		.loc 1 472 0
 573 0072 AE48     		ldr	r0, .L111+12
 574 0074 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 575              	.LVL40:
 576 0078 00B1     		cbz	r0, .L36
 577              	.L37:
 578 007a FEE7     		b	.L37
 579              	.L36:
 477:Src/main.c    ****     Error_Handler();
 580              		.loc 1 477 0
 581 007c AC48     		ldr	r0, .L111+16
 582 007e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 583              	.LVL41:
 584 0082 0646     		mov	r6, r0
 585 0084 00B1     		cbz	r0, .L38
 586              	.L39:
 587 0086 FEE7     		b	.L39
 588              	.L38:
 483:Src/main.c    **** 
 589              		.loc 1 483 0
 590 0088 0A22     		movs	r2, #10
 591 008a AA49     		ldr	r1, .L111+20
 592 008c AA48     		ldr	r0, .L111+24
 520:Src/main.c    **** 
 593              		.loc 1 520 0
 594 008e AB4D     		ldr	r5, .L111+28
 595 0090 DFF82C83 		ldr	r8, .L111+160
 596 0094 DFF82CA3 		ldr	r10, .L111+164
 597 0098 A94C     		ldr	r4, .L111+32
 598 009a DFF82C93 		ldr	r9, .L111+168
 599 009e DFF82CB3 		ldr	fp, .L111+172
 600              	.LBB26:
 555:Src/main.c    **** 
 601              		.loc 1 555 0
 602 00a2 9FEDA89A 		vldr.32	s18, .L111+36
 603 00a6 9FEDA88A 		vldr.32	s16, .L111+40
 558:Src/main.c    ****     // Ressister attenation ratio '165/33'
 604              		.loc 1 558 0
 605 00aa DFEDA88A 		vldr.32	s17, .L111+44
 606              	.LBE26:
 483:Src/main.c    **** 
 607              		.loc 1 483 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 28


 608 00ae FFF7FEFF 		bl	HAL_ADC_Start_DMA
 609              	.LVL42:
 486:Src/main.c    ****   // variables is defined in 'defi.h'
 610              		.loc 1 486 0
 611 00b2 0122     		movs	r2, #1
 612 00b4 A649     		ldr	r1, .L111+48
 613 00b6 A748     		ldr	r0, .L111+52
 614 00b8 FFF7FEFF 		bl	HAL_UART_Receive_IT
 615              	.LVL43:
 490:Src/main.c    **** 
 616              		.loc 1 490 0
 617 00bc FFF7FEFF 		bl	CAN_OBD_Init
 618              	.LVL44:
 494:Src/main.c    **** 
 619              		.loc 1 494 0
 620 00c0 A54B     		ldr	r3, .L111+56
 621 00c2 A64A     		ldr	r2, .L111+60
 622 00c4 A649     		ldr	r1, .L111+64
 623 00c6 A748     		ldr	r0, .L111+68
 624 00c8 FFF7FEFF 		bl	u8g2_Setup_ssd1309_128x64_noname2_f
 625              	.LVL45:
 497:Src/main.c    ****   HAL_Delay(5);
 626              		.loc 1 497 0
 627 00cc 3246     		mov	r2, r6
 628 00ce 0821     		movs	r1, #8
 629 00d0 A548     		ldr	r0, .L111+72
 630 00d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 631              	.LVL46:
 498:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 632              		.loc 1 498 0
 633 00d6 0520     		movs	r0, #5
 634 00d8 FFF7FEFF 		bl	HAL_Delay
 635              	.LVL47:
 499:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 636              		.loc 1 499 0
 637 00dc 0122     		movs	r2, #1
 638 00de 0821     		movs	r1, #8
 639 00e0 A148     		ldr	r0, .L111+72
 640 00e2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 641              	.LVL48:
 500:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 642              		.loc 1 500 0
 643 00e6 9F48     		ldr	r0, .L111+68
 644 00e8 FFF7FEFF 		bl	u8x8_InitDisplay
 645              	.LVL49:
 501:Src/main.c    ****   u8g2_SetContrast(&u8g2, 255); // set contrast
 646              		.loc 1 501 0
 647 00ec 3146     		mov	r1, r6
 648 00ee 9D48     		ldr	r0, .L111+68
 649 00f0 FFF7FEFF 		bl	u8x8_SetPowerSave
 650              	.LVL50:
 502:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 651              		.loc 1 502 0
 652 00f4 FF21     		movs	r1, #255
 653 00f6 9B48     		ldr	r0, .L111+68
 654 00f8 FFF7FEFF 		bl	u8x8_SetContrast
 655              	.LVL51:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 29


 503:Src/main.c    **** 
 656              		.loc 1 503 0
 657 00fc 9948     		ldr	r0, .L111+68
 658 00fe FFF7FEFF 		bl	u8g2_ClearDisplay
 659              	.LVL52:
 506:Src/main.c    **** 
 660              		.loc 1 506 0
 661 0102 9A4B     		ldr	r3, .L111+76
 662 0104 0193     		str	r3, [sp, #4]
 663 0106 3023     		movs	r3, #48
 664 0108 0093     		str	r3, [sp]
 665 010a 3246     		mov	r2, r6
 666 010c 2821     		movs	r1, #40
 667 010e 9548     		ldr	r0, .L111+68
 668 0110 FFF7FEFF 		bl	u8g2_DrawXBMP
 669              	.LVL53:
 508:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 670              		.loc 1 508 0
 671 0114 9649     		ldr	r1, .L111+80
 672 0116 9348     		ldr	r0, .L111+68
 673 0118 FFF7FEFF 		bl	u8g2_SetFont
 674              	.LVL54:
 509:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.2a");
 675              		.loc 1 509 0
 676 011c 954B     		ldr	r3, .L111+84
 677 011e 9148     		ldr	r0, .L111+68
 678 0120 3722     		movs	r2, #55
 679 0122 1021     		movs	r1, #16
 680 0124 FFF7FEFF 		bl	u8g2_DrawStr
 681              	.LVL55:
 510:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 682              		.loc 1 510 0
 683 0128 934B     		ldr	r3, .L111+88
 684 012a 8E48     		ldr	r0, .L111+68
 685 012c 4022     		movs	r2, #64
 686 012e 2821     		movs	r1, #40
 687 0130 FFF7FEFF 		bl	u8g2_DrawStr
 688              	.LVL56:
 511:Src/main.c    **** 
 689              		.loc 1 511 0
 690 0134 8B48     		ldr	r0, .L111+68
 691 0136 FFF7FEFF 		bl	u8g2_SendBuffer
 692              	.LVL57:
 513:Src/main.c    **** 
 693              		.loc 1 513 0
 694 013a 4FF47A70 		mov	r0, #1000
 695 013e FFF7FEFF 		bl	HAL_Delay
 696              	.LVL58:
 515:Src/main.c    **** 
 697              		.loc 1 515 0
 698 0142 8848     		ldr	r0, .L111+68
 699 0144 FFF7FEFF 		bl	u8g2_ClearBuffer
 700              	.LVL59:
 517:Src/main.c    **** 
 701              		.loc 1 517 0
 702 0148 8C49     		ldr	r1, .L111+92
 703 014a 8D48     		ldr	r0, .L111+96
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 30


 704 014c FFF7FEFF 		bl	HAL_UART_Transmit_printf
 705              	.LVL60:
 520:Src/main.c    **** 
 706              		.loc 1 520 0
 707 0150 B5F90030 		ldrsh	r3, [r5]
 708 0154 8B4A     		ldr	r2, .L111+100
 709 0156 C3F16403 		rsb	r3, r3, #100
 710 015a 5363     		str	r3, [r2, #52]
 527:Src/main.c    ****   draw_indicators();
 711              		.loc 1 527 0
 712 015c FFF7FEFF 		bl	draw_MeasLabels
 713              	.LVL61:
 528:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 714              		.loc 1 528 0
 715 0160 FFF7FEFF 		bl	draw_indicators
 716              	.LVL62:
 529:Src/main.c    **** 
 717              		.loc 1 529 0
 718 0164 7F48     		ldr	r0, .L111+68
 719 0166 FFF7FEFF 		bl	u8g2_SendBuffer
 720              	.LVL63:
 533:Src/main.c    **** 
 721              		.loc 1 533 0
 722 016a 3046     		mov	r0, r6
 723 016c FFF7FEFF 		bl	Gsens_ADXL345_Init
 724              	.LVL64:
 725 0170 854B     		ldr	r3, .L111+104
 424:Src/main.c    ****   int16_t circular_buffer[128]={};
 726              		.loc 1 424 0
 727 0172 0A96     		str	r6, [sp, #40]
 533:Src/main.c    **** 
 728              		.loc 1 533 0
 729 0174 1870     		strb	r0, [r3]
 730 0176 86E0     		b	.L64
 731              	.LVL65:
 732              	.L104:
 733              	.LBB37:
 541:Src/main.c    ****     }
 734              		.loc 1 541 0
 735 0178 0023     		movs	r3, #0
 736 017a C8F80030 		str	r3, [r8]
 737              	.L41:
 545:Src/main.c    ****     }
 738              		.loc 1 545 0
 739 017e 834B     		ldr	r3, .L111+108
 740 0180 834A     		ldr	r2, .L111+112
 741 0182 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 742 0184 DBB2     		uxtb	r3, r3
 743 0186 1370     		strb	r3, [r2]
 744              	.L42:
 555:Src/main.c    **** 
 745              		.loc 1 555 0
 746 0188 824A     		ldr	r2, .L111+116
 548:Src/main.c    ****     idct_status[1] = Gsens_EN;
 747              		.loc 1 548 0
 748 018a 8348     		ldr	r0, .L111+120
 555:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 31


 749              		.loc 1 555 0
 750 018c 1188     		ldrh	r1, [r2]
 558:Src/main.c    ****     // Ressister attenation ratio '165/33'
 751              		.loc 1 558 0
 752 018e 5288     		ldrh	r2, [r2, #2]
 548:Src/main.c    ****     idct_status[1] = Gsens_EN;
 753              		.loc 1 548 0
 754 0190 0370     		strb	r3, [r0]
 555:Src/main.c    **** 
 755              		.loc 1 555 0
 756 0192 07EE101A 		vmov	s14, r1	@ int
 558:Src/main.c    ****     // Ressister attenation ratio '165/33'
 757              		.loc 1 558 0
 758 0196 07EE902A 		vmov	s15, r2	@ int
 555:Src/main.c    **** 
 759              		.loc 1 555 0
 760 019a B8EE477A 		vcvt.f32.u32	s14, s14
 558:Src/main.c    ****     // Ressister attenation ratio '165/33'
 761              		.loc 1 558 0
 762 019e F8EE677A 		vcvt.f32.u32	s15, s15
 555:Src/main.c    **** 
 763              		.loc 1 555 0
 764 01a2 27EE097A 		vmul.f32	s14, s14, s18
 558:Src/main.c    ****     // Ressister attenation ratio '165/33'
 765              		.loc 1 558 0
 766 01a6 67EEA87A 		vmul.f32	s15, s15, s17
 555:Src/main.c    **** 
 767              		.loc 1 555 0
 768 01aa C7EE086A 		vdiv.f32	s13, s14, s16
 549:Src/main.c    **** 
 769              		.loc 1 549 0
 770 01ae 7649     		ldr	r1, .L111+104
 563:Src/main.c    ****       FP_duty = 100;
 771              		.loc 1 563 0
 772 01b0 BAF80030 		ldrh	r3, [r10]
 549:Src/main.c    **** 
 773              		.loc 1 549 0
 774 01b4 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 775 01b6 4170     		strb	r1, [r0, #1]
 555:Src/main.c    **** 
 776              		.loc 1 555 0
 777 01b8 7848     		ldr	r0, .L111+124
 563:Src/main.c    ****       FP_duty = 100;
 778              		.loc 1 563 0
 779 01ba 2288     		ldrh	r2, [r4]
 780 01bc 1BB2     		sxth	r3, r3
 781 01be 40F6B731 		movw	r1, #2999
 782 01c2 8B42     		cmp	r3, r1
 783 01c4 12B2     		sxth	r2, r2
 558:Src/main.c    ****     // Ressister attenation ratio '165/33'
 784              		.loc 1 558 0
 785 01c6 87EE887A 		vdiv.f32	s14, s15, s16
 555:Src/main.c    **** 
 786              		.loc 1 555 0
 787 01ca FDEEE66A 		vcvt.s32.f32	s13, s13
 558:Src/main.c    ****     // Ressister attenation ratio '165/33'
 788              		.loc 1 558 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 32


 789 01ce BDEEC77A 		vcvt.s32.f32	s14, s14
 555:Src/main.c    **** 
 790              		.loc 1 555 0
 791 01d2 16EE906A 		vmov	r6, s13	@ int
 792 01d6 0680     		strh	r6, [r0]	@ movhi
 558:Src/main.c    ****     // Ressister attenation ratio '165/33'
 793              		.loc 1 558 0
 794 01d8 7148     		ldr	r0, .L111+128
 795 01da 17EE106A 		vmov	r6, s14	@ int
 796 01de 0680     		strh	r6, [r0]	@ movhi
 563:Src/main.c    ****       FP_duty = 100;
 797              		.loc 1 563 0
 798 01e0 14DC     		bgt	.L46
 799 01e2 002A     		cmp	r2, #0
 800 01e4 12DA     		bge	.L46
 566:Src/main.c    ****     }
 801              		.loc 1 566 0
 802 01e6 BAF80030 		ldrh	r3, [r10]
 803 01ea 6E4A     		ldr	r2, .L111+132
 804 01ec 1BB2     		sxth	r3, r3
 805 01ee 82FB0312 		smull	r1, r2, r2, r3
 806 01f2 DB17     		asrs	r3, r3, #31
 807 01f4 C3EBA213 		rsb	r3, r3, r2, asr #6
 808 01f8 03EB8303 		add	r3, r3, r3, lsl #2
 809 01fc 03EB8303 		add	r3, r3, r3, lsl #2
 810 0200 9B00     		lsls	r3, r3, #2
 811 0202 1BB2     		sxth	r3, r3
 569:Src/main.c    ****       FP_duty = 100;
 812              		.loc 1 569 0
 813 0204 642B     		cmp	r3, #100
 566:Src/main.c    ****     }
 814              		.loc 1 566 0
 815 0206 2B80     		strh	r3, [r5]	@ movhi
 569:Src/main.c    ****       FP_duty = 100;
 816              		.loc 1 569 0
 817 0208 40F34283 		ble	.L96
 818              	.L46:
 564:Src/main.c    ****     }else{
 819              		.loc 1 564 0
 820 020c 6423     		movs	r3, #100
 821 020e 2B80     		strh	r3, [r5]	@ movhi
 822              	.L45:
 578:Src/main.c    **** 
 823              		.loc 1 578 0
 824 0210 2088     		ldrh	r0, [r4]
 825 0212 BAF80010 		ldrh	r1, [r10]
 826 0216 0023     		movs	r3, #0
 827 0218 1A46     		mov	r2, r3
 828 021a C0B2     		uxtb	r0, r0
 829 021c FFF7FEFF 		bl	CAN_OBD_Response
 830              	.LVL66:
 581:Src/main.c    **** 
 831              		.loc 1 581 0
 832 0220 6148     		ldr	r0, .L111+136
 833 0222 FFF7FEFF 		bl	defi_decoder
 834              	.LVL67:
 583:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 33


 835              		.loc 1 583 0
 836 0226 D9F80030 		ldr	r3, [r9]
 837 022a 012B     		cmp	r3, #1
 838 022c 36D0     		beq	.L97
 839              	.L47:
 635:Src/main.c    **** 
 840              		.loc 1 635 0
 841 022e B5F90030 		ldrsh	r3, [r5]
 842 0232 544A     		ldr	r2, .L111+100
 843 0234 C3F16403 		rsb	r3, r3, #100
 844 0238 5363     		str	r3, [r2, #52]
 639:Src/main.c    ****       switch( flag_sw ){
 845              		.loc 1 639 0
 846 023a 5C4B     		ldr	r3, .L111+140
 847 023c 1B68     		ldr	r3, [r3]
 848 023e FBB1     		cbz	r3, .L49
 640:Src/main.c    ****         case 1:
 849              		.loc 1 640 0
 850 0240 022B     		cmp	r3, #2
 851 0242 00F0DA80 		beq	.L51
 852 0246 032B     		cmp	r3, #3
 853 0248 62D0     		beq	.L52
 854 024a 012B     		cmp	r3, #1
 855 024c 00F0C080 		beq	.L98
 856              	.L50:
 681:Src/main.c    ****       if( mode == MODE_BAR_METER ){
 857              		.loc 1 681 0
 858 0250 4448     		ldr	r0, .L111+68
 859 0252 FFF7FEFF 		bl	u8g2_ClearBuffer
 860              	.LVL68:
 682:Src/main.c    ****         draw_MeasLabels();
 861              		.loc 1 682 0
 862 0256 564B     		ldr	r3, .L111+144
 863 0258 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 864 025a 002B     		cmp	r3, #0
 865 025c 3BD0     		beq	.L99
 686:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 866              		.loc 1 686 0
 867 025e 012B     		cmp	r3, #1
 868 0260 00F0FE80 		beq	.L100
 704:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_m
 869              		.loc 1 704 0
 870 0264 032B     		cmp	r3, #3
 871 0266 00F04D81 		beq	.L101
 708:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, -200, 200, 4);
 872              		.loc 1 708 0
 873 026a 042B     		cmp	r3, #4
 874 026c 00F06981 		beq	.L102
 875              	.L59:
 713:Src/main.c    ****       TIM6->CNT = 0;
 876              		.loc 1 713 0
 877 0270 3C48     		ldr	r0, .L111+68
 878 0272 FFF7FEFF 		bl	u8g2_SendBuffer
 879              	.LVL69:
 714:Src/main.c    ****       flag_sw = 0;
 880              		.loc 1 714 0
 881 0276 4F4B     		ldr	r3, .L111+148
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 34


 882 0278 0022     		movs	r2, #0
 883 027a 5A62     		str	r2, [r3, #36]
 715:Src/main.c    ****     }
 884              		.loc 1 715 0
 885 027c 4B4B     		ldr	r3, .L111+140
 886 027e 1A60     		str	r2, [r3]
 887              	.L49:
 720:Src/main.c    **** 
 888              		.loc 1 720 0
 889 0280 4D4B     		ldr	r3, .L111+152
 890 0282 1B68     		ldr	r3, [r3]
 891 0284 63BB     		cbnz	r3, .L103
 892              	.L64:
 539:Src/main.c    ****       CAN_EN = 0;
 893              		.loc 1 539 0
 894 0286 D8F80030 		ldr	r3, [r8]
 895 028a 002B     		cmp	r3, #0
 896 028c 7FF474AF 		bne	.L104
 544:Src/main.c    ****       CAN_EN = CAN_Received;
 897              		.loc 1 544 0
 898 0290 3F4B     		ldr	r3, .L111+112
 899 0292 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 900 0294 002B     		cmp	r3, #0
 901 0296 7FF477AF 		bne	.L42
 902 029a 70E7     		b	.L41
 903              	.L97:
 588:Src/main.c    ****         // Acceration 1G = 100
 904              		.loc 1 588 0
 905 029c 3A4B     		ldr	r3, .L111+104
 906 029e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 907 02a0 012B     		cmp	r3, #1
 908 02a2 00F0BE80 		beq	.L105
 909              	.L48:
 624:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 910              		.loc 1 624 0
 911 02a6 3E4B     		ldr	r3, .L111+128
 622:Src/main.c    **** 		  meas_value[1] = DEFI_value[2];  // OILP
 912              		.loc 1 622 0
 913 02a8 2288     		ldrh	r2, [r4]
 624:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 914              		.loc 1 624 0
 915 02aa 1B88     		ldrh	r3, [r3]
 622:Src/main.c    **** 		  meas_value[1] = DEFI_value[2];  // OILP
 916              		.loc 1 622 0
 917 02ac ABF80020 		strh	r2, [fp]	@ movhi
 624:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 918              		.loc 1 624 0
 919 02b0 ABF80430 		strh	r3, [fp, #4]	@ movhi
 623:Src/main.c    **** 			meas_value[2] = FP_volt;        // FuelPump Voltage
 920              		.loc 1 623 0
 921 02b4 A288     		ldrh	r2, [r4, #4]
 627:Src/main.c    **** 
 922              		.loc 1 627 0
 923 02b6 394B     		ldr	r3, .L111+124
 623:Src/main.c    **** 			meas_value[2] = FP_volt;        // FuelPump Voltage
 924              		.loc 1 623 0
 925 02b8 ABF80220 		strh	r2, [fp, #2]	@ movhi
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 35


 625:Src/main.c    **** 			meas_value[4] = DEFI_value[5];  // OILT
 926              		.loc 1 625 0
 927 02bc A289     		ldrh	r2, [r4, #12]
 928 02be ABF80620 		strh	r2, [fp, #6]	@ movhi
 629:Src/main.c    ****     }
 929              		.loc 1 629 0
 930 02c2 0021     		movs	r1, #0
 626:Src/main.c    **** 		  meas_value[5] = O2_volt;        // O2
 931              		.loc 1 626 0
 932 02c4 6289     		ldrh	r2, [r4, #10]
 627:Src/main.c    **** 
 933              		.loc 1 627 0
 934 02c6 1B88     		ldrh	r3, [r3]
 629:Src/main.c    ****     }
 935              		.loc 1 629 0
 936 02c8 C9F80010 		str	r1, [r9]
 626:Src/main.c    **** 		  meas_value[5] = O2_volt;        // O2
 937              		.loc 1 626 0
 938 02cc ABF80820 		strh	r2, [fp, #8]	@ movhi
 627:Src/main.c    **** 
 939              		.loc 1 627 0
 940 02d0 ABF80A30 		strh	r3, [fp, #10]	@ movhi
 941 02d4 ABE7     		b	.L47
 942              	.L99:
 683:Src/main.c    ****         draw_indicators();
 943              		.loc 1 683 0
 944 02d6 FFF7FEFF 		bl	draw_MeasLabels
 945              	.LVL70:
 684:Src/main.c    **** 
 946              		.loc 1 684 0
 947 02da FFF7FEFF 		bl	draw_indicators
 948              	.LVL71:
 949 02de C7E7     		b	.L59
 950              	.L103:
 723:Src/main.c    ****         // update Fuel Pump Voltage
 951              		.loc 1 723 0
 952 02e0 334B     		ldr	r3, .L111+144
 953 02e2 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 954 02e4 002E     		cmp	r6, #0
 955 02e6 00F09781 		beq	.L106
 745:Src/main.c    **** 
 956              		.loc 1 745 0
 957 02ea 012E     		cmp	r6, #1
 958 02ec 00F04782 		beq	.L107
 787:Src/main.c    **** 
 959              		.loc 1 787 0
 960 02f0 032E     		cmp	r6, #3
 961 02f2 00F03A81 		beq	.L108
 801:Src/main.c    **** 
 962              		.loc 1 801 0
 963 02f6 042E     		cmp	r6, #4
 964 02f8 00F01682 		beq	.L109
 815:Src/main.c    **** 
 965              		.loc 1 815 0
 966 02fc 052E     		cmp	r6, #5
 967 02fe 00F08F82 		beq	.L110
 968              	.L68:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 36


 969              	.LVL72:
 835:Src/main.c    **** 
 970              		.loc 1 835 0
 971 0302 1848     		ldr	r0, .L111+68
 972 0304 FFF7FEFF 		bl	u8g2_SendBuffer
 973              	.LVL73:
 837:Src/main.c    ****     }
 974              		.loc 1 837 0
 975 0308 2B4A     		ldr	r2, .L111+152
 976 030a 0023     		movs	r3, #0
 977 030c 1360     		str	r3, [r2]
 978 030e BAE7     		b	.L64
 979              	.LVL74:
 980              	.L52:
 666:Src/main.c    ****           HAL_NVIC_DisableIRQ (EXTI1_IRQn);
 981              		.loc 1 666 0
 982 0310 2A49     		ldr	r1, .L111+156
 983 0312 1B48     		ldr	r0, .L111+96
 984 0314 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 985              	.LVL75:
 667:Src/main.c    ****           // SW "ENTER"
 986              		.loc 1 667 0
 987 0318 0720     		movs	r0, #7
 988 031a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 989              	.LVL76:
 990 031e 97E7     		b	.L50
 991              	.L112:
 992              		.align	2
 993              	.L111:
 994 0320 00000000 		.word	htim1
 995 0324 00000000 		.word	htim2
 996 0328 00000000 		.word	htim3
 997 032c 00000000 		.word	htim6
 998 0330 00000000 		.word	htim7
 999 0334 00000000 		.word	g_ADCBuffer
 1000 0338 00000000 		.word	hadc1
 1001 033c 00000000 		.word	.LANCHOR5
 1002 0340 00000000 		.word	DEFI_value
 1003 0344 0000A543 		.word	1134886912
 1004 0348 00007F43 		.word	1132396544
 1005 034c 00002543 		.word	1126498304
 1006 0350 00000000 		.word	UART1_Data
 1007 0354 00000000 		.word	huart1
 1008 0358 00000000 		.word	u8x8_gpio_and_delay_STM32F303
 1009 035c 00000000 		.word	u8x8_byte_4wire_hw_spi
 1010 0360 00000000 		.word	u8g2_cb_r0
 1011 0364 00000000 		.word	u8g2
 1012 0368 00040048 		.word	1207960576
 1013 036c 00000000 		.word	.LANCHOR4
 1014 0370 00000000 		.word	u8g2_font_5x7_tf
 1015 0374 00000000 		.word	.LC2
 1016 0378 18000000 		.word	.LC3
 1017 037c 24000000 		.word	.LC4
 1018 0380 00000000 		.word	huart2
 1019 0384 002C0140 		.word	1073818624
 1020 0388 00000000 		.word	Gsens_EN
 1021 038c 00000000 		.word	CAN_Received
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 37


 1022 0390 00000000 		.word	CAN_EN
 1023 0394 00000000 		.word	adc
 1024 0398 00000000 		.word	.LANCHOR1
 1025 039c 00000000 		.word	.LANCHOR6
 1026 03a0 00000000 		.word	.LANCHOR7
 1027 03a4 F1197605 		.word	91625969
 1028 03a8 00000000 		.word	UART1_RxData
 1029 03ac 00000000 		.word	flag_sw
 1030 03b0 00000000 		.word	mode
 1031 03b4 00100040 		.word	1073745920
 1032 03b8 00000000 		.word	flag_disp
 1033 03bc 54000000 		.word	.LC8
 1034 03c0 00000000 		.word	flag_status
 1035 03c4 00000000 		.word	rpm
 1036 03c8 00000000 		.word	flag_meas
 1037 03cc 00000000 		.word	.LANCHOR8
 1038              	.L98:
 642:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 1039              		.loc 1 642 0
 1040 03d0 7F49     		ldr	r1, .L113
 1041 03d2 8048     		ldr	r0, .L113+4
 1042 03d4 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 1043              	.LVL77:
 643:Src/main.c    ****           // SW "UP"
 1044              		.loc 1 643 0
 1045 03d8 1720     		movs	r0, #23
 1046 03da FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1047              	.LVL78:
 645:Src/main.c    ****             if( mode == N_mode-1 ){
 1048              		.loc 1 645 0
 1049 03de 7E4B     		ldr	r3, .L113+8
 1050 03e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1051 03e2 002B     		cmp	r3, #0
 1052 03e4 7FF434AF 		bne	.L50
 646:Src/main.c    ****               mode = 0;
 1053              		.loc 1 646 0
 1054 03e8 7C4A     		ldr	r2, .L113+12
 1055 03ea 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1056 03ec 042A     		cmp	r2, #4
 1057 03ee 00F0A580 		beq	.L93
 649:Src/main.c    ****             }
 1058              		.loc 1 649 0
 1059 03f2 7A4B     		ldr	r3, .L113+12
 1060 03f4 0132     		adds	r2, r2, #1
 1061 03f6 1A70     		strb	r2, [r3]
 1062 03f8 2AE7     		b	.L50
 1063              	.L51:
 654:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 1064              		.loc 1 654 0
 1065 03fa 7949     		ldr	r1, .L113+16
 1066 03fc 7548     		ldr	r0, .L113+4
 1067 03fe FFF7FEFF 		bl	HAL_UART_Transmit_printf
 1068              	.LVL79:
 655:Src/main.c    ****           // SW "DOWN"
 1069              		.loc 1 655 0
 1070 0402 1720     		movs	r0, #23
 1071 0404 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 38


 1072              	.LVL80:
 657:Src/main.c    ****             if( mode == 0 ){
 1073              		.loc 1 657 0
 1074 0408 734B     		ldr	r3, .L113+8
 1075 040a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1076 040c 002B     		cmp	r3, #0
 1077 040e 7FF41FAF 		bne	.L50
 658:Src/main.c    ****               mode = N_mode-1;
 1078              		.loc 1 658 0
 1079 0412 724A     		ldr	r2, .L113+12
 1080 0414 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1081 0416 002B     		cmp	r3, #0
 1082 0418 40F08F80 		bne	.L57
 659:Src/main.c    ****             }else{
 1083              		.loc 1 659 0
 1084 041c 0423     		movs	r3, #4
 1085 041e 1370     		strb	r3, [r2]
 1086 0420 16E7     		b	.L50
 1087              	.L105:
 590:Src/main.c    ****         Gsens_Y = Gsens_ADXL345_Read_G('y', 0);
 1088              		.loc 1 590 0
 1089 0422 0021     		movs	r1, #0
 1090 0424 7820     		movs	r0, #120
 1091 0426 FFF7FEFF 		bl	Gsens_ADXL345_Read_G
 1092              	.LVL81:
 1093 042a 6E4B     		ldr	r3, .L113+20
 591:Src/main.c    ****         Gsens_Z = Gsens_ADXL345_Read_G('z', 0);
 1094              		.loc 1 591 0
 1095 042c 6E4E     		ldr	r6, .L113+24
 590:Src/main.c    ****         Gsens_Y = Gsens_ADXL345_Read_G('y', 0);
 1096              		.loc 1 590 0
 1097 042e 1880     		strh	r0, [r3]	@ movhi
 591:Src/main.c    ****         Gsens_Z = Gsens_ADXL345_Read_G('z', 0);
 1098              		.loc 1 591 0
 1099 0430 0021     		movs	r1, #0
 1100 0432 7920     		movs	r0, #121
 1101 0434 FFF7FEFF 		bl	Gsens_ADXL345_Read_G
 1102              	.LVL82:
 592:Src/main.c    **** 
 1103              		.loc 1 592 0
 1104 0438 0021     		movs	r1, #0
 591:Src/main.c    ****         Gsens_Z = Gsens_ADXL345_Read_G('z', 0);
 1105              		.loc 1 591 0
 1106 043a 3080     		strh	r0, [r6]	@ movhi
 592:Src/main.c    **** 
 1107              		.loc 1 592 0
 1108 043c 7A20     		movs	r0, #122
 1109 043e FFF7FEFF 		bl	Gsens_ADXL345_Read_G
 1110              	.LVL83:
 591:Src/main.c    ****         Gsens_Z = Gsens_ADXL345_Read_G('z', 0);
 1111              		.loc 1 591 0
 1112 0442 3746     		mov	r7, r6
 594:Src/main.c    ****         
 1113              		.loc 1 594 0
 1114 0444 674A     		ldr	r2, .L113+20
 1115 0446 B7F90030 		ldrsh	r3, [r7]
 592:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 39


 1116              		.loc 1 592 0
 1117 044a 684F     		ldr	r7, .L113+28
 594:Src/main.c    ****         
 1118              		.loc 1 594 0
 1119 044c B2F90020 		ldrsh	r2, [r2]
 1120 0450 6749     		ldr	r1, .L113+32
 1121 0452 0090     		str	r0, [sp]
 592:Src/main.c    **** 
 1122              		.loc 1 592 0
 1123 0454 0646     		mov	r6, r0
 1124 0456 3E80     		strh	r6, [r7]	@ movhi
 594:Src/main.c    ****         
 1125              		.loc 1 594 0
 1126 0458 5E48     		ldr	r0, .L113+4
 1127 045a FFF7FEFF 		bl	HAL_UART_Transmit_printf
 1128              	.LVL84:
 1129 045e 22E7     		b	.L48
 1130              	.L100:
 1131 0460 644B     		ldr	r3, .L113+36
 1132 0462 1A46     		mov	r2, r3
 1133 0464 644B     		ldr	r3, .L113+40
 1134 0466 0993     		str	r3, [sp, #36]
 686:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 1135              		.loc 1 686 0
 1136 0468 0226     		movs	r6, #2
 1137              	.L61:
 1138              	.LVL85:
 1139              	.LBB27:
 690:Src/main.c    ****         }
 1140              		.loc 1 690 0 discriminator 3
 1141 046a 099B     		ldr	r3, [sp, #36]
 1142 046c 0293     		str	r3, [sp, #8]
 1143 046e 0D21     		movs	r1, #13
 1144 0470 1746     		mov	r7, r2
 1145 0472 0192     		str	r2, [sp, #4]
 1146 0474 0091     		str	r1, [sp]
 1147 0476 3246     		mov	r2, r6
 1148 0478 3C23     		movs	r3, #60
 1149 047a 4421     		movs	r1, #68
 1150 047c 5F48     		ldr	r0, .L113+44
 1151 047e FFF7FEFF 		bl	draw_MeasLabelUnit
 1152              	.LVL86:
 1153 0482 0D36     		adds	r6, r6, #13
 1154              	.LVL87:
 1155 0484 099B     		ldr	r3, [sp, #36]
 1156 0486 F6B2     		uxtb	r6, r6
 1157 0488 3A46     		mov	r2, r7
 1158 048a 0533     		adds	r3, r3, #5
 687:Src/main.c    ****           x = meas_C_x;
 1159              		.loc 1 687 0 discriminator 3
 1160 048c 362E     		cmp	r6, #54
 1161 048e 02F10702 		add	r2, r2, #7
 1162 0492 0993     		str	r3, [sp, #36]
 1163 0494 E9D1     		bne	.L61
 1164 0496 5A4B     		ldr	r3, .L113+48
 1165 0498 0993     		str	r3, [sp, #36]
 1166 049a 5A4B     		ldr	r3, .L113+52
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 40


 687:Src/main.c    ****           x = meas_C_x;
 1167              		.loc 1 687 0 is_stmt 0
 1168 049c 4826     		movs	r6, #72
 1169 049e 1946     		mov	r1, r3
 1170              	.L62:
 1171              	.LVL88:
 694:Src/main.c    ****         }
 1172              		.loc 1 694 0 is_stmt 1 discriminator 3
 1173 04a0 099A     		ldr	r2, [sp, #36]
 1174 04a2 5648     		ldr	r0, .L113+44
 1175 04a4 12F8013B 		ldrb	r3, [r2], #1	@ zero_extendqisi2
 1176 04a8 0291     		str	r1, [sp, #8]
 1177 04aa 0F46     		mov	r7, r1
 1178 04ac 0921     		movs	r1, #9
 1179 04ae CDE90013 		strd	r1, r3, [sp]
 1180 04b2 3146     		mov	r1, r6
 1181 04b4 1D36     		adds	r6, r6, #29
 1182 04b6 0992     		str	r2, [sp, #36]
 1183              	.LVL89:
 1184 04b8 1B23     		movs	r3, #27
 1185 04ba 3522     		movs	r2, #53
 1186 04bc F6B2     		uxtb	r6, r6
 1187 04be FFF7FEFF 		bl	draw_IndicatorBox
 1188              	.LVL90:
 1189 04c2 7B1D     		adds	r3, r7, #5
 693:Src/main.c    ****           draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_s
 1190              		.loc 1 693 0 discriminator 3
 1191 04c4 BC2E     		cmp	r6, #188
 1192 04c6 1946     		mov	r1, r3
 1193 04c8 EAD1     		bne	.L62
 696:Src/main.c    **** //        draw_CircularMeter_Init(26, 26, 26, 3, -60, 300, 10, 20, -1, -80, 120);
 1194              		.loc 1 696 0
 1195 04ca 7822     		movs	r2, #120
 1196 04cc 6FF04F03 		mvn	r3, #79
 1197 04d0 4FF0FF31 		mov	r1, #-1
 1198 04d4 0692     		str	r2, [sp, #24]
 1199 04d6 0593     		str	r3, [sp, #20]
 1200 04d8 0491     		str	r1, [sp, #16]
 1201 04da 1426     		movs	r6, #20
 1202 04dc 2021     		movs	r1, #32
 1203 04de 0A20     		movs	r0, #10
 1204 04e0 4FF49672 		mov	r2, #300
 1205 04e4 6FF03B03 		mvn	r3, #59
 1206 04e8 CDE90032 		strd	r3, r2, [sp]
 1207 04ec CDE90206 		strd	r0, r6, [sp, #8]
 1208 04f0 0323     		movs	r3, #3
 1209 04f2 0846     		mov	r0, r1
 1210 04f4 1F22     		movs	r2, #31
 1211 04f6 FFF7FEFF 		bl	draw_CircularMeter_Init
 1212              	.LVL91:
 698:Src/main.c    **** /*
 1213              		.loc 1 698 0
 1214 04fa 0021     		movs	r1, #0
 1215 04fc 3F48     		ldr	r0, .L113+44
 1216 04fe FFF7FEFF 		bl	draw_CircularMeter
 1217              	.LVL92:
 1218              	.LBE27:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 41


 1219 0502 B5E6     		b	.L59
 1220              	.LVL93:
 1221              	.L101:
 1222              	.LBB28:
 705:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "MAP", "kPa");
 1223              		.loc 1 705 0
 1224 0504 C820     		movs	r0, #200
 1225 0506 6FF06301 		mvn	r1, #99
 1226 050a 3422     		movs	r2, #52
 1227 050c CDE90203 		strd	r0, r3, [sp, #8]
 1228 0510 CDE90021 		strd	r2, r1, [sp]
 1229 0514 8023     		movs	r3, #128
 1230 0516 0D22     		movs	r2, #13
 1231 0518 0021     		movs	r1, #0
 1232 051a 3848     		ldr	r0, .L113+44
 1233 051c FFF7FEFF 		bl	draw_Wave_axis
 1234              	.LVL94:
 706:Src/main.c    **** 
 1235              		.loc 1 706 0
 1236 0520 3949     		ldr	r1, .L113+56
 1237 0522 0291     		str	r1, [sp, #8]
 1238 0524 3949     		ldr	r1, .L113+60
 1239 0526 0D23     		movs	r3, #13
 1240 0528 0022     		movs	r2, #0
 1241              	.L94:
 1242              	.LBE28:
 1243              	.LBB29:
 710:Src/main.c    **** 
 1244              		.loc 1 710 0
 1245 052a CDE90031 		strd	r3, r1, [sp]
 1246 052e 3348     		ldr	r0, .L113+44
 1247 0530 1146     		mov	r1, r2
 1248 0532 4023     		movs	r3, #64
 1249 0534 FFF7FEFF 		bl	draw_MeasLabelUnit
 1250              	.LVL95:
 1251 0538 9AE6     		b	.L59
 1252              	.L57:
 1253              	.LBE29:
 661:Src/main.c    ****             }
 1254              		.loc 1 661 0
 1255 053a 013B     		subs	r3, r3, #1
 1256              	.L93:
 1257 053c 274A     		ldr	r2, .L113+12
 1258 053e 1370     		strb	r3, [r2]
 1259 0540 86E6     		b	.L50
 1260              	.L102:
 1261              	.LBB30:
 709:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "LatG", "G");
 1262              		.loc 1 709 0
 1263 0542 C820     		movs	r0, #200
 1264 0544 6FF0C701 		mvn	r1, #199
 1265 0548 3422     		movs	r2, #52
 1266 054a CDE90203 		strd	r0, r3, [sp, #8]
 1267 054e CDE90021 		strd	r2, r1, [sp]
 1268 0552 8023     		movs	r3, #128
 1269 0554 0D22     		movs	r2, #13
 1270 0556 0021     		movs	r1, #0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 42


 1271 0558 2848     		ldr	r0, .L113+44
 1272 055a FFF7FEFF 		bl	draw_Wave_axis
 1273              	.LVL96:
 710:Src/main.c    **** 
 1274              		.loc 1 710 0
 1275 055e 2C49     		ldr	r1, .L113+64
 1276 0560 0291     		str	r1, [sp, #8]
 1277 0562 0D23     		movs	r3, #13
 1278 0564 0022     		movs	r2, #0
 1279 0566 2B49     		ldr	r1, .L113+68
 1280 0568 DFE7     		b	.L94
 1281              	.L108:
 1282              	.LBE30:
 1283              	.LBB31:
 789:Src/main.c    ****           circular_buffer_index--;
 1284              		.loc 1 789 0
 1285 056a 0A9B     		ldr	r3, [sp, #40]
 1286 056c 002B     		cmp	r3, #0
 1287 056e 00F00281 		beq	.L80
 790:Src/main.c    ****         }else{
 1288              		.loc 1 790 0
 1289 0572 013B     		subs	r3, r3, #1
 1290 0574 9BB2     		uxth	r3, r3
 1291 0576 0A93     		str	r3, [sp, #40]
 1292              	.LVL97:
 1293 0578 1E46     		mov	r6, r3
 1294              	.LVL98:
 1295              	.L72:
 797:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 1296              		.loc 1 797 0
 1297 057a 6FF06302 		mvn	r2, #99
 1298 057e 3423     		movs	r3, #52
 1299 0580 CDE90032 		strd	r3, r2, [sp]
 794:Src/main.c    **** 
 1300              		.loc 1 794 0
 1301 0584 0CAA     		add	r2, sp, #48
 1302 0586 BBF80030 		ldrh	r3, [fp]
 797:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 1303              		.loc 1 797 0
 1304 058a 0496     		str	r6, [sp, #16]
 1305 058c C821     		movs	r1, #200
 1306 058e 0CA8     		add	r0, sp, #48
 1307 0590 CDE90210 		strd	r1, r0, [sp, #8]
 794:Src/main.c    **** 
 1308              		.loc 1 794 0
 1309 0594 22F81630 		strh	r3, [r2, r6, lsl #1]	@ movhi
 797:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 1310              		.loc 1 797 0
 1311 0598 0021     		movs	r1, #0
 1312 059a 8023     		movs	r3, #128
 1313 059c 0D22     		movs	r2, #13
 1314 059e 1748     		ldr	r0, .L113+44
 798:Src/main.c    **** 
 1315              		.loc 1 798 0
 1316 05a0 194F     		ldr	r7, .L113+56
 797:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 1317              		.loc 1 797 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 43


 1318 05a2 FFF7FEFF 		bl	draw_Wave
 1319              	.LVL99:
 798:Src/main.c    **** 
 1320              		.loc 1 798 0
 1321 05a6 0CAB     		add	r3, sp, #48
 1322 05a8 0220     		movs	r0, #2
 1323 05aa 33F91630 		ldrsh	r3, [r3, r6, lsl #1]
 1324 05ae 0193     		str	r3, [sp, #4]
 1325 05b0 0126     		movs	r6, #1
 1326 05b2 0321     		movs	r1, #3
 1327 05b4 0D23     		movs	r3, #13
 1328 05b6 0022     		movs	r2, #0
 1329              	.L95:
 1330              	.LBE31:
 1331              	.LBB32:
 812:Src/main.c    **** 
 1332              		.loc 1 812 0
 1333 05b8 CDE90210 		strd	r1, r0, [sp, #8]
 1334 05bc 0093     		str	r3, [sp]
 1335 05be CDE90467 		strd	r6, r7, [sp, #16]
 1336 05c2 1146     		mov	r1, r2
 1337 05c4 4023     		movs	r3, #64
 1338 05c6 0D48     		ldr	r0, .L113+44
 1339 05c8 FFF7FEFF 		bl	draw_Value
 1340              	.LVL100:
 1341              	.LBE32:
 1342 05cc 99E6     		b	.L68
 1343              	.L114:
 1344 05ce 00BF     		.align	2
 1345              	.L113:
 1346 05d0 48000000 		.word	.LC6
 1347 05d4 00000000 		.word	huart2
 1348 05d8 00000000 		.word	setting
 1349 05dc 00000000 		.word	mode
 1350 05e0 4C000000 		.word	.LC7
 1351 05e4 00000000 		.word	Gsens_X
 1352 05e8 00000000 		.word	Gsens_Y
 1353 05ec 00000000 		.word	Gsens_Z
 1354 05f0 3C000000 		.word	.LC5
 1355 05f4 00000000 		.word	.LANCHOR3
 1356 05f8 00000000 		.word	.LANCHOR2
 1357 05fc 00000000 		.word	u8g2
 1358 0600 00000000 		.word	.LANCHOR1
 1359 0604 00000000 		.word	.LANCHOR0
 1360 0608 5C000000 		.word	.LC9
 1361 060c 60000000 		.word	.LC10
 1362 0610 64000000 		.word	.LC11
 1363 0614 68000000 		.word	.LC12
 1364              	.LVL101:
 1365              	.L106:
 725:Src/main.c    **** 
 1366              		.loc 1 725 0
 1367 0618 B5F90030 		ldrsh	r3, [r5]
 1368 061c 9F4A     		ldr	r2, .L115
 1369 061e 0193     		str	r3, [sp, #4]
 1370 0620 0327     		movs	r7, #3
 1371 0622 0C23     		movs	r3, #12
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 44


 1372 0624 CDE90462 		strd	r6, r2, [sp, #16]
 1373 0628 CDE90276 		strd	r7, r6, [sp, #8]
 1374 062c 0093     		str	r3, [sp]
 1375 062e 3422     		movs	r2, #52
 1376 0630 4623     		movs	r3, #70
 1377 0632 3146     		mov	r1, r6
 1378 0634 9A48     		ldr	r0, .L115+4
 1379 0636 FFF7FEFF 		bl	draw_Value
 1380              	.LVL102:
 728:Src/main.c    **** 
 1381              		.loc 1 728 0
 1382 063a BAF80010 		ldrh	r1, [r10]
 1383 063e 0191     		str	r1, [sp, #4]
 1384 0640 42F22832 		movw	r2, #9000
 1385 0644 0E23     		movs	r3, #14
 1386 0646 0392     		str	r2, [sp, #12]
 1387 0648 0093     		str	r3, [sp]
 1388 064a 3246     		mov	r2, r6
 1389 064c 8023     		movs	r3, #128
 1390 064e 3146     		mov	r1, r6
 1391 0650 9348     		ldr	r0, .L115+4
 1392 0652 0296     		str	r6, [sp, #8]
 1393 0654 FFF7FEFF 		bl	draw_BarGraph
 1394              	.LVL103:
 734:Src/main.c    ****         }
 1395              		.loc 1 734 0
 1396 0658 0C21     		movs	r1, #12
 1397 065a 0091     		str	r1, [sp]
 1398 065c 9149     		ldr	r1, .L115+8
 1399 065e BBF90030 		ldrsh	r3, [fp]
 1400 0662 0591     		str	r1, [sp, #20]
 1401 0664 0222     		movs	r2, #2
 1402 0666 0121     		movs	r1, #1
 1403 0668 CDE90321 		strd	r2, r1, [sp, #12]
 1404 066c 0297     		str	r7, [sp, #8]
 1405 066e 0193     		str	r3, [sp, #4]
 1406 0670 1022     		movs	r2, #16
 1407 0672 4623     		movs	r3, #70
 1408 0674 3146     		mov	r1, r6
 1409 0676 8A48     		ldr	r0, .L115+4
 1410 0678 FFF7FEFF 		bl	draw_Value
 1411              	.LVL104:
 1412 067c 0122     		movs	r2, #1
 1413 067e CDE90272 		strd	r7, r2, [sp, #8]
 1414 0682 0C22     		movs	r2, #12
 1415 0684 0092     		str	r2, [sp]
 1416 0686 884A     		ldr	r2, .L115+12
 1417 0688 BBF90230 		ldrsh	r3, [fp, #2]
 1418 068c 0193     		str	r3, [sp, #4]
 1419 068e CDE90462 		strd	r6, r2, [sp, #16]
 1420 0692 4623     		movs	r3, #70
 1421 0694 1C22     		movs	r2, #28
 1422 0696 3146     		mov	r1, r6
 1423 0698 8148     		ldr	r0, .L115+4
 1424 069a FFF7FEFF 		bl	draw_Value
 1425              	.LVL105:
 1426 069e 0122     		movs	r2, #1
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 45


 1427 06a0 CDE90272 		strd	r7, r2, [sp, #8]
 1428 06a4 0C22     		movs	r2, #12
 1429 06a6 0092     		str	r2, [sp]
 1430 06a8 804A     		ldr	r2, .L115+16
 1431 06aa BBF90430 		ldrsh	r3, [fp, #4]
 1432 06ae 0B97     		str	r7, [sp, #44]
 1433 06b0 CDE90462 		strd	r6, r2, [sp, #16]
 1434 06b4 0193     		str	r3, [sp, #4]
 1435 06b6 3146     		mov	r1, r6
 1436 06b8 7948     		ldr	r0, .L115+4
 739:Src/main.c    ****         }
 1437              		.loc 1 739 0
 1438 06ba 0C27     		movs	r7, #12
 734:Src/main.c    ****         }
 1439              		.loc 1 734 0
 1440 06bc 4623     		movs	r3, #70
 1441 06be 2822     		movs	r2, #40
 739:Src/main.c    ****         }
 1442              		.loc 1 739 0
 1443 06c0 0997     		str	r7, [sp, #36]
 734:Src/main.c    ****         }
 1444              		.loc 1 734 0
 1445 06c2 FFF7FEFF 		bl	draw_Value
 1446              	.LVL106:
 1447 06c6 0B9F     		ldr	r7, [sp, #44]
 1448 06c8 3146     		mov	r1, r6
 1449 06ca 3846     		mov	r0, r7
 1450              	.LVL107:
 1451              	.L67:
 738:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 1452              		.loc 1 738 0 discriminator 3
 1453 06cc 784A     		ldr	r2, .L115+20
 739:Src/main.c    ****         }
 1454              		.loc 1 739 0 discriminator 3
 1455 06ce 0491     		str	r1, [sp, #16]
 738:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 1456              		.loc 1 738 0 discriminator 3
 1457 06d0 FBB2     		uxtb	r3, r7
 1458 06d2 A2FB03C2 		umull	ip, r2, r2, r3
 1459 06d6 5208     		lsrs	r2, r2, #1
 1460 06d8 02EB4202 		add	r2, r2, r2, lsl #1
 1461 06dc 9B1A     		subs	r3, r3, r2
 1462 06de 03EB4303 		add	r3, r3, r3, lsl #1
 1463 06e2 9A00     		lsls	r2, r3, #2
 1464 06e4 02F1100C 		add	ip, r2, #16
 739:Src/main.c    ****         }
 1465              		.loc 1 739 0 discriminator 3
 1466 06e8 6E4A     		ldr	r2, .L115+8
 1467 06ea 3BF91710 		ldrsh	r1, [fp, r7, lsl #1]
 1468 06ee 0191     		str	r1, [sp, #4]
 1469 06f0 07EB8703 		add	r3, r7, r7, lsl #2
 1470 06f4 1344     		add	r3, r3, r2
 1471 06f6 099A     		ldr	r2, [sp, #36]
 1472 06f8 0092     		str	r2, [sp]
 1473 06fa CDE90206 		strd	r0, r6, [sp, #8]
 1474 06fe 0593     		str	r3, [sp, #20]
 1475 0700 0CF0FC02 		and	r2, ip, #252
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 46


 1476 0704 0137     		adds	r7, r7, #1
 1477              	.LVL108:
 1478 0706 3823     		movs	r3, #56
 1479 0708 4821     		movs	r1, #72
 1480 070a 6548     		ldr	r0, .L115+4
 1481 070c FFF7FEFF 		bl	draw_Value
 1482              	.LVL109:
 736:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 1483              		.loc 1 736 0 discriminator 3
 1484 0710 062F     		cmp	r7, #6
 1485 0712 06D0     		beq	.L66
 1486 0714 674B     		ldr	r3, .L115+24
 1487 0716 D85D     		ldrb	r0, [r3, r7]	@ zero_extendqisi2
 1488 0718 674B     		ldr	r3, .L115+28
 1489 071a DE5D     		ldrb	r6, [r3, r7]	@ zero_extendqisi2
 1490 071c 674B     		ldr	r3, .L115+32
 1491 071e D95D     		ldrb	r1, [r3, r7]	@ zero_extendqisi2
 1492 0720 D4E7     		b	.L67
 1493              	.L66:
 742:Src/main.c    **** 
 1494              		.loc 1 742 0
 1495 0722 FFF7FEFF 		bl	draw_indicators
 1496              	.LVL110:
 1497 0726 ECE5     		b	.L68
 1498              	.LVL111:
 1499              	.L109:
 1500              	.LBB33:
 803:Src/main.c    ****           circular_buffer_index--;
 1501              		.loc 1 803 0
 1502 0728 0A9B     		ldr	r3, [sp, #40]
 1503 072a 002B     		cmp	r3, #0
 1504 072c 74D0     		beq	.L81
 804:Src/main.c    ****         }else{
 1505              		.loc 1 804 0
 1506 072e 013B     		subs	r3, r3, #1
 1507 0730 9BB2     		uxth	r3, r3
 1508 0732 0A93     		str	r3, [sp, #40]
 1509              	.LVL112:
 1510 0734 1E46     		mov	r6, r3
 1511              	.LVL113:
 1512              	.L74:
 811:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 1513              		.loc 1 811 0
 1514 0736 C821     		movs	r1, #200
 1515 0738 6FF0C702 		mvn	r2, #199
 1516 073c 3423     		movs	r3, #52
 1517 073e 0CA8     		add	r0, sp, #48
 1518 0740 CDE90210 		strd	r1, r0, [sp, #8]
 1519 0744 CDE90032 		strd	r3, r2, [sp]
 808:Src/main.c    **** 
 1520              		.loc 1 808 0
 1521 0748 5D4B     		ldr	r3, .L115+36
 811:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 1522              		.loc 1 811 0
 1523 074a 0496     		str	r6, [sp, #16]
 808:Src/main.c    **** 
 1524              		.loc 1 808 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 47


 1525 074c 0CAA     		add	r2, sp, #48
 1526 074e 1B88     		ldrh	r3, [r3]
 1527 0750 22F81630 		strh	r3, [r2, r6, lsl #1]	@ movhi
 811:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 1528              		.loc 1 811 0
 1529 0754 0021     		movs	r1, #0
 1530 0756 8023     		movs	r3, #128
 1531 0758 0D22     		movs	r2, #13
 1532 075a 5148     		ldr	r0, .L115+4
 812:Src/main.c    **** 
 1533              		.loc 1 812 0
 1534 075c 594F     		ldr	r7, .L115+40
 811:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 1535              		.loc 1 811 0
 1536 075e FFF7FEFF 		bl	draw_Wave
 1537              	.LVL114:
 812:Src/main.c    **** 
 1538              		.loc 1 812 0
 1539 0762 0CAB     		add	r3, sp, #48
 1540 0764 0220     		movs	r0, #2
 1541 0766 33F91630 		ldrsh	r3, [r3, r6, lsl #1]
 1542 076a 0193     		str	r3, [sp, #4]
 1543 076c 0126     		movs	r6, #1
 1544 076e 0321     		movs	r1, #3
 1545 0770 0D23     		movs	r3, #13
 1546 0772 0022     		movs	r2, #0
 1547 0774 20E7     		b	.L95
 1548              	.LVL115:
 1549              	.L80:
 1550              	.LBE33:
 1551              	.LBB34:
 1552 0776 8023     		movs	r3, #128
 1553 0778 0A93     		str	r3, [sp, #40]
 792:Src/main.c    ****         }
 1554              		.loc 1 792 0
 1555 077a 1E46     		mov	r6, r3
 1556 077c FDE6     		b	.L72
 1557              	.L107:
 1558              	.LBE34:
 1559              	.LBB35:
 747:Src/main.c    ****         
 1560              		.loc 1 747 0
 1561 077e BBF90010 		ldrsh	r1, [fp]
 1562 0782 4748     		ldr	r0, .L115+4
 1563 0784 FFF7FEFF 		bl	draw_CircularMeter
 1564              	.LVL116:
 749:Src/main.c    ****         draw_MeasUnit(&u8g2, 38, 40, 28, 16, "kPa");
 1565              		.loc 1 749 0
 1566 0788 BBF90030 		ldrsh	r3, [fp]
 1567 078c 4E4A     		ldr	r2, .L115+44
 1568 078e 0592     		str	r2, [sp, #20]
 1569 0790 4FF0020C 		mov	ip, #2
 1570 0794 1027     		movs	r7, #16
 1571 0796 0322     		movs	r2, #3
 1572 0798 CDE903C6 		strd	ip, r6, [sp, #12]
 1573 079c CDE90132 		strd	r3, r2, [sp, #4]
 1574 07a0 0097     		str	r7, [sp]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 48


 1575 07a2 1E23     		movs	r3, #30
 1576 07a4 2122     		movs	r2, #33
 1577 07a6 2421     		movs	r1, #36
 1578 07a8 3D48     		ldr	r0, .L115+4
 750:Src/main.c    **** /*        
 1579              		.loc 1 750 0
 1580 07aa CDF824C0 		str	ip, [sp, #36]
 749:Src/main.c    ****         draw_MeasUnit(&u8g2, 38, 40, 28, 16, "kPa");
 1581              		.loc 1 749 0
 1582 07ae FFF7FEFF 		bl	draw_Value
 1583              	.LVL117:
 750:Src/main.c    **** /*        
 1584              		.loc 1 750 0
 1585 07b2 464B     		ldr	r3, .L115+48
 1586 07b4 0097     		str	r7, [sp]
 1587 07b6 0193     		str	r3, [sp, #4]
 1588 07b8 2822     		movs	r2, #40
 1589 07ba 2621     		movs	r1, #38
 1590 07bc 3848     		ldr	r0, .L115+4
 1591 07be 1C23     		movs	r3, #28
 1592 07c0 FFF7FEFF 		bl	draw_MeasUnit
 1593              	.LVL118:
 1594 07c4 0999     		ldr	r1, [sp, #36]
 1595 07c6 3046     		mov	r0, r6
 1596 07c8 0322     		movs	r2, #3
 760:Src/main.c    ****         }
 1597              		.loc 1 760 0
 1598 07ca 8446     		mov	ip, r0
 750:Src/main.c    **** /*        
 1599              		.loc 1 750 0
 1600 07cc 0027     		movs	r7, #0
 760:Src/main.c    ****         }
 1601              		.loc 1 760 0
 1602 07ce 0846     		mov	r0, r1
 1603 07d0 0D26     		movs	r6, #13
 1604 07d2 1146     		mov	r1, r2
 1605              	.LVL119:
 1606              	.L70:
 760:Src/main.c    ****         }
 1607              		.loc 1 760 0 is_stmt 0 discriminator 3
 1608 07d4 334A     		ldr	r2, .L115+8
 1609 07d6 0291     		str	r1, [sp, #8]
 1610 07d8 07EB8703 		add	r3, r7, r7, lsl #2
 1611 07dc 1344     		add	r3, r3, r2
 1612 07de 3BF91720 		ldrsh	r2, [fp, r7, lsl #1]
 1613 07e2 0593     		str	r3, [sp, #20]
 1614 07e4 CDE9030C 		strd	r0, ip, [sp, #12]
 1615 07e8 0192     		str	r2, [sp, #4]
 1616 07ea 3C23     		movs	r3, #60
 1617 07ec 0096     		str	r6, [sp]
 1618 07ee 099A     		ldr	r2, [sp, #36]
 1619 07f0 2B48     		ldr	r0, .L115+4
 1620 07f2 4421     		movs	r1, #68
 1621 07f4 FFF7FEFF 		bl	draw_Value
 1622              	.LVL120:
 1623 07f8 099B     		ldr	r3, [sp, #36]
 1624 07fa 0137     		adds	r7, r7, #1
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 49


 1625 07fc 0D33     		adds	r3, r3, #13
 1626 07fe DBB2     		uxtb	r3, r3
 757:Src/main.c    ****           x = meas_C_x;
 1627              		.loc 1 757 0 is_stmt 1 discriminator 3
 1628 0800 042F     		cmp	r7, #4
 1629 0802 0993     		str	r3, [sp, #36]
 1630              	.LVL121:
 1631 0804 3FF47DAD 		beq	.L68
 1632 0808 2A4B     		ldr	r3, .L115+24
 1633 080a D95D     		ldrb	r1, [r3, r7]	@ zero_extendqisi2
 1634 080c 2A4B     		ldr	r3, .L115+28
 1635 080e D85D     		ldrb	r0, [r3, r7]	@ zero_extendqisi2
 1636 0810 2A4B     		ldr	r3, .L115+32
 1637 0812 13F807C0 		ldrb	ip, [r3, r7]	@ zero_extendqisi2
 1638 0816 DDE7     		b	.L70
 1639              	.LVL122:
 1640              	.L81:
 1641              	.LBE35:
 1642              	.LBB36:
 1643 0818 8023     		movs	r3, #128
 1644 081a 0A93     		str	r3, [sp, #40]
 806:Src/main.c    ****         }
 1645              		.loc 1 806 0
 1646 081c 1E46     		mov	r6, r3
 1647 081e 8AE7     		b	.L74
 1648              	.L110:
 1649              	.LBE36:
 817:Src/main.c    ****         u8g2_SetFont(&u8g2, u8g2_font_7x14B_tf);
 1650              		.loc 1 817 0
 1651 0820 1F48     		ldr	r0, .L115+4
 1652 0822 FFF7FEFF 		bl	u8g2_ClearBuffer
 1653              	.LVL123:
 818:Src/main.c    ****         u8g2_DrawStr(&u8g2, 2, 15, "Mode Setting" );
 1654              		.loc 1 818 0
 1655 0826 2A49     		ldr	r1, .L115+52
 1656 0828 1D48     		ldr	r0, .L115+4
 1657 082a FFF7FEFF 		bl	u8g2_SetFont
 1658              	.LVL124:
 819:Src/main.c    ****         if( cursor == 0 ){
 1659              		.loc 1 819 0
 1660 082e 294B     		ldr	r3, .L115+56
 1661 0830 1B48     		ldr	r0, .L115+4
 1662 0832 0F22     		movs	r2, #15
 1663 0834 0221     		movs	r1, #2
 1664 0836 FFF7FEFF 		bl	u8g2_DrawStr
 1665              	.LVL125:
 820:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, ">" );
 1666              		.loc 1 820 0
 1667 083a 274B     		ldr	r3, .L115+60
 1668 083c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1669 083e 03BB     		cbnz	r3, .L75
 821:Src/main.c    ****         }else{
 1670              		.loc 1 821 0
 1671 0840 264B     		ldr	r3, .L115+64
 1672 0842 1748     		ldr	r0, .L115+4
 1673 0844 1E22     		movs	r2, #30
 1674 0846 0221     		movs	r1, #2
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 50


 1675 0848 FFF7FEFF 		bl	u8g2_DrawStr
 1676              	.LVL126:
 1677              	.L76:
 825:Src/main.c    ****         if( cursor == 1 ){
 1678              		.loc 1 825 0
 1679 084c 244B     		ldr	r3, .L115+68
 1680 084e 1448     		ldr	r0, .L115+4
 1681 0850 1E22     		movs	r2, #30
 1682 0852 0A21     		movs	r1, #10
 1683 0854 FFF7FEFF 		bl	u8g2_DrawStr
 1684              	.LVL127:
 826:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 1685              		.loc 1 826 0
 1686 0858 1F4B     		ldr	r3, .L115+60
 829:Src/main.c    ****         }
 1687              		.loc 1 829 0
 1688 085a 1148     		ldr	r0, .L115+4
 826:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 1689              		.loc 1 826 0
 1690 085c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1691 085e 012B     		cmp	r3, #1
 827:Src/main.c    ****         }else{
 1692              		.loc 1 827 0
 1693 0860 0CBF     		ite	eq
 1694 0862 1E4B     		ldreq	r3, .L115+64
 829:Src/main.c    ****         }
 1695              		.loc 1 829 0
 1696 0864 1F4B     		ldrne	r3, .L115+72
 1697 0866 2D22     		movs	r2, #45
 1698 0868 0221     		movs	r1, #2
 1699 086a FFF7FEFF 		bl	u8g2_DrawStr
 1700              	.LVL128:
 831:Src/main.c    ****         u8g2_SendBuffer(&u8g2);
 1701              		.loc 1 831 0
 1702 086e 1E4B     		ldr	r3, .L115+76
 1703 0870 0B48     		ldr	r0, .L115+4
 1704 0872 2D22     		movs	r2, #45
 1705 0874 0A21     		movs	r1, #10
 1706 0876 FFF7FEFF 		bl	u8g2_DrawStr
 1707              	.LVL129:
 832:Src/main.c    ****       }
 1708              		.loc 1 832 0
 1709 087a 0948     		ldr	r0, .L115+4
 1710 087c FFF7FEFF 		bl	u8g2_SendBuffer
 1711              	.LVL130:
 1712 0880 3FE5     		b	.L68
 1713              	.L75:
 823:Src/main.c    ****         }
 1714              		.loc 1 823 0
 1715 0882 184B     		ldr	r3, .L115+72
 1716 0884 0648     		ldr	r0, .L115+4
 1717 0886 1E22     		movs	r2, #30
 1718 0888 0221     		movs	r1, #2
 1719 088a FFF7FEFF 		bl	u8g2_DrawStr
 1720              	.LVL131:
 1721 088e DDE7     		b	.L76
 1722              	.L96:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 51


 571:Src/main.c    ****       FP_duty = 60;
 1723              		.loc 1 571 0
 1724 0890 3B2B     		cmp	r3, #59
 572:Src/main.c    ****     }
 1725              		.loc 1 572 0
 1726 0892 DCBF     		itt	le
 1727 0894 3C23     		movle	r3, #60
 1728 0896 2B80     		strhle	r3, [r5]	@ movhi
 1729 0898 BAE4     		b	.L45
 1730              	.L116:
 1731 089a 00BF     		.align	2
 1732              	.L115:
 1733 089c 00000000 		.word	.LC0
 1734 08a0 00000000 		.word	u8g2
 1735 08a4 00000000 		.word	.LANCHOR2
 1736 08a8 05000000 		.word	.LANCHOR2+5
 1737 08ac 0A000000 		.word	.LANCHOR2+10
 1738 08b0 ABAAAAAA 		.word	-1431655765
 1739 08b4 00000000 		.word	.LANCHOR9
 1740 08b8 00000000 		.word	.LANCHOR10
 1741 08bc 00000000 		.word	.LANCHOR11
 1742 08c0 00000000 		.word	Gsens_Y
 1743 08c4 64000000 		.word	.LC11
 1744 08c8 70000000 		.word	.LC13
 1745 08cc 5C000000 		.word	.LC9
 1746 08d0 00000000 		.word	u8g2_font_7x14B_tf
 1747 08d4 74000000 		.word	.LC14
 1748 08d8 00000000 		.word	.LANCHOR12
 1749 08dc 84000000 		.word	.LC15
 1750 08e0 8C000000 		.word	.LC17
 1751 08e4 88000000 		.word	.LC16
 1752 08e8 98000000 		.word	.LC18
 1753              	.LBE37:
 1754              		.cfi_endproc
 1755              	.LFE130:
 1757              		.section	.text.Error_Handler,"ax",%progbits
 1758              		.align	1
 1759              		.p2align 2,,3
 1760              		.global	Error_Handler
 1761              		.syntax unified
 1762              		.thumb
 1763              		.thumb_func
 1764              		.fpu fpv4-sp-d16
 1766              	Error_Handler:
 1767              	.LFB132:
 891:Src/main.c    **** 
 892:Src/main.c    **** /* USER CODE BEGIN 4 */
 893:Src/main.c    **** 
 894:Src/main.c    **** /* USER CODE END 4 */
 895:Src/main.c    **** 
 896:Src/main.c    **** /**
 897:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 898:Src/main.c    ****   * @retval None
 899:Src/main.c    ****   */
 900:Src/main.c    **** void Error_Handler(void)
 901:Src/main.c    **** {
 1768              		.loc 1 901 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 52


 1769              		.cfi_startproc
 1770              		@ Volatile: function does not return.
 1771              		@ args = 0, pretend = 0, frame = 0
 1772              		@ frame_needed = 0, uses_anonymous_args = 0
 1773              		@ link register save eliminated.
 1774              	.L118:
 1775 0000 FEE7     		b	.L118
 1776              		.cfi_endproc
 1777              	.LFE132:
 1779              		.comm	adc,20,4
 1780              		.comm	g_ADCBuffer,20,4
 1781              		.comm	Gsens_Z,2,2
 1782              		.comm	Gsens_Y,2,2
 1783              		.comm	Gsens_X,2,2
 1784              		.comm	Gsens_EN,1,1
 1785              		.comm	CAN_EN,1,1
 1786              		.global	FP_duty
 1787              		.global	FP_volt
 1788              		.global	O2_volt
 1789              		.global	meas_value
 1790              		.global	meas_sign
 1791              		.global	meas_frac
 1792              		.global	meas_digit
 1793              		.global	meas_unit
 1794              		.global	meas_name
 1795              		.global	idct_status
 1796              		.global	idct_name
 1797              		.global	cursor
 1798              		.comm	setting,1,1
 1799              		.comm	mode,1,1
 1800              		.global	MT
 1801              		.global	gear
 1802              		.global	speed
 1803              		.global	update_display
 1804              		.comm	u8g2,128,4
 1805              		.global	logo_bits
 1806 0002 00BF     		.section	.bss.cursor,"aw",%nobits
 1807              		.set	.LANCHOR12,. + 0
 1810              	cursor:
 1811 0000 00       		.space	1
 1812              		.section	.bss.gear,"aw",%nobits
 1815              	gear:
 1816 0000 00       		.space	1
 1817              		.section	.bss.idct_status,"aw",%nobits
 1818              		.align	2
 1819              		.set	.LANCHOR1,. + 0
 1822              	idct_status:
 1823 0000 0000     		.space	2
 1824              		.section	.bss.update_display,"aw",%nobits
 1827              	update_display:
 1828 0000 00       		.space	1
 1829              		.section	.data.FP_duty,"aw",%progbits
 1830              		.align	1
 1831              		.set	.LANCHOR5,. + 0
 1834              	FP_duty:
 1835 0000 6400     		.short	100
 1836              		.section	.data.FP_volt,"aw",%progbits
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 53


 1837              		.align	1
 1838              		.set	.LANCHOR7,. + 0
 1841              	FP_volt:
 1842 0000 4A01     		.short	330
 1843              		.section	.data.MT,"aw",%progbits
 1844              		.align	3
 1847              	MT:
 1848 0000 77BE9F1A 		.word	446676599
 1849 0004 2FDD0B40 		.word	1074519343
 1850 0008 1F85EB51 		.word	1374389535
 1851 000c B81E0040 		.word	1073749688
 1852 0010 A8C64B37 		.word	927712936
 1853 0014 8941F63F 		.word	1073103241
 1854 0018 00000000 		.word	0
 1855 001c 0000F03F 		.word	1072693248
 1856 0020 986E1283 		.word	2199023256
 1857 0024 C0CAE93F 		.word	1072286400
 1858              		.section	.data.O2_volt,"aw",%progbits
 1859              		.align	1
 1860              		.set	.LANCHOR6,. + 0
 1863              	O2_volt:
 1864 0000 4A01     		.short	330
 1865              		.section	.data.meas_value,"aw",%progbits
 1866              		.align	2
 1867              		.set	.LANCHOR8,. + 0
 1870              	meas_value:
 1871 0000 6900     		.short	105
 1872 0002 EB00     		.short	235
 1873 0004 8502     		.short	645
 1874 0006 5900     		.short	89
 1875 0008 4900     		.short	73
 1876 000a 8F00     		.short	143
 1877              		.section	.data.speed,"aw",%progbits
 1878              		.align	1
 1881              	speed:
 1882 0000 F000     		.short	240
 1883              		.section	.rodata.draw_MeasLabels.str1.4,"aMS",%progbits,1
 1884              		.align	2
 1885              	.LC0:
 1886 0000 25202000 		.ascii	"%  \000"
 1887              	.LC1:
 1888 0004 44555459 		.ascii	"DUTY\000"
 1888      00
 1889              		.section	.rodata.idct_name,"a",%progbits
 1890              		.align	2
 1891              		.set	.LANCHOR0,. + 0
 1894              	idct_name:
 1895 0000 43414E00 		.ascii	"CAN\000"
 1896 0004 00       		.space	1
 1897 0005 4753454E 		.ascii	"GSENS"
 1897      53
 1898              		.section	.rodata.logo_bits,"a",%progbits
 1899              		.align	2
 1900              		.set	.LANCHOR4,. + 0
 1903              	logo_bits:
 1904 0000 00       		.byte	0
 1905 0001 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 54


 1906 0002 00       		.byte	0
 1907 0003 00       		.byte	0
 1908 0004 00       		.byte	0
 1909 0005 00       		.byte	0
 1910 0006 00       		.byte	0
 1911 0007 00       		.byte	0
 1912 0008 00       		.byte	0
 1913 0009 00       		.byte	0
 1914 000a 00       		.byte	0
 1915 000b 00       		.byte	0
 1916 000c 00       		.byte	0
 1917 000d 00       		.byte	0
 1918 000e 00       		.byte	0
 1919 000f 00       		.byte	0
 1920 0010 00       		.byte	0
 1921 0011 00       		.byte	0
 1922 0012 00       		.byte	0
 1923 0013 00       		.byte	0
 1924 0014 00       		.byte	0
 1925 0015 00       		.byte	0
 1926 0016 00       		.byte	0
 1927 0017 00       		.byte	0
 1928 0018 00       		.byte	0
 1929 0019 00       		.byte	0
 1930 001a F0       		.byte	-16
 1931 001b 0F       		.byte	15
 1932 001c 00       		.byte	0
 1933 001d 00       		.byte	0
 1934 001e 00       		.byte	0
 1935 001f FC       		.byte	-4
 1936 0020 FF       		.byte	-1
 1937 0021 FF       		.byte	-1
 1938 0022 3F       		.byte	63
 1939 0023 00       		.byte	0
 1940 0024 80       		.byte	-128
 1941 0025 FF       		.byte	-1
 1942 0026 FF       		.byte	-1
 1943 0027 FF       		.byte	-1
 1944 0028 FF       		.byte	-1
 1945 0029 01       		.byte	1
 1946 002a E0       		.byte	-32
 1947 002b 1F       		.byte	31
 1948 002c 00       		.byte	0
 1949 002d 80       		.byte	-128
 1950 002e FF       		.byte	-1
 1951 002f 07       		.byte	7
 1952 0030 E0       		.byte	-32
 1953 0031 01       		.byte	1
 1954 0032 00       		.byte	0
 1955 0033 80       		.byte	-128
 1956 0034 81       		.byte	-127
 1957 0035 07       		.byte	7
 1958 0036 E0       		.byte	-32
 1959 0037 01       		.byte	1
 1960 0038 00       		.byte	0
 1961 0039 80       		.byte	-128
 1962 003a 81       		.byte	-127
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 55


 1963 003b 07       		.byte	7
 1964 003c C0       		.byte	-64
 1965 003d E1       		.byte	-31
 1966 003e 07       		.byte	7
 1967 003f C0       		.byte	-64
 1968 0040 80       		.byte	-128
 1969 0041 03       		.byte	3
 1970 0042 00       		.byte	0
 1971 0043 FC       		.byte	-4
 1972 0044 1F       		.byte	31
 1973 0045 E0       		.byte	-32
 1974 0046 80       		.byte	-128
 1975 0047 03       		.byte	3
 1976 0048 00       		.byte	0
 1977 0049 FE       		.byte	-2
 1978 004a 7F       		.byte	127
 1979 004b 70       		.byte	112
 1980 004c C0       		.byte	-64
 1981 004d 01       		.byte	1
 1982 004e 00       		.byte	0
 1983 004f 0F       		.byte	15
 1984 0050 FE       		.byte	-2
 1985 0051 39       		.byte	57
 1986 0052 E0       		.byte	-32
 1987 0053 00       		.byte	0
 1988 0054 00       		.byte	0
 1989 0055 07       		.byte	7
 1990 0056 F8       		.byte	-8
 1991 0057 1F       		.byte	31
 1992 0058 F0       		.byte	-16
 1993 0059 00       		.byte	0
 1994 005a 00       		.byte	0
 1995 005b 0E       		.byte	14
 1996 005c E0       		.byte	-32
 1997 005d 1F       		.byte	31
 1998 005e 78       		.byte	120
 1999 005f 00       		.byte	0
 2000 0060 00       		.byte	0
 2001 0061 0C       		.byte	12
 2002 0062 C0       		.byte	-64
 2003 0063 FF       		.byte	-1
 2004 0064 3F       		.byte	63
 2005 0065 00       		.byte	0
 2006 0066 00       		.byte	0
 2007 0067 18       		.byte	24
 2008 0068 00       		.byte	0
 2009 0069 FF       		.byte	-1
 2010 006a 1F       		.byte	31
 2011 006b 00       		.byte	0
 2012 006c 00       		.byte	0
 2013 006d 38       		.byte	56
 2014 006e C0       		.byte	-64
 2015 006f FF       		.byte	-1
 2016 0070 0F       		.byte	15
 2017 0071 00       		.byte	0
 2018 0072 00       		.byte	0
 2019 0073 70       		.byte	112
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 56


 2020 0074 E0       		.byte	-32
 2021 0075 F1       		.byte	-15
 2022 0076 03       		.byte	3
 2023 0077 00       		.byte	0
 2024 0078 00       		.byte	0
 2025 0079 E0       		.byte	-32
 2026 007a 78       		.byte	120
 2027 007b 00       		.byte	0
 2028 007c 00       		.byte	0
 2029 007d 00       		.byte	0
 2030 007e 00       		.byte	0
 2031 007f C0       		.byte	-64
 2032 0080 3F       		.byte	63
 2033 0081 E0       		.byte	-32
 2034 0082 01       		.byte	1
 2035 0083 00       		.byte	0
 2036 0084 00       		.byte	0
 2037 0085 80       		.byte	-128
 2038 0086 1F       		.byte	31
 2039 0087 F0       		.byte	-16
 2040 0088 01       		.byte	1
 2041 0089 00       		.byte	0
 2042 008a 00       		.byte	0
 2043 008b 00       		.byte	0
 2044 008c 07       		.byte	7
 2045 008d F8       		.byte	-8
 2046 008e 00       		.byte	0
 2047 008f 00       		.byte	0
 2048 0090 00       		.byte	0
 2049 0091 00       		.byte	0
 2050 0092 1E       		.byte	30
 2051 0093 7C       		.byte	124
 2052 0094 00       		.byte	0
 2053 0095 00       		.byte	0
 2054 0096 00       		.byte	0
 2055 0097 00       		.byte	0
 2056 0098 F8       		.byte	-8
 2057 0099 1F       		.byte	31
 2058 009a 00       		.byte	0
 2059 009b 00       		.byte	0
 2060 009c 00       		.byte	0
 2061 009d 00       		.byte	0
 2062 009e F0       		.byte	-16
 2063 009f 0F       		.byte	15
 2064 00a0 00       		.byte	0
 2065 00a1 00       		.byte	0
 2066 00a2 00       		.byte	0
 2067 00a3 00       		.byte	0
 2068 00a4 80       		.byte	-128
 2069 00a5 01       		.byte	1
 2070 00a6 00       		.byte	0
 2071 00a7 00       		.byte	0
 2072 00a8 00       		.byte	0
 2073 00a9 00       		.byte	0
 2074 00aa 00       		.byte	0
 2075 00ab 00       		.byte	0
 2076 00ac 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 57


 2077 00ad 00       		.byte	0
 2078 00ae 00       		.byte	0
 2079 00af 00       		.byte	0
 2080 00b0 00       		.byte	0
 2081 00b1 00       		.byte	0
 2082 00b2 00       		.byte	0
 2083 00b3 00       		.byte	0
 2084 00b4 00       		.byte	0
 2085 00b5 00       		.byte	0
 2086 00b6 00       		.byte	0
 2087 00b7 00       		.byte	0
 2088 00b8 00       		.byte	0
 2089 00b9 00       		.byte	0
 2090 00ba 00       		.byte	0
 2091 00bb 00       		.byte	0
 2092 00bc 00       		.byte	0
 2093 00bd 00       		.byte	0
 2094 00be 00       		.byte	0
 2095 00bf 00       		.byte	0
 2096 00c0 00       		.byte	0
 2097 00c1 00       		.byte	0
 2098 00c2 00       		.byte	0
 2099 00c3 00       		.byte	0
 2100 00c4 00       		.byte	0
 2101 00c5 00       		.byte	0
 2102 00c6 00       		.byte	0
 2103 00c7 4C       		.byte	76
 2104 00c8 1C       		.byte	28
 2105 00c9 00       		.byte	0
 2106 00ca 00       		.byte	0
 2107 00cb 00       		.byte	0
 2108 00cc 00       		.byte	0
 2109 00cd 32       		.byte	50
 2110 00ce 0E       		.byte	14
 2111 00cf 00       		.byte	0
 2112 00d0 00       		.byte	0
 2113 00d1 00       		.byte	0
 2114 00d2 00       		.byte	0
 2115 00d3 00       		.byte	0
 2116 00d4 C6       		.byte	-58
 2117 00d5 00       		.byte	0
 2118 00d6 18       		.byte	24
 2119 00d7 00       		.byte	0
 2120 00d8 00       		.byte	0
 2121 00d9 7C       		.byte	124
 2122 00da EF       		.byte	-17
 2123 00db FC       		.byte	-4
 2124 00dc 39       		.byte	57
 2125 00dd 00       		.byte	0
 2126 00de 00       		.byte	0
 2127 00df 4E       		.byte	78
 2128 00e0 C6       		.byte	-58
 2129 00e1 B8       		.byte	-72
 2130 00e2 31       		.byte	49
 2131 00e3 00       		.byte	0
 2132 00e4 00       		.byte	0
 2133 00e5 3E       		.byte	62
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 58


 2134 00e6 C6       		.byte	-58
 2135 00e7 98       		.byte	-104
 2136 00e8 31       		.byte	49
 2137 00e9 00       		.byte	0
 2138 00ea 00       		.byte	0
 2139 00eb 3C       		.byte	60
 2140 00ec C6       		.byte	-58
 2141 00ed 98       		.byte	-104
 2142 00ee 31       		.byte	49
 2143 00ef 00       		.byte	0
 2144 00f0 00       		.byte	0
 2145 00f1 0E       		.byte	14
 2146 00f2 C6       		.byte	-58
 2147 00f3 98       		.byte	-104
 2148 00f4 31       		.byte	49
 2149 00f5 00       		.byte	0
 2150 00f6 00       		.byte	0
 2151 00f7 4E       		.byte	78
 2152 00f8 CE       		.byte	-50
 2153 00f9 99       		.byte	-103
 2154 00fa 31       		.byte	49
 2155 00fb 00       		.byte	0
 2156 00fc 00       		.byte	0
 2157 00fd 7C       		.byte	124
 2158 00fe EF       		.byte	-17
 2159 00ff FD       		.byte	-3
 2160 0100 7B       		.byte	123
 2161 0101 00       		.byte	0
 2162 0102 00       		.byte	0
 2163 0103 00       		.byte	0
 2164 0104 00       		.byte	0
 2165 0105 00       		.byte	0
 2166 0106 00       		.byte	0
 2167 0107 00       		.byte	0
 2168 0108 00       		.byte	0
 2169 0109 00       		.byte	0
 2170 010a 00       		.byte	0
 2171 010b 00       		.byte	0
 2172 010c 00       		.byte	0
 2173 010d 00       		.byte	0
 2174 010e 00       		.byte	0
 2175 010f 00       		.byte	0
 2176 0110 00       		.byte	0
 2177 0111 00       		.byte	0
 2178 0112 00       		.byte	0
 2179 0113 00       		.byte	0
 2180 0114 00       		.byte	0
 2181 0115 00       		.byte	0
 2182 0116 00       		.byte	0
 2183 0117 00       		.byte	0
 2184 0118 00       		.byte	0
 2185 0119 00       		.byte	0
 2186 011a 00       		.byte	0
 2187 011b 00       		.byte	0
 2188 011c 00       		.byte	0
 2189 011d 00       		.byte	0
 2190 011e 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 59


 2191 011f 00       		.byte	0
 2192              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2193              		.align	2
 2194              	.LC2:
 2195 0000 4D756C74 		.ascii	"Multi Function Meter\000"
 2195      69204675 
 2195      6E637469 
 2195      6F6E204D 
 2195      65746572 
 2196 0015 000000   		.space	3
 2197              	.LC3:
 2198 0018 5265762E 		.ascii	"Rev. 0.2a\000"
 2198      20302E32 
 2198      6100
 2199 0022 0000     		.space	2
 2200              	.LC4:
 2201 0024 48656C6C 		.ascii	"Hello. This is MFM.\012\000"
 2201      6F2E2054 
 2201      68697320 
 2201      6973204D 
 2201      464D2E0A 
 2202 0039 000000   		.space	3
 2203              	.LC5:
 2204 003c 2825642C 		.ascii	"(%d,%d,%d)\012\000"
 2204      25642C25 
 2204      64290A00 
 2205              	.LC6:
 2206 0048 55502000 		.ascii	"UP \000"
 2207              	.LC7:
 2208 004c 444F574E 		.ascii	"DOWN \000"
 2208      2000
 2209 0052 0000     		.space	2
 2210              	.LC8:
 2211 0054 454E5445 		.ascii	"ENTER \000"
 2211      522000
 2212 005b 00       		.space	1
 2213              	.LC9:
 2214 005c 6B506100 		.ascii	"kPa\000"
 2215              	.LC10:
 2216 0060 4D415000 		.ascii	"MAP\000"
 2217              	.LC11:
 2218 0064 4700     		.ascii	"G\000"
 2219 0066 0000     		.space	2
 2220              	.LC12:
 2221 0068 4C617447 		.ascii	"LatG\000"
 2221      00
 2222 006d 000000   		.space	3
 2223              	.LC13:
 2224 0070 00       		.ascii	"\000"
 2225 0071 000000   		.space	3
 2226              	.LC14:
 2227 0074 4D6F6465 		.ascii	"Mode Setting\000"
 2227      20536574 
 2227      74696E67 
 2227      00
 2228 0081 000000   		.space	3
 2229              	.LC15:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 60


 2230 0084 3E00     		.ascii	">\000"
 2231 0086 0000     		.space	2
 2232              	.LC16:
 2233 0088 2000     		.ascii	" \000"
 2234 008a 0000     		.space	2
 2235              	.LC17:
 2236 008c 4D756C74 		.ascii	"Multi-Meter\000"
 2236      692D4D65 
 2236      74657200 
 2237              	.LC18:
 2238 0098 53636F70 		.ascii	"Scope\000"
 2238      6500
 2239              		.section	.rodata.meas_digit,"a",%progbits
 2240              		.align	2
 2241              		.set	.LANCHOR9,. + 0
 2244              	meas_digit:
 2245 0000 03       		.byte	3
 2246 0001 03       		.byte	3
 2247 0002 03       		.byte	3
 2248 0003 03       		.byte	3
 2249 0004 03       		.byte	3
 2250 0005 03       		.byte	3
 2251              		.section	.rodata.meas_frac,"a",%progbits
 2252              		.align	2
 2253              		.set	.LANCHOR10,. + 0
 2256              	meas_frac:
 2257 0000 02       		.byte	2
 2258 0001 01       		.byte	1
 2259 0002 01       		.byte	1
 2260 0003 00       		.byte	0
 2261 0004 00       		.byte	0
 2262 0005 02       		.byte	2
 2263              		.section	.rodata.meas_name,"a",%progbits
 2264              		.align	2
 2265              		.set	.LANCHOR3,. + 0
 2268              	meas_name:
 2269 0000 4D415000 		.ascii	"MAP\000"
 2270 0004 000000   		.space	3
 2271 0007 4F494C50 		.ascii	"OILP\000"
 2271      00
 2272 000c 0000     		.space	2
 2273 000e 46505600 		.ascii	"FPV\000"
 2274 0012 000000   		.space	3
 2275 0015 45435400 		.ascii	"ECT\000"
 2276 0019 000000   		.space	3
 2277 001c 4F494C54 		.ascii	"OILT\000"
 2277      00
 2278 0021 0000     		.space	2
 2279 0023 4F3200   		.ascii	"O2\000"
 2280 0026 00000000 		.space	4
 2281              		.section	.rodata.meas_sign,"a",%progbits
 2282              		.align	2
 2283              		.set	.LANCHOR11,. + 0
 2286              	meas_sign:
 2287 0000 01       		.byte	1
 2288 0001 00       		.byte	0
 2289 0002 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 61


 2290 0003 00       		.byte	0
 2291 0004 00       		.byte	0
 2292 0005 00       		.byte	0
 2293              		.section	.rodata.meas_unit,"a",%progbits
 2294              		.align	2
 2295              		.set	.LANCHOR2,. + 0
 2298              	meas_unit:
 2299 0000 6B706100 		.ascii	"kpa\000"
 2300 0004 00       		.space	1
 2301 0005 6B706100 		.ascii	"kpa\000"
 2302 0009 00       		.space	1
 2303 000a 56202000 		.ascii	"V  \000"
 2304 000e 00       		.space	1
 2305 000f B0       		.byte	-80
 2306 0010 43       		.byte	67
 2307 0011 00       		.byte	0
 2308 0012 0000     		.space	2
 2309 0014 B0       		.byte	-80
 2310 0015 43       		.byte	67
 2311 0016 00       		.byte	0
 2312 0017 0000     		.space	2
 2313 0019 5600     		.ascii	"V\000"
 2314 001b 000000   		.space	3
 2315              		.text
 2316              	.Letext0:
 2317              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 2318              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 2319              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2320              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 2321              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 2322              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 2323              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2324              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 2325              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 2326              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 2327              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 2328              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 2329              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 2330              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2c.h"
 2331              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi.h"
 2332              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 2333              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 2334              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 2335              		.file 20 "Inc/adc.h"
 2336              		.file 21 "Inc/can.h"
 2337              		.file 22 "Inc/i2c.h"
 2338              		.file 23 "Inc/spi.h"
 2339              		.file 24 "Inc/tim.h"
 2340              		.file 25 "Inc/usart.h"
 2341              		.file 26 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 2342              		.file 27 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 2343              		.file 28 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef
 2344              		.file 29 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 2345              		.file 30 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/math.h"
 2346              		.file 31 "/Users/imashio/Electronics/ARM/_Library/u8x8.h"
 2347              		.file 32 "/Users/imashio/Electronics/ARM/_Library/u8g2.h"
 2348              		.file 33 "/Users/imashio/Electronics/ARM/_Library/flag.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 62


 2349              		.file 34 "Inc/defi_decoder.h"
 2350              		.file 35 "Inc/pulse_counter.h"
 2351              		.file 36 "Inc/can_obd.h"
 2352              		.file 37 "/Users/imashio/Electronics/ARM/_Library/draw_Value.h"
 2353              		.file 38 "/Users/imashio/Electronics/ARM/_Library/draw_IndicatorBox.h"
 2354              		.file 39 "/Users/imashio/Electronics/ARM/_Library/usart_transmit_printf.h"
 2355              		.file 40 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 2356              		.file 41 "Inc/gsens_ADXL345.h"
 2357              		.file 42 "/Users/imashio/Electronics/ARM/_Library/draw_BarGraph.h"
 2358              		.file 43 "Inc/gpio.h"
 2359              		.file 44 "Inc/dma.h"
 2360              		.file 45 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 2361              		.file 46 "<built-in>"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 63


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:18     .text.draw_indicators:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:26     .text.draw_indicators:0000000000000000 draw_indicators
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:81     .text.draw_indicators:000000000000003c $d
                            *COM*:0000000000000080 u8g2
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:88     .text.draw_MeasLabels:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:96     .text.draw_MeasLabels:0000000000000000 draw_MeasLabels
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:213    .text.draw_MeasLabels:00000000000000d0 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:222    .text.draw_MeasLabels_Rotary:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:230    .text.draw_MeasLabels_Rotary:0000000000000000 draw_MeasLabels_Rotary
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:286    .text.draw_MeasLabels_Rotary:000000000000003c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:293    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:301    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:327    .text.HAL_ADC_ConvCpltCallback:0000000000000018 $d
                            *COM*:0000000000000014 g_ADCBuffer
                            *COM*:0000000000000014 adc
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:333    .text.SystemClock_Config:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:341    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:460    .text.startup.main:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:468    .text.startup.main:0000000000000000 main
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:994    .text.startup.main:0000000000000320 $d
                            *COM*:0000000000000001 Gsens_EN
                            *COM*:0000000000000001 CAN_EN
                            *COM*:0000000000000001 mode
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1040   .text.startup.main:00000000000003d0 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1346   .text.startup.main:00000000000005d0 $d
                            *COM*:0000000000000001 setting
                            *COM*:0000000000000002 Gsens_X
                            *COM*:0000000000000002 Gsens_Y
                            *COM*:0000000000000002 Gsens_Z
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1367   .text.startup.main:0000000000000618 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1733   .text.startup.main:000000000000089c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1758   .text.Error_Handler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1766   .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1834   .data.FP_duty:0000000000000000 FP_duty
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1841   .data.FP_volt:0000000000000000 FP_volt
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1863   .data.O2_volt:0000000000000000 O2_volt
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1870   .data.meas_value:0000000000000000 meas_value
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:2286   .rodata.meas_sign:0000000000000000 meas_sign
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:2256   .rodata.meas_frac:0000000000000000 meas_frac
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:2244   .rodata.meas_digit:0000000000000000 meas_digit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:2298   .rodata.meas_unit:0000000000000000 meas_unit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:2268   .rodata.meas_name:0000000000000000 meas_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1822   .bss.idct_status:0000000000000000 idct_status
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1894   .rodata.idct_name:0000000000000000 idct_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1810   .bss.cursor:0000000000000000 cursor
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1847   .data.MT:0000000000000000 MT
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1815   .bss.gear:0000000000000000 gear
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1881   .data.speed:0000000000000000 speed
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1827   .bss.update_display:0000000000000000 update_display
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1903   .rodata.logo_bits:0000000000000000 logo_bits
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1811   .bss.cursor:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1816   .bss.gear:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1818   .bss.idct_status:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1828   .bss.update_display:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1830   .data.FP_duty:0000000000000000 $d
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 64


/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1837   .data.FP_volt:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1844   .data.MT:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1859   .data.O2_volt:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1866   .data.meas_value:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1878   .data.speed:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1884   .rodata.draw_MeasLabels.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1890   .rodata.idct_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:1899   .rodata.logo_bits:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:2193   .rodata.main.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:2240   .rodata.meas_digit:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:2252   .rodata.meas_frac:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:2264   .rodata.meas_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:2282   .rodata.meas_sign:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s:2294   .rodata.meas_unit:0000000000000000 $d

UNDEFINED SYMBOLS
draw_IndicatorBox
draw_MeasLabelUnit
draw_Value
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
memset
MX_GPIO_Init
MX_DMA_Init
MX_ADC1_Init
MX_CAN_Init
MX_I2C1_Init
MX_SPI1_Init
MX_TIM1_Init
MX_TIM2_Init
MX_TIM3_Init
MX_TIM6_Init
MX_USART1_UART_Init
MX_USART2_UART_Init
MX_TIM7_Init
HAL_TIM_PWM_Start
HAL_TIM_Base_Start_IT
HAL_ADC_Start_DMA
HAL_UART_Receive_IT
CAN_OBD_Init
u8g2_Setup_ssd1309_128x64_noname2_f
HAL_GPIO_WritePin
HAL_Delay
u8x8_InitDisplay
u8x8_SetPowerSave
u8x8_SetContrast
u8g2_ClearDisplay
u8g2_DrawXBMP
u8g2_SetFont
u8g2_DrawStr
u8g2_SendBuffer
u8g2_ClearBuffer
HAL_UART_Transmit_printf
Gsens_ADXL345_Init
CAN_OBD_Response
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccBsjhfY.s 			page 65


defi_decoder
HAL_NVIC_DisableIRQ
htim1
htim2
htim3
htim6
htim7
hadc1
DEFI_value
UART1_Data
huart1
u8x8_gpio_and_delay_STM32F303
u8x8_byte_4wire_hw_spi
u8g2_cb_r0
u8g2_font_5x7_tf
huart2
CAN_Received
UART1_RxData
flag_sw
flag_disp
flag_status
rpm
flag_meas
Gsens_ADXL345_Read_G
draw_CircularMeter_Init
draw_CircularMeter
draw_Wave_axis
draw_Wave
draw_BarGraph
draw_MeasUnit
u8g2_font_7x14B_tf
