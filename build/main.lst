ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADXL345_RegWrite,"ax",%progbits
  18              		.align	1
  19              		.global	ADXL345_RegWrite
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	ADXL345_RegWrite:
  26              	.LFB126:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 2


  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  39:Src/main.c    **** #include "main.h"
  40:Src/main.c    **** #include "stm32f3xx_hal.h"
  41:Src/main.c    **** #include "adc.h"
  42:Src/main.c    **** #include "can.h"
  43:Src/main.c    **** #include "dma.h"
  44:Src/main.c    **** #include "i2c.h"
  45:Src/main.c    **** #include "spi.h"
  46:Src/main.c    **** #include "tim.h"
  47:Src/main.c    **** #include "usart.h"
  48:Src/main.c    **** #include "gpio.h"
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN Includes */
  51:Src/main.c    **** #include <stdio.h>
  52:Src/main.c    **** #include <math.h>
  53:Src/main.c    **** 
  54:Src/main.c    **** // #include "basic.h"  // original library
  55:Src/main.c    **** #include "usart_transmit_printf.h"
  56:Src/main.c    **** #include "u8g2.h"		// graphic display library
  57:Src/main.c    **** #include "u8x8_gpio_STM32F303.h"
  58:Src/main.c    **** #include "u8x8_byte_4wire_hw_spi.h"
  59:Src/main.c    **** #include "draw_Value.h"
  60:Src/main.c    **** #include "draw_BarGraph.h"
  61:Src/main.c    **** #include "draw_IndicatorBox.h"
  62:Src/main.c    **** 
  63:Src/main.c    **** #include "flag.h"
  64:Src/main.c    **** #include "defi_decoder.h"
  65:Src/main.c    **** #include "pulse_counter.h"
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END Includes */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE BEGIN PV */
  72:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  73:Src/main.c    **** u8g2_t u8g2; // a structure which will contain all the data for one display
  74:Src/main.c    **** 
  75:Src/main.c    **** // mode definition
  76:Src/main.c    **** #define N_mode        4
  77:Src/main.c    **** 
  78:Src/main.c    **** // RPM bar graph parameter definition
  79:Src/main.c    **** #define	rpmbar_x		  0
  80:Src/main.c    **** #define	rpmbar_y		  0
  81:Src/main.c    **** #define	rpmbar_width	128
  82:Src/main.c    **** #define	rpmbar_height	14
  83:Src/main.c    **** #define	rpm_min			  0
  84:Src/main.c    **** #define	rpm_max			  9000
  85:Src/main.c    **** 
  86:Src/main.c    **** // measurements display parameter definition
  87:Src/main.c    **** // Bar graph
  88:Src/main.c    **** #define	N_meas			  6
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 3


  89:Src/main.c    **** #define	meas_x			  0
  90:Src/main.c    **** #define	meas_y			  16
  91:Src/main.c    **** #define	meas_x_offset	2
  92:Src/main.c    **** #define	meas_width1		70
  93:Src/main.c    **** #define	meas_width2		56
  94:Src/main.c    **** #define	meas_height		12
  95:Src/main.c    **** // Circular Meter
  96:Src/main.c    **** #define	N_meas_C			4
  97:Src/main.c    **** #define	meas_C_x			68
  98:Src/main.c    **** #define	meas_C_y			2
  99:Src/main.c    **** #define	meas_C_x_offset		2
 100:Src/main.c    **** #define	meas_C_width		60
 101:Src/main.c    **** #define	meas_C_height		13
 102:Src/main.c    **** 
 103:Src/main.c    **** // indicators parameter definition
 104:Src/main.c    **** #define	N_idct			  2
 105:Src/main.c    **** #define	idct_x			  72
 106:Src/main.c    **** #define	idct_y			  53
 107:Src/main.c    **** #define	idct_width		27
 108:Src/main.c    **** #define	idct_height		9
 109:Src/main.c    **** 
 110:Src/main.c    **** //  Fuel Pump Voltage dosplay parameter definition
 111:Src/main.c    **** #define	FP_x		    	0
 112:Src/main.c    **** #define	FP_y          52
 113:Src/main.c    **** #define	FP_height	    12
 114:Src/main.c    **** #define	FP_volt_width	45
 115:Src/main.c    **** #define	FP_duty_width	70
 116:Src/main.c    **** 
 117:Src/main.c    **** // wave display parameter definition
 118:Src/main.c    **** #define	wave_x			  0
 119:Src/main.c    **** #define	wave_y			  13
 120:Src/main.c    **** #define	wave_width		128
 121:Src/main.c    **** #define	wave_height		52
 122:Src/main.c    **** #define	wave_value_min	-100
 123:Src/main.c    **** #define	wave_value_max	+200
 124:Src/main.c    **** 
 125:Src/main.c    **** // logo parameter definition (small 'enfini' logo)
 126:Src/main.c    **** #define logo_width    48
 127:Src/main.c    **** #define logo_height   48
 128:Src/main.c    **** 
 129:Src/main.c    **** uint8_t   update_display = 0;
 130:Src/main.c    **** 
 131:Src/main.c    **** const unsigned char logo_bits[] = {
 132:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 133:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 134:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0x3F, 0x00,
 135:Src/main.c    ****   0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x1F, 0x00, 0x80, 0xFF, 0x07,
 136:Src/main.c    ****   0xE0, 0x01, 0x00, 0x80, 0x81, 0x07, 0xE0, 0x01, 0x00, 0x80, 0x81, 0x07,
 137:Src/main.c    ****   0xC0, 0xE1, 0x07, 0xC0, 0x80, 0x03, 0x00, 0xFC, 0x1F, 0xE0, 0x80, 0x03,
 138:Src/main.c    ****   0x00, 0xFE, 0x7F, 0x70, 0xC0, 0x01, 0x00, 0x0F, 0xFE, 0x39, 0xE0, 0x00,
 139:Src/main.c    ****   0x00, 0x07, 0xF8, 0x1F, 0xF0, 0x00, 0x00, 0x0E, 0xE0, 0x1F, 0x78, 0x00,
 140:Src/main.c    ****   0x00, 0x0C, 0xC0, 0xFF, 0x3F, 0x00, 0x00, 0x18, 0x00, 0xFF, 0x1F, 0x00,
 141:Src/main.c    ****   0x00, 0x38, 0xC0, 0xFF, 0x0F, 0x00, 0x00, 0x70, 0xE0, 0xF1, 0x03, 0x00,
 142:Src/main.c    ****   0x00, 0xE0, 0x78, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3F, 0xE0, 0x01, 0x00,
 143:Src/main.c    ****   0x00, 0x80, 0x1F, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00,
 144:Src/main.c    ****   0x00, 0x00, 0x1E, 0x7C, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00,
 145:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00,
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 4


 146:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 147:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 148:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4C, 0x1C, 0x00, 0x00, 0x00,
 149:Src/main.c    ****   0x00, 0x32, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x00, 0x18, 0x00,
 150:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFC, 0x39, 0x00, 0x00, 0x4E, 0xC6, 0xB8, 0x31, 0x00,
 151:Src/main.c    ****   0x00, 0x3E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x3C, 0xC6, 0x98, 0x31, 0x00,
 152:Src/main.c    ****   0x00, 0x0E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x4E, 0xCE, 0x99, 0x31, 0x00,
 153:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFD, 0x7B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 154:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 155:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 156:Src/main.c    ****   };
 157:Src/main.c    **** 
 158:Src/main.c    **** /*
 159:Src/main.c    **** // logo parameter definition (meidium 'enfini' logo)
 160:Src/main.c    **** #define logo_width 54
 161:Src/main.c    **** #define logo_height 48
 162:Src/main.c    **** 
 163:Src/main.c    **** static unsigned char logo_bits[] = {
 164:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0x0F,
 165:Src/main.c    ****   0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0xE0, 0xFF, 0xFF,
 166:Src/main.c    ****   0xFF, 0xFF, 0xFF, 0x01, 0xF8, 0x3F, 0x00, 0x00, 0xF0, 0xFF, 0x07, 0xF8,
 167:Src/main.c    ****   0x01, 0x00, 0x00, 0x70, 0xE0, 0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x80,
 168:Src/main.c    ****   0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00,
 169:Src/main.c    ****   0x38, 0x80, 0x07, 0x00, 0xF8, 0x3F, 0x00, 0x38, 0x80, 0x07, 0x00, 0xFE,
 170:Src/main.c    ****   0xFF, 0x00, 0x1C, 0xC0, 0x03, 0x80, 0xFF, 0xFF, 0x01, 0x0E, 0xC0, 0x01,
 171:Src/main.c    ****   0xC0, 0x07, 0xFC, 0x07, 0x07, 0xE0, 0x01, 0x80, 0x03, 0xF0, 0x9F, 0x03,
 172:Src/main.c    ****   0xF0, 0x00, 0x80, 0x03, 0xC0, 0xFF, 0x03, 0x78, 0x00, 0x00, 0x07, 0x80,
 173:Src/main.c    ****   0xFF, 0x01, 0x3C, 0x00, 0x00, 0x06, 0x00, 0xFE, 0x87, 0x3F, 0x00, 0x00,
 174:Src/main.c    ****   0x0E, 0x00, 0xF8, 0xFF, 0x1F, 0x00, 0x00, 0x1C, 0x00, 0xF8, 0xFF, 0x07,
 175:Src/main.c    ****   0x00, 0x00, 0x38, 0x00, 0xDE, 0xFF, 0x03, 0x00, 0x00, 0x70, 0x00, 0x0F,
 176:Src/main.c    ****   0x7E, 0x00, 0x00, 0x00, 0xE0, 0xC0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xC0,
 177:Src/main.c    ****   0xF1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x00, 0x7C, 0x00, 0x00,
 178:Src/main.c    ****   0x00, 0x00, 0x3F, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x1F,
 179:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x3C, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x78,
 180:Src/main.c    ****   0xE0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0x03, 0x00, 0x00, 0x00,
 181:Src/main.c    ****   0x00, 0xC0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00,
 182:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00,
 183:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x4E, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39,
 184:Src/main.c    ****   0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00,
 185:Src/main.c    ****   0x00, 0x7E, 0x3E, 0xC7, 0x3D, 0x1C, 0x00, 0x00, 0x6F, 0x3E, 0xC7, 0x7F,
 186:Src/main.c    ****   0x1C, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x73, 0x18, 0x00, 0x00, 0x07, 0x1C,
 187:Src/main.c    ****   0x86, 0x71, 0x18, 0x00, 0x00, 0x3E, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00,
 188:Src/main.c    ****   0x1F, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x71, 0x18,
 189:Src/main.c    ****   0x00, 0x00, 0x47, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x7F, 0x3E, 0xCF,
 190:Src/main.c    ****   0xFB, 0x3C, 0x00, 0x00, 0x3C, 0x3E, 0xCF, 0xFB, 0x3C, 0x00, 0x00, 0x00,
 191:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 192:Src/main.c    ****   };
 193:Src/main.c    **** */
 194:Src/main.c    **** 
 195:Src/main.c    **** // uint16_t	rpm = 0;
 196:Src/main.c    **** uint16_t	speed = 240;
 197:Src/main.c    **** uint8_t		gear = 0;
 198:Src/main.c    **** double		MT[5] = {3.483, 2.015, 1.391, 1.000, 0.806};
 199:Src/main.c    **** 
 200:Src/main.c    **** // UI
 201:Src/main.c    **** uint8_t mode;
 202:Src/main.c    **** uint8_t setting;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 5


 203:Src/main.c    **** uint8_t cursor = 0;
 204:Src/main.c    **** 
 205:Src/main.c    **** 
 206:Src/main.c    **** /*
 207:Src/main.c    **** typedef struct {
 208:Src/main.c    **** 	unsigned char	name;
 209:Src/main.c    **** 	uint8_t			status;
 210:Src/main.c    **** } idct;
 211:Src/main.c    **** */
 212:Src/main.c    **** 
 213:Src/main.c    **** // variables for indicators
 214:Src/main.c    **** const unsigned char idct_name[N_idct][5] = { // length must be (text length + 1)
 215:Src/main.c    **** 		"CAN"	,
 216:Src/main.c    **** 		"O2FB"
 217:Src/main.c    **** };
 218:Src/main.c    **** 
 219:Src/main.c    **** const uint8_t	idct_status[N_idct] = {
 220:Src/main.c    **** 		1	,
 221:Src/main.c    **** 		1
 222:Src/main.c    **** };
 223:Src/main.c    **** 
 224:Src/main.c    **** // variables for measurement
 225:Src/main.c    **** const unsigned char meas_name[N_meas][7] = { // length must be (text length + 1)
 226:Src/main.c    **** 		"MAP"	,
 227:Src/main.c    **** 		"OILP"	,
 228:Src/main.c    **** 		"FPV"	,
 229:Src/main.c    **** 		"ECT"	,
 230:Src/main.c    **** 		"OILT"	,
 231:Src/main.c    **** 		"O2"
 232:Src/main.c    **** };
 233:Src/main.c    **** 
 234:Src/main.c    **** const unsigned char meas_unit[N_meas][5] = {
 235:Src/main.c    **** 		"kpa"			,	// MAP
 236:Src/main.c    **** 		"kpa"			,	// OILP
 237:Src/main.c    **** 		"V  "     ,	// FuelPump Voltage
 238:Src/main.c    **** 		{176, 67, 0}	,	// ECT  degC...{176, 67, 0}
 239:Src/main.c    **** 		{176, 67, 0}	,	// OILT  degC...{176, 67, 0}
 240:Src/main.c    **** 		"V"					// O2
 241:Src/main.c    **** };
 242:Src/main.c    **** 
 243:Src/main.c    **** const uint8_t	meas_digit[N_meas] = {
 244:Src/main.c    **** 		3	,	// MAP
 245:Src/main.c    **** 		3	,	// OILP
 246:Src/main.c    **** 		3	,	// FuelPump Voltage
 247:Src/main.c    **** 		3	,	// ECT
 248:Src/main.c    **** 		3	,	// OILT
 249:Src/main.c    **** 		3		// O2
 250:Src/main.c    **** };
 251:Src/main.c    **** 
 252:Src/main.c    **** const uint8_t	meas_frac[N_meas] = {
 253:Src/main.c    **** 		2	,	// MAP
 254:Src/main.c    **** 		1	,	// OILP
 255:Src/main.c    **** 		1	,	// FuelPump Voltage
 256:Src/main.c    **** 		0	,	// ECT
 257:Src/main.c    **** 		0	,	// OILT
 258:Src/main.c    **** 		2		// O2
 259:Src/main.c    **** };
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 6


 260:Src/main.c    **** 
 261:Src/main.c    **** const uint8_t	meas_sign[N_meas] = {
 262:Src/main.c    **** 		1	,	// MAP
 263:Src/main.c    **** 		0	,	// OILP
 264:Src/main.c    **** 		0	,	// FuelPump Voltage
 265:Src/main.c    **** 		0	,	// ECT
 266:Src/main.c    **** 		0	,	// OILT
 267:Src/main.c    **** 		0		// O2
 268:Src/main.c    **** };
 269:Src/main.c    **** 
 270:Src/main.c    **** int16_t	meas_value[N_meas] = {
 271:Src/main.c    **** 		105	,	// MAP
 272:Src/main.c    **** 		235	,	// OILP
 273:Src/main.c    **** 		645	,	// FuelPump Voltage
 274:Src/main.c    **** 		89	,	// ECT
 275:Src/main.c    **** 		73	,	// OILT
 276:Src/main.c    **** 		143		// O2
 277:Src/main.c    **** };
 278:Src/main.c    **** 
 279:Src/main.c    **** // O2 senser Voltage
 280:Src/main.c    **** int16_t O2_volt = 330;
 281:Src/main.c    **** 
 282:Src/main.c    **** // Fuel Pump Voltage
 283:Src/main.c    **** int16_t FP_volt = 330;
 284:Src/main.c    **** int16_t FP_duty = 100;
 285:Src/main.c    **** 
 286:Src/main.c    **** // ADXL345 3-axis acceration sensor --------------------------------
 287:Src/main.c    **** uint8_t   Gsens_EN;
 288:Src/main.c    **** uint8_t   Gsens_X1;
 289:Src/main.c    **** uint8_t   Gsens_X0;
 290:Src/main.c    **** int16_t   Gsens_X;
 291:Src/main.c    **** uint8_t   Gsens_Y1;
 292:Src/main.c    **** uint8_t   Gsens_Y0;
 293:Src/main.c    **** int16_t   Gsens_Y;
 294:Src/main.c    **** uint8_t   Gsens_Z1;
 295:Src/main.c    **** uint8_t   Gsens_Z0;
 296:Src/main.c    **** int16_t   Gsens_Z;
 297:Src/main.c    **** 
 298:Src/main.c    **** #define ADXL0_ADDR 0x1D
 299:Src/main.c    **** // ADXL345     I2C
 300:Src/main.c    **** // SDO/ALT   Address
 301:Src/main.c    **** //    H        0x1D
 302:Src/main.c    **** //    L        0x53
 303:Src/main.c    **** 
 304:Src/main.c    **** void ADXL345_RegWrite(uint8_t slv_addr, uint8_t addr, uint8_t data){
  28              		.loc 1 304 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 85B0     		sub	sp, sp, #20
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 7


 305:Src/main.c    ****   uint8_t i2c_buf[2];
 306:Src/main.c    ****   i2c_buf[0] = addr;
  40              		.loc 1 306 0
  41 0004 8DF80C10 		strb	r1, [sp, #12]
 307:Src/main.c    ****   i2c_buf[1] = data;  
  42              		.loc 1 307 0
  43 0008 8DF80D20 		strb	r2, [sp, #13]
 308:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1, slv_addr << 1, &i2c_buf, 2, 10);
  44              		.loc 1 308 0
  45 000c 0A23     		movs	r3, #10
  46 000e 0093     		str	r3, [sp]
  47 0010 0223     		movs	r3, #2
  48 0012 03AA     		add	r2, sp, #12
  49              	.LVL1:
  50 0014 4100     		lsls	r1, r0, #1
  51              	.LVL2:
  52 0016 0348     		ldr	r0, .L3
  53              	.LVL3:
  54 0018 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
  55              	.LVL4:
 309:Src/main.c    **** }
  56              		.loc 1 309 0
  57 001c 05B0     		add	sp, sp, #20
  58              	.LCFI2:
  59              		.cfi_def_cfa_offset 4
  60              		@ sp needed
  61 001e 5DF804FB 		ldr	pc, [sp], #4
  62              	.L4:
  63 0022 00BF     		.align	2
  64              	.L3:
  65 0024 00000000 		.word	hi2c1
  66              		.cfi_endproc
  67              	.LFE126:
  69              		.section	.text.ADXL345_RegRead_1byte,"ax",%progbits
  70              		.align	1
  71              		.global	ADXL345_RegRead_1byte
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  75              		.fpu fpv4-sp-d16
  77              	ADXL345_RegRead_1byte:
  78              	.LFB127:
 310:Src/main.c    **** 
 311:Src/main.c    **** int8_t ADXL345_RegRead_1byte(uint8_t slv_addr, uint8_t addr){
  79              		.loc 1 311 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 16
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              	.LVL5:
  84 0000 70B5     		push	{r4, r5, r6, lr}
  85              	.LCFI3:
  86              		.cfi_def_cfa_offset 16
  87              		.cfi_offset 4, -16
  88              		.cfi_offset 5, -12
  89              		.cfi_offset 6, -8
  90              		.cfi_offset 14, -4
  91 0002 86B0     		sub	sp, sp, #24
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 8


  92              	.LCFI4:
  93              		.cfi_def_cfa_offset 40
  94 0004 06AA     		add	r2, sp, #24
  95 0006 02F8091D 		strb	r1, [r2, #-9]!
 312:Src/main.c    ****   uint8_t data;
 313:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1, slv_addr << 1, &addr, 1, 10);
  96              		.loc 1 313 0
  97 000a 4500     		lsls	r5, r0, #1
  98 000c 094C     		ldr	r4, .L7
  99 000e 0A26     		movs	r6, #10
 100 0010 0096     		str	r6, [sp]
 101 0012 0123     		movs	r3, #1
 102 0014 2946     		mov	r1, r5
 103              	.LVL6:
 104 0016 2046     		mov	r0, r4
 105              	.LVL7:
 106 0018 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 107              	.LVL8:
 314:Src/main.c    ****   HAL_I2C_Master_Receive(&hi2c1, slv_addr << 1, &data, 1, 10);
 108              		.loc 1 314 0
 109 001c 0096     		str	r6, [sp]
 110 001e 0123     		movs	r3, #1
 111 0020 0DF11702 		add	r2, sp, #23
 112 0024 2946     		mov	r1, r5
 113 0026 2046     		mov	r0, r4
 114 0028 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 115              	.LVL9:
 315:Src/main.c    ****   return data;
 316:Src/main.c    **** }
 116              		.loc 1 316 0
 117 002c 9DF91700 		ldrsb	r0, [sp, #23]
 118 0030 06B0     		add	sp, sp, #24
 119              	.LCFI5:
 120              		.cfi_def_cfa_offset 16
 121              		@ sp needed
 122 0032 70BD     		pop	{r4, r5, r6, pc}
 123              	.L8:
 124              		.align	2
 125              	.L7:
 126 0034 00000000 		.word	hi2c1
 127              		.cfi_endproc
 128              	.LFE127:
 130              		.section	.text.draw_indicators,"ax",%progbits
 131              		.align	1
 132              		.global	draw_indicators
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu fpv4-sp-d16
 138              	draw_indicators:
 139              	.LFB128:
 317:Src/main.c    **** 
 318:Src/main.c    **** /*
 319:Src/main.c    **** typedef struct { int X, Y, Z; } ADXL345_G_struct;
 320:Src/main.c    **** ADXL345_G_struct ADXL345_Read_G(unsigned char slv_addr){
 321:Src/main.c    ****   uint8_t data[6];
 322:Src/main.c    ****   uint8_t addr = 0x33;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 9


 323:Src/main.c    ****   int X, Y, Z;
 324:Src/main.c    **** 
 325:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1, slv_addr << 1, &addr, 6, 10);
 326:Src/main.c    **** 
 327:Src/main.c    ****   X = data[1]<<4 | data[0];
 328:Src/main.c    ****   Y = data[3]<<4 | data[2];
 329:Src/main.c    ****   Z = data[5]<<4 | data[4];
 330:Src/main.c    **** 
 331:Src/main.c    ****   return (ADXL345_G_struct){X, Y, Z};
 332:Src/main.c    **** }
 333:Src/main.c    **** */
 334:Src/main.c    **** 
 335:Src/main.c    **** 
 336:Src/main.c    **** /* USER CODE END PV */
 337:Src/main.c    **** 
 338:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 339:Src/main.c    **** void SystemClock_Config(void);
 340:Src/main.c    **** 
 341:Src/main.c    **** /* USER CODE BEGIN PFP */
 342:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 343:Src/main.c    **** 
 344:Src/main.c    **** /* USER CODE END PFP */
 345:Src/main.c    **** 
 346:Src/main.c    **** /* USER CODE BEGIN 0 */
 347:Src/main.c    **** void draw_indicators(){
 140              		.loc 1 347 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144 0000 10B5     		push	{r4, lr}
 145              	.LCFI6:
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 4, -8
 148              		.cfi_offset 14, -4
 149 0002 84B0     		sub	sp, sp, #16
 150              	.LCFI7:
 151              		.cfi_def_cfa_offset 24
 152              	.LVL10:
 348:Src/main.c    ****   uint8_t n;
 349:Src/main.c    ****   uint8_t x, y;
 350:Src/main.c    ****   // draw indicators
 351:Src/main.c    ****   for( n=0; n<N_idct; n++ ){
 153              		.loc 1 351 0
 154 0004 0024     		movs	r4, #0
 155 0006 16E0     		b	.L10
 156              	.LVL11:
 157              	.L11:
 352:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
 158              		.loc 1 352 0 discriminator 3
 159 0008 04EB8402 		add	r2, r4, r4, lsl #2
 160 000c 0C4B     		ldr	r3, .L13
 161 000e 1344     		add	r3, r3, r2
 162 0010 C4EBC401 		rsb	r1, r4, r4, lsl #3
 163 0014 04EB8101 		add	r1, r4, r1, lsl #2
 164 0018 4831     		adds	r1, r1, #72
 165 001a 0293     		str	r3, [sp, #8]
 166 001c 094B     		ldr	r3, .L13+4
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 10


 167 001e 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 168 0020 0193     		str	r3, [sp, #4]
 169 0022 0923     		movs	r3, #9
 170 0024 0093     		str	r3, [sp]
 171 0026 1B23     		movs	r3, #27
 172 0028 3522     		movs	r2, #53
 173 002a C9B2     		uxtb	r1, r1
 174 002c 0648     		ldr	r0, .L13+8
 175 002e FFF7FEFF 		bl	draw_IndicatorBox
 176              	.LVL12:
 351:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
 177              		.loc 1 351 0 discriminator 3
 178 0032 0134     		adds	r4, r4, #1
 179              	.LVL13:
 180 0034 E4B2     		uxtb	r4, r4
 181              	.LVL14:
 182              	.L10:
 351:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
 183              		.loc 1 351 0 is_stmt 0 discriminator 1
 184 0036 012C     		cmp	r4, #1
 185 0038 E6D9     		bls	.L11
 353:Src/main.c    ****   }
 354:Src/main.c    **** }
 186              		.loc 1 354 0 is_stmt 1
 187 003a 04B0     		add	sp, sp, #16
 188              	.LCFI8:
 189              		.cfi_def_cfa_offset 8
 190              		@ sp needed
 191 003c 10BD     		pop	{r4, pc}
 192              	.LVL15:
 193              	.L14:
 194 003e 00BF     		.align	2
 195              	.L13:
 196 0040 00000000 		.word	.LANCHOR0
 197 0044 00000000 		.word	.LANCHOR1
 198 0048 00000000 		.word	u8g2
 199              		.cfi_endproc
 200              	.LFE128:
 202              		.section	.text.draw_MeasLabels,"ax",%progbits
 203              		.align	1
 204              		.global	draw_MeasLabels
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu fpv4-sp-d16
 210              	draw_MeasLabels:
 211              	.LFB129:
 355:Src/main.c    **** 
 356:Src/main.c    **** void draw_MeasLabels(){
 212              		.loc 1 356 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216 0000 70B5     		push	{r4, r5, r6, lr}
 217              	.LCFI9:
 218              		.cfi_def_cfa_offset 16
 219              		.cfi_offset 4, -16
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 11


 220              		.cfi_offset 5, -12
 221              		.cfi_offset 6, -8
 222              		.cfi_offset 14, -4
 223 0002 86B0     		sub	sp, sp, #24
 224              	.LCFI10:
 225              		.cfi_def_cfa_offset 40
 226              	.LVL16:
 357:Src/main.c    ****   uint8_t n;
 358:Src/main.c    ****   uint8_t x, y;
 359:Src/main.c    ****   // draw measurements label & unit
 360:Src/main.c    ****   for( n=0; n<3; n++ ){
 227              		.loc 1 360 0
 228 0004 0024     		movs	r4, #0
 229 0006 20E0     		b	.L16
 230              	.LVL17:
 231              	.L17:
 361:Src/main.c    **** 	  x = meas_x;
 362:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 232              		.loc 1 362 0 discriminator 3
 233 0008 324B     		ldr	r3, .L21
 234 000a A3FB0423 		umull	r2, r3, r3, r4
 235 000e 5B08     		lsrs	r3, r3, #1
 236 0010 03EB4303 		add	r3, r3, r3, lsl #1
 237 0014 E31A     		subs	r3, r4, r3
 238 0016 03EB4303 		add	r3, r3, r3, lsl #1
 239 001a 9A00     		lsls	r2, r3, #2
 240 001c D2B2     		uxtb	r2, r2
 241 001e 1032     		adds	r2, r2, #16
 242              	.LVL18:
 363:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width1, meas_height, meas_name[n], meas_unit[n]);
 243              		.loc 1 363 0 discriminator 3
 244 0020 C4EBC401 		rsb	r1, r4, r4, lsl #3
 245 0024 2C4B     		ldr	r3, .L21+4
 246 0026 0B44     		add	r3, r3, r1
 247 0028 04EB8400 		add	r0, r4, r4, lsl #2
 248 002c 2B49     		ldr	r1, .L21+8
 249 002e 0144     		add	r1, r1, r0
 250 0030 0291     		str	r1, [sp, #8]
 251 0032 0193     		str	r3, [sp, #4]
 252 0034 0C23     		movs	r3, #12
 253 0036 0093     		str	r3, [sp]
 254 0038 4623     		movs	r3, #70
 255 003a 02F0FC02 		and	r2, r2, #252
 256              	.LVL19:
 257 003e 0021     		movs	r1, #0
 258 0040 2748     		ldr	r0, .L21+12
 259 0042 FFF7FEFF 		bl	draw_MeasLabelUnit
 260              	.LVL20:
 360:Src/main.c    **** 	  x = meas_x;
 261              		.loc 1 360 0 discriminator 3
 262 0046 0134     		adds	r4, r4, #1
 263              	.LVL21:
 264 0048 E4B2     		uxtb	r4, r4
 265              	.LVL22:
 266              	.L16:
 360:Src/main.c    **** 	  x = meas_x;
 267              		.loc 1 360 0 is_stmt 0 discriminator 1
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 12


 268 004a 022C     		cmp	r4, #2
 269 004c DCD9     		bls	.L17
 364:Src/main.c    ****   }
 365:Src/main.c    ****   for( n=3; n<N_meas; n++ ){
 270              		.loc 1 365 0 is_stmt 1
 271 004e 0324     		movs	r4, #3
 272              	.LVL23:
 273 0050 20E0     		b	.L18
 274              	.LVL24:
 275              	.L19:
 366:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 367:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 276              		.loc 1 367 0 discriminator 3
 277 0052 204B     		ldr	r3, .L21
 278 0054 A3FB0423 		umull	r2, r3, r3, r4
 279 0058 5B08     		lsrs	r3, r3, #1
 280 005a 03EB4303 		add	r3, r3, r3, lsl #1
 281 005e E31A     		subs	r3, r4, r3
 282 0060 03EB4303 		add	r3, r3, r3, lsl #1
 283 0064 9A00     		lsls	r2, r3, #2
 284 0066 D2B2     		uxtb	r2, r2
 285 0068 1032     		adds	r2, r2, #16
 286              	.LVL25:
 368:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width2, meas_height, meas_name[n], meas_unit[n]);
 287              		.loc 1 368 0 discriminator 3
 288 006a C4EBC401 		rsb	r1, r4, r4, lsl #3
 289 006e 1A4B     		ldr	r3, .L21+4
 290 0070 0B44     		add	r3, r3, r1
 291 0072 04EB8400 		add	r0, r4, r4, lsl #2
 292 0076 1949     		ldr	r1, .L21+8
 293 0078 0144     		add	r1, r1, r0
 294 007a 0291     		str	r1, [sp, #8]
 295 007c 0193     		str	r3, [sp, #4]
 296 007e 0C23     		movs	r3, #12
 297 0080 0093     		str	r3, [sp]
 298 0082 3823     		movs	r3, #56
 299 0084 02F0FC02 		and	r2, r2, #252
 300              	.LVL26:
 301 0088 4821     		movs	r1, #72
 302 008a 1548     		ldr	r0, .L21+12
 303 008c FFF7FEFF 		bl	draw_MeasLabelUnit
 304              	.LVL27:
 365:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 305              		.loc 1 365 0 discriminator 3
 306 0090 0134     		adds	r4, r4, #1
 307              	.LVL28:
 308 0092 E4B2     		uxtb	r4, r4
 309              	.LVL29:
 310              	.L18:
 365:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 311              		.loc 1 365 0 is_stmt 0 discriminator 1
 312 0094 052C     		cmp	r4, #5
 313 0096 DCD9     		bls	.L19
 369:Src/main.c    ****   }
 370:Src/main.c    **** 
 371:Src/main.c    ****   // Fuel Pump voltage & duty
 372:Src/main.c    ****   draw_MeasLabelUnit(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, "DUTY", "%  ");
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 13


 314              		.loc 1 372 0 is_stmt 1
 315 0098 114C     		ldr	r4, .L21+12
 316              	.LVL30:
 317 009a 124E     		ldr	r6, .L21+16
 318 009c 0296     		str	r6, [sp, #8]
 319 009e 124B     		ldr	r3, .L21+20
 320 00a0 0193     		str	r3, [sp, #4]
 321 00a2 0C25     		movs	r5, #12
 322 00a4 0095     		str	r5, [sp]
 323 00a6 4623     		movs	r3, #70
 324 00a8 3422     		movs	r2, #52
 325 00aa 0021     		movs	r1, #0
 326 00ac 2046     		mov	r0, r4
 327 00ae FFF7FEFF 		bl	draw_MeasLabelUnit
 328              	.LVL31:
 373:Src/main.c    ****   draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, 100, 3, 0, 0, "%  ");
 329              		.loc 1 373 0
 330 00b2 0596     		str	r6, [sp, #20]
 331 00b4 0021     		movs	r1, #0
 332 00b6 0491     		str	r1, [sp, #16]
 333 00b8 0391     		str	r1, [sp, #12]
 334 00ba 0323     		movs	r3, #3
 335 00bc 0293     		str	r3, [sp, #8]
 336 00be 6423     		movs	r3, #100
 337 00c0 0193     		str	r3, [sp, #4]
 338 00c2 0095     		str	r5, [sp]
 339 00c4 4623     		movs	r3, #70
 340 00c6 3422     		movs	r2, #52
 341 00c8 2046     		mov	r0, r4
 342 00ca FFF7FEFF 		bl	draw_Value
 343              	.LVL32:
 374:Src/main.c    **** }
 344              		.loc 1 374 0
 345 00ce 06B0     		add	sp, sp, #24
 346              	.LCFI11:
 347              		.cfi_def_cfa_offset 16
 348              		@ sp needed
 349 00d0 70BD     		pop	{r4, r5, r6, pc}
 350              	.L22:
 351 00d2 00BF     		.align	2
 352              	.L21:
 353 00d4 ABAAAAAA 		.word	-1431655765
 354 00d8 00000000 		.word	.LANCHOR2
 355 00dc 00000000 		.word	.LANCHOR3
 356 00e0 00000000 		.word	u8g2
 357 00e4 00000000 		.word	.LC0
 358 00e8 04000000 		.word	.LC1
 359              		.cfi_endproc
 360              	.LFE129:
 362              		.section	.text._Error_Handler,"ax",%progbits
 363              		.align	1
 364              		.global	_Error_Handler
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 368              		.fpu fpv4-sp-d16
 370              	_Error_Handler:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 14


 371              	.LFB132:
 375:Src/main.c    **** 
 376:Src/main.c    **** /* USER CODE END 0 */
 377:Src/main.c    **** 
 378:Src/main.c    **** int main(void)
 379:Src/main.c    **** {
 380:Src/main.c    **** 
 381:Src/main.c    ****   /* USER CODE BEGIN 1 */
 382:Src/main.c    **** 
 383:Src/main.c    ****   /* USER CODE END 1 */
 384:Src/main.c    **** 
 385:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 386:Src/main.c    **** 
 387:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 388:Src/main.c    ****   HAL_Init();
 389:Src/main.c    **** 
 390:Src/main.c    ****   /* USER CODE BEGIN Init */
 391:Src/main.c    ****   uint8_t n;
 392:Src/main.c    ****   uint8_t x, y;
 393:Src/main.c    **** 
 394:Src/main.c    ****   uint8_t a = 0; // for dummy data
 395:Src/main.c    ****   uint8_t b = 0; // for dummy data
 396:Src/main.c    **** 
 397:Src/main.c    ****   // circular buffer for ADC data
 398:Src/main.c    ****   uint16_t circular_buffer_index = 0;
 399:Src/main.c    ****   int16_t circular_buffer[128]={};
 400:Src/main.c    **** 
 401:Src/main.c    ****   /* USER CODE END Init */
 402:Src/main.c    **** 
 403:Src/main.c    ****   /* Configure the system clock */
 404:Src/main.c    ****   SystemClock_Config();
 405:Src/main.c    **** 
 406:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 407:Src/main.c    **** 
 408:Src/main.c    ****   /* USER CODE END SysInit */
 409:Src/main.c    **** 
 410:Src/main.c    ****   /* Initialize all configured peripherals */
 411:Src/main.c    ****   MX_GPIO_Init();
 412:Src/main.c    ****   MX_DMA_Init();
 413:Src/main.c    ****   MX_USART2_UART_Init();
 414:Src/main.c    ****   MX_TIM1_Init();
 415:Src/main.c    ****   MX_USART1_UART_Init();
 416:Src/main.c    ****   MX_SPI1_Init();
 417:Src/main.c    ****   MX_ADC1_Init();
 418:Src/main.c    ****   MX_TIM2_Init();
 419:Src/main.c    ****   MX_CAN_Init();
 420:Src/main.c    ****   MX_TIM6_Init();
 421:Src/main.c    ****   MX_I2C1_Init();
 422:Src/main.c    ****   MX_TIM3_Init();
 423:Src/main.c    **** 
 424:Src/main.c    ****   /* USER CODE BEGIN 2 */
 425:Src/main.c    **** 
 426:Src/main.c    ****   ///// PWM initialize ----------------------------------------------------------------
 427:Src/main.c    **** 
 428:Src/main.c    ****   ///// Timer /////
 429:Src/main.c    ****   // TIM1 - PWM for Fuel Pump Driver (Cycle 100kHz = 1MHz / 100count)
 430:Src/main.c    ****   /*
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 15


 431:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim1) != HAL_OK)
 432:Src/main.c    ****   {
 433:Src/main.c    ****     Error_Handler();
 434:Src/main.c    ****   }
 435:Src/main.c    ****   */
 436:Src/main.c    ****   // Start Timer1 / ch1
 437:Src/main.c    ****   if (HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1) != HAL_OK)
 438:Src/main.c    ****   {
 439:Src/main.c    ****     Error_Handler();
 440:Src/main.c    ****   }
 441:Src/main.c    **** 
 442:Src/main.c    ****   // TIM2 - display (Cycle 20ms = 1/100kHz x 2,000count)
 443:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim2) != HAL_OK)
 444:Src/main.c    ****   {
 445:Src/main.c    ****     Error_Handler();
 446:Src/main.c    ****   }
 447:Src/main.c    **** 
 448:Src/main.c    ****   // TIM3 - Pulse counter for Tacho (f 200kHz, count 65535)
 449:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim3) != HAL_OK)
 450:Src/main.c    ****   {
 451:Src/main.c    ****     Error_Handler();
 452:Src/main.c    ****   }
 453:Src/main.c    **** 
 454:Src/main.c    ****   // TIM6 - SW interrupt control (Cycle 100ms = 1/100kHz x 10,000count)
 455:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim6) != HAL_OK)
 456:Src/main.c    ****   {
 457:Src/main.c    ****     Error_Handler();
 458:Src/main.c    ****   }
 459:Src/main.c    **** 
 460:Src/main.c    ****   // UART1 interrupt setup for DEFI decoder
 461:Src/main.c    ****   HAL_UART_Receive_IT(&huart1, &UART1_Data, 1);
 462:Src/main.c    ****   // variables is defined in 'defi.h'
 463:Src/main.c    **** 
 464:Src/main.c    **** 
 465:Src/main.c    ****   // ADC (for PA0) buffer definition
 466:Src/main.c    ****   enum{ ADC_BUFFER_LENGTH = 1024 };
 467:Src/main.c    ****   uint16_t g_ADCBuffer[ADC_BUFFER_LENGTH];
 468:Src/main.c    ****   memset(g_ADCBuffer, 0, sizeof(g_ADCBuffer));
 469:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, g_ADCBuffer, ADC_BUFFER_LENGTH);
 470:Src/main.c    **** 
 471:Src/main.c    **** 
 472:Src/main.c    ****   // OLED diaplay initialization
 473:Src/main.c    ****   u8g2_Setup_ssd1309_128x64_noname2_f(&u8g2, U8G2_R0, u8x8_byte_4wire_hw_spi, u8x8_gpio_and_delay_S
 474:Src/main.c    **** 
 475:Src/main.c    ****   // OLED display Reset (must be more than 3us!!)
 476:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 0); // Set RES=L (OLED Reset)
 477:Src/main.c    ****   HAL_Delay(5);
 478:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 479:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 480:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 481:Src/main.c    ****   u8g2_SetContrast(&u8g2, 255); // set contrast
 482:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 483:Src/main.c    **** 
 484:Src/main.c    ****   // draw opening
 485:Src/main.c    ****   u8g2_DrawXBMP(&u8g2, 40, 0, logo_width, logo_height, logo_bits );
 486:Src/main.c    **** 
 487:Src/main.c    ****   u8g2_SetFont(&u8g2, u8g2_font_5x7_tf);
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 16


 488:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 489:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.1a");
 490:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 491:Src/main.c    **** 
 492:Src/main.c    ****   HAL_Delay(1000);
 493:Src/main.c    **** 
 494:Src/main.c    ****   u8g2_ClearBuffer(&u8g2);
 495:Src/main.c    **** 
 496:Src/main.c    ****   HAL_UART_Transmit_printf(&huart2, "Hello. This is MFM.\n");
 497:Src/main.c    **** 
 498:Src/main.c    ****   // Set PWM Duty for Timer1 / Output1 (Asymmetric PWM2)
 499:Src/main.c    ****   TIM1->CCR1 = (100 - FP_duty);
 500:Src/main.c    **** 
 501:Src/main.c    ****   /* USER CODE END 2 */
 502:Src/main.c    **** 
 503:Src/main.c    ****   /* Infinite loop */
 504:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 505:Src/main.c    **** 
 506:Src/main.c    ****   draw_MeasLabels();
 507:Src/main.c    ****   draw_indicators();
 508:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 509:Src/main.c    **** 
 510:Src/main.c    **** 
 511:Src/main.c    ****   // I2C communication to ADXL345(3-axis G-sensor)
 512:Src/main.c    **** 
 513:Src/main.c    ****   // DEIVID
 514:Src/main.c    ****   a = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x00);
 515:Src/main.c    ****   HAL_UART_Transmit_printf(&huart2, "ADXL324 DEVID %d\n", a); // debug
 516:Src/main.c    ****   if( a == 0xE5 ){
 517:Src/main.c    ****     Gsens_EN = 1;
 518:Src/main.c    ****   }else{
 519:Src/main.c    ****     Gsens_EN = 0;
 520:Src/main.c    ****   }
 521:Src/main.c    **** 
 522:Src/main.c    ****   // POWER_CTL
 523:Src/main.c    ****   ADXL345_RegWrite(ADXL0_ADDR, 0x2D, 0x08);
 524:Src/main.c    ****   // bit 3    Measure   1'b1
 525:Src/main.c    ****   a = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x2D); // Check
 526:Src/main.c    **** 
 527:Src/main.c    ****   // DATA_FORMAT
 528:Src/main.c    ****   ADXL345_RegWrite(ADXL0_ADDR, 0x31, 0x05);
 529:Src/main.c    ****   // bit 2    Justify   1'b1
 530:Src/main.c    ****   // bit 1:0  Range     2'b01
 531:Src/main.c    ****   a = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x31); // Check "POWER_CTL"
 532:Src/main.c    **** 
 533:Src/main.c    **** 
 534:Src/main.c    ****   while(1)
 535:Src/main.c    ****   {
 536:Src/main.c    ****   /* USER CODE END WHILE */
 537:Src/main.c    **** 
 538:Src/main.c    ****   /* USER CODE BEGIN 3 */
 539:Src/main.c    **** 
 540:Src/main.c    ****     ///// ADC ----------------------------------------------------------------
 541:Src/main.c    **** 		// read O2 sensor ADC output
 542:Src/main.c    **** 		O2_volt = (int16_t)(330 * (float)g_ADCBuffer[0]/255);
 543:Src/main.c    **** 
 544:Src/main.c    **** 		// read Fuel Pump Voltage ADC output
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 17


 545:Src/main.c    **** 		FP_volt = (int16_t)((165/33)*33*(float)g_ADCBuffer[1]/255);
 546:Src/main.c    ****     // Ressister attenation ratio '165/33'
 547:Src/main.c    ****     FP_duty = (int16_t)(FP_volt/(16.6)*10);
 548:Src/main.c    **** 
 549:Src/main.c    ****     //// Measure data  ----------------------------------------------------------------
 550:Src/main.c    ****     defi_decoder(UART1_RxData); // DEFI decoder
 551:Src/main.c    **** 
 552:Src/main.c    ****     if( flag_meas == 1 ){
 553:Src/main.c    **** 
 554:Src/main.c    ****       // I2C communication to ADXL345(3-axis G-sensor)
 555:Src/main.c    ****       if( Gsens_EN == 1 ){
 556:Src/main.c    ****         /*
 557:Src/main.c    ****         // Justify = 0
 558:Src/main.c    ****         Gsens_X1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x33); // Check "DATAX1" (MSB side)
 559:Src/main.c    ****         Gsens_X0 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x32); // Check "DATAX0" (LSB side)
 560:Src/main.c    ****         Gsens_X = (Gsens_X1<<8) | Gsens_X0;
 561:Src/main.c    ****         Gsens_Y1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x35); // Check "DATAY1" (MSB side)
 562:Src/main.c    ****         Gsens_Y0 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x34); // Check "DATAY0" (LSB side)
 563:Src/main.c    ****         Gsens_Y = (Gsens_Y1<<8) | Gsens_Y0;
 564:Src/main.c    ****         Gsens_Z1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x37); // Check "DATAZ1" (MSB side)
 565:Src/main.c    ****         Gsens_Z0 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x36); // Check "DATAZ0" (LSB side)
 566:Src/main.c    ****         Gsens_Z = (Gsens_Z1<<8) | Gsens_Z0;
 567:Src/main.c    ****         HAL_UART_Transmit_printf(&huart2, "(%d,%d,%d)\n", Gsens_X, Gsens_Y, Gsens_Z); // debug
 568:Src/main.c    ****         */
 569:Src/main.c    **** 
 570:Src/main.c    ****         // Justify = 1
 571:Src/main.c    ****         Gsens_X1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x33); // Check "DATAX1" (MSB side)
 572:Src/main.c    ****         Gsens_Y1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x35); // Check "DATAY1" (MSB side)
 573:Src/main.c    ****         Gsens_Z1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x37); // Check "DATAZ1" (MSB side)
 574:Src/main.c    ****         // Acceration 1G = 100
 575:Src/main.c    ****         Gsens_X = 400 * (int8_t)Gsens_X1 / 128; // unsigned->signed & scaling
 576:Src/main.c    ****         Gsens_Y = 400 * (int8_t)Gsens_Y1 / 128; // unsigned->signed & scaling
 577:Src/main.c    ****         Gsens_Z = 400 * (int8_t)Gsens_Z1 / 128; // unsigned->signed & scaling
 578:Src/main.c    **** 
 579:Src/main.c    ****         HAL_UART_Transmit_printf(&huart2, "(%d,%d,%d)\n", Gsens_X, Gsens_Y, Gsens_Z); // debug
 580:Src/main.c    ****         
 581:Src/main.c    **** 
 582:Src/main.c    ****         /*
 583:Src/main.c    ****         ADXL345_G_struct ADXL345_G_data = ADXL345_Read_G(ADXL0_ADDR);
 584:Src/main.c    ****         HAL_UART_Transmit_printf(&huart2, "(%d,%d,%d)\n", ADXL345_G_data.X, ADXL345_G_data.Y, ADXL3
 585:Src/main.c    ****         */
 586:Src/main.c    ****       }
 587:Src/main.c    **** 
 588:Src/main.c    **** 
 589:Src/main.c    **** /*
 590:Src/main.c    ****   	  // start of create dummy data for debug
 591:Src/main.c    ****       if( rpm <= 8200 ){
 592:Src/main.c    ****           rpm = rpm + (int)(20*MT[gear]);
 593:Src/main.c    ****           //rpm=rpm+10;
 594:Src/main.c    ****       }else{
 595:Src/main.c    ****         if( gear < 4 ){
 596:Src/main.c    ****           gear++;
 597:Src/main.c    ****           rpm = (double)speed / (0.002*60.0) * (MT[gear]*4.1);
 598:Src/main.c    ****         }else{
 599:Src/main.c    ****           gear = 0;
 600:Src/main.c    ****           rpm = 1000;
 601:Src/main.c    ****         }
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 18


 602:Src/main.c    ****       }
 603:Src/main.c    ****       speed = (double)rpm*0.002*60.0/MT[gear]/4.1;
 604:Src/main.c    **** 
 605:Src/main.c    ****       if( a >= 150){
 606:Src/main.c    ****         a = 0;
 607:Src/main.c    ****       }else{
 608:Src/main.c    ****         a++;
 609:Src/main.c    ****       }
 610:Src/main.c    ****   	  // end of create dummy data for debug
 611:Src/main.c    **** */
 612:Src/main.c    ****       meas_value[0] = DEFI_value[0];  // MAP
 613:Src/main.c    **** 		  meas_value[1] = DEFI_value[2];  // OILP
 614:Src/main.c    **** 			meas_value[2] = FP_volt;        // FuelPump Voltage
 615:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 616:Src/main.c    **** 			meas_value[4] = DEFI_value[5];  // OILT
 617:Src/main.c    **** 		  meas_value[5] = O2_volt;        // O2
 618:Src/main.c    **** 
 619:Src/main.c    ****       flag_meas = 0; // enable again by TIM2 interrupt
 620:Src/main.c    ****     }
 621:Src/main.c    **** 
 622:Src/main.c    ****     ///// FP driver ----------------------------------------------------------------
 623:Src/main.c    ****     // Set PWM Duty for Timer1 / Output1 (Asymmetric PWM2)
 624:Src/main.c    ****     TIM1->CCR1 = (100 - FP_duty);
 625:Src/main.c    **** 
 626:Src/main.c    ****     ///// Switch ----------------------------------------------------------------
 627:Src/main.c    ****     if( flag_sw != 0 ){
 628:Src/main.c    ****       switch( flag_sw ){
 629:Src/main.c    ****         case 1:
 630:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "UP ");
 631:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 632:Src/main.c    ****           // SW "UP"
 633:Src/main.c    ****           if( setting == 0 ){
 634:Src/main.c    ****             if( mode == N_mode-1 ){
 635:Src/main.c    ****               mode = 0;
 636:Src/main.c    ****             }else{
 637:Src/main.c    ****               mode++;
 638:Src/main.c    ****             }
 639:Src/main.c    ****           }
 640:Src/main.c    ****           break;
 641:Src/main.c    ****         case 2:
 642:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "DOWN ");
 643:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 644:Src/main.c    ****           // SW "DOWN"
 645:Src/main.c    ****           if( setting == 0 ){
 646:Src/main.c    ****             if( mode == 0 ){
 647:Src/main.c    ****               mode = N_mode-1;
 648:Src/main.c    ****             }else{
 649:Src/main.c    ****               mode--;
 650:Src/main.c    ****             }
 651:Src/main.c    ****           }
 652:Src/main.c    ****           break;
 653:Src/main.c    ****         case 3:
 654:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "ENTER ");
 655:Src/main.c    ****           HAL_NVIC_DisableIRQ (EXTI1_IRQn);
 656:Src/main.c    ****           // SW "ENTER"
 657:Src/main.c    **** 
 658:Src/main.c    ****           // if( setting == 0 ){
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 19


 659:Src/main.c    ****           //   mode = cursor;
 660:Src/main.c    ****           //   u8g2_ClearBuffer(&u8g2);
 661:Src/main.c    ****           // }else{
 662:Src/main.c    ****           //   mode = 10;
 663:Src/main.c    ****           // }
 664:Src/main.c    ****           // break;
 665:Src/main.c    **** 
 666:Src/main.c    ****         default:
 667:Src/main.c    ****           break;
 668:Src/main.c    ****       }
 669:Src/main.c    ****       u8g2_ClearBuffer(&u8g2);
 670:Src/main.c    ****       if( mode == 0 ){
 671:Src/main.c    ****         draw_MeasLabels();
 672:Src/main.c    ****         draw_indicators();
 673:Src/main.c    **** 
 674:Src/main.c    ****       }else if( mode == 1 ){
 675:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 676:Src/main.c    ****           x = meas_C_x;
 677:Src/main.c    ****           y = n * meas_C_height	+ meas_C_y;
 678:Src/main.c    ****           draw_MeasLabelUnit(&u8g2, x, y, meas_C_width, meas_C_height, meas_name[n], meas_unit[n]);
 679:Src/main.c    ****         }
 680:Src/main.c    ****         // draw indicators
 681:Src/main.c    ****         for( n=0; n<4; n++ ){
 682:Src/main.c    ****           draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_s
 683:Src/main.c    ****         }
 684:Src/main.c    ****         draw_CircularMeter_Init(32, 32, 31, 3, -60, 300, 10, 20, -1, -80, 120);
 685:Src/main.c    **** //        draw_CircularMeter_Init(26, 26, 26, 3, -60, 300, 10, 20, -1, -80, 120);
 686:Src/main.c    ****         draw_CircularMeter(&u8g2, 0);
 687:Src/main.c    **** 
 688:Src/main.c    ****       }else if( mode == 2 ){
 689:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_m
 690:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "MAP", "kPa");
 691:Src/main.c    **** 
 692:Src/main.c    ****       }else if( mode == 3 ){
 693:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, -200, 200, 4);
 694:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "LatG", "G");
 695:Src/main.c    **** 
 696:Src/main.c    ****       }
 697:Src/main.c    ****       u8g2_SendBuffer(&u8g2);
 698:Src/main.c    ****       TIM6->CNT = 0;
 699:Src/main.c    ****       flag_sw = 0;
 700:Src/main.c    ****     }
 701:Src/main.c    **** 
 702:Src/main.c    ****     ///// Display sequence ----------------------------------------------------------------
 703:Src/main.c    ****     if( flag_disp == 1 ){
 704:Src/main.c    ****       ///// multi meter /////
 705:Src/main.c    ****       if( mode == 0 ){
 706:Src/main.c    ****         // update Fuel Pump Voltage
 707:Src/main.c    ****         draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, FP_duty, 3, 0, 0, "%  ");
 708:Src/main.c    **** 
 709:Src/main.c    ****         // draw bar graph
 710:Src/main.c    ****         draw_BarGraph(&u8g2, rpmbar_x, rpmbar_y, rpmbar_width, rpmbar_height, rpm, rpm_min, rpm_max
 711:Src/main.c    **** 
 712:Src/main.c    ****         // draw measurement data
 713:Src/main.c    ****         for( n=0; n<3; n++ ){
 714:Src/main.c    ****           x = meas_x;
 715:Src/main.c    ****           y = (n % 3) * meas_height	+ meas_y;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 20


 716:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac
 717:Src/main.c    ****         }
 718:Src/main.c    ****         for( n=3; n<N_meas; n++ ){
 719:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 720:Src/main.c    ****           y = (n % 3) * meas_height	+ meas_y;
 721:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 722:Src/main.c    ****         }
 723:Src/main.c    ****         
 724:Src/main.c    ****       ///// Circular Meter /////
 725:Src/main.c    ****       }else if( mode == 1 ){
 726:Src/main.c    **** 
 727:Src/main.c    ****         draw_CircularMeter(&u8g2, meas_value[0]);
 728:Src/main.c    ****         
 729:Src/main.c    ****         draw_Value(&u8g2, 36, 33, 30, 16, meas_value[0], 3, 2, 1, "");
 730:Src/main.c    ****         draw_MeasUnit(&u8g2, 38, 40, 28, 16, "kPa");
 731:Src/main.c    **** /*        
 732:Src/main.c    ****         draw_Value(&u8g2, 34, 28, 30, 16, meas_value[0], 3, 2, 1, "");
 733:Src/main.c    ****         draw_MeasUnit(&u8g2, 36, 36, 28, 16, "kPa");
 734:Src/main.c    **** */
 735:Src/main.c    **** 
 736:Src/main.c    ****         // draw measurement data
 737:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 738:Src/main.c    ****           x = meas_C_x;
 739:Src/main.c    ****           y = n * meas_C_height	+ meas_C_y;
 740:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_C_width, meas_C_height, meas_value[n], meas_digit[n], meas_f
 741:Src/main.c    ****         }
 742:Src/main.c    **** 
 743:Src/main.c    ****       ///// Scope /////
 744:Src/main.c    ****       }else if( mode == 2 ){
 745:Src/main.c    **** 
 746:Src/main.c    ****         if( circular_buffer_index > 0 ){
 747:Src/main.c    ****           circular_buffer_index--;
 748:Src/main.c    ****         }else{
 749:Src/main.c    ****           circular_buffer_index = 128;
 750:Src/main.c    ****         }
 751:Src/main.c    ****         circular_buffer[circular_buffer_index] = meas_value[0];
 752:Src/main.c    **** 
 753:Src/main.c    ****         // draw wave
 754:Src/main.c    ****         draw_Wave(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_max, c
 755:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 756:Src/main.c    **** 
 757:Src/main.c    ****       ///// G-Scope /////
 758:Src/main.c    ****       }else if( mode == 3 ){
 759:Src/main.c    **** 
 760:Src/main.c    ****         if( circular_buffer_index > 0 ){
 761:Src/main.c    ****           circular_buffer_index--;
 762:Src/main.c    ****         }else{
 763:Src/main.c    ****           circular_buffer_index = 128;
 764:Src/main.c    ****         }
 765:Src/main.c    ****         circular_buffer[circular_buffer_index] = Gsens_Y;
 766:Src/main.c    **** 
 767:Src/main.c    ****         // draw wave
 768:Src/main.c    ****         draw_Wave(&u8g2, wave_x, wave_y, wave_width, wave_height, -200, +200, circular_buffer, circ
 769:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 770:Src/main.c    **** 
 771:Src/main.c    ****       // mode setting
 772:Src/main.c    ****       }else if( setting == 1 ){
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 21


 773:Src/main.c    ****         u8g2_ClearBuffer(&u8g2);
 774:Src/main.c    ****         u8g2_SetFont(&u8g2, u8g2_font_7x14B_tf);
 775:Src/main.c    ****         u8g2_DrawStr(&u8g2, 2, 15, "Mode Setting" );
 776:Src/main.c    ****         if( cursor == 0 ){
 777:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, ">" );
 778:Src/main.c    ****         }else{
 779:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, " " );
 780:Src/main.c    ****         }
 781:Src/main.c    ****         u8g2_DrawStr(&u8g2,10, 30, "Multi-Meter" );
 782:Src/main.c    ****         if( cursor == 1 ){
 783:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 784:Src/main.c    ****         }else{
 785:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, " " );
 786:Src/main.c    ****         }
 787:Src/main.c    ****         u8g2_DrawStr(&u8g2,10, 45, "Scope" );
 788:Src/main.c    ****         u8g2_SendBuffer(&u8g2);
 789:Src/main.c    ****       }
 790:Src/main.c    ****       // send buffer
 791:Src/main.c    ****       u8g2_SendBuffer(&u8g2);
 792:Src/main.c    **** 
 793:Src/main.c    ****       flag_disp = 0; // enable again by TIM2 interrupt
 794:Src/main.c    ****     }
 795:Src/main.c    **** 
 796:Src/main.c    ****   }
 797:Src/main.c    ****   /* USER CODE END 3 */
 798:Src/main.c    **** 
 799:Src/main.c    **** }
 800:Src/main.c    **** 
 801:Src/main.c    **** /** System Clock Configuration
 802:Src/main.c    **** */
 803:Src/main.c    **** void SystemClock_Config(void)
 804:Src/main.c    **** {
 805:Src/main.c    **** 
 806:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 807:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 808:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 809:Src/main.c    **** 
 810:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 811:Src/main.c    ****     */
 812:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 813:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 814:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 815:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 816:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 817:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 818:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 819:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 820:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 821:Src/main.c    ****   {
 822:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 823:Src/main.c    ****   }
 824:Src/main.c    **** 
 825:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 826:Src/main.c    ****     */
 827:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 828:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 829:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 22


 830:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 831:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 832:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 833:Src/main.c    **** 
 834:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 835:Src/main.c    ****   {
 836:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 837:Src/main.c    ****   }
 838:Src/main.c    **** 
 839:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1
 840:Src/main.c    ****                               |RCC_PERIPHCLK_TIM1;
 841:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 842:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 843:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 844:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 845:Src/main.c    ****   {
 846:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 847:Src/main.c    ****   }
 848:Src/main.c    **** 
 849:Src/main.c    ****     /**Configure the Systick interrupt time 
 850:Src/main.c    ****     */
 851:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 852:Src/main.c    **** 
 853:Src/main.c    ****     /**Configure the Systick 
 854:Src/main.c    ****     */
 855:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 856:Src/main.c    **** 
 857:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 858:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 859:Src/main.c    **** }
 860:Src/main.c    **** 
 861:Src/main.c    **** /* USER CODE BEGIN 4 */
 862:Src/main.c    **** 
 863:Src/main.c    **** /* USER CODE END 4 */
 864:Src/main.c    **** 
 865:Src/main.c    **** /**
 866:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 867:Src/main.c    ****   * @param  None
 868:Src/main.c    ****   * @retval None
 869:Src/main.c    ****   */
 870:Src/main.c    **** void _Error_Handler(char * file, int line)
 871:Src/main.c    **** {
 372              		.loc 1 871 0
 373              		.cfi_startproc
 374              		@ Volatile: function does not return.
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 378              	.LVL33:
 379              	.L24:
 380 0000 FEE7     		b	.L24
 381              		.cfi_endproc
 382              	.LFE132:
 384              		.section	.text.SystemClock_Config,"ax",%progbits
 385              		.align	1
 386              		.global	SystemClock_Config
 387              		.syntax unified
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 23


 388              		.thumb
 389              		.thumb_func
 390              		.fpu fpv4-sp-d16
 392              	SystemClock_Config:
 393              	.LFB131:
 804:Src/main.c    **** 
 394              		.loc 1 804 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 88
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 804:Src/main.c    **** 
 398              		.loc 1 804 0
 399 0000 00B5     		push	{lr}
 400              	.LCFI12:
 401              		.cfi_def_cfa_offset 4
 402              		.cfi_offset 14, -4
 403 0002 97B0     		sub	sp, sp, #92
 404              	.LCFI13:
 405              		.cfi_def_cfa_offset 96
 812:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 406              		.loc 1 812 0
 407 0004 0323     		movs	r3, #3
 408 0006 0C93     		str	r3, [sp, #48]
 813:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 409              		.loc 1 813 0
 410 0008 4FF4A023 		mov	r3, #327680
 411 000c 0D93     		str	r3, [sp, #52]
 814:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 412              		.loc 1 814 0
 413 000e 0023     		movs	r3, #0
 414 0010 0E93     		str	r3, [sp, #56]
 815:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 415              		.loc 1 815 0
 416 0012 0123     		movs	r3, #1
 417 0014 1093     		str	r3, [sp, #64]
 816:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 418              		.loc 1 816 0
 419 0016 1023     		movs	r3, #16
 420 0018 1193     		str	r3, [sp, #68]
 817:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 421              		.loc 1 817 0
 422 001a 0223     		movs	r3, #2
 423 001c 1393     		str	r3, [sp, #76]
 818:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 424              		.loc 1 818 0
 425 001e 4FF48033 		mov	r3, #65536
 426 0022 1493     		str	r3, [sp, #80]
 819:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 427              		.loc 1 819 0
 428 0024 4FF4E013 		mov	r3, #1835008
 429 0028 1593     		str	r3, [sp, #84]
 820:Src/main.c    ****   {
 430              		.loc 1 820 0
 431 002a 0CA8     		add	r0, sp, #48
 432 002c FFF7FEFF 		bl	HAL_RCC_OscConfig
 433              	.LVL34:
 434 0030 60BB     		cbnz	r0, .L30
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 24


 827:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 435              		.loc 1 827 0
 436 0032 0F23     		movs	r3, #15
 437 0034 0793     		str	r3, [sp, #28]
 829:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 438              		.loc 1 829 0
 439 0036 0221     		movs	r1, #2
 440 0038 0891     		str	r1, [sp, #32]
 830:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 441              		.loc 1 830 0
 442 003a 0023     		movs	r3, #0
 443 003c 0993     		str	r3, [sp, #36]
 831:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 444              		.loc 1 831 0
 445 003e 4FF48062 		mov	r2, #1024
 446 0042 0A92     		str	r2, [sp, #40]
 832:Src/main.c    **** 
 447              		.loc 1 832 0
 448 0044 0B93     		str	r3, [sp, #44]
 834:Src/main.c    ****   {
 449              		.loc 1 834 0
 450 0046 07A8     		add	r0, sp, #28
 451 0048 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 452              	.LVL35:
 453 004c 18BB     		cbnz	r0, .L31
 839:Src/main.c    ****                               |RCC_PERIPHCLK_TIM1;
 454              		.loc 1 839 0
 455 004e 41F22103 		movw	r3, #4129
 456 0052 0193     		str	r3, [sp, #4]
 841:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 457              		.loc 1 841 0
 458 0054 0023     		movs	r3, #0
 459 0056 0393     		str	r3, [sp, #12]
 842:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 460              		.loc 1 842 0
 461 0058 0493     		str	r3, [sp, #16]
 843:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 462              		.loc 1 843 0
 463 005a 0693     		str	r3, [sp, #24]
 844:Src/main.c    ****   {
 464              		.loc 1 844 0
 465 005c 01A8     		add	r0, sp, #4
 466 005e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 467              	.LVL36:
 468 0062 E8B9     		cbnz	r0, .L32
 851:Src/main.c    **** 
 469              		.loc 1 851 0
 470 0064 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 471              	.LVL37:
 472 0068 104B     		ldr	r3, .L33
 473 006a A3FB0030 		umull	r3, r0, r3, r0
 474 006e 8009     		lsrs	r0, r0, #6
 475 0070 FFF7FEFF 		bl	HAL_SYSTICK_Config
 476              	.LVL38:
 855:Src/main.c    **** 
 477              		.loc 1 855 0
 478 0074 0420     		movs	r0, #4
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 25


 479 0076 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 480              	.LVL39:
 858:Src/main.c    **** }
 481              		.loc 1 858 0
 482 007a 0022     		movs	r2, #0
 483 007c 1146     		mov	r1, r2
 484 007e 4FF0FF30 		mov	r0, #-1
 485 0082 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 486              	.LVL40:
 859:Src/main.c    **** 
 487              		.loc 1 859 0
 488 0086 17B0     		add	sp, sp, #92
 489              	.LCFI14:
 490              		.cfi_remember_state
 491              		.cfi_def_cfa_offset 4
 492              		@ sp needed
 493 0088 5DF804FB 		ldr	pc, [sp], #4
 494              	.L30:
 495              	.LCFI15:
 496              		.cfi_restore_state
 822:Src/main.c    ****   }
 497              		.loc 1 822 0
 498 008c 40F23631 		movw	r1, #822
 499 0090 0748     		ldr	r0, .L33+4
 500 0092 FFF7FEFF 		bl	_Error_Handler
 501              	.LVL41:
 502              	.L31:
 836:Src/main.c    ****   }
 503              		.loc 1 836 0
 504 0096 4FF45171 		mov	r1, #836
 505 009a 0548     		ldr	r0, .L33+4
 506 009c FFF7FEFF 		bl	_Error_Handler
 507              	.LVL42:
 508              	.L32:
 846:Src/main.c    ****   }
 509              		.loc 1 846 0
 510 00a0 40F24E31 		movw	r1, #846
 511 00a4 0248     		ldr	r0, .L33+4
 512 00a6 FFF7FEFF 		bl	_Error_Handler
 513              	.LVL43:
 514              	.L34:
 515 00aa 00BF     		.align	2
 516              	.L33:
 517 00ac D34D6210 		.word	274877907
 518 00b0 00000000 		.word	.LC2
 519              		.cfi_endproc
 520              	.LFE131:
 522              		.global	__aeabi_i2d
 523              		.global	__aeabi_ddiv
 524              		.global	__aeabi_dmul
 525              		.global	__aeabi_d2iz
 526              		.section	.text.main,"ax",%progbits
 527              		.align	1
 528              		.global	main
 529              		.syntax unified
 530              		.thumb
 531              		.thumb_func
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 26


 532              		.fpu fpv4-sp-d16
 534              	main:
 535              	.LFB130:
 379:Src/main.c    **** 
 536              		.loc 1 379 0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 2304
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 541              	.LCFI16:
 542              		.cfi_def_cfa_offset 20
 543              		.cfi_offset 4, -20
 544              		.cfi_offset 5, -16
 545              		.cfi_offset 6, -12
 546              		.cfi_offset 7, -8
 547              		.cfi_offset 14, -4
 548 0002 ADF6241D 		subw	sp, sp, #2340
 549              	.LCFI17:
 550              		.cfi_def_cfa_offset 2360
 388:Src/main.c    **** 
 551              		.loc 1 388 0
 552 0006 FFF7FEFF 		bl	HAL_Init
 553              	.LVL44:
 399:Src/main.c    **** 
 554              		.loc 1 399 0
 555 000a 4FF48072 		mov	r2, #256
 556 000e 0021     		movs	r1, #0
 557 0010 0DF50260 		add	r0, sp, #2080
 558 0014 FFF7FEFF 		bl	memset
 559              	.LVL45:
 404:Src/main.c    **** 
 560              		.loc 1 404 0
 561 0018 FFF7FEFF 		bl	SystemClock_Config
 562              	.LVL46:
 411:Src/main.c    ****   MX_DMA_Init();
 563              		.loc 1 411 0
 564 001c FFF7FEFF 		bl	MX_GPIO_Init
 565              	.LVL47:
 412:Src/main.c    ****   MX_USART2_UART_Init();
 566              		.loc 1 412 0
 567 0020 FFF7FEFF 		bl	MX_DMA_Init
 568              	.LVL48:
 413:Src/main.c    ****   MX_TIM1_Init();
 569              		.loc 1 413 0
 570 0024 FFF7FEFF 		bl	MX_USART2_UART_Init
 571              	.LVL49:
 414:Src/main.c    ****   MX_USART1_UART_Init();
 572              		.loc 1 414 0
 573 0028 FFF7FEFF 		bl	MX_TIM1_Init
 574              	.LVL50:
 415:Src/main.c    ****   MX_SPI1_Init();
 575              		.loc 1 415 0
 576 002c FFF7FEFF 		bl	MX_USART1_UART_Init
 577              	.LVL51:
 416:Src/main.c    ****   MX_ADC1_Init();
 578              		.loc 1 416 0
 579 0030 FFF7FEFF 		bl	MX_SPI1_Init
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 27


 580              	.LVL52:
 417:Src/main.c    ****   MX_TIM2_Init();
 581              		.loc 1 417 0
 582 0034 FFF7FEFF 		bl	MX_ADC1_Init
 583              	.LVL53:
 418:Src/main.c    ****   MX_CAN_Init();
 584              		.loc 1 418 0
 585 0038 FFF7FEFF 		bl	MX_TIM2_Init
 586              	.LVL54:
 419:Src/main.c    ****   MX_TIM6_Init();
 587              		.loc 1 419 0
 588 003c FFF7FEFF 		bl	MX_CAN_Init
 589              	.LVL55:
 420:Src/main.c    ****   MX_I2C1_Init();
 590              		.loc 1 420 0
 591 0040 FFF7FEFF 		bl	MX_TIM6_Init
 592              	.LVL56:
 421:Src/main.c    ****   MX_TIM3_Init();
 593              		.loc 1 421 0
 594 0044 FFF7FEFF 		bl	MX_I2C1_Init
 595              	.LVL57:
 422:Src/main.c    **** 
 596              		.loc 1 422 0
 597 0048 FFF7FEFF 		bl	MX_TIM3_Init
 598              	.LVL58:
 437:Src/main.c    ****   {
 599              		.loc 1 437 0
 600 004c 0021     		movs	r1, #0
 601 004e 9348     		ldr	r0, .L103
 602 0050 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 603              	.LVL59:
 604 0054 20B1     		cbz	r0, .L36
 439:Src/main.c    ****   }
 605              		.loc 1 439 0
 606 0056 40F2B711 		movw	r1, #439
 607 005a 9148     		ldr	r0, .L103+4
 608 005c FFF7FEFF 		bl	_Error_Handler
 609              	.LVL60:
 610              	.L36:
 443:Src/main.c    ****   {
 611              		.loc 1 443 0
 612 0060 9048     		ldr	r0, .L103+8
 613 0062 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 614              	.LVL61:
 615 0066 20B1     		cbz	r0, .L37
 445:Src/main.c    ****   }
 616              		.loc 1 445 0
 617 0068 40F2BD11 		movw	r1, #445
 618 006c 8C48     		ldr	r0, .L103+4
 619 006e FFF7FEFF 		bl	_Error_Handler
 620              	.LVL62:
 621              	.L37:
 449:Src/main.c    ****   {
 622              		.loc 1 449 0
 623 0072 8D48     		ldr	r0, .L103+12
 624 0074 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 625              	.LVL63:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 28


 626 0078 20B1     		cbz	r0, .L38
 451:Src/main.c    ****   }
 627              		.loc 1 451 0
 628 007a 40F2C311 		movw	r1, #451
 629 007e 8848     		ldr	r0, .L103+4
 630 0080 FFF7FEFF 		bl	_Error_Handler
 631              	.LVL64:
 632              	.L38:
 455:Src/main.c    ****   {
 633              		.loc 1 455 0
 634 0084 8948     		ldr	r0, .L103+16
 635 0086 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 636              	.LVL65:
 637 008a 20B1     		cbz	r0, .L39
 457:Src/main.c    ****   }
 638              		.loc 1 457 0
 639 008c 40F2C911 		movw	r1, #457
 640 0090 8348     		ldr	r0, .L103+4
 641 0092 FFF7FEFF 		bl	_Error_Handler
 642              	.LVL66:
 643              	.L39:
 461:Src/main.c    ****   // variables is defined in 'defi.h'
 644              		.loc 1 461 0
 645 0096 0122     		movs	r2, #1
 646 0098 8549     		ldr	r1, .L103+20
 647 009a 8648     		ldr	r0, .L103+24
 648 009c FFF7FEFF 		bl	HAL_UART_Receive_IT
 649              	.LVL67:
 468:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, g_ADCBuffer, ADC_BUFFER_LENGTH);
 650              		.loc 1 468 0
 651 00a0 4FF40062 		mov	r2, #2048
 652 00a4 0021     		movs	r1, #0
 653 00a6 08A8     		add	r0, sp, #32
 654 00a8 FFF7FEFF 		bl	memset
 655              	.LVL68:
 469:Src/main.c    **** 
 656              		.loc 1 469 0
 657 00ac 4FF48062 		mov	r2, #1024
 658 00b0 08A9     		add	r1, sp, #32
 659 00b2 8148     		ldr	r0, .L103+28
 660 00b4 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 661              	.LVL69:
 473:Src/main.c    **** 
 662              		.loc 1 473 0
 663 00b8 804C     		ldr	r4, .L103+32
 664 00ba 814B     		ldr	r3, .L103+36
 665 00bc 814A     		ldr	r2, .L103+40
 666 00be 8249     		ldr	r1, .L103+44
 667 00c0 2046     		mov	r0, r4
 668 00c2 FFF7FEFF 		bl	u8g2_Setup_ssd1309_128x64_noname2_f
 669              	.LVL70:
 476:Src/main.c    ****   HAL_Delay(5);
 670              		.loc 1 476 0
 671 00c6 814D     		ldr	r5, .L103+48
 672 00c8 0022     		movs	r2, #0
 673 00ca 0821     		movs	r1, #8
 674 00cc 2846     		mov	r0, r5
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 29


 675 00ce FFF7FEFF 		bl	HAL_GPIO_WritePin
 676              	.LVL71:
 477:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 677              		.loc 1 477 0
 678 00d2 0520     		movs	r0, #5
 679 00d4 FFF7FEFF 		bl	HAL_Delay
 680              	.LVL72:
 478:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 681              		.loc 1 478 0
 682 00d8 0122     		movs	r2, #1
 683 00da 0821     		movs	r1, #8
 684 00dc 2846     		mov	r0, r5
 685 00de FFF7FEFF 		bl	HAL_GPIO_WritePin
 686              	.LVL73:
 479:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 687              		.loc 1 479 0
 688 00e2 2046     		mov	r0, r4
 689 00e4 FFF7FEFF 		bl	u8x8_InitDisplay
 690              	.LVL74:
 480:Src/main.c    ****   u8g2_SetContrast(&u8g2, 255); // set contrast
 691              		.loc 1 480 0
 692 00e8 0021     		movs	r1, #0
 693 00ea 2046     		mov	r0, r4
 694 00ec FFF7FEFF 		bl	u8x8_SetPowerSave
 695              	.LVL75:
 481:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 696              		.loc 1 481 0
 697 00f0 FF21     		movs	r1, #255
 698 00f2 2046     		mov	r0, r4
 699 00f4 FFF7FEFF 		bl	u8x8_SetContrast
 700              	.LVL76:
 482:Src/main.c    **** 
 701              		.loc 1 482 0
 702 00f8 2046     		mov	r0, r4
 703 00fa FFF7FEFF 		bl	u8g2_ClearDisplay
 704              	.LVL77:
 485:Src/main.c    **** 
 705              		.loc 1 485 0
 706 00fe 744B     		ldr	r3, .L103+52
 707 0100 0193     		str	r3, [sp, #4]
 708 0102 3023     		movs	r3, #48
 709 0104 0093     		str	r3, [sp]
 710 0106 0022     		movs	r2, #0
 711 0108 2821     		movs	r1, #40
 712 010a 2046     		mov	r0, r4
 713 010c FFF7FEFF 		bl	u8g2_DrawXBMP
 714              	.LVL78:
 487:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 715              		.loc 1 487 0
 716 0110 7049     		ldr	r1, .L103+56
 717 0112 2046     		mov	r0, r4
 718 0114 FFF7FEFF 		bl	u8g2_SetFont
 719              	.LVL79:
 488:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.1a");
 720              		.loc 1 488 0
 721 0118 6F4B     		ldr	r3, .L103+60
 722 011a 3722     		movs	r2, #55
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 30


 723 011c 1021     		movs	r1, #16
 724 011e 2046     		mov	r0, r4
 725 0120 FFF7FEFF 		bl	u8g2_DrawStr
 726              	.LVL80:
 489:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 727              		.loc 1 489 0
 728 0124 6D4B     		ldr	r3, .L103+64
 729 0126 4022     		movs	r2, #64
 730 0128 2821     		movs	r1, #40
 731 012a 2046     		mov	r0, r4
 732 012c FFF7FEFF 		bl	u8g2_DrawStr
 733              	.LVL81:
 490:Src/main.c    **** 
 734              		.loc 1 490 0
 735 0130 2046     		mov	r0, r4
 736 0132 FFF7FEFF 		bl	u8g2_SendBuffer
 737              	.LVL82:
 492:Src/main.c    **** 
 738              		.loc 1 492 0
 739 0136 4FF47A70 		mov	r0, #1000
 740 013a FFF7FEFF 		bl	HAL_Delay
 741              	.LVL83:
 494:Src/main.c    **** 
 742              		.loc 1 494 0
 743 013e 2046     		mov	r0, r4
 744 0140 FFF7FEFF 		bl	u8g2_ClearBuffer
 745              	.LVL84:
 496:Src/main.c    **** 
 746              		.loc 1 496 0
 747 0144 664D     		ldr	r5, .L103+68
 748 0146 6749     		ldr	r1, .L103+72
 749 0148 2846     		mov	r0, r5
 750 014a FFF7FEFF 		bl	HAL_UART_Transmit_printf
 751              	.LVL85:
 499:Src/main.c    **** 
 752              		.loc 1 499 0
 753 014e 664B     		ldr	r3, .L103+76
 754 0150 B3F90030 		ldrsh	r3, [r3]
 755 0154 C3F16403 		rsb	r3, r3, #100
 756 0158 644A     		ldr	r2, .L103+80
 757 015a 5363     		str	r3, [r2, #52]
 506:Src/main.c    ****   draw_indicators();
 758              		.loc 1 506 0
 759 015c FFF7FEFF 		bl	draw_MeasLabels
 760              	.LVL86:
 507:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 761              		.loc 1 507 0
 762 0160 FFF7FEFF 		bl	draw_indicators
 763              	.LVL87:
 508:Src/main.c    **** 
 764              		.loc 1 508 0
 765 0164 2046     		mov	r0, r4
 766 0166 FFF7FEFF 		bl	u8g2_SendBuffer
 767              	.LVL88:
 514:Src/main.c    ****   HAL_UART_Transmit_printf(&huart2, "ADXL324 DEVID %d\n", a); // debug
 768              		.loc 1 514 0
 769 016a 0021     		movs	r1, #0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 31


 770 016c 1D20     		movs	r0, #29
 771 016e FFF7FEFF 		bl	ADXL345_RegRead_1byte
 772              	.LVL89:
 773 0172 C4B2     		uxtb	r4, r0
 774              	.LVL90:
 515:Src/main.c    ****   if( a == 0xE5 ){
 775              		.loc 1 515 0
 776 0174 2246     		mov	r2, r4
 777 0176 5E49     		ldr	r1, .L103+84
 778 0178 2846     		mov	r0, r5
 779 017a FFF7FEFF 		bl	HAL_UART_Transmit_printf
 780              	.LVL91:
 516:Src/main.c    ****     Gsens_EN = 1;
 781              		.loc 1 516 0
 782 017e E52C     		cmp	r4, #229
 783 0180 16D1     		bne	.L40
 517:Src/main.c    ****   }else{
 784              		.loc 1 517 0
 785 0182 5C4B     		ldr	r3, .L103+88
 786 0184 0122     		movs	r2, #1
 787 0186 1A70     		strb	r2, [r3]
 788              	.L41:
 523:Src/main.c    ****   // bit 3    Measure   1'b1
 789              		.loc 1 523 0
 790 0188 0822     		movs	r2, #8
 791 018a 2D21     		movs	r1, #45
 792 018c 1D20     		movs	r0, #29
 793 018e FFF7FEFF 		bl	ADXL345_RegWrite
 794              	.LVL92:
 525:Src/main.c    **** 
 795              		.loc 1 525 0
 796 0192 2D21     		movs	r1, #45
 797 0194 1D20     		movs	r0, #29
 798 0196 FFF7FEFF 		bl	ADXL345_RegRead_1byte
 799              	.LVL93:
 528:Src/main.c    ****   // bit 2    Justify   1'b1
 800              		.loc 1 528 0
 801 019a 0522     		movs	r2, #5
 802 019c 3121     		movs	r1, #49
 803 019e 1D20     		movs	r0, #29
 804 01a0 FFF7FEFF 		bl	ADXL345_RegWrite
 805              	.LVL94:
 531:Src/main.c    **** 
 806              		.loc 1 531 0
 807 01a4 3121     		movs	r1, #49
 808 01a6 1D20     		movs	r0, #29
 809 01a8 FFF7FEFF 		bl	ADXL345_RegRead_1byte
 810              	.LVL95:
 398:Src/main.c    ****   int16_t circular_buffer[128]={};
 811              		.loc 1 398 0
 812 01ac 0025     		movs	r5, #0
 813 01ae E5E0     		b	.L62
 814              	.LVL96:
 815              	.L40:
 519:Src/main.c    ****   }
 816              		.loc 1 519 0
 817 01b0 504B     		ldr	r3, .L103+88
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 32


 818 01b2 0022     		movs	r2, #0
 819 01b4 1A70     		strb	r2, [r3]
 820 01b6 E7E7     		b	.L41
 821              	.LVL97:
 822              	.L95:
 823              	.LBB2:
 555:Src/main.c    ****         /*
 824              		.loc 1 555 0
 825 01b8 4E4B     		ldr	r3, .L103+88
 826 01ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 827 01bc 012B     		cmp	r3, #1
 828 01be 13D0     		beq	.L86
 829              	.L43:
 612:Src/main.c    **** 		  meas_value[1] = DEFI_value[2];  // OILP
 830              		.loc 1 612 0
 831 01c0 4D4A     		ldr	r2, .L103+92
 832 01c2 1188     		ldrh	r1, [r2]
 833 01c4 4D4B     		ldr	r3, .L103+96
 834 01c6 1980     		strh	r1, [r3]	@ movhi
 613:Src/main.c    **** 			meas_value[2] = FP_volt;        // FuelPump Voltage
 835              		.loc 1 613 0
 836 01c8 9188     		ldrh	r1, [r2, #4]
 837 01ca 5980     		strh	r1, [r3, #2]	@ movhi
 614:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 838              		.loc 1 614 0
 839 01cc 4C49     		ldr	r1, .L103+100
 840 01ce 0988     		ldrh	r1, [r1]
 841 01d0 9980     		strh	r1, [r3, #4]	@ movhi
 615:Src/main.c    **** 			meas_value[4] = DEFI_value[5];  // OILT
 842              		.loc 1 615 0
 843 01d2 9189     		ldrh	r1, [r2, #12]
 844 01d4 D980     		strh	r1, [r3, #6]	@ movhi
 616:Src/main.c    **** 		  meas_value[5] = O2_volt;        // O2
 845              		.loc 1 616 0
 846 01d6 5289     		ldrh	r2, [r2, #10]
 847 01d8 1A81     		strh	r2, [r3, #8]	@ movhi
 617:Src/main.c    **** 
 848              		.loc 1 617 0
 849 01da 4A4A     		ldr	r2, .L103+104
 850 01dc 1288     		ldrh	r2, [r2]
 851 01de 5A81     		strh	r2, [r3, #10]	@ movhi
 619:Src/main.c    ****     }
 852              		.loc 1 619 0
 853 01e0 494B     		ldr	r3, .L103+108
 854 01e2 0022     		movs	r2, #0
 855 01e4 1A60     		str	r2, [r3]
 856 01e6 07E1     		b	.L42
 857              	.L86:
 571:Src/main.c    ****         Gsens_Y1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x35); // Check "DATAY1" (MSB side)
 858              		.loc 1 571 0
 859 01e8 3321     		movs	r1, #51
 860 01ea 1D20     		movs	r0, #29
 861 01ec FFF7FEFF 		bl	ADXL345_RegRead_1byte
 862              	.LVL98:
 863 01f0 464C     		ldr	r4, .L103+112
 864 01f2 2070     		strb	r0, [r4]
 572:Src/main.c    ****         Gsens_Z1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x37); // Check "DATAZ1" (MSB side)
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 33


 865              		.loc 1 572 0
 866 01f4 3521     		movs	r1, #53
 867 01f6 1D20     		movs	r0, #29
 868 01f8 FFF7FEFF 		bl	ADXL345_RegRead_1byte
 869              	.LVL99:
 870 01fc 444B     		ldr	r3, .L103+116
 871 01fe 1870     		strb	r0, [r3]
 573:Src/main.c    ****         // Acceration 1G = 100
 872              		.loc 1 573 0
 873 0200 3721     		movs	r1, #55
 874 0202 1D20     		movs	r0, #29
 875 0204 FFF7FEFF 		bl	ADXL345_RegRead_1byte
 876              	.LVL100:
 877 0208 424B     		ldr	r3, .L103+120
 878 020a 1870     		strb	r0, [r3]
 575:Src/main.c    ****         Gsens_Y = 400 * (int8_t)Gsens_Y1 / 128; // unsigned->signed & scaling
 879              		.loc 1 575 0
 880 020c 94F90030 		ldrsb	r3, [r4]
 881 0210 4FF4C872 		mov	r2, #400
 882 0214 02FB03F2 		mul	r2, r2, r3
 883 0218 002A     		cmp	r2, #0
 884 021a 1EDB     		blt	.L87
 885              	.L44:
 886 021c D211     		asrs	r2, r2, #7
 887 021e 3E4B     		ldr	r3, .L103+124
 888 0220 1A80     		strh	r2, [r3]	@ movhi
 576:Src/main.c    ****         Gsens_Z = 400 * (int8_t)Gsens_Z1 / 128; // unsigned->signed & scaling
 889              		.loc 1 576 0
 890 0222 3B4B     		ldr	r3, .L103+116
 891 0224 93F90010 		ldrsb	r1, [r3]
 892 0228 4FF4C873 		mov	r3, #400
 893 022c 03FB01F3 		mul	r3, r3, r1
 894 0230 002B     		cmp	r3, #0
 895 0232 14DB     		blt	.L88
 896              	.L45:
 897 0234 DB11     		asrs	r3, r3, #7
 898 0236 3949     		ldr	r1, .L103+128
 899 0238 0B80     		strh	r3, [r1]	@ movhi
 577:Src/main.c    **** 
 900              		.loc 1 577 0
 901 023a 4FF4C871 		mov	r1, #400
 902 023e 01FB00F0 		mul	r0, r1, r0
 903 0242 0028     		cmp	r0, #0
 904 0244 0DDB     		blt	.L89
 905              	.L46:
 906 0246 40F3CF10 		sbfx	r0, r0, #7, #16
 907 024a 3549     		ldr	r1, .L103+132
 908 024c 0880     		strh	r0, [r1]	@ movhi
 579:Src/main.c    ****         
 909              		.loc 1 579 0
 910 024e 0090     		str	r0, [sp]
 911 0250 3449     		ldr	r1, .L103+136
 912 0252 2348     		ldr	r0, .L103+68
 913 0254 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 914              	.LVL101:
 915 0258 B2E7     		b	.L43
 916              	.L87:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 34


 575:Src/main.c    ****         Gsens_Y = 400 * (int8_t)Gsens_Y1 / 128; // unsigned->signed & scaling
 917              		.loc 1 575 0
 918 025a 7F32     		adds	r2, r2, #127
 919 025c DEE7     		b	.L44
 920              	.L88:
 576:Src/main.c    ****         Gsens_Z = 400 * (int8_t)Gsens_Z1 / 128; // unsigned->signed & scaling
 921              		.loc 1 576 0
 922 025e 7F33     		adds	r3, r3, #127
 923 0260 E8E7     		b	.L45
 924              	.L89:
 577:Src/main.c    **** 
 925              		.loc 1 577 0
 926 0262 7F30     		adds	r0, r0, #127
 927 0264 EFE7     		b	.L46
 928              	.L96:
 635:Src/main.c    ****             }else{
 929              		.loc 1 635 0
 930 0266 304B     		ldr	r3, .L103+140
 931 0268 0022     		movs	r2, #0
 932 026a 1A70     		strb	r2, [r3]
 933 026c 69E0     		b	.L48
 934              	.L49:
 642:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 935              		.loc 1 642 0
 936 026e 2F49     		ldr	r1, .L103+144
 937 0270 1B48     		ldr	r0, .L103+68
 938 0272 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 939              	.LVL102:
 643:Src/main.c    ****           // SW "DOWN"
 940              		.loc 1 643 0
 941 0276 1720     		movs	r0, #23
 942 0278 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 943              	.LVL103:
 645:Src/main.c    ****             if( mode == 0 ){
 944              		.loc 1 645 0
 945 027c 2C4B     		ldr	r3, .L103+148
 946 027e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 947 0280 002B     		cmp	r3, #0
 948 0282 5ED1     		bne	.L48
 646:Src/main.c    ****               mode = N_mode-1;
 949              		.loc 1 646 0
 950 0284 284B     		ldr	r3, .L103+140
 951 0286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 952 0288 1BB9     		cbnz	r3, .L53
 647:Src/main.c    ****             }else{
 953              		.loc 1 647 0
 954 028a 274B     		ldr	r3, .L103+140
 955 028c 0322     		movs	r2, #3
 956 028e 1A70     		strb	r2, [r3]
 957 0290 57E0     		b	.L48
 958              	.L53:
 649:Src/main.c    ****             }
 959              		.loc 1 649 0
 960 0292 013B     		subs	r3, r3, #1
 961 0294 244A     		ldr	r2, .L103+140
 962 0296 1370     		strb	r3, [r2]
 963 0298 53E0     		b	.L48
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 35


 964              	.L104:
 965 029a 00BF     		.align	2
 966              	.L103:
 967 029c 00000000 		.word	htim1
 968 02a0 00000000 		.word	.LC2
 969 02a4 00000000 		.word	htim2
 970 02a8 00000000 		.word	htim3
 971 02ac 00000000 		.word	htim6
 972 02b0 00000000 		.word	UART1_Data
 973 02b4 00000000 		.word	huart1
 974 02b8 00000000 		.word	hadc1
 975 02bc 00000000 		.word	u8g2
 976 02c0 00000000 		.word	u8x8_gpio_and_delay_STM32F303
 977 02c4 00000000 		.word	u8x8_byte_4wire_hw_spi
 978 02c8 00000000 		.word	u8g2_cb_r0
 979 02cc 00040048 		.word	1207960576
 980 02d0 00000000 		.word	.LANCHOR4
 981 02d4 00000000 		.word	u8g2_font_5x7_tf
 982 02d8 00000000 		.word	.LC3
 983 02dc 18000000 		.word	.LC4
 984 02e0 00000000 		.word	huart2
 985 02e4 24000000 		.word	.LC5
 986 02e8 00000000 		.word	.LANCHOR5
 987 02ec 002C0140 		.word	1073818624
 988 02f0 3C000000 		.word	.LC6
 989 02f4 00000000 		.word	Gsens_EN
 990 02f8 00000000 		.word	DEFI_value
 991 02fc 00000000 		.word	.LANCHOR8
 992 0300 00000000 		.word	.LANCHOR7
 993 0304 00000000 		.word	.LANCHOR6
 994 0308 00000000 		.word	flag_meas
 995 030c 00000000 		.word	Gsens_X1
 996 0310 00000000 		.word	Gsens_Y1
 997 0314 00000000 		.word	Gsens_Z1
 998 0318 00000000 		.word	Gsens_X
 999 031c 00000000 		.word	Gsens_Y
 1000 0320 00000000 		.word	Gsens_Z
 1001 0324 50000000 		.word	.LC7
 1002 0328 00000000 		.word	mode
 1003 032c 60000000 		.word	.LC9
 1004 0330 00000000 		.word	setting
 1005              	.L50:
 654:Src/main.c    ****           HAL_NVIC_DisableIRQ (EXTI1_IRQn);
 1006              		.loc 1 654 0
 1007 0334 AE49     		ldr	r1, .L105+8
 1008 0336 AF48     		ldr	r0, .L105+12
 1009 0338 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 1010              	.LVL104:
 655:Src/main.c    ****           // SW "ENTER"
 1011              		.loc 1 655 0
 1012 033c 0720     		movs	r0, #7
 1013 033e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1014              	.LVL105:
 1015              	.L48:
 669:Src/main.c    ****       if( mode == 0 ){
 1016              		.loc 1 669 0
 1017 0342 AD48     		ldr	r0, .L105+16
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 36


 1018 0344 FFF7FEFF 		bl	u8g2_ClearBuffer
 1019              	.LVL106:
 670:Src/main.c    ****         draw_MeasLabels();
 1020              		.loc 1 670 0
 1021 0348 AC4B     		ldr	r3, .L105+20
 1022 034a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1023 034c 002B     		cmp	r3, #0
 1024 034e 79D0     		beq	.L90
 674:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 1025              		.loc 1 674 0
 1026 0350 012B     		cmp	r3, #1
 1027 0352 00F09A80 		beq	.L91
 688:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_m
 1028              		.loc 1 688 0
 1029 0356 022B     		cmp	r3, #2
 1030 0358 00F0CF80 		beq	.L92
 692:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, -200, 200, 4);
 1031              		.loc 1 692 0
 1032 035c 032B     		cmp	r3, #3
 1033 035e 00F0E980 		beq	.L93
 1034              	.L55:
 697:Src/main.c    ****       TIM6->CNT = 0;
 1035              		.loc 1 697 0
 1036 0362 A548     		ldr	r0, .L105+16
 1037 0364 FFF7FEFF 		bl	u8g2_SendBuffer
 1038              	.LVL107:
 698:Src/main.c    ****       flag_sw = 0;
 1039              		.loc 1 698 0
 1040 0368 0023     		movs	r3, #0
 1041 036a A54A     		ldr	r2, .L105+24
 1042 036c 5362     		str	r3, [r2, #36]
 699:Src/main.c    ****     }
 1043              		.loc 1 699 0
 1044 036e A54A     		ldr	r2, .L105+28
 1045 0370 1360     		str	r3, [r2]
 1046              	.L47:
 703:Src/main.c    ****       ///// multi meter /////
 1047              		.loc 1 703 0
 1048 0372 A54B     		ldr	r3, .L105+32
 1049 0374 1B68     		ldr	r3, [r3]
 1050 0376 012B     		cmp	r3, #1
 1051 0378 00F0F980 		beq	.L94
 1052              	.LVL108:
 1053              	.L62:
 542:Src/main.c    **** 
 1054              		.loc 1 542 0
 1055 037c BDF82030 		ldrh	r3, [sp, #32]
 1056 0380 07EE903A 		vmov	s15, r3	@ int
 1057 0384 F8EE677A 		vcvt.f32.u32	s15, s15
 1058 0388 9FEDA07A 		vldr.32	s14, .L105+36
 1059 038c 67EE877A 		vmul.f32	s15, s15, s14
 1060 0390 DFED9F6A 		vldr.32	s13, .L105+40
 1061 0394 87EEA67A 		vdiv.f32	s14, s15, s13
 1062 0398 BDEEC77A 		vcvt.s32.f32	s14, s14
 1063 039c 9D4B     		ldr	r3, .L105+44
 1064 039e 17EE102A 		vmov	r2, s14	@ int
 1065 03a2 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 37


 545:Src/main.c    ****     // Ressister attenation ratio '165/33'
 1066              		.loc 1 545 0
 1067 03a4 BDF82230 		ldrh	r3, [sp, #34]
 1068 03a8 07EE103A 		vmov	s14, r3	@ int
 1069 03ac B8EE477A 		vcvt.f32.u32	s14, s14
 1070 03b0 DFED997A 		vldr.32	s15, .L105+48
 1071 03b4 27EE277A 		vmul.f32	s14, s14, s15
 1072 03b8 C7EE267A 		vdiv.f32	s15, s14, s13
 1073 03bc FDEEE77A 		vcvt.s32.f32	s15, s15
 1074 03c0 17EE903A 		vmov	r3, s15	@ int
 1075 03c4 18B2     		sxth	r0, r3
 1076 03c6 954B     		ldr	r3, .L105+52
 1077 03c8 1880     		strh	r0, [r3]	@ movhi
 547:Src/main.c    **** 
 1078              		.loc 1 547 0
 1079 03ca FFF7FEFF 		bl	__aeabi_i2d
 1080              	.LVL109:
 1081 03ce 86A3     		adr	r3, .L105
 1082 03d0 D3E90023 		ldrd	r2, [r3]
 1083 03d4 FFF7FEFF 		bl	__aeabi_ddiv
 1084              	.LVL110:
 1085 03d8 0022     		movs	r2, #0
 1086 03da 914B     		ldr	r3, .L105+56
 1087 03dc FFF7FEFF 		bl	__aeabi_dmul
 1088              	.LVL111:
 1089 03e0 FFF7FEFF 		bl	__aeabi_d2iz
 1090              	.LVL112:
 1091 03e4 8F4B     		ldr	r3, .L105+60
 1092 03e6 1880     		strh	r0, [r3]	@ movhi
 550:Src/main.c    **** 
 1093              		.loc 1 550 0
 1094 03e8 8F48     		ldr	r0, .L105+64
 1095 03ea FFF7FEFF 		bl	defi_decoder
 1096              	.LVL113:
 552:Src/main.c    **** 
 1097              		.loc 1 552 0
 1098 03ee 8F4B     		ldr	r3, .L105+68
 1099 03f0 1B68     		ldr	r3, [r3]
 1100 03f2 012B     		cmp	r3, #1
 1101 03f4 3FF4E0AE 		beq	.L95
 1102              	.L42:
 624:Src/main.c    **** 
 1103              		.loc 1 624 0
 1104 03f8 8A4B     		ldr	r3, .L105+60
 1105 03fa B3F90030 		ldrsh	r3, [r3]
 1106 03fe C3F16403 		rsb	r3, r3, #100
 1107 0402 8B4A     		ldr	r2, .L105+72
 1108 0404 5363     		str	r3, [r2, #52]
 627:Src/main.c    ****       switch( flag_sw ){
 1109              		.loc 1 627 0
 1110 0406 7F4B     		ldr	r3, .L105+28
 1111 0408 1B68     		ldr	r3, [r3]
 1112 040a 002B     		cmp	r3, #0
 1113 040c B1D0     		beq	.L47
 628:Src/main.c    ****         case 1:
 1114              		.loc 1 628 0
 1115 040e 022B     		cmp	r3, #2
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 38


 1116 0410 3FF42DAF 		beq	.L49
 1117 0414 032B     		cmp	r3, #3
 1118 0416 8DD0     		beq	.L50
 1119 0418 012B     		cmp	r3, #1
 1120 041a 92D1     		bne	.L48
 630:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 1121              		.loc 1 630 0
 1122 041c 8549     		ldr	r1, .L105+76
 1123 041e 7548     		ldr	r0, .L105+12
 1124 0420 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 1125              	.LVL114:
 631:Src/main.c    ****           // SW "UP"
 1126              		.loc 1 631 0
 1127 0424 1720     		movs	r0, #23
 1128 0426 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1129              	.LVL115:
 633:Src/main.c    ****             if( mode == N_mode-1 ){
 1130              		.loc 1 633 0
 1131 042a 834B     		ldr	r3, .L105+80
 1132 042c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1133 042e 002B     		cmp	r3, #0
 1134 0430 87D1     		bne	.L48
 634:Src/main.c    ****               mode = 0;
 1135              		.loc 1 634 0
 1136 0432 724B     		ldr	r3, .L105+20
 1137 0434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1138 0436 032B     		cmp	r3, #3
 1139 0438 3FF415AF 		beq	.L96
 637:Src/main.c    ****             }
 1140              		.loc 1 637 0
 1141 043c 0133     		adds	r3, r3, #1
 1142 043e 6F4A     		ldr	r2, .L105+20
 1143 0440 1370     		strb	r3, [r2]
 1144 0442 7EE7     		b	.L48
 1145              	.L90:
 671:Src/main.c    ****         draw_indicators();
 1146              		.loc 1 671 0
 1147 0444 FFF7FEFF 		bl	draw_MeasLabels
 1148              	.LVL116:
 672:Src/main.c    **** 
 1149              		.loc 1 672 0
 1150 0448 FFF7FEFF 		bl	draw_indicators
 1151              	.LVL117:
 1152 044c 89E7     		b	.L55
 1153              	.LVL118:
 1154              	.L58:
 1155              	.LBB3:
 677:Src/main.c    ****           draw_MeasLabelUnit(&u8g2, x, y, meas_C_width, meas_C_height, meas_name[n], meas_unit[n]);
 1156              		.loc 1 677 0 discriminator 3
 1157 044e 04EB4402 		add	r2, r4, r4, lsl #1
 1158 0452 04EB8202 		add	r2, r4, r2, lsl #2
 1159 0456 D2B2     		uxtb	r2, r2
 1160 0458 0232     		adds	r2, r2, #2
 1161              	.LVL119:
 678:Src/main.c    ****         }
 1162              		.loc 1 678 0 discriminator 3
 1163 045a C4EBC401 		rsb	r1, r4, r4, lsl #3
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 39


 1164 045e 774B     		ldr	r3, .L105+84
 1165 0460 0B44     		add	r3, r3, r1
 1166 0462 04EB8400 		add	r0, r4, r4, lsl #2
 1167 0466 7649     		ldr	r1, .L105+88
 1168 0468 0144     		add	r1, r1, r0
 1169 046a 0291     		str	r1, [sp, #8]
 1170 046c 0193     		str	r3, [sp, #4]
 1171 046e 0D23     		movs	r3, #13
 1172 0470 0093     		str	r3, [sp]
 1173 0472 3C23     		movs	r3, #60
 1174 0474 D2B2     		uxtb	r2, r2
 1175 0476 4421     		movs	r1, #68
 1176 0478 5F48     		ldr	r0, .L105+16
 1177 047a FFF7FEFF 		bl	draw_MeasLabelUnit
 1178              	.LVL120:
 675:Src/main.c    ****           x = meas_C_x;
 1179              		.loc 1 675 0 discriminator 3
 1180 047e 0134     		adds	r4, r4, #1
 1181              	.LVL121:
 1182 0480 E4B2     		uxtb	r4, r4
 1183              	.LVL122:
 1184              	.L56:
 675:Src/main.c    ****           x = meas_C_x;
 1185              		.loc 1 675 0 is_stmt 0 discriminator 1
 1186 0482 032C     		cmp	r4, #3
 1187 0484 E3D9     		bls	.L58
 681:Src/main.c    ****           draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_s
 1188              		.loc 1 681 0 is_stmt 1
 1189 0486 0024     		movs	r4, #0
 1190              	.LVL123:
 1191 0488 18E0     		b	.L59
 1192              	.L91:
 675:Src/main.c    ****           x = meas_C_x;
 1193              		.loc 1 675 0
 1194 048a 0024     		movs	r4, #0
 1195 048c F9E7     		b	.L56
 1196              	.LVL124:
 1197              	.L60:
 682:Src/main.c    ****         }
 1198              		.loc 1 682 0 discriminator 3
 1199 048e 04EB8402 		add	r2, r4, r4, lsl #2
 1200 0492 6C4B     		ldr	r3, .L105+92
 1201 0494 1344     		add	r3, r3, r2
 1202 0496 C4EBC401 		rsb	r1, r4, r4, lsl #3
 1203 049a 04EB8101 		add	r1, r4, r1, lsl #2
 1204 049e 4831     		adds	r1, r1, #72
 1205 04a0 0293     		str	r3, [sp, #8]
 1206 04a2 694B     		ldr	r3, .L105+96
 1207 04a4 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1208 04a6 0193     		str	r3, [sp, #4]
 1209 04a8 0923     		movs	r3, #9
 1210 04aa 0093     		str	r3, [sp]
 1211 04ac 1B23     		movs	r3, #27
 1212 04ae 3522     		movs	r2, #53
 1213 04b0 C9B2     		uxtb	r1, r1
 1214 04b2 5148     		ldr	r0, .L105+16
 1215 04b4 FFF7FEFF 		bl	draw_IndicatorBox
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 40


 1216              	.LVL125:
 681:Src/main.c    ****           draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_s
 1217              		.loc 1 681 0 discriminator 3
 1218 04b8 0134     		adds	r4, r4, #1
 1219              	.LVL126:
 1220 04ba E4B2     		uxtb	r4, r4
 1221              	.LVL127:
 1222              	.L59:
 681:Src/main.c    ****           draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_s
 1223              		.loc 1 681 0 is_stmt 0 discriminator 1
 1224 04bc 032C     		cmp	r4, #3
 1225 04be E6D9     		bls	.L60
 684:Src/main.c    **** //        draw_CircularMeter_Init(26, 26, 26, 3, -60, 300, 10, 20, -1, -80, 120);
 1226              		.loc 1 684 0 is_stmt 1
 1227 04c0 7823     		movs	r3, #120
 1228 04c2 0693     		str	r3, [sp, #24]
 1229 04c4 6FF04F03 		mvn	r3, #79
 1230 04c8 0593     		str	r3, [sp, #20]
 1231 04ca 4FF0FF33 		mov	r3, #-1
 1232 04ce 0493     		str	r3, [sp, #16]
 1233 04d0 1423     		movs	r3, #20
 1234 04d2 0393     		str	r3, [sp, #12]
 1235 04d4 0A23     		movs	r3, #10
 1236 04d6 0293     		str	r3, [sp, #8]
 1237 04d8 4FF49673 		mov	r3, #300
 1238 04dc 0193     		str	r3, [sp, #4]
 1239 04de 6FF03B03 		mvn	r3, #59
 1240 04e2 0093     		str	r3, [sp]
 1241 04e4 0323     		movs	r3, #3
 1242 04e6 1F22     		movs	r2, #31
 1243 04e8 2021     		movs	r1, #32
 1244 04ea 0846     		mov	r0, r1
 1245 04ec FFF7FEFF 		bl	draw_CircularMeter_Init
 1246              	.LVL128:
 686:Src/main.c    **** 
 1247              		.loc 1 686 0
 1248 04f0 0021     		movs	r1, #0
 1249 04f2 4148     		ldr	r0, .L105+16
 1250 04f4 FFF7FEFF 		bl	draw_CircularMeter
 1251              	.LVL129:
 1252              	.LBE3:
 1253 04f8 33E7     		b	.L55
 1254              	.LVL130:
 1255              	.L92:
 1256              	.LBB4:
 689:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "MAP", "kPa");
 1257              		.loc 1 689 0
 1258 04fa 3F4C     		ldr	r4, .L105+16
 1259 04fc 0323     		movs	r3, #3
 1260 04fe 0393     		str	r3, [sp, #12]
 1261 0500 C823     		movs	r3, #200
 1262 0502 0293     		str	r3, [sp, #8]
 1263 0504 6FF06303 		mvn	r3, #99
 1264 0508 0193     		str	r3, [sp, #4]
 1265 050a 3423     		movs	r3, #52
 1266 050c 0093     		str	r3, [sp]
 1267 050e 8023     		movs	r3, #128
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 41


 1268 0510 0D22     		movs	r2, #13
 1269 0512 0021     		movs	r1, #0
 1270 0514 2046     		mov	r0, r4
 1271 0516 FFF7FEFF 		bl	draw_Wave_axis
 1272              	.LVL131:
 690:Src/main.c    **** 
 1273              		.loc 1 690 0
 1274 051a 4C4B     		ldr	r3, .L105+100
 1275 051c 0293     		str	r3, [sp, #8]
 1276 051e 4C4B     		ldr	r3, .L105+104
 1277 0520 0193     		str	r3, [sp, #4]
 1278 0522 0D23     		movs	r3, #13
 1279 0524 0093     		str	r3, [sp]
 1280 0526 4023     		movs	r3, #64
 1281 0528 0022     		movs	r2, #0
 1282 052a 1146     		mov	r1, r2
 1283 052c 2046     		mov	r0, r4
 1284 052e FFF7FEFF 		bl	draw_MeasLabelUnit
 1285              	.LVL132:
 1286              	.LBE4:
 1287 0532 16E7     		b	.L55
 1288              	.L93:
 1289              	.LBB5:
 693:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "LatG", "G");
 1290              		.loc 1 693 0
 1291 0534 304C     		ldr	r4, .L105+16
 1292 0536 0423     		movs	r3, #4
 1293 0538 0393     		str	r3, [sp, #12]
 1294 053a C823     		movs	r3, #200
 1295 053c 0293     		str	r3, [sp, #8]
 1296 053e 6FF0C703 		mvn	r3, #199
 1297 0542 0193     		str	r3, [sp, #4]
 1298 0544 3423     		movs	r3, #52
 1299 0546 0093     		str	r3, [sp]
 1300 0548 8023     		movs	r3, #128
 1301 054a 0D22     		movs	r2, #13
 1302 054c 0021     		movs	r1, #0
 1303 054e 2046     		mov	r0, r4
 1304 0550 FFF7FEFF 		bl	draw_Wave_axis
 1305              	.LVL133:
 694:Src/main.c    **** 
 1306              		.loc 1 694 0
 1307 0554 3F4B     		ldr	r3, .L105+108
 1308 0556 0293     		str	r3, [sp, #8]
 1309 0558 3F4B     		ldr	r3, .L105+112
 1310 055a 0193     		str	r3, [sp, #4]
 1311 055c 0D23     		movs	r3, #13
 1312 055e 0093     		str	r3, [sp]
 1313 0560 4023     		movs	r3, #64
 1314 0562 0022     		movs	r2, #0
 1315 0564 1146     		mov	r1, r2
 1316 0566 2046     		mov	r0, r4
 1317 0568 FFF7FEFF 		bl	draw_MeasLabelUnit
 1318              	.LVL134:
 1319 056c F9E6     		b	.L55
 1320              	.L94:
 1321              	.LBE5:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 42


 705:Src/main.c    ****         // update Fuel Pump Voltage
 1322              		.loc 1 705 0
 1323 056e 234B     		ldr	r3, .L105+20
 1324 0570 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1325 0572 A4B1     		cbz	r4, .L97
 725:Src/main.c    **** 
 1326              		.loc 1 725 0
 1327 0574 012C     		cmp	r4, #1
 1328 0576 00F0CE80 		beq	.L98
 744:Src/main.c    **** 
 1329              		.loc 1 744 0
 1330 057a 022C     		cmp	r4, #2
 1331 057c 00F01581 		beq	.L99
 758:Src/main.c    **** 
 1332              		.loc 1 758 0
 1333 0580 032C     		cmp	r4, #3
 1334 0582 00F04281 		beq	.L100
 772:Src/main.c    ****         u8g2_ClearBuffer(&u8g2);
 1335              		.loc 1 772 0
 1336 0586 2C4B     		ldr	r3, .L105+80
 1337 0588 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1338 058a 012B     		cmp	r3, #1
 1339 058c 00F06C81 		beq	.L101
 1340              	.L68:
 791:Src/main.c    **** 
 1341              		.loc 1 791 0
 1342 0590 1948     		ldr	r0, .L105+16
 1343 0592 FFF7FEFF 		bl	u8g2_SendBuffer
 1344              	.LVL135:
 793:Src/main.c    ****     }
 1345              		.loc 1 793 0
 1346 0596 1C4B     		ldr	r3, .L105+32
 1347 0598 0022     		movs	r2, #0
 1348 059a 1A60     		str	r2, [r3]
 1349 059c EEE6     		b	.L62
 1350              	.L97:
 707:Src/main.c    **** 
 1351              		.loc 1 707 0
 1352 059e 164F     		ldr	r7, .L105+16
 1353 05a0 2E4B     		ldr	r3, .L105+116
 1354 05a2 0593     		str	r3, [sp, #20]
 1355 05a4 0026     		movs	r6, #0
 1356 05a6 0496     		str	r6, [sp, #16]
 1357 05a8 0396     		str	r6, [sp, #12]
 1358 05aa 0323     		movs	r3, #3
 1359 05ac 0293     		str	r3, [sp, #8]
 1360 05ae 1D4B     		ldr	r3, .L105+60
 1361 05b0 B3F90030 		ldrsh	r3, [r3]
 1362 05b4 0193     		str	r3, [sp, #4]
 1363 05b6 0C23     		movs	r3, #12
 1364 05b8 0093     		str	r3, [sp]
 1365 05ba 4623     		movs	r3, #70
 1366 05bc 3422     		movs	r2, #52
 1367 05be 3146     		mov	r1, r6
 1368 05c0 3846     		mov	r0, r7
 1369 05c2 FFF7FEFF 		bl	draw_Value
 1370              	.LVL136:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 43


 710:Src/main.c    **** 
 1371              		.loc 1 710 0
 1372 05c6 264B     		ldr	r3, .L105+120
 1373 05c8 1B88     		ldrh	r3, [r3]
 1374 05ca 42F22832 		movw	r2, #9000
 1375 05ce 0392     		str	r2, [sp, #12]
 1376 05d0 0296     		str	r6, [sp, #8]
 1377 05d2 0193     		str	r3, [sp, #4]
 1378 05d4 0E23     		movs	r3, #14
 1379 05d6 0093     		str	r3, [sp]
 1380 05d8 8023     		movs	r3, #128
 1381 05da 3246     		mov	r2, r6
 1382 05dc 3146     		mov	r1, r6
 1383 05de 3846     		mov	r0, r7
 1384 05e0 FFF7FEFF 		bl	draw_BarGraph
 1385              	.LVL137:
 713:Src/main.c    ****           x = meas_x;
 1386              		.loc 1 713 0
 1387 05e4 67E0     		b	.L64
 1388              	.L106:
 1389 05e6 00BF     		.align	3
 1390              	.L105:
 1391 05e8 9A999999 		.word	2576980378
 1392 05ec 99993040 		.word	1076926873
 1393 05f0 68000000 		.word	.LC10
 1394 05f4 00000000 		.word	huart2
 1395 05f8 00000000 		.word	u8g2
 1396 05fc 00000000 		.word	mode
 1397 0600 00100040 		.word	1073745920
 1398 0604 00000000 		.word	flag_sw
 1399 0608 00000000 		.word	flag_disp
 1400 060c 0000A543 		.word	1134886912
 1401 0610 00007F43 		.word	1132396544
 1402 0614 00000000 		.word	.LANCHOR6
 1403 0618 00002543 		.word	1126498304
 1404 061c 00000000 		.word	.LANCHOR7
 1405 0620 00002440 		.word	1076101120
 1406 0624 00000000 		.word	.LANCHOR5
 1407 0628 00000000 		.word	UART1_RxData
 1408 062c 00000000 		.word	flag_meas
 1409 0630 002C0140 		.word	1073818624
 1410 0634 5C000000 		.word	.LC8
 1411 0638 00000000 		.word	setting
 1412 063c 00000000 		.word	.LANCHOR2
 1413 0640 00000000 		.word	.LANCHOR3
 1414 0644 00000000 		.word	.LANCHOR0
 1415 0648 00000000 		.word	.LANCHOR1
 1416 064c 70000000 		.word	.LC11
 1417 0650 74000000 		.word	.LC12
 1418 0654 78000000 		.word	.LC13
 1419 0658 7C000000 		.word	.LC14
 1420 065c 00000000 		.word	.LC0
 1421 0660 00000000 		.word	rpm
 1422              	.LVL138:
 1423              	.L65:
 715:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac
 1424              		.loc 1 715 0 discriminator 3
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 44


 1425 0664 A04B     		ldr	r3, .L107
 1426 0666 A3FB0423 		umull	r2, r3, r3, r4
 1427 066a 5B08     		lsrs	r3, r3, #1
 1428 066c 03EB4303 		add	r3, r3, r3, lsl #1
 1429 0670 E31A     		subs	r3, r4, r3
 1430 0672 03EB4303 		add	r3, r3, r3, lsl #1
 1431 0676 9A00     		lsls	r2, r3, #2
 1432 0678 D2B2     		uxtb	r2, r2
 1433 067a 1032     		adds	r2, r2, #16
 1434              	.LVL139:
 716:Src/main.c    ****         }
 1435              		.loc 1 716 0 discriminator 3
 1436 067c 04EB8401 		add	r1, r4, r4, lsl #2
 1437 0680 9A4B     		ldr	r3, .L107+4
 1438 0682 0B44     		add	r3, r3, r1
 1439 0684 0593     		str	r3, [sp, #20]
 1440 0686 9A4B     		ldr	r3, .L107+8
 1441 0688 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1442 068a 0493     		str	r3, [sp, #16]
 1443 068c 994B     		ldr	r3, .L107+12
 1444 068e 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1445 0690 0393     		str	r3, [sp, #12]
 1446 0692 994B     		ldr	r3, .L107+16
 1447 0694 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1448 0696 0293     		str	r3, [sp, #8]
 1449 0698 984B     		ldr	r3, .L107+20
 1450 069a 33F91430 		ldrsh	r3, [r3, r4, lsl #1]
 1451 069e 0193     		str	r3, [sp, #4]
 1452 06a0 0C23     		movs	r3, #12
 1453 06a2 0093     		str	r3, [sp]
 1454 06a4 4623     		movs	r3, #70
 1455 06a6 02F0FC02 		and	r2, r2, #252
 1456              	.LVL140:
 1457 06aa 0021     		movs	r1, #0
 1458 06ac 9448     		ldr	r0, .L107+24
 1459 06ae FFF7FEFF 		bl	draw_Value
 1460              	.LVL141:
 713:Src/main.c    ****           x = meas_x;
 1461              		.loc 1 713 0 discriminator 3
 1462 06b2 0134     		adds	r4, r4, #1
 1463              	.LVL142:
 1464 06b4 E4B2     		uxtb	r4, r4
 1465              	.LVL143:
 1466              	.L64:
 713:Src/main.c    ****           x = meas_x;
 1467              		.loc 1 713 0 is_stmt 0 discriminator 1
 1468 06b6 022C     		cmp	r4, #2
 1469 06b8 D4D9     		bls	.L65
 718:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 1470              		.loc 1 718 0 is_stmt 1
 1471 06ba 0324     		movs	r4, #3
 1472              	.LVL144:
 1473 06bc 28E0     		b	.L66
 1474              	.LVL145:
 1475              	.L67:
 720:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 1476              		.loc 1 720 0 discriminator 3
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 45


 1477 06be 8A4B     		ldr	r3, .L107
 1478 06c0 A3FB0423 		umull	r2, r3, r3, r4
 1479 06c4 5B08     		lsrs	r3, r3, #1
 1480 06c6 03EB4303 		add	r3, r3, r3, lsl #1
 1481 06ca E31A     		subs	r3, r4, r3
 1482 06cc 03EB4303 		add	r3, r3, r3, lsl #1
 1483 06d0 9A00     		lsls	r2, r3, #2
 1484 06d2 D2B2     		uxtb	r2, r2
 1485 06d4 1032     		adds	r2, r2, #16
 1486              	.LVL146:
 721:Src/main.c    ****         }
 1487              		.loc 1 721 0 discriminator 3
 1488 06d6 04EB8401 		add	r1, r4, r4, lsl #2
 1489 06da 844B     		ldr	r3, .L107+4
 1490 06dc 0B44     		add	r3, r3, r1
 1491 06de 0593     		str	r3, [sp, #20]
 1492 06e0 834B     		ldr	r3, .L107+8
 1493 06e2 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1494 06e4 0493     		str	r3, [sp, #16]
 1495 06e6 834B     		ldr	r3, .L107+12
 1496 06e8 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1497 06ea 0393     		str	r3, [sp, #12]
 1498 06ec 824B     		ldr	r3, .L107+16
 1499 06ee 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1500 06f0 0293     		str	r3, [sp, #8]
 1501 06f2 824B     		ldr	r3, .L107+20
 1502 06f4 33F91430 		ldrsh	r3, [r3, r4, lsl #1]
 1503 06f8 0193     		str	r3, [sp, #4]
 1504 06fa 0C23     		movs	r3, #12
 1505 06fc 0093     		str	r3, [sp]
 1506 06fe 3823     		movs	r3, #56
 1507 0700 02F0FC02 		and	r2, r2, #252
 1508              	.LVL147:
 1509 0704 4821     		movs	r1, #72
 1510 0706 7E48     		ldr	r0, .L107+24
 1511 0708 FFF7FEFF 		bl	draw_Value
 1512              	.LVL148:
 718:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 1513              		.loc 1 718 0 discriminator 3
 1514 070c 0134     		adds	r4, r4, #1
 1515              	.LVL149:
 1516 070e E4B2     		uxtb	r4, r4
 1517              	.LVL150:
 1518              	.L66:
 718:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 1519              		.loc 1 718 0 is_stmt 0 discriminator 1
 1520 0710 052C     		cmp	r4, #5
 1521 0712 D4D9     		bls	.L67
 1522 0714 3CE7     		b	.L68
 1523              	.LVL151:
 1524              	.L98:
 1525              	.LBB6:
 727:Src/main.c    ****         
 1526              		.loc 1 727 0 is_stmt 1
 1527 0716 794E     		ldr	r6, .L107+20
 1528 0718 794C     		ldr	r4, .L107+24
 1529 071a B6F90010 		ldrsh	r1, [r6]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 46


 1530 071e 2046     		mov	r0, r4
 1531 0720 FFF7FEFF 		bl	draw_CircularMeter
 1532              	.LVL152:
 729:Src/main.c    ****         draw_MeasUnit(&u8g2, 38, 40, 28, 16, "kPa");
 1533              		.loc 1 729 0
 1534 0724 774B     		ldr	r3, .L107+28
 1535 0726 0593     		str	r3, [sp, #20]
 1536 0728 0123     		movs	r3, #1
 1537 072a 0493     		str	r3, [sp, #16]
 1538 072c 0223     		movs	r3, #2
 1539 072e 0393     		str	r3, [sp, #12]
 1540 0730 0323     		movs	r3, #3
 1541 0732 0293     		str	r3, [sp, #8]
 1542 0734 B6F90030 		ldrsh	r3, [r6]
 1543 0738 0193     		str	r3, [sp, #4]
 1544 073a 1026     		movs	r6, #16
 1545 073c 0096     		str	r6, [sp]
 1546 073e 1E23     		movs	r3, #30
 1547 0740 2122     		movs	r2, #33
 1548 0742 2421     		movs	r1, #36
 1549 0744 2046     		mov	r0, r4
 1550 0746 FFF7FEFF 		bl	draw_Value
 1551              	.LVL153:
 730:Src/main.c    **** /*        
 1552              		.loc 1 730 0
 1553 074a 6F4B     		ldr	r3, .L107+32
 1554 074c 0193     		str	r3, [sp, #4]
 1555 074e 0096     		str	r6, [sp]
 1556 0750 1C23     		movs	r3, #28
 1557 0752 2822     		movs	r2, #40
 1558 0754 2621     		movs	r1, #38
 1559 0756 2046     		mov	r0, r4
 1560 0758 FFF7FEFF 		bl	draw_MeasUnit
 1561              	.LVL154:
 737:Src/main.c    ****           x = meas_C_x;
 1562              		.loc 1 737 0
 1563 075c 0024     		movs	r4, #0
 1564              	.LVL155:
 1565              	.L70:
 737:Src/main.c    ****           x = meas_C_x;
 1566              		.loc 1 737 0 is_stmt 0 discriminator 1
 1567 075e 032C     		cmp	r4, #3
 1568 0760 3FF616AF 		bhi	.L68
 1569              	.LVL156:
 739:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_C_width, meas_C_height, meas_value[n], meas_digit[n], meas_f
 1570              		.loc 1 739 0 is_stmt 1 discriminator 3
 1571 0764 04EB4402 		add	r2, r4, r4, lsl #1
 1572 0768 04EB8202 		add	r2, r4, r2, lsl #2
 1573 076c D2B2     		uxtb	r2, r2
 1574 076e 0232     		adds	r2, r2, #2
 1575              	.LVL157:
 740:Src/main.c    ****         }
 1576              		.loc 1 740 0 discriminator 3
 1577 0770 04EB8401 		add	r1, r4, r4, lsl #2
 1578 0774 5D4B     		ldr	r3, .L107+4
 1579 0776 0B44     		add	r3, r3, r1
 1580 0778 0593     		str	r3, [sp, #20]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 47


 1581 077a 5D4B     		ldr	r3, .L107+8
 1582 077c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1583 077e 0493     		str	r3, [sp, #16]
 1584 0780 5C4B     		ldr	r3, .L107+12
 1585 0782 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1586 0784 0393     		str	r3, [sp, #12]
 1587 0786 5C4B     		ldr	r3, .L107+16
 1588 0788 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1589 078a 0293     		str	r3, [sp, #8]
 1590 078c 5B4B     		ldr	r3, .L107+20
 1591 078e 33F91430 		ldrsh	r3, [r3, r4, lsl #1]
 1592 0792 0193     		str	r3, [sp, #4]
 1593 0794 0D23     		movs	r3, #13
 1594 0796 0093     		str	r3, [sp]
 1595 0798 3C23     		movs	r3, #60
 1596 079a D2B2     		uxtb	r2, r2
 1597 079c 4421     		movs	r1, #68
 1598 079e 5848     		ldr	r0, .L107+24
 1599 07a0 FFF7FEFF 		bl	draw_Value
 1600              	.LVL158:
 737:Src/main.c    ****           x = meas_C_x;
 1601              		.loc 1 737 0 discriminator 3
 1602 07a4 0134     		adds	r4, r4, #1
 1603              	.LVL159:
 1604 07a6 E4B2     		uxtb	r4, r4
 1605              	.LVL160:
 1606 07a8 D9E7     		b	.L70
 1607              	.LVL161:
 1608              	.L99:
 1609              	.LBE6:
 1610              	.LBB7:
 746:Src/main.c    ****           circular_buffer_index--;
 1611              		.loc 1 746 0
 1612 07aa 65B3     		cbz	r5, .L82
 747:Src/main.c    ****         }else{
 1613              		.loc 1 747 0
 1614 07ac 013D     		subs	r5, r5, #1
 1615              	.LVL162:
 1616 07ae ADB2     		uxth	r5, r5
 1617              	.LVL163:
 1618              	.L73:
 751:Src/main.c    **** 
 1619              		.loc 1 751 0
 1620 07b0 524B     		ldr	r3, .L107+20
 1621 07b2 B3F90030 		ldrsh	r3, [r3]
 1622 07b6 0DF50264 		add	r4, sp, #2080
 1623 07ba 24F81530 		strh	r3, [r4, r5, lsl #1]	@ movhi
 754:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 1624              		.loc 1 754 0
 1625 07be 504E     		ldr	r6, .L107+24
 1626 07c0 0495     		str	r5, [sp, #16]
 1627 07c2 0394     		str	r4, [sp, #12]
 1628 07c4 C823     		movs	r3, #200
 1629 07c6 0293     		str	r3, [sp, #8]
 1630 07c8 6FF06303 		mvn	r3, #99
 1631 07cc 0193     		str	r3, [sp, #4]
 1632 07ce 3423     		movs	r3, #52
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 48


 1633 07d0 0093     		str	r3, [sp]
 1634 07d2 8023     		movs	r3, #128
 1635 07d4 0D22     		movs	r2, #13
 1636 07d6 0021     		movs	r1, #0
 1637 07d8 3046     		mov	r0, r6
 1638 07da FFF7FEFF 		bl	draw_Wave
 1639              	.LVL164:
 755:Src/main.c    **** 
 1640              		.loc 1 755 0
 1641 07de 4A4B     		ldr	r3, .L107+32
 1642 07e0 0593     		str	r3, [sp, #20]
 1643 07e2 0123     		movs	r3, #1
 1644 07e4 0493     		str	r3, [sp, #16]
 1645 07e6 0223     		movs	r3, #2
 1646 07e8 0393     		str	r3, [sp, #12]
 1647 07ea 0323     		movs	r3, #3
 1648 07ec 0293     		str	r3, [sp, #8]
 1649 07ee 34F91530 		ldrsh	r3, [r4, r5, lsl #1]
 1650 07f2 0193     		str	r3, [sp, #4]
 1651 07f4 0D23     		movs	r3, #13
 1652 07f6 0093     		str	r3, [sp]
 1653 07f8 4023     		movs	r3, #64
 1654 07fa 0022     		movs	r2, #0
 1655 07fc 1146     		mov	r1, r2
 1656 07fe 3046     		mov	r0, r6
 1657 0800 FFF7FEFF 		bl	draw_Value
 1658              	.LVL165:
 1659              	.LBE7:
 1660 0804 C4E6     		b	.L68
 1661              	.L82:
 1662              	.LBB8:
 749:Src/main.c    ****         }
 1663              		.loc 1 749 0
 1664 0806 8025     		movs	r5, #128
 1665              	.LVL166:
 1666 0808 D2E7     		b	.L73
 1667              	.LVL167:
 1668              	.L100:
 1669              	.LBE8:
 1670              	.LBB9:
 760:Src/main.c    ****           circular_buffer_index--;
 1671              		.loc 1 760 0
 1672 080a 5DB3     		cbz	r5, .L83
 761:Src/main.c    ****         }else{
 1673              		.loc 1 761 0
 1674 080c 013D     		subs	r5, r5, #1
 1675              	.LVL168:
 1676 080e ADB2     		uxth	r5, r5
 1677              	.LVL169:
 1678              	.L75:
 765:Src/main.c    **** 
 1679              		.loc 1 765 0
 1680 0810 0DF50264 		add	r4, sp, #2080
 1681 0814 3D4B     		ldr	r3, .L107+36
 1682 0816 1B88     		ldrh	r3, [r3]
 1683 0818 24F81530 		strh	r3, [r4, r5, lsl #1]	@ movhi
 768:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 49


 1684              		.loc 1 768 0
 1685 081c 384E     		ldr	r6, .L107+24
 1686 081e 0495     		str	r5, [sp, #16]
 1687 0820 0394     		str	r4, [sp, #12]
 1688 0822 C823     		movs	r3, #200
 1689 0824 0293     		str	r3, [sp, #8]
 1690 0826 6FF0C703 		mvn	r3, #199
 1691 082a 0193     		str	r3, [sp, #4]
 1692 082c 3423     		movs	r3, #52
 1693 082e 0093     		str	r3, [sp]
 1694 0830 8023     		movs	r3, #128
 1695 0832 0D22     		movs	r2, #13
 1696 0834 0021     		movs	r1, #0
 1697 0836 3046     		mov	r0, r6
 1698 0838 FFF7FEFF 		bl	draw_Wave
 1699              	.LVL170:
 769:Src/main.c    **** 
 1700              		.loc 1 769 0
 1701 083c 344B     		ldr	r3, .L107+40
 1702 083e 0593     		str	r3, [sp, #20]
 1703 0840 0123     		movs	r3, #1
 1704 0842 0493     		str	r3, [sp, #16]
 1705 0844 0223     		movs	r3, #2
 1706 0846 0393     		str	r3, [sp, #12]
 1707 0848 0323     		movs	r3, #3
 1708 084a 0293     		str	r3, [sp, #8]
 1709 084c 34F91530 		ldrsh	r3, [r4, r5, lsl #1]
 1710 0850 0193     		str	r3, [sp, #4]
 1711 0852 0D23     		movs	r3, #13
 1712 0854 0093     		str	r3, [sp]
 1713 0856 4023     		movs	r3, #64
 1714 0858 0022     		movs	r2, #0
 1715 085a 1146     		mov	r1, r2
 1716 085c 3046     		mov	r0, r6
 1717 085e FFF7FEFF 		bl	draw_Value
 1718              	.LVL171:
 1719              	.LBE9:
 1720 0862 95E6     		b	.L68
 1721              	.L83:
 1722              	.LBB10:
 763:Src/main.c    ****         }
 1723              		.loc 1 763 0
 1724 0864 8025     		movs	r5, #128
 1725              	.LVL172:
 1726 0866 D3E7     		b	.L75
 1727              	.LVL173:
 1728              	.L101:
 1729              	.LBE10:
 773:Src/main.c    ****         u8g2_SetFont(&u8g2, u8g2_font_7x14B_tf);
 1730              		.loc 1 773 0
 1731 0868 254C     		ldr	r4, .L107+24
 1732 086a 2046     		mov	r0, r4
 1733 086c FFF7FEFF 		bl	u8g2_ClearBuffer
 1734              	.LVL174:
 774:Src/main.c    ****         u8g2_DrawStr(&u8g2, 2, 15, "Mode Setting" );
 1735              		.loc 1 774 0
 1736 0870 2849     		ldr	r1, .L107+44
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 50


 1737 0872 2046     		mov	r0, r4
 1738 0874 FFF7FEFF 		bl	u8g2_SetFont
 1739              	.LVL175:
 775:Src/main.c    ****         if( cursor == 0 ){
 1740              		.loc 1 775 0
 1741 0878 274B     		ldr	r3, .L107+48
 1742 087a 0F22     		movs	r2, #15
 1743 087c 0221     		movs	r1, #2
 1744 087e 2046     		mov	r0, r4
 1745 0880 FFF7FEFF 		bl	u8g2_DrawStr
 1746              	.LVL176:
 776:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, ">" );
 1747              		.loc 1 776 0
 1748 0884 254B     		ldr	r3, .L107+52
 1749 0886 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1750 0888 03BB     		cbnz	r3, .L76
 777:Src/main.c    ****         }else{
 1751              		.loc 1 777 0
 1752 088a 254B     		ldr	r3, .L107+56
 1753 088c 1E22     		movs	r2, #30
 1754 088e 0221     		movs	r1, #2
 1755 0890 2046     		mov	r0, r4
 1756 0892 FFF7FEFF 		bl	u8g2_DrawStr
 1757              	.LVL177:
 1758              	.L77:
 781:Src/main.c    ****         if( cursor == 1 ){
 1759              		.loc 1 781 0
 1760 0896 234B     		ldr	r3, .L107+60
 1761 0898 1E22     		movs	r2, #30
 1762 089a 0A21     		movs	r1, #10
 1763 089c 1848     		ldr	r0, .L107+24
 1764 089e FFF7FEFF 		bl	u8g2_DrawStr
 1765              	.LVL178:
 782:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 1766              		.loc 1 782 0
 1767 08a2 1E4B     		ldr	r3, .L107+52
 1768 08a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1769 08a6 012B     		cmp	r3, #1
 1770 08a8 17D0     		beq	.L102
 785:Src/main.c    ****         }
 1771              		.loc 1 785 0
 1772 08aa 1F4B     		ldr	r3, .L107+64
 1773 08ac 2D22     		movs	r2, #45
 1774 08ae 0221     		movs	r1, #2
 1775 08b0 1348     		ldr	r0, .L107+24
 1776 08b2 FFF7FEFF 		bl	u8g2_DrawStr
 1777              	.LVL179:
 1778              	.L79:
 787:Src/main.c    ****         u8g2_SendBuffer(&u8g2);
 1779              		.loc 1 787 0
 1780 08b6 124C     		ldr	r4, .L107+24
 1781 08b8 1C4B     		ldr	r3, .L107+68
 1782 08ba 2D22     		movs	r2, #45
 1783 08bc 0A21     		movs	r1, #10
 1784 08be 2046     		mov	r0, r4
 1785 08c0 FFF7FEFF 		bl	u8g2_DrawStr
 1786              	.LVL180:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 51


 788:Src/main.c    ****       }
 1787              		.loc 1 788 0
 1788 08c4 2046     		mov	r0, r4
 1789 08c6 FFF7FEFF 		bl	u8g2_SendBuffer
 1790              	.LVL181:
 1791 08ca 61E6     		b	.L68
 1792              	.L76:
 779:Src/main.c    ****         }
 1793              		.loc 1 779 0
 1794 08cc 164B     		ldr	r3, .L107+64
 1795 08ce 1E22     		movs	r2, #30
 1796 08d0 0221     		movs	r1, #2
 1797 08d2 0B48     		ldr	r0, .L107+24
 1798 08d4 FFF7FEFF 		bl	u8g2_DrawStr
 1799              	.LVL182:
 1800 08d8 DDE7     		b	.L77
 1801              	.L102:
 783:Src/main.c    ****         }else{
 1802              		.loc 1 783 0
 1803 08da 114B     		ldr	r3, .L107+56
 1804 08dc 2D22     		movs	r2, #45
 1805 08de 0221     		movs	r1, #2
 1806 08e0 0748     		ldr	r0, .L107+24
 1807 08e2 FFF7FEFF 		bl	u8g2_DrawStr
 1808              	.LVL183:
 1809 08e6 E6E7     		b	.L79
 1810              	.L108:
 1811              		.align	2
 1812              	.L107:
 1813 08e8 ABAAAAAA 		.word	-1431655765
 1814 08ec 00000000 		.word	.LANCHOR3
 1815 08f0 00000000 		.word	.LANCHOR9
 1816 08f4 00000000 		.word	.LANCHOR10
 1817 08f8 00000000 		.word	.LANCHOR11
 1818 08fc 00000000 		.word	.LANCHOR8
 1819 0900 00000000 		.word	u8g2
 1820 0904 84000000 		.word	.LC15
 1821 0908 70000000 		.word	.LC11
 1822 090c 00000000 		.word	Gsens_Y
 1823 0910 78000000 		.word	.LC13
 1824 0914 00000000 		.word	u8g2_font_7x14B_tf
 1825 0918 88000000 		.word	.LC16
 1826 091c 00000000 		.word	.LANCHOR12
 1827 0920 98000000 		.word	.LC17
 1828 0924 A0000000 		.word	.LC19
 1829 0928 9C000000 		.word	.LC18
 1830 092c AC000000 		.word	.LC20
 1831              	.LBE2:
 1832              		.cfi_endproc
 1833              	.LFE130:
 1835              		.section	.text.assert_failed,"ax",%progbits
 1836              		.align	1
 1837              		.global	assert_failed
 1838              		.syntax unified
 1839              		.thumb
 1840              		.thumb_func
 1841              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 52


 1843              	assert_failed:
 1844              	.LFB133:
 872:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 873:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 874:Src/main.c    ****   while(1) 
 875:Src/main.c    ****   {
 876:Src/main.c    ****   }
 877:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */ 
 878:Src/main.c    **** }
 879:Src/main.c    **** 
 880:Src/main.c    **** #ifdef USE_FULL_ASSERT
 881:Src/main.c    **** 
 882:Src/main.c    **** /**
 883:Src/main.c    ****    * @brief Reports the name of the source file and the source line number
 884:Src/main.c    ****    * where the assert_param error has occurred.
 885:Src/main.c    ****    * @param file: pointer to the source file name
 886:Src/main.c    ****    * @param line: assert_param error line source number
 887:Src/main.c    ****    * @retval None
 888:Src/main.c    ****    */
 889:Src/main.c    **** void assert_failed(uint8_t* file, uint32_t line)
 890:Src/main.c    **** {
 1845              		.loc 1 890 0
 1846              		.cfi_startproc
 1847              		@ args = 0, pretend = 0, frame = 0
 1848              		@ frame_needed = 0, uses_anonymous_args = 0
 1849              		@ link register save eliminated.
 1850              	.LVL184:
 891:Src/main.c    ****   /* USER CODE BEGIN 6 */
 892:Src/main.c    ****   /* User can add his own implementation to report the file name and line number,
 893:Src/main.c    ****     ex: printf("Wrong parameters value: file %s on line %d¥r¥n", file, line) */
 894:Src/main.c    ****   /* USER CODE END 6 */
 895:Src/main.c    **** 
 896:Src/main.c    **** }
 1851              		.loc 1 896 0
 1852 0000 7047     		bx	lr
 1853              		.cfi_endproc
 1854              	.LFE133:
 1856              		.comm	Gsens_Z,2,2
 1857              		.comm	Gsens_Z0,1,1
 1858              		.comm	Gsens_Z1,1,1
 1859              		.comm	Gsens_Y,2,2
 1860              		.comm	Gsens_Y0,1,1
 1861              		.comm	Gsens_Y1,1,1
 1862              		.comm	Gsens_X,2,2
 1863              		.comm	Gsens_X0,1,1
 1864              		.comm	Gsens_X1,1,1
 1865              		.comm	Gsens_EN,1,1
 1866              		.global	FP_duty
 1867              		.global	FP_volt
 1868              		.global	O2_volt
 1869              		.global	meas_value
 1870              		.global	meas_sign
 1871              		.global	meas_frac
 1872              		.global	meas_digit
 1873              		.global	meas_unit
 1874              		.global	meas_name
 1875              		.global	idct_status
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 53


 1876              		.global	idct_name
 1877              		.global	cursor
 1878              		.comm	setting,1,1
 1879              		.comm	mode,1,1
 1880              		.global	MT
 1881              		.global	gear
 1882              		.global	speed
 1883              		.global	logo_bits
 1884              		.global	update_display
 1885              		.comm	u8g2,128,4
 1886              		.section	.bss.cursor,"aw",%nobits
 1887              		.set	.LANCHOR12,. + 0
 1890              	cursor:
 1891 0000 00       		.space	1
 1892              		.section	.bss.gear,"aw",%nobits
 1895              	gear:
 1896 0000 00       		.space	1
 1897              		.section	.bss.update_display,"aw",%nobits
 1900              	update_display:
 1901 0000 00       		.space	1
 1902              		.section	.data.FP_duty,"aw",%progbits
 1903              		.align	1
 1904              		.set	.LANCHOR5,. + 0
 1907              	FP_duty:
 1908 0000 6400     		.short	100
 1909              		.section	.data.FP_volt,"aw",%progbits
 1910              		.align	1
 1911              		.set	.LANCHOR7,. + 0
 1914              	FP_volt:
 1915 0000 4A01     		.short	330
 1916              		.section	.data.MT,"aw",%progbits
 1917              		.align	3
 1920              	MT:
 1921 0000 77BE9F1A 		.word	446676599
 1922 0004 2FDD0B40 		.word	1074519343
 1923 0008 1F85EB51 		.word	1374389535
 1924 000c B81E0040 		.word	1073749688
 1925 0010 A8C64B37 		.word	927712936
 1926 0014 8941F63F 		.word	1073103241
 1927 0018 00000000 		.word	0
 1928 001c 0000F03F 		.word	1072693248
 1929 0020 986E1283 		.word	2199023256
 1930 0024 C0CAE93F 		.word	1072286400
 1931              		.section	.data.O2_volt,"aw",%progbits
 1932              		.align	1
 1933              		.set	.LANCHOR6,. + 0
 1936              	O2_volt:
 1937 0000 4A01     		.short	330
 1938              		.section	.data.meas_value,"aw",%progbits
 1939              		.align	2
 1940              		.set	.LANCHOR8,. + 0
 1943              	meas_value:
 1944 0000 6900     		.short	105
 1945 0002 EB00     		.short	235
 1946 0004 8502     		.short	645
 1947 0006 5900     		.short	89
 1948 0008 4900     		.short	73
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 54


 1949 000a 8F00     		.short	143
 1950              		.section	.data.speed,"aw",%progbits
 1951              		.align	1
 1954              	speed:
 1955 0000 F000     		.short	240
 1956              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 1957              		.align	2
 1958              	.LC2:
 1959 0000 5372632F 		.ascii	"Src/main.c\000"
 1959      6D61696E 
 1959      2E6300
 1960              		.section	.rodata.draw_MeasLabels.str1.4,"aMS",%progbits,1
 1961              		.align	2
 1962              	.LC0:
 1963 0000 25202000 		.ascii	"%  \000"
 1964              	.LC1:
 1965 0004 44555459 		.ascii	"DUTY\000"
 1965      00
 1966              		.section	.rodata.idct_name,"a",%progbits
 1967              		.align	2
 1968              		.set	.LANCHOR0,. + 0
 1971              	idct_name:
 1972 0000 43414E00 		.ascii	"CAN\000"
 1973 0004 00       		.space	1
 1974 0005 4F324642 		.ascii	"O2FB\000"
 1974      00
 1975              		.section	.rodata.idct_status,"a",%progbits
 1976              		.align	2
 1977              		.set	.LANCHOR1,. + 0
 1980              	idct_status:
 1981 0000 01       		.byte	1
 1982 0001 01       		.byte	1
 1983              		.section	.rodata.logo_bits,"a",%progbits
 1984              		.align	2
 1985              		.set	.LANCHOR4,. + 0
 1988              	logo_bits:
 1989 0000 00       		.byte	0
 1990 0001 00       		.byte	0
 1991 0002 00       		.byte	0
 1992 0003 00       		.byte	0
 1993 0004 00       		.byte	0
 1994 0005 00       		.byte	0
 1995 0006 00       		.byte	0
 1996 0007 00       		.byte	0
 1997 0008 00       		.byte	0
 1998 0009 00       		.byte	0
 1999 000a 00       		.byte	0
 2000 000b 00       		.byte	0
 2001 000c 00       		.byte	0
 2002 000d 00       		.byte	0
 2003 000e 00       		.byte	0
 2004 000f 00       		.byte	0
 2005 0010 00       		.byte	0
 2006 0011 00       		.byte	0
 2007 0012 00       		.byte	0
 2008 0013 00       		.byte	0
 2009 0014 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 55


 2010 0015 00       		.byte	0
 2011 0016 00       		.byte	0
 2012 0017 00       		.byte	0
 2013 0018 00       		.byte	0
 2014 0019 00       		.byte	0
 2015 001a F0       		.byte	-16
 2016 001b 0F       		.byte	15
 2017 001c 00       		.byte	0
 2018 001d 00       		.byte	0
 2019 001e 00       		.byte	0
 2020 001f FC       		.byte	-4
 2021 0020 FF       		.byte	-1
 2022 0021 FF       		.byte	-1
 2023 0022 3F       		.byte	63
 2024 0023 00       		.byte	0
 2025 0024 80       		.byte	-128
 2026 0025 FF       		.byte	-1
 2027 0026 FF       		.byte	-1
 2028 0027 FF       		.byte	-1
 2029 0028 FF       		.byte	-1
 2030 0029 01       		.byte	1
 2031 002a E0       		.byte	-32
 2032 002b 1F       		.byte	31
 2033 002c 00       		.byte	0
 2034 002d 80       		.byte	-128
 2035 002e FF       		.byte	-1
 2036 002f 07       		.byte	7
 2037 0030 E0       		.byte	-32
 2038 0031 01       		.byte	1
 2039 0032 00       		.byte	0
 2040 0033 80       		.byte	-128
 2041 0034 81       		.byte	-127
 2042 0035 07       		.byte	7
 2043 0036 E0       		.byte	-32
 2044 0037 01       		.byte	1
 2045 0038 00       		.byte	0
 2046 0039 80       		.byte	-128
 2047 003a 81       		.byte	-127
 2048 003b 07       		.byte	7
 2049 003c C0       		.byte	-64
 2050 003d E1       		.byte	-31
 2051 003e 07       		.byte	7
 2052 003f C0       		.byte	-64
 2053 0040 80       		.byte	-128
 2054 0041 03       		.byte	3
 2055 0042 00       		.byte	0
 2056 0043 FC       		.byte	-4
 2057 0044 1F       		.byte	31
 2058 0045 E0       		.byte	-32
 2059 0046 80       		.byte	-128
 2060 0047 03       		.byte	3
 2061 0048 00       		.byte	0
 2062 0049 FE       		.byte	-2
 2063 004a 7F       		.byte	127
 2064 004b 70       		.byte	112
 2065 004c C0       		.byte	-64
 2066 004d 01       		.byte	1
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 56


 2067 004e 00       		.byte	0
 2068 004f 0F       		.byte	15
 2069 0050 FE       		.byte	-2
 2070 0051 39       		.byte	57
 2071 0052 E0       		.byte	-32
 2072 0053 00       		.byte	0
 2073 0054 00       		.byte	0
 2074 0055 07       		.byte	7
 2075 0056 F8       		.byte	-8
 2076 0057 1F       		.byte	31
 2077 0058 F0       		.byte	-16
 2078 0059 00       		.byte	0
 2079 005a 00       		.byte	0
 2080 005b 0E       		.byte	14
 2081 005c E0       		.byte	-32
 2082 005d 1F       		.byte	31
 2083 005e 78       		.byte	120
 2084 005f 00       		.byte	0
 2085 0060 00       		.byte	0
 2086 0061 0C       		.byte	12
 2087 0062 C0       		.byte	-64
 2088 0063 FF       		.byte	-1
 2089 0064 3F       		.byte	63
 2090 0065 00       		.byte	0
 2091 0066 00       		.byte	0
 2092 0067 18       		.byte	24
 2093 0068 00       		.byte	0
 2094 0069 FF       		.byte	-1
 2095 006a 1F       		.byte	31
 2096 006b 00       		.byte	0
 2097 006c 00       		.byte	0
 2098 006d 38       		.byte	56
 2099 006e C0       		.byte	-64
 2100 006f FF       		.byte	-1
 2101 0070 0F       		.byte	15
 2102 0071 00       		.byte	0
 2103 0072 00       		.byte	0
 2104 0073 70       		.byte	112
 2105 0074 E0       		.byte	-32
 2106 0075 F1       		.byte	-15
 2107 0076 03       		.byte	3
 2108 0077 00       		.byte	0
 2109 0078 00       		.byte	0
 2110 0079 E0       		.byte	-32
 2111 007a 78       		.byte	120
 2112 007b 00       		.byte	0
 2113 007c 00       		.byte	0
 2114 007d 00       		.byte	0
 2115 007e 00       		.byte	0
 2116 007f C0       		.byte	-64
 2117 0080 3F       		.byte	63
 2118 0081 E0       		.byte	-32
 2119 0082 01       		.byte	1
 2120 0083 00       		.byte	0
 2121 0084 00       		.byte	0
 2122 0085 80       		.byte	-128
 2123 0086 1F       		.byte	31
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 57


 2124 0087 F0       		.byte	-16
 2125 0088 01       		.byte	1
 2126 0089 00       		.byte	0
 2127 008a 00       		.byte	0
 2128 008b 00       		.byte	0
 2129 008c 07       		.byte	7
 2130 008d F8       		.byte	-8
 2131 008e 00       		.byte	0
 2132 008f 00       		.byte	0
 2133 0090 00       		.byte	0
 2134 0091 00       		.byte	0
 2135 0092 1E       		.byte	30
 2136 0093 7C       		.byte	124
 2137 0094 00       		.byte	0
 2138 0095 00       		.byte	0
 2139 0096 00       		.byte	0
 2140 0097 00       		.byte	0
 2141 0098 F8       		.byte	-8
 2142 0099 1F       		.byte	31
 2143 009a 00       		.byte	0
 2144 009b 00       		.byte	0
 2145 009c 00       		.byte	0
 2146 009d 00       		.byte	0
 2147 009e F0       		.byte	-16
 2148 009f 0F       		.byte	15
 2149 00a0 00       		.byte	0
 2150 00a1 00       		.byte	0
 2151 00a2 00       		.byte	0
 2152 00a3 00       		.byte	0
 2153 00a4 80       		.byte	-128
 2154 00a5 01       		.byte	1
 2155 00a6 00       		.byte	0
 2156 00a7 00       		.byte	0
 2157 00a8 00       		.byte	0
 2158 00a9 00       		.byte	0
 2159 00aa 00       		.byte	0
 2160 00ab 00       		.byte	0
 2161 00ac 00       		.byte	0
 2162 00ad 00       		.byte	0
 2163 00ae 00       		.byte	0
 2164 00af 00       		.byte	0
 2165 00b0 00       		.byte	0
 2166 00b1 00       		.byte	0
 2167 00b2 00       		.byte	0
 2168 00b3 00       		.byte	0
 2169 00b4 00       		.byte	0
 2170 00b5 00       		.byte	0
 2171 00b6 00       		.byte	0
 2172 00b7 00       		.byte	0
 2173 00b8 00       		.byte	0
 2174 00b9 00       		.byte	0
 2175 00ba 00       		.byte	0
 2176 00bb 00       		.byte	0
 2177 00bc 00       		.byte	0
 2178 00bd 00       		.byte	0
 2179 00be 00       		.byte	0
 2180 00bf 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 58


 2181 00c0 00       		.byte	0
 2182 00c1 00       		.byte	0
 2183 00c2 00       		.byte	0
 2184 00c3 00       		.byte	0
 2185 00c4 00       		.byte	0
 2186 00c5 00       		.byte	0
 2187 00c6 00       		.byte	0
 2188 00c7 4C       		.byte	76
 2189 00c8 1C       		.byte	28
 2190 00c9 00       		.byte	0
 2191 00ca 00       		.byte	0
 2192 00cb 00       		.byte	0
 2193 00cc 00       		.byte	0
 2194 00cd 32       		.byte	50
 2195 00ce 0E       		.byte	14
 2196 00cf 00       		.byte	0
 2197 00d0 00       		.byte	0
 2198 00d1 00       		.byte	0
 2199 00d2 00       		.byte	0
 2200 00d3 00       		.byte	0
 2201 00d4 C6       		.byte	-58
 2202 00d5 00       		.byte	0
 2203 00d6 18       		.byte	24
 2204 00d7 00       		.byte	0
 2205 00d8 00       		.byte	0
 2206 00d9 7C       		.byte	124
 2207 00da EF       		.byte	-17
 2208 00db FC       		.byte	-4
 2209 00dc 39       		.byte	57
 2210 00dd 00       		.byte	0
 2211 00de 00       		.byte	0
 2212 00df 4E       		.byte	78
 2213 00e0 C6       		.byte	-58
 2214 00e1 B8       		.byte	-72
 2215 00e2 31       		.byte	49
 2216 00e3 00       		.byte	0
 2217 00e4 00       		.byte	0
 2218 00e5 3E       		.byte	62
 2219 00e6 C6       		.byte	-58
 2220 00e7 98       		.byte	-104
 2221 00e8 31       		.byte	49
 2222 00e9 00       		.byte	0
 2223 00ea 00       		.byte	0
 2224 00eb 3C       		.byte	60
 2225 00ec C6       		.byte	-58
 2226 00ed 98       		.byte	-104
 2227 00ee 31       		.byte	49
 2228 00ef 00       		.byte	0
 2229 00f0 00       		.byte	0
 2230 00f1 0E       		.byte	14
 2231 00f2 C6       		.byte	-58
 2232 00f3 98       		.byte	-104
 2233 00f4 31       		.byte	49
 2234 00f5 00       		.byte	0
 2235 00f6 00       		.byte	0
 2236 00f7 4E       		.byte	78
 2237 00f8 CE       		.byte	-50
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 59


 2238 00f9 99       		.byte	-103
 2239 00fa 31       		.byte	49
 2240 00fb 00       		.byte	0
 2241 00fc 00       		.byte	0
 2242 00fd 7C       		.byte	124
 2243 00fe EF       		.byte	-17
 2244 00ff FD       		.byte	-3
 2245 0100 7B       		.byte	123
 2246 0101 00       		.byte	0
 2247 0102 00       		.byte	0
 2248 0103 00       		.byte	0
 2249 0104 00       		.byte	0
 2250 0105 00       		.byte	0
 2251 0106 00       		.byte	0
 2252 0107 00       		.byte	0
 2253 0108 00       		.byte	0
 2254 0109 00       		.byte	0
 2255 010a 00       		.byte	0
 2256 010b 00       		.byte	0
 2257 010c 00       		.byte	0
 2258 010d 00       		.byte	0
 2259 010e 00       		.byte	0
 2260 010f 00       		.byte	0
 2261 0110 00       		.byte	0
 2262 0111 00       		.byte	0
 2263 0112 00       		.byte	0
 2264 0113 00       		.byte	0
 2265 0114 00       		.byte	0
 2266 0115 00       		.byte	0
 2267 0116 00       		.byte	0
 2268 0117 00       		.byte	0
 2269 0118 00       		.byte	0
 2270 0119 00       		.byte	0
 2271 011a 00       		.byte	0
 2272 011b 00       		.byte	0
 2273 011c 00       		.byte	0
 2274 011d 00       		.byte	0
 2275 011e 00       		.byte	0
 2276 011f 00       		.byte	0
 2277              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2278              		.align	2
 2279              	.LC3:
 2280 0000 4D756C74 		.ascii	"Multi Function Meter\000"
 2280      69204675 
 2280      6E637469 
 2280      6F6E204D 
 2280      65746572 
 2281 0015 000000   		.space	3
 2282              	.LC4:
 2283 0018 5265762E 		.ascii	"Rev. 0.1a\000"
 2283      20302E31 
 2283      6100
 2284 0022 0000     		.space	2
 2285              	.LC5:
 2286 0024 48656C6C 		.ascii	"Hello. This is MFM.\012\000"
 2286      6F2E2054 
 2286      68697320 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 60


 2286      6973204D 
 2286      464D2E0A 
 2287 0039 000000   		.space	3
 2288              	.LC6:
 2289 003c 4144584C 		.ascii	"ADXL324 DEVID %d\012\000"
 2289      33323420 
 2289      44455649 
 2289      44202564 
 2289      0A00
 2290 004e 0000     		.space	2
 2291              	.LC7:
 2292 0050 2825642C 		.ascii	"(%d,%d,%d)\012\000"
 2292      25642C25 
 2292      64290A00 
 2293              	.LC8:
 2294 005c 55502000 		.ascii	"UP \000"
 2295              	.LC9:
 2296 0060 444F574E 		.ascii	"DOWN \000"
 2296      2000
 2297 0066 0000     		.space	2
 2298              	.LC10:
 2299 0068 454E5445 		.ascii	"ENTER \000"
 2299      522000
 2300 006f 00       		.space	1
 2301              	.LC11:
 2302 0070 6B506100 		.ascii	"kPa\000"
 2303              	.LC12:
 2304 0074 4D415000 		.ascii	"MAP\000"
 2305              	.LC13:
 2306 0078 4700     		.ascii	"G\000"
 2307 007a 0000     		.space	2
 2308              	.LC14:
 2309 007c 4C617447 		.ascii	"LatG\000"
 2309      00
 2310 0081 000000   		.space	3
 2311              	.LC15:
 2312 0084 00       		.ascii	"\000"
 2313 0085 000000   		.space	3
 2314              	.LC16:
 2315 0088 4D6F6465 		.ascii	"Mode Setting\000"
 2315      20536574 
 2315      74696E67 
 2315      00
 2316 0095 000000   		.space	3
 2317              	.LC17:
 2318 0098 3E00     		.ascii	">\000"
 2319 009a 0000     		.space	2
 2320              	.LC18:
 2321 009c 2000     		.ascii	" \000"
 2322 009e 0000     		.space	2
 2323              	.LC19:
 2324 00a0 4D756C74 		.ascii	"Multi-Meter\000"
 2324      692D4D65 
 2324      74657200 
 2325              	.LC20:
 2326 00ac 53636F70 		.ascii	"Scope\000"
 2326      6500
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 61


 2327              		.section	.rodata.meas_digit,"a",%progbits
 2328              		.align	2
 2329              		.set	.LANCHOR11,. + 0
 2332              	meas_digit:
 2333 0000 03       		.byte	3
 2334 0001 03       		.byte	3
 2335 0002 03       		.byte	3
 2336 0003 03       		.byte	3
 2337 0004 03       		.byte	3
 2338 0005 03       		.byte	3
 2339              		.section	.rodata.meas_frac,"a",%progbits
 2340              		.align	2
 2341              		.set	.LANCHOR10,. + 0
 2344              	meas_frac:
 2345 0000 02       		.byte	2
 2346 0001 01       		.byte	1
 2347 0002 01       		.byte	1
 2348 0003 00       		.byte	0
 2349 0004 00       		.byte	0
 2350 0005 02       		.byte	2
 2351              		.section	.rodata.meas_name,"a",%progbits
 2352              		.align	2
 2353              		.set	.LANCHOR2,. + 0
 2356              	meas_name:
 2357 0000 4D415000 		.ascii	"MAP\000"
 2358 0004 000000   		.space	3
 2359 0007 4F494C50 		.ascii	"OILP\000"
 2359      00
 2360 000c 0000     		.space	2
 2361 000e 46505600 		.ascii	"FPV\000"
 2362 0012 000000   		.space	3
 2363 0015 45435400 		.ascii	"ECT\000"
 2364 0019 000000   		.space	3
 2365 001c 4F494C54 		.ascii	"OILT\000"
 2365      00
 2366 0021 0000     		.space	2
 2367 0023 4F3200   		.ascii	"O2\000"
 2368 0026 00000000 		.space	4
 2369              		.section	.rodata.meas_sign,"a",%progbits
 2370              		.align	2
 2371              		.set	.LANCHOR9,. + 0
 2374              	meas_sign:
 2375 0000 01       		.byte	1
 2376 0001 00       		.byte	0
 2377 0002 00       		.byte	0
 2378 0003 00       		.byte	0
 2379 0004 00       		.byte	0
 2380 0005 00       		.byte	0
 2381              		.section	.rodata.meas_unit,"a",%progbits
 2382              		.align	2
 2383              		.set	.LANCHOR3,. + 0
 2386              	meas_unit:
 2387 0000 6B706100 		.ascii	"kpa\000"
 2388 0004 00       		.space	1
 2389 0005 6B706100 		.ascii	"kpa\000"
 2390 0009 00       		.space	1
 2391 000a 56202000 		.ascii	"V  \000"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 62


 2392 000e 00       		.space	1
 2393 000f B0       		.byte	-80
 2394 0010 43       		.byte	67
 2395 0011 00       		.byte	0
 2396 0012 0000     		.space	2
 2397 0014 B0       		.byte	-80
 2398 0015 43       		.byte	67
 2399 0016 00       		.byte	0
 2400 0017 0000     		.space	2
 2401 0019 5600     		.ascii	"V\000"
 2402 001b 000000   		.space	3
 2403              		.text
 2404              	.Letext0:
 2405              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 2406              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 2407              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2408              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 2409              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 2410              		.file 7 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 2411              		.file 8 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 2412              		.file 9 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 2413              		.file 10 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 2414              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2415              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 2416              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 2417              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 2418              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 2419              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 2420              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 2421              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2c.h"
 2422              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi.h"
 2423              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 2424              		.file 21 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 2425              		.file 22 "Inc/adc.h"
 2426              		.file 23 "Inc/can.h"
 2427              		.file 24 "Inc/i2c.h"
 2428              		.file 25 "Inc/spi.h"
 2429              		.file 26 "Inc/tim.h"
 2430              		.file 27 "Inc/usart.h"
 2431              		.file 28 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/math.h"
 2432              		.file 29 "/Users/imashio/Electronics/ARM/_Library/u8x8.h"
 2433              		.file 30 "/Users/imashio/Electronics/ARM/_Library/u8g2.h"
 2434              		.file 31 "/Users/imashio/Electronics/ARM/_Library/flag.h"
 2435              		.file 32 "Inc/defi_decoder.h"
 2436              		.file 33 "Src/pulse_counter.h"
 2437              		.file 34 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 2438              		.file 35 "/Users/imashio/Electronics/ARM/_Library/draw_Value.h"
 2439              		.file 36 "/Users/imashio/Electronics/ARM/_Library/draw_IndicatorBox.h"
 2440              		.file 37 "/Users/imashio/Electronics/ARM/_Library/usart_transmit_printf.h"
 2441              		.file 38 "/Users/imashio/Electronics/ARM/_Library/draw_BarGraph.h"
 2442              		.file 39 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 2443              		.file 40 "Inc/gpio.h"
 2444              		.file 41 "Inc/dma.h"
 2445              		.file 42 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 2446              		.file 43 "<built-in>"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 63


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:18     .text.ADXL345_RegWrite:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:25     .text.ADXL345_RegWrite:0000000000000000 ADXL345_RegWrite
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:65     .text.ADXL345_RegWrite:0000000000000024 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:70     .text.ADXL345_RegRead_1byte:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:77     .text.ADXL345_RegRead_1byte:0000000000000000 ADXL345_RegRead_1byte
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:126    .text.ADXL345_RegRead_1byte:0000000000000034 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:131    .text.draw_indicators:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:138    .text.draw_indicators:0000000000000000 draw_indicators
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:196    .text.draw_indicators:0000000000000040 $d
                            *COM*:0000000000000080 u8g2
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:203    .text.draw_MeasLabels:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:210    .text.draw_MeasLabels:0000000000000000 draw_MeasLabels
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:353    .text.draw_MeasLabels:00000000000000d4 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:363    .text._Error_Handler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:370    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:385    .text.SystemClock_Config:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:392    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:517    .text.SystemClock_Config:00000000000000ac $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:527    .text.main:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:534    .text.main:0000000000000000 main
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:967    .text.main:000000000000029c $d
                            *COM*:0000000000000001 Gsens_EN
                            *COM*:0000000000000001 Gsens_X1
                            *COM*:0000000000000001 Gsens_Y1
                            *COM*:0000000000000001 Gsens_Z1
                            *COM*:0000000000000002 Gsens_X
                            *COM*:0000000000000002 Gsens_Y
                            *COM*:0000000000000002 Gsens_Z
                            *COM*:0000000000000001 mode
                            *COM*:0000000000000001 setting
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1007   .text.main:0000000000000334 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1391   .text.main:00000000000005e8 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1425   .text.main:0000000000000664 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1813   .text.main:00000000000008e8 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1836   .text.assert_failed:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1843   .text.assert_failed:0000000000000000 assert_failed
                            *COM*:0000000000000001 Gsens_Z0
                            *COM*:0000000000000001 Gsens_Y0
                            *COM*:0000000000000001 Gsens_X0
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1907   .data.FP_duty:0000000000000000 FP_duty
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1914   .data.FP_volt:0000000000000000 FP_volt
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1936   .data.O2_volt:0000000000000000 O2_volt
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1943   .data.meas_value:0000000000000000 meas_value
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:2374   .rodata.meas_sign:0000000000000000 meas_sign
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:2344   .rodata.meas_frac:0000000000000000 meas_frac
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:2332   .rodata.meas_digit:0000000000000000 meas_digit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:2386   .rodata.meas_unit:0000000000000000 meas_unit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:2356   .rodata.meas_name:0000000000000000 meas_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1980   .rodata.idct_status:0000000000000000 idct_status
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1971   .rodata.idct_name:0000000000000000 idct_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1890   .bss.cursor:0000000000000000 cursor
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1920   .data.MT:0000000000000000 MT
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1895   .bss.gear:0000000000000000 gear
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1954   .data.speed:0000000000000000 speed
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1988   .rodata.logo_bits:0000000000000000 logo_bits
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 64


/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1900   .bss.update_display:0000000000000000 update_display
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1891   .bss.cursor:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1896   .bss.gear:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1901   .bss.update_display:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1903   .data.FP_duty:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1910   .data.FP_volt:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1917   .data.MT:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1932   .data.O2_volt:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1939   .data.meas_value:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1951   .data.speed:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1957   .rodata.SystemClock_Config.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1961   .rodata.draw_MeasLabels.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1967   .rodata.idct_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1976   .rodata.idct_status:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:1984   .rodata.logo_bits:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:2278   .rodata.main.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:2328   .rodata.meas_digit:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:2340   .rodata.meas_frac:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:2352   .rodata.meas_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:2370   .rodata.meas_sign:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s:2382   .rodata.meas_unit:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_I2C_Master_Transmit
hi2c1
HAL_I2C_Master_Receive
draw_IndicatorBox
draw_MeasLabelUnit
draw_Value
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_d2iz
HAL_Init
memset
MX_GPIO_Init
MX_DMA_Init
MX_USART2_UART_Init
MX_TIM1_Init
MX_USART1_UART_Init
MX_SPI1_Init
MX_ADC1_Init
MX_TIM2_Init
MX_CAN_Init
MX_TIM6_Init
MX_I2C1_Init
MX_TIM3_Init
HAL_TIM_PWM_Start
HAL_TIM_Base_Start_IT
HAL_UART_Receive_IT
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccUc7THb.s 			page 65


HAL_ADC_Start_DMA
u8g2_Setup_ssd1309_128x64_noname2_f
HAL_GPIO_WritePin
HAL_Delay
u8x8_InitDisplay
u8x8_SetPowerSave
u8x8_SetContrast
u8g2_ClearDisplay
u8g2_DrawXBMP
u8g2_SetFont
u8g2_DrawStr
u8g2_SendBuffer
u8g2_ClearBuffer
HAL_UART_Transmit_printf
HAL_NVIC_DisableIRQ
htim1
htim2
htim3
htim6
UART1_Data
huart1
hadc1
u8x8_gpio_and_delay_STM32F303
u8x8_byte_4wire_hw_spi
u8g2_cb_r0
u8g2_font_5x7_tf
huart2
DEFI_value
flag_meas
defi_decoder
draw_CircularMeter_Init
draw_CircularMeter
draw_Wave_axis
draw_BarGraph
flag_sw
flag_disp
UART1_RxData
rpm
draw_MeasUnit
draw_Wave
u8g2_font_7x14B_tf
