ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	_Error_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Error_Handler:
  26              	.LFB128:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 2


  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  39:Src/main.c    **** #include "main.h"
  40:Src/main.c    **** #include "stm32f3xx_hal.h"
  41:Src/main.c    **** #include "adc.h"
  42:Src/main.c    **** #include "dma.h"
  43:Src/main.c    **** #include "spi.h"
  44:Src/main.c    **** #include "tim.h"
  45:Src/main.c    **** #include "usart.h"
  46:Src/main.c    **** #include "gpio.h"
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN Includes */
  49:Src/main.c    **** #include <stdio.h>
  50:Src/main.c    **** #include <math.h>
  51:Src/main.c    **** 
  52:Src/main.c    **** #include "basic.h"		// original library
  53:Src/main.c    **** #include "u8g2.h"		// graphic display library
  54:Src/main.c    **** #include "u8x8_gpio_STM32F303.h"
  55:Src/main.c    **** #include "u8x8_byte_4wire_hw_spi.h"
  56:Src/main.c    **** 
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END Includes */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN PV */
  63:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  64:Src/main.c    **** u8g2_t u8g2; // a structure which will contain all the data for one display
  65:Src/main.c    **** 
  66:Src/main.c    **** // RPM bar graph parameter definition
  67:Src/main.c    **** #define	rpmbar_x		0
  68:Src/main.c    **** #define	rpmbar_y		0
  69:Src/main.c    **** #define	rpmbar_width	128
  70:Src/main.c    **** #define	rpmbar_height	14
  71:Src/main.c    **** #define	rpm_min			0
  72:Src/main.c    **** #define	rpm_max			9000
  73:Src/main.c    **** 
  74:Src/main.c    **** // measurements display parameter definition
  75:Src/main.c    **** #define	N_meas			6
  76:Src/main.c    **** #define	meas_x			0
  77:Src/main.c    **** #define	meas_y			16
  78:Src/main.c    **** #define	meas_x_offset	2
  79:Src/main.c    **** #define	meas_width1		70
  80:Src/main.c    **** #define	meas_width2		56
  81:Src/main.c    **** #define	meas_height		12
  82:Src/main.c    **** 
  83:Src/main.c    **** // indicators parameter definition
  84:Src/main.c    **** #define	N_idct			2
  85:Src/main.c    **** #define	idct_x			72
  86:Src/main.c    **** #define	idct_y			53
  87:Src/main.c    **** #define	idct_width		27
  88:Src/main.c    **** #define	idct_height		9
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    **** //  Fuel Pump Voltage dosplay parameter definition
  91:Src/main.c    **** #define	FP_x			0
  92:Src/main.c    **** #define	FP_y			52
  93:Src/main.c    **** #define	FP_height		12
  94:Src/main.c    **** #define	FP_volt_width	45
  95:Src/main.c    **** #define	FP_duty_width	70
  96:Src/main.c    **** 
  97:Src/main.c    **** // logo parameter definition
  98:Src/main.c    **** #define logo_width 48
  99:Src/main.c    **** #define logo_height 48
 100:Src/main.c    **** 
 101:Src/main.c    **** const unsigned char logo_bits[] = {
 102:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 103:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 104:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0x3F, 0x00,
 105:Src/main.c    ****   0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x1F, 0x00, 0x80, 0xFF, 0x07,
 106:Src/main.c    ****   0xE0, 0x01, 0x00, 0x80, 0x81, 0x07, 0xE0, 0x01, 0x00, 0x80, 0x81, 0x07,
 107:Src/main.c    ****   0xC0, 0xE1, 0x07, 0xC0, 0x80, 0x03, 0x00, 0xFC, 0x1F, 0xE0, 0x80, 0x03,
 108:Src/main.c    ****   0x00, 0xFE, 0x7F, 0x70, 0xC0, 0x01, 0x00, 0x0F, 0xFE, 0x39, 0xE0, 0x00,
 109:Src/main.c    ****   0x00, 0x07, 0xF8, 0x1F, 0xF0, 0x00, 0x00, 0x0E, 0xE0, 0x1F, 0x78, 0x00,
 110:Src/main.c    ****   0x00, 0x0C, 0xC0, 0xFF, 0x3F, 0x00, 0x00, 0x18, 0x00, 0xFF, 0x1F, 0x00,
 111:Src/main.c    ****   0x00, 0x38, 0xC0, 0xFF, 0x0F, 0x00, 0x00, 0x70, 0xE0, 0xF1, 0x03, 0x00,
 112:Src/main.c    ****   0x00, 0xE0, 0x78, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3F, 0xE0, 0x01, 0x00,
 113:Src/main.c    ****   0x00, 0x80, 0x1F, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00,
 114:Src/main.c    ****   0x00, 0x00, 0x1E, 0x7C, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00,
 115:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00,
 116:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 117:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 118:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4C, 0x1C, 0x00, 0x00, 0x00,
 119:Src/main.c    ****   0x00, 0x32, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x00, 0x18, 0x00,
 120:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFC, 0x39, 0x00, 0x00, 0x4E, 0xC6, 0xB8, 0x31, 0x00,
 121:Src/main.c    ****   0x00, 0x3E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x3C, 0xC6, 0x98, 0x31, 0x00,
 122:Src/main.c    ****   0x00, 0x0E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x4E, 0xCE, 0x99, 0x31, 0x00,
 123:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFD, 0x7B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 124:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 125:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 126:Src/main.c    ****   };
 127:Src/main.c    **** 
 128:Src/main.c    **** /*
 129:Src/main.c    **** #define logo_width 54
 130:Src/main.c    **** #define logo_height 48
 131:Src/main.c    **** 
 132:Src/main.c    **** static unsigned char logo_bits[] = {
 133:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0x0F,
 134:Src/main.c    ****   0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0xE0, 0xFF, 0xFF,
 135:Src/main.c    ****   0xFF, 0xFF, 0xFF, 0x01, 0xF8, 0x3F, 0x00, 0x00, 0xF0, 0xFF, 0x07, 0xF8,
 136:Src/main.c    ****   0x01, 0x00, 0x00, 0x70, 0xE0, 0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x80,
 137:Src/main.c    ****   0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00,
 138:Src/main.c    ****   0x38, 0x80, 0x07, 0x00, 0xF8, 0x3F, 0x00, 0x38, 0x80, 0x07, 0x00, 0xFE,
 139:Src/main.c    ****   0xFF, 0x00, 0x1C, 0xC0, 0x03, 0x80, 0xFF, 0xFF, 0x01, 0x0E, 0xC0, 0x01,
 140:Src/main.c    ****   0xC0, 0x07, 0xFC, 0x07, 0x07, 0xE0, 0x01, 0x80, 0x03, 0xF0, 0x9F, 0x03,
 141:Src/main.c    ****   0xF0, 0x00, 0x80, 0x03, 0xC0, 0xFF, 0x03, 0x78, 0x00, 0x00, 0x07, 0x80,
 142:Src/main.c    ****   0xFF, 0x01, 0x3C, 0x00, 0x00, 0x06, 0x00, 0xFE, 0x87, 0x3F, 0x00, 0x00,
 143:Src/main.c    ****   0x0E, 0x00, 0xF8, 0xFF, 0x1F, 0x00, 0x00, 0x1C, 0x00, 0xF8, 0xFF, 0x07,
 144:Src/main.c    ****   0x00, 0x00, 0x38, 0x00, 0xDE, 0xFF, 0x03, 0x00, 0x00, 0x70, 0x00, 0x0F,
 145:Src/main.c    ****   0x7E, 0x00, 0x00, 0x00, 0xE0, 0xC0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xC0,
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 4


 146:Src/main.c    ****   0xF1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x00, 0x7C, 0x00, 0x00,
 147:Src/main.c    ****   0x00, 0x00, 0x3F, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x1F,
 148:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x3C, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x78,
 149:Src/main.c    ****   0xE0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0x03, 0x00, 0x00, 0x00,
 150:Src/main.c    ****   0x00, 0xC0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00,
 151:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00,
 152:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x4E, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39,
 153:Src/main.c    ****   0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00,
 154:Src/main.c    ****   0x00, 0x7E, 0x3E, 0xC7, 0x3D, 0x1C, 0x00, 0x00, 0x6F, 0x3E, 0xC7, 0x7F,
 155:Src/main.c    ****   0x1C, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x73, 0x18, 0x00, 0x00, 0x07, 0x1C,
 156:Src/main.c    ****   0x86, 0x71, 0x18, 0x00, 0x00, 0x3E, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00,
 157:Src/main.c    ****   0x1F, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x71, 0x18,
 158:Src/main.c    ****   0x00, 0x00, 0x47, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x7F, 0x3E, 0xCF,
 159:Src/main.c    ****   0xFB, 0x3C, 0x00, 0x00, 0x3C, 0x3E, 0xCF, 0xFB, 0x3C, 0x00, 0x00, 0x00,
 160:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 161:Src/main.c    ****   };
 162:Src/main.c    **** */
 163:Src/main.c    **** 
 164:Src/main.c    **** uint16_t	rpm = 0;
 165:Src/main.c    **** uint16_t	speed = 240;
 166:Src/main.c    **** uint8_t		gear = 0;
 167:Src/main.c    **** double		MT[5] = {3.483, 2.015, 1.391, 1.000, 0.806};
 168:Src/main.c    **** 
 169:Src/main.c    **** /*
 170:Src/main.c    **** typedef struct {
 171:Src/main.c    **** 	unsigned char	name;
 172:Src/main.c    **** 	uint8_t			status;
 173:Src/main.c    **** } idct;
 174:Src/main.c    **** */
 175:Src/main.c    **** 
 176:Src/main.c    **** // variables for indicators
 177:Src/main.c    **** const unsigned char idct_name[N_idct][5] = { // length must be (text length + 1)
 178:Src/main.c    **** 		"CAN"	,
 179:Src/main.c    **** 		"O2FB"
 180:Src/main.c    **** };
 181:Src/main.c    **** 
 182:Src/main.c    **** const uint8_t	idct_status[N_idct] = {
 183:Src/main.c    **** 		1	,
 184:Src/main.c    **** 		0
 185:Src/main.c    **** };
 186:Src/main.c    **** 
 187:Src/main.c    **** 
 188:Src/main.c    **** // variables for measurement
 189:Src/main.c    **** const unsigned char meas_name[N_meas][7] = { // length must be (text length + 1)
 190:Src/main.c    **** 		"MAP"	,
 191:Src/main.c    **** 		"OILP"	,
 192:Src/main.c    **** 		"FPVOLT"	,
 193:Src/main.c    **** 		"ECT"	,
 194:Src/main.c    **** 		"OILT"	,
 195:Src/main.c    **** 		"O2"
 196:Src/main.c    **** };
 197:Src/main.c    **** 
 198:Src/main.c    **** const unsigned char meas_unit[N_meas][5] = {
 199:Src/main.c    **** 		"kpa"			,	// MAP
 200:Src/main.c    **** 		"kpa"			,	// OILP
 201:Src/main.c    **** 		"V  "     ,	// FuelPump Voltage
 202:Src/main.c    **** 		{176, 67, 0}	,	// ECT  degC...{176, 67, 0}
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 5


 203:Src/main.c    **** 		{176, 67, 0}	,	// OILT  degC...{176, 67, 0}
 204:Src/main.c    **** 		"V"					// O2
 205:Src/main.c    **** };
 206:Src/main.c    **** 
 207:Src/main.c    **** const uint8_t	meas_digit[N_meas] = {
 208:Src/main.c    **** 		3	,	// MAP
 209:Src/main.c    **** 		3	,	// OILP
 210:Src/main.c    **** 		3	,	// FuelPump Voltage
 211:Src/main.c    **** 		3	,	// ECT
 212:Src/main.c    **** 		3	,	// OILT
 213:Src/main.c    **** 		3		// O2
 214:Src/main.c    **** };
 215:Src/main.c    **** 
 216:Src/main.c    **** const uint8_t	meas_frac[N_meas] = {
 217:Src/main.c    **** 		2	,	// MAP
 218:Src/main.c    **** 		2	,	// OILP
 219:Src/main.c    **** 		1	,	// FuelPump Voltage
 220:Src/main.c    **** 		0	,	// ECT
 221:Src/main.c    **** 		0	,	// OILT
 222:Src/main.c    **** 		2		// O2
 223:Src/main.c    **** };
 224:Src/main.c    **** 
 225:Src/main.c    **** const uint8_t	meas_sign[N_meas] = {
 226:Src/main.c    **** 		1	,	// MAP
 227:Src/main.c    **** 		0	,	// OILP
 228:Src/main.c    **** 		0	,	// FuelPump Voltage
 229:Src/main.c    **** 		0	,	// ECT
 230:Src/main.c    **** 		0	,	// OILT
 231:Src/main.c    **** 		0		// O2
 232:Src/main.c    **** };
 233:Src/main.c    **** 
 234:Src/main.c    **** int16_t	meas_value[N_meas] = {
 235:Src/main.c    **** 		645	,	// FuelPump Voltage
 236:Src/main.c    **** 		105	,	// MAP
 237:Src/main.c    **** 		235	,	// OILP
 238:Src/main.c    **** 		89	,	// ECT
 239:Src/main.c    **** 		73	,	// OILT
 240:Src/main.c    **** 		143		// O2
 241:Src/main.c    **** };
 242:Src/main.c    **** 
 243:Src/main.c    **** // Fuel Pump Voltage
 244:Src/main.c    **** int16_t FP_volt = 330;
 245:Src/main.c    **** 
 246:Src/main.c    **** /* USER CODE END PV */
 247:Src/main.c    **** 
 248:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 249:Src/main.c    **** void SystemClock_Config(void);
 250:Src/main.c    **** 
 251:Src/main.c    **** /* USER CODE BEGIN PFP */
 252:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 253:Src/main.c    **** 
 254:Src/main.c    **** /* USER CODE END PFP */
 255:Src/main.c    **** 
 256:Src/main.c    **** /* USER CODE BEGIN 0 */
 257:Src/main.c    **** 
 258:Src/main.c    **** /* USER CODE END 0 */
 259:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 6


 260:Src/main.c    **** int main(void)
 261:Src/main.c    **** {
 262:Src/main.c    **** 
 263:Src/main.c    ****   /* USER CODE BEGIN 1 */
 264:Src/main.c    **** 
 265:Src/main.c    ****   /* USER CODE END 1 */
 266:Src/main.c    **** 
 267:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 268:Src/main.c    **** 
 269:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 270:Src/main.c    ****   HAL_Init();
 271:Src/main.c    **** 
 272:Src/main.c    ****   /* USER CODE BEGIN Init */
 273:Src/main.c    ****   uint8_t n;
 274:Src/main.c    ****   uint8_t x, y;
 275:Src/main.c    **** 
 276:Src/main.c    ****   uint16_t a = 0;
 277:Src/main.c    ****   uint16_t b = 0;
 278:Src/main.c    **** 
 279:Src/main.c    **** 
 280:Src/main.c    ****   /* USER CODE END Init */
 281:Src/main.c    **** 
 282:Src/main.c    ****   /* Configure the system clock */
 283:Src/main.c    ****   SystemClock_Config();
 284:Src/main.c    **** 
 285:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 286:Src/main.c    **** 
 287:Src/main.c    ****   /* USER CODE END SysInit */
 288:Src/main.c    **** 
 289:Src/main.c    ****   /* Initialize all configured peripherals */
 290:Src/main.c    ****   MX_GPIO_Init();
 291:Src/main.c    ****   MX_DMA_Init();
 292:Src/main.c    ****   MX_USART2_UART_Init();
 293:Src/main.c    ****   MX_TIM1_Init();
 294:Src/main.c    ****   MX_USART1_UART_Init();
 295:Src/main.c    ****   MX_SPI1_Init();
 296:Src/main.c    ****   MX_ADC1_Init();
 297:Src/main.c    **** 
 298:Src/main.c    ****   /* USER CODE BEGIN 2 */
 299:Src/main.c    **** 
 300:Src/main.c    ****   // ADC buffer definition
 301:Src/main.c    ****   enum{ ADC_BUFFER_LENGTH = 1024 };
 302:Src/main.c    ****   uint16_t g_ADCBuffer[ADC_BUFFER_LENGTH];
 303:Src/main.c    ****   memset(g_ADCBuffer, 0, sizeof(g_ADCBuffer));
 304:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, g_ADCBuffer, ADC_BUFFER_LENGTH);
 305:Src/main.c    **** 
 306:Src/main.c    ****   // OLED diaplay initialization
 307:Src/main.c    ****   u8g2_Setup_ssd1309_128x64_noname2_f(&u8g2, U8G2_R0, u8x8_byte_4wire_hw_spi, u8x8_gpio_and_delay_S
 308:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 309:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 310:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 311:Src/main.c    ****   u8g2_SetContrast(&u8g2, 128); // set contrast
 312:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 313:Src/main.c    **** 
 314:Src/main.c    ****   u8g2_ClearBuffer(&u8g2);
 315:Src/main.c    **** 
 316:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 7


 317:Src/main.c    ****   // draw opening
 318:Src/main.c    ****   u8g2_DrawXBMP(&u8g2, 40, 0, logo_width, logo_height, logo_bits );
 319:Src/main.c    **** 
 320:Src/main.c    ****   u8g2_SetFont(&u8g2, u8g2_font_5x7_tf);
 321:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 322:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.1a");
 323:Src/main.c    **** 
 324:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 325:Src/main.c    **** 
 326:Src/main.c    ****   HAL_Delay(2000);
 327:Src/main.c    **** 
 328:Src/main.c    ****   /* USER CODE END 2 */
 329:Src/main.c    **** 
 330:Src/main.c    ****   /* Infinite loop */
 331:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 332:Src/main.c    **** 
 333:Src/main.c    ****   u8g2_ClearBuffer(&u8g2);
 334:Src/main.c    **** 
 335:Src/main.c    **** 
 336:Src/main.c    ****   // draw measurements label & unit
 337:Src/main.c    ****   for( n=0; n<3; n++ ){
 338:Src/main.c    **** 	  x = meas_x;
 339:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 340:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width1, meas_height, meas_name[n], meas_unit[n]);
 341:Src/main.c    ****   }
 342:Src/main.c    ****   for( n=3; n<N_meas; n++ ){
 343:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 344:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 345:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width2, meas_height, meas_name[n], meas_unit[n]);
 346:Src/main.c    ****   }
 347:Src/main.c    **** 
 348:Src/main.c    **** 
 349:Src/main.c    ****   // draw indicators
 350:Src/main.c    ****   for( n=0; n<N_idct; n++ ){
 351:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
 352:Src/main.c    ****   }
 353:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 354:Src/main.c    **** 
 355:Src/main.c    ****   // Fuel Pump voltage & duty
 356:Src/main.c    ****   
 357:Src/main.c    ****   draw_MeasLabelUnit(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, "DUTY", "%  ");
 358:Src/main.c    ****   draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, 100, 3, 0, 0, "%  ");
 359:Src/main.c    **** 
 360:Src/main.c    ****   // update display
 361:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 362:Src/main.c    **** 
 363:Src/main.c    **** 
 364:Src/main.c    ****   while (1)
 365:Src/main.c    ****   {
 366:Src/main.c    ****   /* USER CODE END WHILE */
 367:Src/main.c    **** 
 368:Src/main.c    ****   /* USER CODE BEGIN 3 */
 369:Src/main.c    **** 
 370:Src/main.c    **** 	  	// start of create dummy data for debug
 371:Src/main.c    **** 		if( rpm <= 8200 ){
 372:Src/main.c    **** 			  rpm = rpm + (int)(10*MT[gear]);
 373:Src/main.c    **** //			  rpm=rpm+10;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 8


 374:Src/main.c    **** 		}else{
 375:Src/main.c    **** 			if( gear < 4 ){
 376:Src/main.c    **** 				gear++;
 377:Src/main.c    **** 				rpm = (double)speed / (0.002*60.0) * (MT[gear]*4.1);
 378:Src/main.c    **** 			}else{
 379:Src/main.c    **** 				gear = 0;
 380:Src/main.c    **** 				rpm = 1000;
 381:Src/main.c    **** 			}
 382:Src/main.c    **** 		}
 383:Src/main.c    **** 		speed = (double)rpm*0.002*60.0/MT[gear]/4.1;
 384:Src/main.c    **** 		meas_value[0] = speed; // speed
 385:Src/main.c    **** 
 386:Src/main.c    **** 		if( a >= 150){
 387:Src/main.c    **** 			a = 0;
 388:Src/main.c    **** 		}else{
 389:Src/main.c    **** 			a++;
 390:Src/main.c    **** 		}
 391:Src/main.c    **** 		for( n=1; n<=5; n++){
 392:Src/main.c    **** 			if( n==1 ){
 393:Src/main.c    **** 				meas_value[n] = a - 75;
 394:Src/main.c    **** 			}else{
 395:Src/main.c    **** 				meas_value[n] = a;
 396:Src/main.c    **** 			}
 397:Src/main.c    **** 		}
 398:Src/main.c    **** 
 399:Src/main.c    **** 	  	// end of create dummy data for debug
 400:Src/main.c    **** 
 401:Src/main.c    **** 
 402:Src/main.c    **** 		// read O2 sensor ADC output
 403:Src/main.c    **** 		meas_value[2] = (int16_t)(330 * (float)g_ADCBuffer[0]/255);
 404:Src/main.c    **** 		meas_value[5] = (int16_t)(330 * (float)g_ADCBuffer[0]/255);
 405:Src/main.c    **** 
 406:Src/main.c    **** 		// read Fuel Pump Voltage ADC output
 407:Src/main.c    **** 		FP_volt = (int16_t)(330*(float)g_ADCBuffer[0]/255);
 408:Src/main.c    **** 
 409:Src/main.c    **** 		// update Fuel Pump Voltage
 410:Src/main.c    **** //    draw_Value_xs(&u8g2, FP_x+FP_volt_width+2, FP_y, FP_duty_width, FP_height, 100, 3, 0, 0, "%")
 411:Src/main.c    **** 
 412:Src/main.c    **** 		// draw bar graph
 413:Src/main.c    **** 		draw_BarGraph(&u8g2, rpmbar_x, rpmbar_y, rpmbar_width, rpmbar_height, rpm, rpm_min, rpm_max);
 414:Src/main.c    **** 
 415:Src/main.c    **** 		// draw measurement data
 416:Src/main.c    **** 		for( n=0; n<3; n++ ){
 417:Src/main.c    **** 			x = meas_x;
 418:Src/main.c    **** 			y = (n % 3) * meas_height	+ meas_y;
 419:Src/main.c    **** 			draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac[n], me
 420:Src/main.c    **** 		}
 421:Src/main.c    **** 		for( n=3; n<N_meas; n++ ){
 422:Src/main.c    **** 			x = meas_width1 + meas_x + meas_x_offset;
 423:Src/main.c    **** 			y = (n % 3) * meas_height	+ meas_y;
 424:Src/main.c    **** 			draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac[n], me
 425:Src/main.c    **** 		}
 426:Src/main.c    **** 
 427:Src/main.c    **** 
 428:Src/main.c    **** 		// send buffer
 429:Src/main.c    **** 	    u8g2_SendBuffer(&u8g2);
 430:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 9


 431:Src/main.c    ****   }
 432:Src/main.c    ****   /* USER CODE END 3 */
 433:Src/main.c    **** 
 434:Src/main.c    **** }
 435:Src/main.c    **** 
 436:Src/main.c    **** /** System Clock Configuration
 437:Src/main.c    **** */
 438:Src/main.c    **** void SystemClock_Config(void)
 439:Src/main.c    **** {
 440:Src/main.c    **** 
 441:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 442:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 443:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 444:Src/main.c    **** 
 445:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 446:Src/main.c    ****     */
 447:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 448:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 449:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 450:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 451:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 452:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 453:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 454:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 455:Src/main.c    ****   {
 456:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 457:Src/main.c    ****   }
 458:Src/main.c    **** 
 459:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 460:Src/main.c    ****     */
 461:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 462:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 463:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 464:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 465:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 466:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 467:Src/main.c    **** 
 468:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 469:Src/main.c    ****   {
 470:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 471:Src/main.c    ****   }
 472:Src/main.c    **** 
 473:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_TIM1;
 474:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 475:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 476:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 477:Src/main.c    ****   {
 478:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 479:Src/main.c    ****   }
 480:Src/main.c    **** 
 481:Src/main.c    ****     /**Configure the Systick interrupt time 
 482:Src/main.c    ****     */
 483:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 484:Src/main.c    **** 
 485:Src/main.c    ****     /**Configure the Systick 
 486:Src/main.c    ****     */
 487:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 10


 488:Src/main.c    **** 
 489:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 490:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 491:Src/main.c    **** }
 492:Src/main.c    **** 
 493:Src/main.c    **** /* USER CODE BEGIN 4 */
 494:Src/main.c    **** 
 495:Src/main.c    **** /* USER CODE END 4 */
 496:Src/main.c    **** 
 497:Src/main.c    **** /**
 498:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 499:Src/main.c    ****   * @param  None
 500:Src/main.c    ****   * @retval None
 501:Src/main.c    ****   */
 502:Src/main.c    **** void _Error_Handler(char * file, int line)
 503:Src/main.c    **** {
  28              		.loc 1 503 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.L2:
  36 0000 FEE7     		b	.L2
  37              		.cfi_endproc
  38              	.LFE128:
  40              		.section	.text.SystemClock_Config,"ax",%progbits
  41              		.align	1
  42              		.global	SystemClock_Config
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	SystemClock_Config:
  49              	.LFB127:
 439:Src/main.c    **** 
  50              		.loc 1 439 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 88
  53              		@ frame_needed = 0, uses_anonymous_args = 0
 439:Src/main.c    **** 
  54              		.loc 1 439 0
  55 0000 00B5     		push	{lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 14, -4
  59 0002 97B0     		sub	sp, sp, #92
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 96
 447:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
  62              		.loc 1 447 0
  63 0004 0123     		movs	r3, #1
  64 0006 0C93     		str	r3, [sp, #48]
 448:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  65              		.loc 1 448 0
  66 0008 4FF4A022 		mov	r2, #327680
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 11


  67 000c 0D92     		str	r2, [sp, #52]
 449:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  68              		.loc 1 449 0
  69 000e 0022     		movs	r2, #0
  70 0010 0E92     		str	r2, [sp, #56]
 450:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  71              		.loc 1 450 0
  72 0012 1093     		str	r3, [sp, #64]
 451:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  73              		.loc 1 451 0
  74 0014 0223     		movs	r3, #2
  75 0016 1393     		str	r3, [sp, #76]
 452:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  76              		.loc 1 452 0
  77 0018 4FF48033 		mov	r3, #65536
  78 001c 1493     		str	r3, [sp, #80]
 453:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  79              		.loc 1 453 0
  80 001e 4FF4E013 		mov	r3, #1835008
  81 0022 1593     		str	r3, [sp, #84]
 454:Src/main.c    ****   {
  82              		.loc 1 454 0
  83 0024 0CA8     		add	r0, sp, #48
  84 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
  85              	.LVL1:
  86 002a 58BB     		cbnz	r0, .L8
 461:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  87              		.loc 1 461 0
  88 002c 0F23     		movs	r3, #15
  89 002e 0793     		str	r3, [sp, #28]
 463:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  90              		.loc 1 463 0
  91 0030 0221     		movs	r1, #2
  92 0032 0891     		str	r1, [sp, #32]
 464:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  93              		.loc 1 464 0
  94 0034 0023     		movs	r3, #0
  95 0036 0993     		str	r3, [sp, #36]
 465:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  96              		.loc 1 465 0
  97 0038 4FF48062 		mov	r2, #1024
  98 003c 0A92     		str	r2, [sp, #40]
 466:Src/main.c    **** 
  99              		.loc 1 466 0
 100 003e 0B93     		str	r3, [sp, #44]
 468:Src/main.c    ****   {
 101              		.loc 1 468 0
 102 0040 07A8     		add	r0, sp, #28
 103 0042 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 104              	.LVL2:
 105 0046 10BB     		cbnz	r0, .L9
 473:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 106              		.loc 1 473 0
 107 0048 41F20103 		movw	r3, #4097
 108 004c 0193     		str	r3, [sp, #4]
 474:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 109              		.loc 1 474 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 12


 110 004e 0023     		movs	r3, #0
 111 0050 0393     		str	r3, [sp, #12]
 475:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 112              		.loc 1 475 0
 113 0052 0693     		str	r3, [sp, #24]
 476:Src/main.c    ****   {
 114              		.loc 1 476 0
 115 0054 01A8     		add	r0, sp, #4
 116 0056 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 117              	.LVL3:
 118 005a E8B9     		cbnz	r0, .L10
 483:Src/main.c    **** 
 119              		.loc 1 483 0
 120 005c FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 121              	.LVL4:
 122 0060 104B     		ldr	r3, .L11
 123 0062 A3FB0030 		umull	r3, r0, r3, r0
 124 0066 8009     		lsrs	r0, r0, #6
 125 0068 FFF7FEFF 		bl	HAL_SYSTICK_Config
 126              	.LVL5:
 487:Src/main.c    **** 
 127              		.loc 1 487 0
 128 006c 0420     		movs	r0, #4
 129 006e FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 130              	.LVL6:
 490:Src/main.c    **** }
 131              		.loc 1 490 0
 132 0072 0022     		movs	r2, #0
 133 0074 1146     		mov	r1, r2
 134 0076 4FF0FF30 		mov	r0, #-1
 135 007a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 136              	.LVL7:
 491:Src/main.c    **** 
 137              		.loc 1 491 0
 138 007e 17B0     		add	sp, sp, #92
 139              	.LCFI2:
 140              		.cfi_remember_state
 141              		.cfi_def_cfa_offset 4
 142              		@ sp needed
 143 0080 5DF804FB 		ldr	pc, [sp], #4
 144              	.L8:
 145              	.LCFI3:
 146              		.cfi_restore_state
 456:Src/main.c    ****   }
 147              		.loc 1 456 0
 148 0084 4FF4E471 		mov	r1, #456
 149 0088 0748     		ldr	r0, .L11+4
 150 008a FFF7FEFF 		bl	_Error_Handler
 151              	.LVL8:
 152              	.L9:
 470:Src/main.c    ****   }
 153              		.loc 1 470 0
 154 008e 4FF4EB71 		mov	r1, #470
 155 0092 0548     		ldr	r0, .L11+4
 156 0094 FFF7FEFF 		bl	_Error_Handler
 157              	.LVL9:
 158              	.L10:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 13


 478:Src/main.c    ****   }
 159              		.loc 1 478 0
 160 0098 4FF4EF71 		mov	r1, #478
 161 009c 0248     		ldr	r0, .L11+4
 162 009e FFF7FEFF 		bl	_Error_Handler
 163              	.LVL10:
 164              	.L12:
 165 00a2 00BF     		.align	2
 166              	.L11:
 167 00a4 D34D6210 		.word	274877907
 168 00a8 00000000 		.word	.LC0
 169              		.cfi_endproc
 170              	.LFE127:
 172              		.global	__aeabi_dmul
 173              		.global	__aeabi_d2iz
 174              		.global	__aeabi_ui2d
 175              		.global	__aeabi_ddiv
 176              		.global	__aeabi_d2uiz
 177              		.section	.text.main,"ax",%progbits
 178              		.align	1
 179              		.global	main
 180              		.syntax unified
 181              		.thumb
 182              		.thumb_func
 183              		.fpu fpv4-sp-d16
 185              	main:
 186              	.LFB126:
 261:Src/main.c    **** 
 187              		.loc 1 261 0
 188              		.cfi_startproc
 189              		@ args = 0, pretend = 0, frame = 2048
 190              		@ frame_needed = 0, uses_anonymous_args = 0
 191 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 192              	.LCFI4:
 193              		.cfi_def_cfa_offset 20
 194              		.cfi_offset 4, -20
 195              		.cfi_offset 5, -16
 196              		.cfi_offset 6, -12
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 ADF61C0D 		subw	sp, sp, #2076
 200              	.LCFI5:
 201              		.cfi_def_cfa_offset 2096
 270:Src/main.c    **** 
 202              		.loc 1 270 0
 203 0006 FFF7FEFF 		bl	HAL_Init
 204              	.LVL11:
 283:Src/main.c    **** 
 205              		.loc 1 283 0
 206 000a FFF7FEFF 		bl	SystemClock_Config
 207              	.LVL12:
 290:Src/main.c    ****   MX_DMA_Init();
 208              		.loc 1 290 0
 209 000e FFF7FEFF 		bl	MX_GPIO_Init
 210              	.LVL13:
 291:Src/main.c    ****   MX_USART2_UART_Init();
 211              		.loc 1 291 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 14


 212 0012 FFF7FEFF 		bl	MX_DMA_Init
 213              	.LVL14:
 292:Src/main.c    ****   MX_TIM1_Init();
 214              		.loc 1 292 0
 215 0016 FFF7FEFF 		bl	MX_USART2_UART_Init
 216              	.LVL15:
 293:Src/main.c    ****   MX_USART1_UART_Init();
 217              		.loc 1 293 0
 218 001a FFF7FEFF 		bl	MX_TIM1_Init
 219              	.LVL16:
 294:Src/main.c    ****   MX_SPI1_Init();
 220              		.loc 1 294 0
 221 001e FFF7FEFF 		bl	MX_USART1_UART_Init
 222              	.LVL17:
 295:Src/main.c    ****   MX_ADC1_Init();
 223              		.loc 1 295 0
 224 0022 FFF7FEFF 		bl	MX_SPI1_Init
 225              	.LVL18:
 296:Src/main.c    **** 
 226              		.loc 1 296 0
 227 0026 FFF7FEFF 		bl	MX_ADC1_Init
 228              	.LVL19:
 303:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, g_ADCBuffer, ADC_BUFFER_LENGTH);
 229              		.loc 1 303 0
 230 002a 4FF40062 		mov	r2, #2048
 231 002e 0021     		movs	r1, #0
 232 0030 06A8     		add	r0, sp, #24
 233 0032 FFF7FEFF 		bl	memset
 234              	.LVL20:
 304:Src/main.c    **** 
 235              		.loc 1 304 0
 236 0036 4FF48062 		mov	r2, #1024
 237 003a 06A9     		add	r1, sp, #24
 238 003c B448     		ldr	r0, .L38+16
 239 003e FFF7FEFF 		bl	HAL_ADC_Start_DMA
 240              	.LVL21:
 307:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 241              		.loc 1 307 0
 242 0042 B44C     		ldr	r4, .L38+20
 243 0044 B44B     		ldr	r3, .L38+24
 244 0046 B54A     		ldr	r2, .L38+28
 245 0048 B549     		ldr	r1, .L38+32
 246 004a 2046     		mov	r0, r4
 247 004c FFF7FEFF 		bl	u8g2_Setup_ssd1309_128x64_noname2_f
 248              	.LVL22:
 308:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 249              		.loc 1 308 0
 250 0050 0122     		movs	r2, #1
 251 0052 0821     		movs	r1, #8
 252 0054 B348     		ldr	r0, .L38+36
 253 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 254              	.LVL23:
 309:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 255              		.loc 1 309 0
 256 005a 2046     		mov	r0, r4
 257 005c FFF7FEFF 		bl	u8x8_InitDisplay
 258              	.LVL24:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 15


 310:Src/main.c    ****   u8g2_SetContrast(&u8g2, 128); // set contrast
 259              		.loc 1 310 0
 260 0060 0021     		movs	r1, #0
 261 0062 2046     		mov	r0, r4
 262 0064 FFF7FEFF 		bl	u8x8_SetPowerSave
 263              	.LVL25:
 311:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 264              		.loc 1 311 0
 265 0068 8021     		movs	r1, #128
 266 006a 2046     		mov	r0, r4
 267 006c FFF7FEFF 		bl	u8x8_SetContrast
 268              	.LVL26:
 312:Src/main.c    **** 
 269              		.loc 1 312 0
 270 0070 2046     		mov	r0, r4
 271 0072 FFF7FEFF 		bl	u8g2_ClearDisplay
 272              	.LVL27:
 314:Src/main.c    **** 
 273              		.loc 1 314 0
 274 0076 2046     		mov	r0, r4
 275 0078 FFF7FEFF 		bl	u8g2_ClearBuffer
 276              	.LVL28:
 318:Src/main.c    **** 
 277              		.loc 1 318 0
 278 007c AA4B     		ldr	r3, .L38+40
 279 007e 0193     		str	r3, [sp, #4]
 280 0080 3023     		movs	r3, #48
 281 0082 0093     		str	r3, [sp]
 282 0084 0022     		movs	r2, #0
 283 0086 2821     		movs	r1, #40
 284 0088 2046     		mov	r0, r4
 285 008a FFF7FEFF 		bl	u8g2_DrawXBMP
 286              	.LVL29:
 320:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 287              		.loc 1 320 0
 288 008e A749     		ldr	r1, .L38+44
 289 0090 2046     		mov	r0, r4
 290 0092 FFF7FEFF 		bl	u8g2_SetFont
 291              	.LVL30:
 321:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.1a");
 292              		.loc 1 321 0
 293 0096 A64B     		ldr	r3, .L38+48
 294 0098 3722     		movs	r2, #55
 295 009a 1021     		movs	r1, #16
 296 009c 2046     		mov	r0, r4
 297 009e FFF7FEFF 		bl	u8g2_DrawStr
 298              	.LVL31:
 322:Src/main.c    **** 
 299              		.loc 1 322 0
 300 00a2 A44B     		ldr	r3, .L38+52
 301 00a4 4022     		movs	r2, #64
 302 00a6 2821     		movs	r1, #40
 303 00a8 2046     		mov	r0, r4
 304 00aa FFF7FEFF 		bl	u8g2_DrawStr
 305              	.LVL32:
 324:Src/main.c    **** 
 306              		.loc 1 324 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 16


 307 00ae 2046     		mov	r0, r4
 308 00b0 FFF7FEFF 		bl	u8g2_SendBuffer
 309              	.LVL33:
 326:Src/main.c    **** 
 310              		.loc 1 326 0
 311 00b4 4FF4FA60 		mov	r0, #2000
 312 00b8 FFF7FEFF 		bl	HAL_Delay
 313              	.LVL34:
 333:Src/main.c    **** 
 314              		.loc 1 333 0
 315 00bc 2046     		mov	r0, r4
 316 00be FFF7FEFF 		bl	u8g2_ClearBuffer
 317              	.LVL35:
 337:Src/main.c    **** 	  x = meas_x;
 318              		.loc 1 337 0
 319 00c2 0024     		movs	r4, #0
 320 00c4 20E0     		b	.L14
 321              	.LVL36:
 322              	.L15:
 323              	.LBB2:
 339:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width1, meas_height, meas_name[n], meas_unit[n]);
 324              		.loc 1 339 0 discriminator 3
 325 00c6 9C4B     		ldr	r3, .L38+56
 326 00c8 A3FB0423 		umull	r2, r3, r3, r4
 327 00cc 5B08     		lsrs	r3, r3, #1
 328 00ce 03EB4303 		add	r3, r3, r3, lsl #1
 329 00d2 E31A     		subs	r3, r4, r3
 330 00d4 03EB4303 		add	r3, r3, r3, lsl #1
 331 00d8 9A00     		lsls	r2, r3, #2
 332 00da D2B2     		uxtb	r2, r2
 333 00dc 1032     		adds	r2, r2, #16
 334              	.LVL37:
 340:Src/main.c    ****   }
 335              		.loc 1 340 0 discriminator 3
 336 00de C4EBC401 		rsb	r1, r4, r4, lsl #3
 337 00e2 964B     		ldr	r3, .L38+60
 338 00e4 0B44     		add	r3, r3, r1
 339 00e6 04EB8400 		add	r0, r4, r4, lsl #2
 340 00ea 9549     		ldr	r1, .L38+64
 341 00ec 0144     		add	r1, r1, r0
 342 00ee 0291     		str	r1, [sp, #8]
 343 00f0 0193     		str	r3, [sp, #4]
 344 00f2 0C23     		movs	r3, #12
 345 00f4 0093     		str	r3, [sp]
 346 00f6 4623     		movs	r3, #70
 347 00f8 02F0FC02 		and	r2, r2, #252
 348              	.LVL38:
 349 00fc 0021     		movs	r1, #0
 350 00fe 8548     		ldr	r0, .L38+20
 351 0100 FFF7FEFF 		bl	draw_MeasLabelUnit
 352              	.LVL39:
 353              	.LBE2:
 337:Src/main.c    **** 	  x = meas_x;
 354              		.loc 1 337 0 discriminator 3
 355 0104 0134     		adds	r4, r4, #1
 356              	.LVL40:
 357 0106 E4B2     		uxtb	r4, r4
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 17


 358              	.LVL41:
 359              	.L14:
 337:Src/main.c    **** 	  x = meas_x;
 360              		.loc 1 337 0 is_stmt 0 discriminator 1
 361 0108 022C     		cmp	r4, #2
 362 010a DCD9     		bls	.L15
 342:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 363              		.loc 1 342 0 is_stmt 1
 364 010c 0324     		movs	r4, #3
 365              	.LVL42:
 366 010e 20E0     		b	.L16
 367              	.LVL43:
 368              	.L17:
 369              	.LBB3:
 344:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width2, meas_height, meas_name[n], meas_unit[n]);
 370              		.loc 1 344 0 discriminator 3
 371 0110 894B     		ldr	r3, .L38+56
 372 0112 A3FB0423 		umull	r2, r3, r3, r4
 373 0116 5B08     		lsrs	r3, r3, #1
 374 0118 03EB4303 		add	r3, r3, r3, lsl #1
 375 011c E31A     		subs	r3, r4, r3
 376 011e 03EB4303 		add	r3, r3, r3, lsl #1
 377 0122 9A00     		lsls	r2, r3, #2
 378 0124 D2B2     		uxtb	r2, r2
 379 0126 1032     		adds	r2, r2, #16
 380              	.LVL44:
 345:Src/main.c    ****   }
 381              		.loc 1 345 0 discriminator 3
 382 0128 C4EBC401 		rsb	r1, r4, r4, lsl #3
 383 012c 834B     		ldr	r3, .L38+60
 384 012e 0B44     		add	r3, r3, r1
 385 0130 04EB8400 		add	r0, r4, r4, lsl #2
 386 0134 8249     		ldr	r1, .L38+64
 387 0136 0144     		add	r1, r1, r0
 388 0138 0291     		str	r1, [sp, #8]
 389 013a 0193     		str	r3, [sp, #4]
 390 013c 0C23     		movs	r3, #12
 391 013e 0093     		str	r3, [sp]
 392 0140 3823     		movs	r3, #56
 393 0142 02F0FC02 		and	r2, r2, #252
 394              	.LVL45:
 395 0146 4821     		movs	r1, #72
 396 0148 7248     		ldr	r0, .L38+20
 397 014a FFF7FEFF 		bl	draw_MeasLabelUnit
 398              	.LVL46:
 399              	.LBE3:
 342:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 400              		.loc 1 342 0 discriminator 3
 401 014e 0134     		adds	r4, r4, #1
 402              	.LVL47:
 403 0150 E4B2     		uxtb	r4, r4
 404              	.LVL48:
 405              	.L16:
 342:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 406              		.loc 1 342 0 is_stmt 0 discriminator 1
 407 0152 052C     		cmp	r4, #5
 408 0154 DCD9     		bls	.L17
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 18


 350:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
 409              		.loc 1 350 0 is_stmt 1
 410 0156 0024     		movs	r4, #0
 411              	.LVL49:
 412              	.L18:
 350:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
 413              		.loc 1 350 0 is_stmt 0 discriminator 1
 414 0158 012C     		cmp	r4, #1
 415 015a 16D8     		bhi	.L35
 416              	.LBB4:
 351:Src/main.c    ****   }
 417              		.loc 1 351 0 is_stmt 1 discriminator 3
 418 015c C4EBC401 		rsb	r1, r4, r4, lsl #3
 419 0160 04EB8101 		add	r1, r4, r1, lsl #2
 420 0164 774B     		ldr	r3, .L38+68
 421 0166 1A5D     		ldrb	r2, [r3, r4]	@ zero_extendqisi2
 422 0168 04EB8400 		add	r0, r4, r4, lsl #2
 423 016c 764B     		ldr	r3, .L38+72
 424 016e 0344     		add	r3, r3, r0
 425 0170 0293     		str	r3, [sp, #8]
 426 0172 0192     		str	r2, [sp, #4]
 427 0174 0923     		movs	r3, #9
 428 0176 0093     		str	r3, [sp]
 429 0178 1B23     		movs	r3, #27
 430 017a 3522     		movs	r2, #53
 431 017c 4831     		adds	r1, r1, #72
 432 017e 6548     		ldr	r0, .L38+20
 433 0180 FFF7FEFF 		bl	draw_IndicatorBox
 434              	.LVL50:
 435              	.LBE4:
 350:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
 436              		.loc 1 350 0 discriminator 3
 437 0184 0134     		adds	r4, r4, #1
 438              	.LVL51:
 439 0186 E4B2     		uxtb	r4, r4
 440              	.LVL52:
 441 0188 E6E7     		b	.L18
 442              	.L35:
 353:Src/main.c    **** 
 443              		.loc 1 353 0
 444 018a 624C     		ldr	r4, .L38+20
 445              	.LVL53:
 446 018c 2046     		mov	r0, r4
 447 018e FFF7FEFF 		bl	u8g2_SendBuffer
 448              	.LVL54:
 357:Src/main.c    ****   draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, 100, 3, 0, 0, "%  ");
 449              		.loc 1 357 0
 450 0192 6E4D     		ldr	r5, .L38+76
 451 0194 0295     		str	r5, [sp, #8]
 452 0196 6E4B     		ldr	r3, .L38+80
 453 0198 0193     		str	r3, [sp, #4]
 454 019a 0C26     		movs	r6, #12
 455 019c 0096     		str	r6, [sp]
 456 019e 4623     		movs	r3, #70
 457 01a0 3422     		movs	r2, #52
 458 01a2 0021     		movs	r1, #0
 459 01a4 2046     		mov	r0, r4
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 19


 460 01a6 FFF7FEFF 		bl	draw_MeasLabelUnit
 461              	.LVL55:
 358:Src/main.c    **** 
 462              		.loc 1 358 0
 463 01aa 0595     		str	r5, [sp, #20]
 464 01ac 0025     		movs	r5, #0
 465 01ae 0495     		str	r5, [sp, #16]
 466 01b0 0395     		str	r5, [sp, #12]
 467 01b2 0323     		movs	r3, #3
 468 01b4 0293     		str	r3, [sp, #8]
 469 01b6 6423     		movs	r3, #100
 470 01b8 0193     		str	r3, [sp, #4]
 471 01ba 0096     		str	r6, [sp]
 472 01bc 4623     		movs	r3, #70
 473 01be 3422     		movs	r2, #52
 474 01c0 2946     		mov	r1, r5
 475 01c2 2046     		mov	r0, r4
 476 01c4 FFF7FEFF 		bl	draw_Value
 477              	.LVL56:
 361:Src/main.c    **** 
 478              		.loc 1 361 0
 479 01c8 2046     		mov	r0, r4
 480 01ca FFF7FEFF 		bl	u8g2_SendBuffer
 481              	.LVL57:
 482 01ce 05E1     		b	.L32
 483              	.LVL58:
 484              	.L20:
 485              	.LBB5:
 375:Src/main.c    **** 				gear++;
 486              		.loc 1 375 0
 487 01d0 604B     		ldr	r3, .L38+84
 488 01d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 489 01d4 032B     		cmp	r3, #3
 490 01d6 23D8     		bhi	.L22
 376:Src/main.c    **** 				rpm = (double)speed / (0.002*60.0) * (MT[gear]*4.1);
 491              		.loc 1 376 0
 492 01d8 0133     		adds	r3, r3, #1
 493 01da DCB2     		uxtb	r4, r3
 494 01dc 5D4B     		ldr	r3, .L38+84
 495 01de 1C70     		strb	r4, [r3]
 377:Src/main.c    **** 			}else{
 496              		.loc 1 377 0
 497 01e0 5D4B     		ldr	r3, .L38+88
 498 01e2 1888     		ldrh	r0, [r3]
 499 01e4 FFF7FEFF 		bl	__aeabi_ui2d
 500              	.LVL59:
 501 01e8 45A3     		adr	r3, .L38
 502 01ea D3E90023 		ldrd	r2, [r3]
 503 01ee FFF7FEFF 		bl	__aeabi_ddiv
 504              	.LVL60:
 505 01f2 0646     		mov	r6, r0
 506 01f4 0F46     		mov	r7, r1
 507 01f6 594B     		ldr	r3, .L38+92
 508 01f8 03EBC404 		add	r4, r3, r4, lsl #3
 509 01fc 42A3     		adr	r3, .L38+8
 510 01fe D3E90023 		ldrd	r2, [r3]
 511 0202 D4E90001 		ldrd	r0, [r4]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 20


 512 0206 FFF7FEFF 		bl	__aeabi_dmul
 513              	.LVL61:
 514 020a 0246     		mov	r2, r0
 515 020c 0B46     		mov	r3, r1
 516 020e 3046     		mov	r0, r6
 517 0210 3946     		mov	r1, r7
 518 0212 FFF7FEFF 		bl	__aeabi_dmul
 519              	.LVL62:
 520 0216 FFF7FEFF 		bl	__aeabi_d2uiz
 521              	.LVL63:
 522 021a 514B     		ldr	r3, .L38+96
 523 021c 1880     		strh	r0, [r3]	@ movhi
 524 021e F4E0     		b	.L21
 525              	.L22:
 379:Src/main.c    **** 				rpm = 1000;
 526              		.loc 1 379 0
 527 0220 4C4B     		ldr	r3, .L38+84
 528 0222 0022     		movs	r2, #0
 529 0224 1A70     		strb	r2, [r3]
 380:Src/main.c    **** 			}
 530              		.loc 1 380 0
 531 0226 4E4B     		ldr	r3, .L38+96
 532 0228 4FF47A72 		mov	r2, #1000
 533 022c 1A80     		strh	r2, [r3]	@ movhi
 534 022e ECE0     		b	.L21
 535              	.L33:
 387:Src/main.c    **** 		}else{
 536              		.loc 1 387 0
 537 0230 0025     		movs	r5, #0
 538              	.LVL64:
 539 0232 12E1     		b	.L23
 540              	.LVL65:
 541              	.L37:
 393:Src/main.c    **** 			}else{
 542              		.loc 1 393 0
 543 0234 A5F14B02 		sub	r2, r5, #75
 544 0238 4A49     		ldr	r1, .L38+100
 545 023a 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 546              	.L26:
 391:Src/main.c    **** 			if( n==1 ){
 547              		.loc 1 391 0 discriminator 2
 548 023e 0133     		adds	r3, r3, #1
 549              	.LVL66:
 550 0240 DBB2     		uxtb	r3, r3
 551              	.LVL67:
 552              	.L24:
 391:Src/main.c    **** 			if( n==1 ){
 553              		.loc 1 391 0 is_stmt 0 discriminator 1
 554 0242 052B     		cmp	r3, #5
 555 0244 05D8     		bhi	.L36
 392:Src/main.c    **** 				meas_value[n] = a - 75;
 556              		.loc 1 392 0 is_stmt 1
 557 0246 012B     		cmp	r3, #1
 558 0248 F4D0     		beq	.L37
 395:Src/main.c    **** 			}
 559              		.loc 1 395 0
 560 024a 464A     		ldr	r2, .L38+100
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 21


 561 024c 22F81350 		strh	r5, [r2, r3, lsl #1]	@ movhi
 562 0250 F5E7     		b	.L26
 563              	.L36:
 403:Src/main.c    **** 		meas_value[5] = (int16_t)(330 * (float)g_ADCBuffer[0]/255);
 564              		.loc 1 403 0
 565 0252 BDF81830 		ldrh	r3, [sp, #24]
 566              	.LVL68:
 567 0256 07EE103A 		vmov	s14, r3	@ int
 568 025a B8EE477A 		vcvt.f32.u32	s14, s14
 569 025e DFED427A 		vldr.32	s15, .L38+104
 570 0262 27EE277A 		vmul.f32	s14, s14, s15
 571 0266 DFED416A 		vldr.32	s13, .L38+108
 572 026a C7EE267A 		vdiv.f32	s15, s14, s13
 573 026e FDEEE77A 		vcvt.s32.f32	s15, s15
 574 0272 17EE903A 		vmov	r3, s15	@ int
 575 0276 1BB2     		sxth	r3, r3
 576 0278 3A4A     		ldr	r2, .L38+100
 577 027a 9380     		strh	r3, [r2, #4]	@ movhi
 404:Src/main.c    **** 
 578              		.loc 1 404 0
 579 027c 5381     		strh	r3, [r2, #10]	@ movhi
 407:Src/main.c    **** 
 580              		.loc 1 407 0
 581 027e 3C4A     		ldr	r2, .L38+112
 582 0280 1380     		strh	r3, [r2]	@ movhi
 413:Src/main.c    **** 
 583              		.loc 1 413 0
 584 0282 42F22833 		movw	r3, #9000
 585 0286 0393     		str	r3, [sp, #12]
 586 0288 0024     		movs	r4, #0
 587 028a 0294     		str	r4, [sp, #8]
 588 028c 0196     		str	r6, [sp, #4]
 589 028e 0E23     		movs	r3, #14
 590 0290 0093     		str	r3, [sp]
 591 0292 8023     		movs	r3, #128
 592 0294 2246     		mov	r2, r4
 593 0296 2146     		mov	r1, r4
 594 0298 1E48     		ldr	r0, .L38+20
 595 029a FFF7FEFF 		bl	draw_BarGraph
 596              	.LVL69:
 416:Src/main.c    **** 			x = meas_x;
 597              		.loc 1 416 0
 598 029e 28E0     		b	.L28
 599              	.LVL70:
 600              	.L29:
 418:Src/main.c    **** 			draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac[n], me
 601              		.loc 1 418 0 discriminator 3
 602 02a0 254B     		ldr	r3, .L38+56
 603 02a2 A3FB0423 		umull	r2, r3, r3, r4
 604 02a6 5B08     		lsrs	r3, r3, #1
 605 02a8 03EB4303 		add	r3, r3, r3, lsl #1
 606 02ac E31A     		subs	r3, r4, r3
 607 02ae 03EB4303 		add	r3, r3, r3, lsl #1
 608 02b2 9A00     		lsls	r2, r3, #2
 609 02b4 D2B2     		uxtb	r2, r2
 610 02b6 1032     		adds	r2, r2, #16
 611              	.LVL71:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 22


 419:Src/main.c    **** 		}
 612              		.loc 1 419 0 discriminator 3
 613 02b8 2A4B     		ldr	r3, .L38+100
 614 02ba 33F91410 		ldrsh	r1, [r3, r4, lsl #1]
 615 02be 2D4B     		ldr	r3, .L38+116
 616 02c0 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 617 02c2 2D4B     		ldr	r3, .L38+120
 618 02c4 1E5D     		ldrb	r6, [r3, r4]	@ zero_extendqisi2
 619 02c6 2D4B     		ldr	r3, .L38+124
 620 02c8 1F5D     		ldrb	r7, [r3, r4]	@ zero_extendqisi2
 621 02ca 04EB840C 		add	ip, r4, r4, lsl #2
 622 02ce 1C4B     		ldr	r3, .L38+64
 623 02d0 6344     		add	r3, r3, ip
 624 02d2 0593     		str	r3, [sp, #20]
 625 02d4 0497     		str	r7, [sp, #16]
 626 02d6 0396     		str	r6, [sp, #12]
 627 02d8 0290     		str	r0, [sp, #8]
 628 02da 0191     		str	r1, [sp, #4]
 629 02dc 0C23     		movs	r3, #12
 630 02de 0093     		str	r3, [sp]
 631 02e0 4623     		movs	r3, #70
 632 02e2 02F0FC02 		and	r2, r2, #252
 633              	.LVL72:
 634 02e6 0021     		movs	r1, #0
 635 02e8 0A48     		ldr	r0, .L38+20
 636 02ea FFF7FEFF 		bl	draw_Value
 637              	.LVL73:
 416:Src/main.c    **** 			x = meas_x;
 638              		.loc 1 416 0 discriminator 3
 639 02ee 0134     		adds	r4, r4, #1
 640              	.LVL74:
 641 02f0 E4B2     		uxtb	r4, r4
 642              	.LVL75:
 643              	.L28:
 416:Src/main.c    **** 			x = meas_x;
 644              		.loc 1 416 0 is_stmt 0 discriminator 1
 645 02f2 022C     		cmp	r4, #2
 646 02f4 D4D9     		bls	.L29
 421:Src/main.c    **** 			x = meas_width1 + meas_x + meas_x_offset;
 647              		.loc 1 421 0 is_stmt 1
 648 02f6 0324     		movs	r4, #3
 649              	.LVL76:
 650 02f8 6BE0     		b	.L30
 651              	.L39:
 652 02fa 00BFAFF3 		.align	3
 652      0080
 653              	.L38:
 654 0300 B81E85EB 		.word	3951369912
 655 0304 51B8BE3F 		.word	1069463633
 656 0308 66666666 		.word	1717986918
 657 030c 66661040 		.word	1074816614
 658 0310 00000000 		.word	hadc1
 659 0314 00000000 		.word	u8g2
 660 0318 00000000 		.word	u8x8_gpio_and_delay_STM32F303
 661 031c 00000000 		.word	u8x8_byte_4wire_hw_spi
 662 0320 00000000 		.word	u8g2_cb_r0
 663 0324 00040048 		.word	1207960576
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 23


 664 0328 00000000 		.word	.LANCHOR0
 665 032c 00000000 		.word	u8g2_font_5x7_tf
 666 0330 00000000 		.word	.LC1
 667 0334 18000000 		.word	.LC2
 668 0338 ABAAAAAA 		.word	-1431655765
 669 033c 00000000 		.word	.LANCHOR1
 670 0340 00000000 		.word	.LANCHOR2
 671 0344 00000000 		.word	.LANCHOR3
 672 0348 00000000 		.word	.LANCHOR4
 673 034c 24000000 		.word	.LC3
 674 0350 28000000 		.word	.LC4
 675 0354 00000000 		.word	.LANCHOR7
 676 0358 00000000 		.word	.LANCHOR8
 677 035c 00000000 		.word	.LANCHOR6
 678 0360 00000000 		.word	.LANCHOR5
 679 0364 00000000 		.word	.LANCHOR9
 680 0368 0000A543 		.word	1134886912
 681 036c 00007F43 		.word	1132396544
 682 0370 00000000 		.word	.LANCHOR10
 683 0374 00000000 		.word	.LANCHOR11
 684 0378 00000000 		.word	.LANCHOR12
 685 037c 00000000 		.word	.LANCHOR13
 686              	.LVL77:
 687              	.L31:
 423:Src/main.c    **** 			draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac[n], me
 688              		.loc 1 423 0 discriminator 3
 689 0380 3B4B     		ldr	r3, .L40+16
 690 0382 A3FB0423 		umull	r2, r3, r3, r4
 691 0386 5B08     		lsrs	r3, r3, #1
 692 0388 03EB4303 		add	r3, r3, r3, lsl #1
 693 038c E31A     		subs	r3, r4, r3
 694 038e 03EB4303 		add	r3, r3, r3, lsl #1
 695 0392 9A00     		lsls	r2, r3, #2
 696 0394 D2B2     		uxtb	r2, r2
 697 0396 1032     		adds	r2, r2, #16
 698              	.LVL78:
 424:Src/main.c    **** 		}
 699              		.loc 1 424 0 discriminator 3
 700 0398 364B     		ldr	r3, .L40+20
 701 039a 33F91410 		ldrsh	r1, [r3, r4, lsl #1]
 702 039e 364B     		ldr	r3, .L40+24
 703 03a0 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 704 03a2 364B     		ldr	r3, .L40+28
 705 03a4 1E5D     		ldrb	r6, [r3, r4]	@ zero_extendqisi2
 706 03a6 364B     		ldr	r3, .L40+32
 707 03a8 1F5D     		ldrb	r7, [r3, r4]	@ zero_extendqisi2
 708 03aa 04EB840C 		add	ip, r4, r4, lsl #2
 709 03ae 354B     		ldr	r3, .L40+36
 710 03b0 6344     		add	r3, r3, ip
 711 03b2 0593     		str	r3, [sp, #20]
 712 03b4 0497     		str	r7, [sp, #16]
 713 03b6 0396     		str	r6, [sp, #12]
 714 03b8 0290     		str	r0, [sp, #8]
 715 03ba 0191     		str	r1, [sp, #4]
 716 03bc 0C23     		movs	r3, #12
 717 03be 0093     		str	r3, [sp]
 718 03c0 3823     		movs	r3, #56
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 24


 719 03c2 02F0FC02 		and	r2, r2, #252
 720              	.LVL79:
 721 03c6 4821     		movs	r1, #72
 722 03c8 2F48     		ldr	r0, .L40+40
 723 03ca FFF7FEFF 		bl	draw_Value
 724              	.LVL80:
 421:Src/main.c    **** 			x = meas_width1 + meas_x + meas_x_offset;
 725              		.loc 1 421 0 discriminator 3
 726 03ce 0134     		adds	r4, r4, #1
 727              	.LVL81:
 728 03d0 E4B2     		uxtb	r4, r4
 729              	.LVL82:
 730              	.L30:
 421:Src/main.c    **** 			x = meas_width1 + meas_x + meas_x_offset;
 731              		.loc 1 421 0 is_stmt 0 discriminator 1
 732 03d2 052C     		cmp	r4, #5
 733 03d4 D4D9     		bls	.L31
 429:Src/main.c    **** 
 734              		.loc 1 429 0 is_stmt 1
 735 03d6 2C48     		ldr	r0, .L40+40
 736 03d8 FFF7FEFF 		bl	u8g2_SendBuffer
 737              	.LVL83:
 738              	.L32:
 371:Src/main.c    **** 			  rpm = rpm + (int)(10*MT[gear]);
 739              		.loc 1 371 0
 740 03dc 2B4B     		ldr	r3, .L40+44
 741 03de 1C88     		ldrh	r4, [r3]
 742 03e0 42F20803 		movw	r3, #8200
 743 03e4 9C42     		cmp	r4, r3
 744 03e6 3FF6F3AE 		bhi	.L20
 372:Src/main.c    **** //			  rpm=rpm+10;
 745              		.loc 1 372 0
 746 03ea 294B     		ldr	r3, .L40+48
 747 03ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 748 03ee 2949     		ldr	r1, .L40+52
 749 03f0 01EBC301 		add	r1, r1, r3, lsl #3
 750 03f4 0022     		movs	r2, #0
 751 03f6 284B     		ldr	r3, .L40+56
 752 03f8 D1E90001 		ldrd	r0, [r1]
 753 03fc FFF7FEFF 		bl	__aeabi_dmul
 754              	.LVL84:
 755 0400 FFF7FEFF 		bl	__aeabi_d2iz
 756              	.LVL85:
 757 0404 2044     		add	r0, r0, r4
 758 0406 214B     		ldr	r3, .L40+44
 759 0408 1880     		strh	r0, [r3]	@ movhi
 760              	.L21:
 383:Src/main.c    **** 		meas_value[0] = speed; // speed
 761              		.loc 1 383 0
 762 040a 204B     		ldr	r3, .L40+44
 763 040c 1E88     		ldrh	r6, [r3]
 764 040e 3046     		mov	r0, r6
 765 0410 FFF7FEFF 		bl	__aeabi_ui2d
 766              	.LVL86:
 767 0414 12A3     		adr	r3, .L40
 768 0416 D3E90023 		ldrd	r2, [r3]
 769 041a FFF7FEFF 		bl	__aeabi_dmul
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 25


 770              	.LVL87:
 771 041e 0022     		movs	r2, #0
 772 0420 1E4B     		ldr	r3, .L40+60
 773 0422 FFF7FEFF 		bl	__aeabi_dmul
 774              	.LVL88:
 775 0426 1A4B     		ldr	r3, .L40+48
 776 0428 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 777 042a 1A4B     		ldr	r3, .L40+52
 778 042c 03EBC203 		add	r3, r3, r2, lsl #3
 779 0430 D3E90023 		ldrd	r2, [r3]
 780 0434 FFF7FEFF 		bl	__aeabi_ddiv
 781              	.LVL89:
 782 0438 0BA3     		adr	r3, .L40+8
 783 043a D3E90023 		ldrd	r2, [r3]
 784 043e FFF7FEFF 		bl	__aeabi_ddiv
 785              	.LVL90:
 786 0442 FFF7FEFF 		bl	__aeabi_d2uiz
 787              	.LVL91:
 788 0446 80B2     		uxth	r0, r0
 789 0448 154B     		ldr	r3, .L40+64
 790 044a 1880     		strh	r0, [r3]	@ movhi
 384:Src/main.c    **** 
 791              		.loc 1 384 0
 792 044c 094B     		ldr	r3, .L40+20
 793 044e 1880     		strh	r0, [r3]	@ movhi
 386:Src/main.c    **** 			a = 0;
 794              		.loc 1 386 0
 795 0450 952D     		cmp	r5, #149
 796 0452 3FF6EDAE 		bhi	.L33
 389:Src/main.c    **** 		}
 797              		.loc 1 389 0
 798 0456 0135     		adds	r5, r5, #1
 799              	.LVL92:
 800 0458 ADB2     		uxth	r5, r5
 801              	.LVL93:
 802              	.L23:
 391:Src/main.c    **** 			if( n==1 ){
 803              		.loc 1 391 0
 804 045a 0123     		movs	r3, #1
 805 045c F1E6     		b	.L24
 806              	.L41:
 807 045e 00BF     		.align	3
 808              	.L40:
 809 0460 FCA9F1D2 		.word	3539053052
 810 0464 4D62603F 		.word	1063281229
 811 0468 66666666 		.word	1717986918
 812 046c 66661040 		.word	1074816614
 813 0470 ABAAAAAA 		.word	-1431655765
 814 0474 00000000 		.word	.LANCHOR9
 815 0478 00000000 		.word	.LANCHOR11
 816 047c 00000000 		.word	.LANCHOR12
 817 0480 00000000 		.word	.LANCHOR13
 818 0484 00000000 		.word	.LANCHOR2
 819 0488 00000000 		.word	u8g2
 820 048c 00000000 		.word	.LANCHOR5
 821 0490 00000000 		.word	.LANCHOR7
 822 0494 00000000 		.word	.LANCHOR6
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 26


 823 0498 00002440 		.word	1076101120
 824 049c 00004E40 		.word	1078853632
 825 04a0 00000000 		.word	.LANCHOR8
 826              	.LBE5:
 827              		.cfi_endproc
 828              	.LFE126:
 830              		.section	.text.assert_failed,"ax",%progbits
 831              		.align	1
 832              		.global	assert_failed
 833              		.syntax unified
 834              		.thumb
 835              		.thumb_func
 836              		.fpu fpv4-sp-d16
 838              	assert_failed:
 839              	.LFB129:
 504:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 505:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 506:Src/main.c    ****   while(1) 
 507:Src/main.c    ****   {
 508:Src/main.c    ****   }
 509:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */ 
 510:Src/main.c    **** }
 511:Src/main.c    **** 
 512:Src/main.c    **** #ifdef USE_FULL_ASSERT
 513:Src/main.c    **** 
 514:Src/main.c    **** /**
 515:Src/main.c    ****    * @brief Reports the name of the source file and the source line number
 516:Src/main.c    ****    * where the assert_param error has occurred.
 517:Src/main.c    ****    * @param file: pointer to the source file name
 518:Src/main.c    ****    * @param line: assert_param error line source number
 519:Src/main.c    ****    * @retval None
 520:Src/main.c    ****    */
 521:Src/main.c    **** void assert_failed(uint8_t* file, uint32_t line)
 522:Src/main.c    **** {
 840              		.loc 1 522 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 0
 843              		@ frame_needed = 0, uses_anonymous_args = 0
 844              		@ link register save eliminated.
 845              	.LVL94:
 523:Src/main.c    ****   /* USER CODE BEGIN 6 */
 524:Src/main.c    ****   /* User can add his own implementation to report the file name and line number,
 525:Src/main.c    ****     ex: printf("Wrong parameters value: file %s on line %d¥r¥n", file, line) */
 526:Src/main.c    ****   /* USER CODE END 6 */
 527:Src/main.c    **** 
 528:Src/main.c    **** }
 846              		.loc 1 528 0
 847 0000 7047     		bx	lr
 848              		.cfi_endproc
 849              	.LFE129:
 851              		.global	FP_volt
 852              		.global	meas_value
 853              		.global	meas_sign
 854              		.global	meas_frac
 855              		.global	meas_digit
 856              		.global	meas_unit
 857              		.global	meas_name
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 27


 858              		.global	idct_status
 859              		.global	idct_name
 860              		.global	MT
 861              		.global	gear
 862              		.global	speed
 863              		.global	rpm
 864              		.global	logo_bits
 865              		.comm	u8g2,128,4
 866              		.section	.bss.gear,"aw",%nobits
 867              		.set	.LANCHOR7,. + 0
 870              	gear:
 871 0000 00       		.space	1
 872              		.section	.bss.rpm,"aw",%nobits
 873              		.align	1
 874              		.set	.LANCHOR5,. + 0
 877              	rpm:
 878 0000 0000     		.space	2
 879              		.section	.data.FP_volt,"aw",%progbits
 880              		.align	1
 881              		.set	.LANCHOR10,. + 0
 884              	FP_volt:
 885 0000 4A01     		.short	330
 886              		.section	.data.MT,"aw",%progbits
 887              		.align	3
 888              		.set	.LANCHOR6,. + 0
 891              	MT:
 892 0000 77BE9F1A 		.word	446676599
 893 0004 2FDD0B40 		.word	1074519343
 894 0008 1F85EB51 		.word	1374389535
 895 000c B81E0040 		.word	1073749688
 896 0010 A8C64B37 		.word	927712936
 897 0014 8941F63F 		.word	1073103241
 898 0018 00000000 		.word	0
 899 001c 0000F03F 		.word	1072693248
 900 0020 986E1283 		.word	2199023256
 901 0024 C0CAE93F 		.word	1072286400
 902              		.section	.data.meas_value,"aw",%progbits
 903              		.align	2
 904              		.set	.LANCHOR9,. + 0
 907              	meas_value:
 908 0000 8502     		.short	645
 909 0002 6900     		.short	105
 910 0004 EB00     		.short	235
 911 0006 5900     		.short	89
 912 0008 4900     		.short	73
 913 000a 8F00     		.short	143
 914              		.section	.data.speed,"aw",%progbits
 915              		.align	1
 916              		.set	.LANCHOR8,. + 0
 919              	speed:
 920 0000 F000     		.short	240
 921              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 922              		.align	2
 923              	.LC0:
 924 0000 5372632F 		.ascii	"Src/main.c\000"
 924      6D61696E 
 924      2E6300
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 28


 925              		.section	.rodata.idct_name,"a",%progbits
 926              		.align	2
 927              		.set	.LANCHOR4,. + 0
 930              	idct_name:
 931 0000 43414E00 		.ascii	"CAN\000"
 932 0004 00       		.space	1
 933 0005 4F324642 		.ascii	"O2FB\000"
 933      00
 934              		.section	.rodata.idct_status,"a",%progbits
 935              		.align	2
 936              		.set	.LANCHOR3,. + 0
 939              	idct_status:
 940 0000 01       		.byte	1
 941 0001 00       		.byte	0
 942              		.section	.rodata.logo_bits,"a",%progbits
 943              		.align	2
 944              		.set	.LANCHOR0,. + 0
 947              	logo_bits:
 948 0000 00       		.byte	0
 949 0001 00       		.byte	0
 950 0002 00       		.byte	0
 951 0003 00       		.byte	0
 952 0004 00       		.byte	0
 953 0005 00       		.byte	0
 954 0006 00       		.byte	0
 955 0007 00       		.byte	0
 956 0008 00       		.byte	0
 957 0009 00       		.byte	0
 958 000a 00       		.byte	0
 959 000b 00       		.byte	0
 960 000c 00       		.byte	0
 961 000d 00       		.byte	0
 962 000e 00       		.byte	0
 963 000f 00       		.byte	0
 964 0010 00       		.byte	0
 965 0011 00       		.byte	0
 966 0012 00       		.byte	0
 967 0013 00       		.byte	0
 968 0014 00       		.byte	0
 969 0015 00       		.byte	0
 970 0016 00       		.byte	0
 971 0017 00       		.byte	0
 972 0018 00       		.byte	0
 973 0019 00       		.byte	0
 974 001a F0       		.byte	-16
 975 001b 0F       		.byte	15
 976 001c 00       		.byte	0
 977 001d 00       		.byte	0
 978 001e 00       		.byte	0
 979 001f FC       		.byte	-4
 980 0020 FF       		.byte	-1
 981 0021 FF       		.byte	-1
 982 0022 3F       		.byte	63
 983 0023 00       		.byte	0
 984 0024 80       		.byte	-128
 985 0025 FF       		.byte	-1
 986 0026 FF       		.byte	-1
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 29


 987 0027 FF       		.byte	-1
 988 0028 FF       		.byte	-1
 989 0029 01       		.byte	1
 990 002a E0       		.byte	-32
 991 002b 1F       		.byte	31
 992 002c 00       		.byte	0
 993 002d 80       		.byte	-128
 994 002e FF       		.byte	-1
 995 002f 07       		.byte	7
 996 0030 E0       		.byte	-32
 997 0031 01       		.byte	1
 998 0032 00       		.byte	0
 999 0033 80       		.byte	-128
 1000 0034 81       		.byte	-127
 1001 0035 07       		.byte	7
 1002 0036 E0       		.byte	-32
 1003 0037 01       		.byte	1
 1004 0038 00       		.byte	0
 1005 0039 80       		.byte	-128
 1006 003a 81       		.byte	-127
 1007 003b 07       		.byte	7
 1008 003c C0       		.byte	-64
 1009 003d E1       		.byte	-31
 1010 003e 07       		.byte	7
 1011 003f C0       		.byte	-64
 1012 0040 80       		.byte	-128
 1013 0041 03       		.byte	3
 1014 0042 00       		.byte	0
 1015 0043 FC       		.byte	-4
 1016 0044 1F       		.byte	31
 1017 0045 E0       		.byte	-32
 1018 0046 80       		.byte	-128
 1019 0047 03       		.byte	3
 1020 0048 00       		.byte	0
 1021 0049 FE       		.byte	-2
 1022 004a 7F       		.byte	127
 1023 004b 70       		.byte	112
 1024 004c C0       		.byte	-64
 1025 004d 01       		.byte	1
 1026 004e 00       		.byte	0
 1027 004f 0F       		.byte	15
 1028 0050 FE       		.byte	-2
 1029 0051 39       		.byte	57
 1030 0052 E0       		.byte	-32
 1031 0053 00       		.byte	0
 1032 0054 00       		.byte	0
 1033 0055 07       		.byte	7
 1034 0056 F8       		.byte	-8
 1035 0057 1F       		.byte	31
 1036 0058 F0       		.byte	-16
 1037 0059 00       		.byte	0
 1038 005a 00       		.byte	0
 1039 005b 0E       		.byte	14
 1040 005c E0       		.byte	-32
 1041 005d 1F       		.byte	31
 1042 005e 78       		.byte	120
 1043 005f 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 30


 1044 0060 00       		.byte	0
 1045 0061 0C       		.byte	12
 1046 0062 C0       		.byte	-64
 1047 0063 FF       		.byte	-1
 1048 0064 3F       		.byte	63
 1049 0065 00       		.byte	0
 1050 0066 00       		.byte	0
 1051 0067 18       		.byte	24
 1052 0068 00       		.byte	0
 1053 0069 FF       		.byte	-1
 1054 006a 1F       		.byte	31
 1055 006b 00       		.byte	0
 1056 006c 00       		.byte	0
 1057 006d 38       		.byte	56
 1058 006e C0       		.byte	-64
 1059 006f FF       		.byte	-1
 1060 0070 0F       		.byte	15
 1061 0071 00       		.byte	0
 1062 0072 00       		.byte	0
 1063 0073 70       		.byte	112
 1064 0074 E0       		.byte	-32
 1065 0075 F1       		.byte	-15
 1066 0076 03       		.byte	3
 1067 0077 00       		.byte	0
 1068 0078 00       		.byte	0
 1069 0079 E0       		.byte	-32
 1070 007a 78       		.byte	120
 1071 007b 00       		.byte	0
 1072 007c 00       		.byte	0
 1073 007d 00       		.byte	0
 1074 007e 00       		.byte	0
 1075 007f C0       		.byte	-64
 1076 0080 3F       		.byte	63
 1077 0081 E0       		.byte	-32
 1078 0082 01       		.byte	1
 1079 0083 00       		.byte	0
 1080 0084 00       		.byte	0
 1081 0085 80       		.byte	-128
 1082 0086 1F       		.byte	31
 1083 0087 F0       		.byte	-16
 1084 0088 01       		.byte	1
 1085 0089 00       		.byte	0
 1086 008a 00       		.byte	0
 1087 008b 00       		.byte	0
 1088 008c 07       		.byte	7
 1089 008d F8       		.byte	-8
 1090 008e 00       		.byte	0
 1091 008f 00       		.byte	0
 1092 0090 00       		.byte	0
 1093 0091 00       		.byte	0
 1094 0092 1E       		.byte	30
 1095 0093 7C       		.byte	124
 1096 0094 00       		.byte	0
 1097 0095 00       		.byte	0
 1098 0096 00       		.byte	0
 1099 0097 00       		.byte	0
 1100 0098 F8       		.byte	-8
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 31


 1101 0099 1F       		.byte	31
 1102 009a 00       		.byte	0
 1103 009b 00       		.byte	0
 1104 009c 00       		.byte	0
 1105 009d 00       		.byte	0
 1106 009e F0       		.byte	-16
 1107 009f 0F       		.byte	15
 1108 00a0 00       		.byte	0
 1109 00a1 00       		.byte	0
 1110 00a2 00       		.byte	0
 1111 00a3 00       		.byte	0
 1112 00a4 80       		.byte	-128
 1113 00a5 01       		.byte	1
 1114 00a6 00       		.byte	0
 1115 00a7 00       		.byte	0
 1116 00a8 00       		.byte	0
 1117 00a9 00       		.byte	0
 1118 00aa 00       		.byte	0
 1119 00ab 00       		.byte	0
 1120 00ac 00       		.byte	0
 1121 00ad 00       		.byte	0
 1122 00ae 00       		.byte	0
 1123 00af 00       		.byte	0
 1124 00b0 00       		.byte	0
 1125 00b1 00       		.byte	0
 1126 00b2 00       		.byte	0
 1127 00b3 00       		.byte	0
 1128 00b4 00       		.byte	0
 1129 00b5 00       		.byte	0
 1130 00b6 00       		.byte	0
 1131 00b7 00       		.byte	0
 1132 00b8 00       		.byte	0
 1133 00b9 00       		.byte	0
 1134 00ba 00       		.byte	0
 1135 00bb 00       		.byte	0
 1136 00bc 00       		.byte	0
 1137 00bd 00       		.byte	0
 1138 00be 00       		.byte	0
 1139 00bf 00       		.byte	0
 1140 00c0 00       		.byte	0
 1141 00c1 00       		.byte	0
 1142 00c2 00       		.byte	0
 1143 00c3 00       		.byte	0
 1144 00c4 00       		.byte	0
 1145 00c5 00       		.byte	0
 1146 00c6 00       		.byte	0
 1147 00c7 4C       		.byte	76
 1148 00c8 1C       		.byte	28
 1149 00c9 00       		.byte	0
 1150 00ca 00       		.byte	0
 1151 00cb 00       		.byte	0
 1152 00cc 00       		.byte	0
 1153 00cd 32       		.byte	50
 1154 00ce 0E       		.byte	14
 1155 00cf 00       		.byte	0
 1156 00d0 00       		.byte	0
 1157 00d1 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 32


 1158 00d2 00       		.byte	0
 1159 00d3 00       		.byte	0
 1160 00d4 C6       		.byte	-58
 1161 00d5 00       		.byte	0
 1162 00d6 18       		.byte	24
 1163 00d7 00       		.byte	0
 1164 00d8 00       		.byte	0
 1165 00d9 7C       		.byte	124
 1166 00da EF       		.byte	-17
 1167 00db FC       		.byte	-4
 1168 00dc 39       		.byte	57
 1169 00dd 00       		.byte	0
 1170 00de 00       		.byte	0
 1171 00df 4E       		.byte	78
 1172 00e0 C6       		.byte	-58
 1173 00e1 B8       		.byte	-72
 1174 00e2 31       		.byte	49
 1175 00e3 00       		.byte	0
 1176 00e4 00       		.byte	0
 1177 00e5 3E       		.byte	62
 1178 00e6 C6       		.byte	-58
 1179 00e7 98       		.byte	-104
 1180 00e8 31       		.byte	49
 1181 00e9 00       		.byte	0
 1182 00ea 00       		.byte	0
 1183 00eb 3C       		.byte	60
 1184 00ec C6       		.byte	-58
 1185 00ed 98       		.byte	-104
 1186 00ee 31       		.byte	49
 1187 00ef 00       		.byte	0
 1188 00f0 00       		.byte	0
 1189 00f1 0E       		.byte	14
 1190 00f2 C6       		.byte	-58
 1191 00f3 98       		.byte	-104
 1192 00f4 31       		.byte	49
 1193 00f5 00       		.byte	0
 1194 00f6 00       		.byte	0
 1195 00f7 4E       		.byte	78
 1196 00f8 CE       		.byte	-50
 1197 00f9 99       		.byte	-103
 1198 00fa 31       		.byte	49
 1199 00fb 00       		.byte	0
 1200 00fc 00       		.byte	0
 1201 00fd 7C       		.byte	124
 1202 00fe EF       		.byte	-17
 1203 00ff FD       		.byte	-3
 1204 0100 7B       		.byte	123
 1205 0101 00       		.byte	0
 1206 0102 00       		.byte	0
 1207 0103 00       		.byte	0
 1208 0104 00       		.byte	0
 1209 0105 00       		.byte	0
 1210 0106 00       		.byte	0
 1211 0107 00       		.byte	0
 1212 0108 00       		.byte	0
 1213 0109 00       		.byte	0
 1214 010a 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 33


 1215 010b 00       		.byte	0
 1216 010c 00       		.byte	0
 1217 010d 00       		.byte	0
 1218 010e 00       		.byte	0
 1219 010f 00       		.byte	0
 1220 0110 00       		.byte	0
 1221 0111 00       		.byte	0
 1222 0112 00       		.byte	0
 1223 0113 00       		.byte	0
 1224 0114 00       		.byte	0
 1225 0115 00       		.byte	0
 1226 0116 00       		.byte	0
 1227 0117 00       		.byte	0
 1228 0118 00       		.byte	0
 1229 0119 00       		.byte	0
 1230 011a 00       		.byte	0
 1231 011b 00       		.byte	0
 1232 011c 00       		.byte	0
 1233 011d 00       		.byte	0
 1234 011e 00       		.byte	0
 1235 011f 00       		.byte	0
 1236              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1237              		.align	2
 1238              	.LC1:
 1239 0000 4D756C74 		.ascii	"Multi Function Meter\000"
 1239      69204675 
 1239      6E637469 
 1239      6F6E204D 
 1239      65746572 
 1240 0015 000000   		.space	3
 1241              	.LC2:
 1242 0018 5265762E 		.ascii	"Rev. 0.1a\000"
 1242      20302E31 
 1242      6100
 1243 0022 0000     		.space	2
 1244              	.LC3:
 1245 0024 25202000 		.ascii	"%  \000"
 1246              	.LC4:
 1247 0028 44555459 		.ascii	"DUTY\000"
 1247      00
 1248              		.section	.rodata.meas_digit,"a",%progbits
 1249              		.align	2
 1250              		.set	.LANCHOR11,. + 0
 1253              	meas_digit:
 1254 0000 03       		.byte	3
 1255 0001 03       		.byte	3
 1256 0002 03       		.byte	3
 1257 0003 03       		.byte	3
 1258 0004 03       		.byte	3
 1259 0005 03       		.byte	3
 1260              		.section	.rodata.meas_frac,"a",%progbits
 1261              		.align	2
 1262              		.set	.LANCHOR12,. + 0
 1265              	meas_frac:
 1266 0000 02       		.byte	2
 1267 0001 02       		.byte	2
 1268 0002 01       		.byte	1
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 34


 1269 0003 00       		.byte	0
 1270 0004 00       		.byte	0
 1271 0005 02       		.byte	2
 1272              		.section	.rodata.meas_name,"a",%progbits
 1273              		.align	2
 1274              		.set	.LANCHOR1,. + 0
 1277              	meas_name:
 1278 0000 4D415000 		.ascii	"MAP\000"
 1279 0004 000000   		.space	3
 1280 0007 4F494C50 		.ascii	"OILP\000"
 1280      00
 1281 000c 0000     		.space	2
 1282 000e 4650564F 		.ascii	"FPVOLT\000"
 1282      4C5400
 1283 0015 45435400 		.ascii	"ECT\000"
 1284 0019 000000   		.space	3
 1285 001c 4F494C54 		.ascii	"OILT\000"
 1285      00
 1286 0021 0000     		.space	2
 1287 0023 4F3200   		.ascii	"O2\000"
 1288 0026 00000000 		.space	4
 1289              		.section	.rodata.meas_sign,"a",%progbits
 1290              		.align	2
 1291              		.set	.LANCHOR13,. + 0
 1294              	meas_sign:
 1295 0000 01       		.byte	1
 1296 0001 00       		.byte	0
 1297 0002 00       		.byte	0
 1298 0003 00       		.byte	0
 1299 0004 00       		.byte	0
 1300 0005 00       		.byte	0
 1301              		.section	.rodata.meas_unit,"a",%progbits
 1302              		.align	2
 1303              		.set	.LANCHOR2,. + 0
 1306              	meas_unit:
 1307 0000 6B706100 		.ascii	"kpa\000"
 1308 0004 00       		.space	1
 1309 0005 6B706100 		.ascii	"kpa\000"
 1310 0009 00       		.space	1
 1311 000a 56202000 		.ascii	"V  \000"
 1312 000e 00       		.space	1
 1313 000f B0       		.byte	-80
 1314 0010 43       		.byte	67
 1315 0011 00       		.byte	0
 1316 0012 0000     		.space	2
 1317 0014 B0       		.byte	-80
 1318 0015 43       		.byte	67
 1319 0016 00       		.byte	0
 1320 0017 0000     		.space	2
 1321 0019 5600     		.ascii	"V\000"
 1322 001b 000000   		.space	3
 1323              		.text
 1324              	.Letext0:
 1325              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 1326              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 1327              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1328              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 35


 1329              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 1330              		.file 7 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 1331              		.file 8 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 1332              		.file 9 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 1333              		.file 10 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 1334              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1335              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 1336              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 1337              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1338              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 1339              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 1340              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi.h"
 1341              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1342              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 1343              		.file 20 "Inc/adc.h"
 1344              		.file 21 "Inc/spi.h"
 1345              		.file 22 "Inc/tim.h"
 1346              		.file 23 "Inc/usart.h"
 1347              		.file 24 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/math.h"
 1348              		.file 25 "/Users/imashio/Electronics/ARM/_Library/u8x8.h"
 1349              		.file 26 "/Users/imashio/Electronics/ARM/_Library/u8g2.h"
 1350              		.file 27 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 1351              		.file 28 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 1352              		.file 29 "Inc/gpio.h"
 1353              		.file 30 "Inc/dma.h"
 1354              		.file 31 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1355              		.file 32 "<built-in>"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 36


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:18     .text._Error_Handler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:25     .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:41     .text.SystemClock_Config:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:48     .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:167    .text.SystemClock_Config:00000000000000a4 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:178    .text.main:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:185    .text.main:0000000000000000 main
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:654    .text.main:0000000000000300 $d
                            *COM*:0000000000000080 u8g2
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:689    .text.main:0000000000000380 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:809    .text.main:0000000000000460 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:831    .text.assert_failed:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:838    .text.assert_failed:0000000000000000 assert_failed
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:884    .data.FP_volt:0000000000000000 FP_volt
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:907    .data.meas_value:0000000000000000 meas_value
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:1294   .rodata.meas_sign:0000000000000000 meas_sign
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:1265   .rodata.meas_frac:0000000000000000 meas_frac
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:1253   .rodata.meas_digit:0000000000000000 meas_digit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:1306   .rodata.meas_unit:0000000000000000 meas_unit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:1277   .rodata.meas_name:0000000000000000 meas_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:939    .rodata.idct_status:0000000000000000 idct_status
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:930    .rodata.idct_name:0000000000000000 idct_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:891    .data.MT:0000000000000000 MT
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:870    .bss.gear:0000000000000000 gear
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:919    .data.speed:0000000000000000 speed
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:877    .bss.rpm:0000000000000000 rpm
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:947    .rodata.logo_bits:0000000000000000 logo_bits
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:871    .bss.gear:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:873    .bss.rpm:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:880    .data.FP_volt:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:887    .data.MT:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:903    .data.meas_value:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:915    .data.speed:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:922    .rodata.SystemClock_Config.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:926    .rodata.idct_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:935    .rodata.idct_status:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:943    .rodata.logo_bits:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:1237   .rodata.main.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:1249   .rodata.meas_digit:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:1261   .rodata.meas_frac:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:1273   .rodata.meas_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:1290   .rodata.meas_sign:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s:1302   .rodata.meas_unit:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
__aeabi_dmul
__aeabi_d2iz
__aeabi_ui2d
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccB2aS8c.s 			page 37


__aeabi_ddiv
__aeabi_d2uiz
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_USART2_UART_Init
MX_TIM1_Init
MX_USART1_UART_Init
MX_SPI1_Init
MX_ADC1_Init
memset
HAL_ADC_Start_DMA
u8g2_Setup_ssd1309_128x64_noname2_f
HAL_GPIO_WritePin
u8x8_InitDisplay
u8x8_SetPowerSave
u8x8_SetContrast
u8g2_ClearDisplay
u8g2_ClearBuffer
u8g2_DrawXBMP
u8g2_SetFont
u8g2_DrawStr
u8g2_SendBuffer
HAL_Delay
draw_MeasLabelUnit
draw_IndicatorBox
draw_Value
draw_BarGraph
hadc1
u8x8_gpio_and_delay_STM32F303
u8x8_byte_4wire_hw_spi
u8g2_cb_r0
u8g2_font_5x7_tf
