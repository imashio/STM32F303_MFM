ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	_Error_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Error_Handler:
  26              	.LFB128:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2018 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 2


  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  39:Src/main.c    **** #include "main.h"
  40:Src/main.c    **** #include "stm32f3xx_hal.h"
  41:Src/main.c    **** #include "adc.h"
  42:Src/main.c    **** #include "dma.h"
  43:Src/main.c    **** #include "spi.h"
  44:Src/main.c    **** #include "tim.h"
  45:Src/main.c    **** #include "usart.h"
  46:Src/main.c    **** #include "gpio.h"
  47:Src/main.c    **** 
  48:Src/main.c    **** /* USER CODE BEGIN Includes */
  49:Src/main.c    **** #include <stdio.h>
  50:Src/main.c    **** #include <math.h>
  51:Src/main.c    **** 
  52:Src/main.c    **** #include "basic.h"		// original library
  53:Src/main.c    **** #include "u8g2.h"		// graphic display library
  54:Src/main.c    **** #include "u8x8_gpio_STM32F303.h"
  55:Src/main.c    **** #include "u8x8_byte_4wire_hw_spi.h"
  56:Src/main.c    **** 
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END Includes */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE BEGIN PV */
  63:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  64:Src/main.c    **** u8g2_t u8g2; // a structure which will contain all the data for one display
  65:Src/main.c    **** 
  66:Src/main.c    **** // RPM bar graph parameter definition
  67:Src/main.c    **** #define	rpmbar_x		0
  68:Src/main.c    **** #define	rpmbar_y		0
  69:Src/main.c    **** #define	rpmbar_width	128
  70:Src/main.c    **** #define	rpmbar_height	14
  71:Src/main.c    **** #define	rpm_min			0
  72:Src/main.c    **** #define	rpm_max			9000
  73:Src/main.c    **** 
  74:Src/main.c    **** // measurements display parameter definition
  75:Src/main.c    **** #define	N_meas			6
  76:Src/main.c    **** #define	meas_x			0
  77:Src/main.c    **** #define	meas_y			16
  78:Src/main.c    **** #define	meas_x_offset	2
  79:Src/main.c    **** #define	meas_width1		70
  80:Src/main.c    **** #define	meas_width2		56
  81:Src/main.c    **** #define	meas_height		12
  82:Src/main.c    **** 
  83:Src/main.c    **** // indicators parameter definition
  84:Src/main.c    **** #define	N_idct			2
  85:Src/main.c    **** #define	idct_x			72
  86:Src/main.c    **** #define	idct_y			53
  87:Src/main.c    **** #define	idct_width		27
  88:Src/main.c    **** #define	idct_height		9
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    **** //  Fuel Pump Voltage dosplay parameter definition
  91:Src/main.c    **** #define	FP_x			0
  92:Src/main.c    **** #define	FP_y			52
  93:Src/main.c    **** #define	FP_height		12
  94:Src/main.c    **** #define	FP_volt_width	45
  95:Src/main.c    **** #define	FP_duty_width	70
  96:Src/main.c    **** 
  97:Src/main.c    **** // logo parameter definition
  98:Src/main.c    **** #define logo_width 48
  99:Src/main.c    **** #define logo_height 48
 100:Src/main.c    **** 
 101:Src/main.c    **** const unsigned char logo_bits[] = {
 102:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 103:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 104:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0x3F, 0x00,
 105:Src/main.c    ****   0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x1F, 0x00, 0x80, 0xFF, 0x07,
 106:Src/main.c    ****   0xE0, 0x01, 0x00, 0x80, 0x81, 0x07, 0xE0, 0x01, 0x00, 0x80, 0x81, 0x07,
 107:Src/main.c    ****   0xC0, 0xE1, 0x07, 0xC0, 0x80, 0x03, 0x00, 0xFC, 0x1F, 0xE0, 0x80, 0x03,
 108:Src/main.c    ****   0x00, 0xFE, 0x7F, 0x70, 0xC0, 0x01, 0x00, 0x0F, 0xFE, 0x39, 0xE0, 0x00,
 109:Src/main.c    ****   0x00, 0x07, 0xF8, 0x1F, 0xF0, 0x00, 0x00, 0x0E, 0xE0, 0x1F, 0x78, 0x00,
 110:Src/main.c    ****   0x00, 0x0C, 0xC0, 0xFF, 0x3F, 0x00, 0x00, 0x18, 0x00, 0xFF, 0x1F, 0x00,
 111:Src/main.c    ****   0x00, 0x38, 0xC0, 0xFF, 0x0F, 0x00, 0x00, 0x70, 0xE0, 0xF1, 0x03, 0x00,
 112:Src/main.c    ****   0x00, 0xE0, 0x78, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3F, 0xE0, 0x01, 0x00,
 113:Src/main.c    ****   0x00, 0x80, 0x1F, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00,
 114:Src/main.c    ****   0x00, 0x00, 0x1E, 0x7C, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00,
 115:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00,
 116:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 117:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 118:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4C, 0x1C, 0x00, 0x00, 0x00,
 119:Src/main.c    ****   0x00, 0x32, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x00, 0x18, 0x00,
 120:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFC, 0x39, 0x00, 0x00, 0x4E, 0xC6, 0xB8, 0x31, 0x00,
 121:Src/main.c    ****   0x00, 0x3E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x3C, 0xC6, 0x98, 0x31, 0x00,
 122:Src/main.c    ****   0x00, 0x0E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x4E, 0xCE, 0x99, 0x31, 0x00,
 123:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFD, 0x7B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 124:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 125:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 126:Src/main.c    ****   };
 127:Src/main.c    **** 
 128:Src/main.c    **** /*
 129:Src/main.c    **** #define logo_width 54
 130:Src/main.c    **** #define logo_height 48
 131:Src/main.c    **** 
 132:Src/main.c    **** static unsigned char logo_bits[] = {
 133:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0x0F,
 134:Src/main.c    ****   0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0xE0, 0xFF, 0xFF,
 135:Src/main.c    ****   0xFF, 0xFF, 0xFF, 0x01, 0xF8, 0x3F, 0x00, 0x00, 0xF0, 0xFF, 0x07, 0xF8,
 136:Src/main.c    ****   0x01, 0x00, 0x00, 0x70, 0xE0, 0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x80,
 137:Src/main.c    ****   0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00,
 138:Src/main.c    ****   0x38, 0x80, 0x07, 0x00, 0xF8, 0x3F, 0x00, 0x38, 0x80, 0x07, 0x00, 0xFE,
 139:Src/main.c    ****   0xFF, 0x00, 0x1C, 0xC0, 0x03, 0x80, 0xFF, 0xFF, 0x01, 0x0E, 0xC0, 0x01,
 140:Src/main.c    ****   0xC0, 0x07, 0xFC, 0x07, 0x07, 0xE0, 0x01, 0x80, 0x03, 0xF0, 0x9F, 0x03,
 141:Src/main.c    ****   0xF0, 0x00, 0x80, 0x03, 0xC0, 0xFF, 0x03, 0x78, 0x00, 0x00, 0x07, 0x80,
 142:Src/main.c    ****   0xFF, 0x01, 0x3C, 0x00, 0x00, 0x06, 0x00, 0xFE, 0x87, 0x3F, 0x00, 0x00,
 143:Src/main.c    ****   0x0E, 0x00, 0xF8, 0xFF, 0x1F, 0x00, 0x00, 0x1C, 0x00, 0xF8, 0xFF, 0x07,
 144:Src/main.c    ****   0x00, 0x00, 0x38, 0x00, 0xDE, 0xFF, 0x03, 0x00, 0x00, 0x70, 0x00, 0x0F,
 145:Src/main.c    ****   0x7E, 0x00, 0x00, 0x00, 0xE0, 0xC0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xC0,
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 4


 146:Src/main.c    ****   0xF1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x00, 0x7C, 0x00, 0x00,
 147:Src/main.c    ****   0x00, 0x00, 0x3F, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x1F,
 148:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x3C, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x78,
 149:Src/main.c    ****   0xE0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0x03, 0x00, 0x00, 0x00,
 150:Src/main.c    ****   0x00, 0xC0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00,
 151:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00,
 152:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x4E, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39,
 153:Src/main.c    ****   0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00,
 154:Src/main.c    ****   0x00, 0x7E, 0x3E, 0xC7, 0x3D, 0x1C, 0x00, 0x00, 0x6F, 0x3E, 0xC7, 0x7F,
 155:Src/main.c    ****   0x1C, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x73, 0x18, 0x00, 0x00, 0x07, 0x1C,
 156:Src/main.c    ****   0x86, 0x71, 0x18, 0x00, 0x00, 0x3E, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00,
 157:Src/main.c    ****   0x1F, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x71, 0x18,
 158:Src/main.c    ****   0x00, 0x00, 0x47, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x7F, 0x3E, 0xCF,
 159:Src/main.c    ****   0xFB, 0x3C, 0x00, 0x00, 0x3C, 0x3E, 0xCF, 0xFB, 0x3C, 0x00, 0x00, 0x00,
 160:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 161:Src/main.c    ****   };
 162:Src/main.c    **** */
 163:Src/main.c    **** 
 164:Src/main.c    **** uint16_t	rpm = 0;
 165:Src/main.c    **** uint16_t	speed = 240;
 166:Src/main.c    **** uint8_t		gear = 0;
 167:Src/main.c    **** double		MT[5] = {3.483, 2.015, 1.391, 1.000, 0.806};
 168:Src/main.c    **** 
 169:Src/main.c    **** /*
 170:Src/main.c    **** typedef struct {
 171:Src/main.c    **** 	unsigned char	name;
 172:Src/main.c    **** 	uint8_t			status;
 173:Src/main.c    **** } idct;
 174:Src/main.c    **** */
 175:Src/main.c    **** 
 176:Src/main.c    **** // variables for indicators
 177:Src/main.c    **** const unsigned char idct_name[N_idct][5] = { // length must be (text length + 1)
 178:Src/main.c    **** 		"CAN"	,
 179:Src/main.c    **** 		"O2FB"
 180:Src/main.c    **** };
 181:Src/main.c    **** 
 182:Src/main.c    **** const uint8_t	idct_status[N_idct] = {
 183:Src/main.c    **** 		1	,
 184:Src/main.c    **** 		0
 185:Src/main.c    **** };
 186:Src/main.c    **** 
 187:Src/main.c    **** 
 188:Src/main.c    **** // variables for measurement
 189:Src/main.c    **** const unsigned char meas_name[N_meas][7] = { // length must be (text length + 1)
 190:Src/main.c    **** 		"MAP"	,
 191:Src/main.c    **** 		"OILP"	,
 192:Src/main.c    **** 		"FPVOLT"	,
 193:Src/main.c    **** 		"ECT"	,
 194:Src/main.c    **** 		"OILT"	,
 195:Src/main.c    **** 		"O2"
 196:Src/main.c    **** };
 197:Src/main.c    **** 
 198:Src/main.c    **** const unsigned char meas_unit[N_meas][5] = {
 199:Src/main.c    **** 		"kpa"			,	// MAP
 200:Src/main.c    **** 		"kpa"			,	// OILP
 201:Src/main.c    **** 		"V  "     ,	// FuelPump Voltage
 202:Src/main.c    **** 		{176, 67, 0}	,	// ECT  degC...{176, 67, 0}
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 5


 203:Src/main.c    **** 		{176, 67, 0}	,	// OILT  degC...{176, 67, 0}
 204:Src/main.c    **** 		"V"					// O2
 205:Src/main.c    **** };
 206:Src/main.c    **** 
 207:Src/main.c    **** const uint8_t	meas_digit[N_meas] = {
 208:Src/main.c    **** 		3	,	// MAP
 209:Src/main.c    **** 		3	,	// OILP
 210:Src/main.c    **** 		3	,	// FuelPump Voltage
 211:Src/main.c    **** 		3	,	// ECT
 212:Src/main.c    **** 		3	,	// OILT
 213:Src/main.c    **** 		3		// O2
 214:Src/main.c    **** };
 215:Src/main.c    **** 
 216:Src/main.c    **** const uint8_t	meas_frac[N_meas] = {
 217:Src/main.c    **** 		2	,	// MAP
 218:Src/main.c    **** 		2	,	// OILP
 219:Src/main.c    **** 		1	,	// FuelPump Voltage
 220:Src/main.c    **** 		0	,	// ECT
 221:Src/main.c    **** 		0	,	// OILT
 222:Src/main.c    **** 		2		// O2
 223:Src/main.c    **** };
 224:Src/main.c    **** 
 225:Src/main.c    **** const uint8_t	meas_sign[N_meas] = {
 226:Src/main.c    **** 		1	,	// MAP
 227:Src/main.c    **** 		0	,	// OILP
 228:Src/main.c    **** 		0	,	// FuelPump Voltage
 229:Src/main.c    **** 		0	,	// ECT
 230:Src/main.c    **** 		0	,	// OILT
 231:Src/main.c    **** 		0		// O2
 232:Src/main.c    **** };
 233:Src/main.c    **** 
 234:Src/main.c    **** int16_t	meas_value[N_meas] = {
 235:Src/main.c    **** 		645	,	// FuelPump Voltage
 236:Src/main.c    **** 		105	,	// MAP
 237:Src/main.c    **** 		235	,	// OILP
 238:Src/main.c    **** 		89	,	// ECT
 239:Src/main.c    **** 		73	,	// OILT
 240:Src/main.c    **** 		143		// O2
 241:Src/main.c    **** };
 242:Src/main.c    **** 
 243:Src/main.c    **** // Fuel Pump Voltage
 244:Src/main.c    **** int16_t FP_volt = 330;
 245:Src/main.c    **** int16_t FP_duty = 100;
 246:Src/main.c    **** 
 247:Src/main.c    **** /* USER CODE END PV */
 248:Src/main.c    **** 
 249:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 250:Src/main.c    **** void SystemClock_Config(void);
 251:Src/main.c    **** 
 252:Src/main.c    **** /* USER CODE BEGIN PFP */
 253:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 254:Src/main.c    **** 
 255:Src/main.c    **** /* USER CODE END PFP */
 256:Src/main.c    **** 
 257:Src/main.c    **** /* USER CODE BEGIN 0 */
 258:Src/main.c    **** 
 259:Src/main.c    **** /* USER CODE END 0 */
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 6


 260:Src/main.c    **** 
 261:Src/main.c    **** int main(void)
 262:Src/main.c    **** {
 263:Src/main.c    **** 
 264:Src/main.c    ****   /* USER CODE BEGIN 1 */
 265:Src/main.c    **** 
 266:Src/main.c    ****   /* USER CODE END 1 */
 267:Src/main.c    **** 
 268:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 269:Src/main.c    **** 
 270:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 271:Src/main.c    ****   HAL_Init();
 272:Src/main.c    **** 
 273:Src/main.c    ****   /* USER CODE BEGIN Init */
 274:Src/main.c    ****   uint8_t n;
 275:Src/main.c    ****   uint8_t x, y;
 276:Src/main.c    **** 
 277:Src/main.c    ****   uint16_t a = 0;
 278:Src/main.c    ****   uint16_t b = 0;
 279:Src/main.c    **** 
 280:Src/main.c    **** 
 281:Src/main.c    ****   /* USER CODE END Init */
 282:Src/main.c    **** 
 283:Src/main.c    ****   /* Configure the system clock */
 284:Src/main.c    ****   SystemClock_Config();
 285:Src/main.c    **** 
 286:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 287:Src/main.c    **** 
 288:Src/main.c    ****   /* USER CODE END SysInit */
 289:Src/main.c    **** 
 290:Src/main.c    ****   /* Initialize all configured peripherals */
 291:Src/main.c    ****   MX_GPIO_Init();
 292:Src/main.c    ****   MX_DMA_Init();
 293:Src/main.c    ****   MX_USART2_UART_Init();
 294:Src/main.c    ****   MX_TIM1_Init();
 295:Src/main.c    ****   MX_USART1_UART_Init();
 296:Src/main.c    ****   MX_SPI1_Init();
 297:Src/main.c    ****   MX_ADC1_Init();
 298:Src/main.c    **** 
 299:Src/main.c    ****   /* USER CODE BEGIN 2 */
 300:Src/main.c    **** 
 301:Src/main.c    ****   // ADC buffer definition
 302:Src/main.c    ****   enum{ ADC_BUFFER_LENGTH = 1024 };
 303:Src/main.c    ****   uint16_t g_ADCBuffer[ADC_BUFFER_LENGTH];
 304:Src/main.c    ****   memset(g_ADCBuffer, 0, sizeof(g_ADCBuffer));
 305:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, g_ADCBuffer, ADC_BUFFER_LENGTH);
 306:Src/main.c    **** 
 307:Src/main.c    ****   // OLED diaplay initialization
 308:Src/main.c    ****   u8g2_Setup_ssd1309_128x64_noname2_f(&u8g2, U8G2_R0, u8x8_byte_4wire_hw_spi, u8x8_gpio_and_delay_S
 309:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 310:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 311:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 312:Src/main.c    ****   u8g2_SetContrast(&u8g2, 128); // set contrast
 313:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 314:Src/main.c    **** 
 315:Src/main.c    ****   u8g2_ClearBuffer(&u8g2);
 316:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 7


 317:Src/main.c    **** 
 318:Src/main.c    ****   // draw opening
 319:Src/main.c    ****   u8g2_DrawXBMP(&u8g2, 40, 0, logo_width, logo_height, logo_bits );
 320:Src/main.c    **** 
 321:Src/main.c    ****   u8g2_SetFont(&u8g2, u8g2_font_5x7_tf);
 322:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 323:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.1a");
 324:Src/main.c    **** 
 325:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 326:Src/main.c    **** 
 327:Src/main.c    ****   HAL_Delay(2000);
 328:Src/main.c    **** 
 329:Src/main.c    ****   /* USER CODE END 2 */
 330:Src/main.c    **** 
 331:Src/main.c    ****   /* Infinite loop */
 332:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 333:Src/main.c    **** 
 334:Src/main.c    ****   u8g2_ClearBuffer(&u8g2);
 335:Src/main.c    **** 
 336:Src/main.c    **** 
 337:Src/main.c    ****   // draw measurements label & unit
 338:Src/main.c    ****   for( n=0; n<3; n++ ){
 339:Src/main.c    **** 	  x = meas_x;
 340:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 341:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width1, meas_height, meas_name[n], meas_unit[n]);
 342:Src/main.c    ****   }
 343:Src/main.c    ****   for( n=3; n<N_meas; n++ ){
 344:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 345:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 346:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width2, meas_height, meas_name[n], meas_unit[n]);
 347:Src/main.c    ****   }
 348:Src/main.c    **** 
 349:Src/main.c    **** 
 350:Src/main.c    ****   // draw indicators
 351:Src/main.c    ****   for( n=0; n<N_idct; n++ ){
 352:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
 353:Src/main.c    ****   }
 354:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 355:Src/main.c    **** 
 356:Src/main.c    ****   // Fuel Pump voltage & duty
 357:Src/main.c    ****   
 358:Src/main.c    ****   draw_MeasLabelUnit(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, "DUTY", "%  ");
 359:Src/main.c    ****   draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, 100, 3, 0, 0, "%  ");
 360:Src/main.c    **** 
 361:Src/main.c    ****   // update display
 362:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 363:Src/main.c    **** 
 364:Src/main.c    **** 
 365:Src/main.c    ****   while (1)
 366:Src/main.c    ****   {
 367:Src/main.c    ****   /* USER CODE END WHILE */
 368:Src/main.c    **** 
 369:Src/main.c    ****   /* USER CODE BEGIN 3 */
 370:Src/main.c    **** 
 371:Src/main.c    **** 	  	// start of create dummy data for debug
 372:Src/main.c    **** 		if( rpm <= 8200 ){
 373:Src/main.c    **** 			  rpm = rpm + (int)(10*MT[gear]);
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 8


 374:Src/main.c    **** //			  rpm=rpm+10;
 375:Src/main.c    **** 		}else{
 376:Src/main.c    **** 			if( gear < 4 ){
 377:Src/main.c    **** 				gear++;
 378:Src/main.c    **** 				rpm = (double)speed / (0.002*60.0) * (MT[gear]*4.1);
 379:Src/main.c    **** 			}else{
 380:Src/main.c    **** 				gear = 0;
 381:Src/main.c    **** 				rpm = 1000;
 382:Src/main.c    **** 			}
 383:Src/main.c    **** 		}
 384:Src/main.c    **** 		speed = (double)rpm*0.002*60.0/MT[gear]/4.1;
 385:Src/main.c    **** 		meas_value[0] = speed; // speed
 386:Src/main.c    **** 
 387:Src/main.c    **** 		if( a >= 150){
 388:Src/main.c    **** 			a = 0;
 389:Src/main.c    **** 		}else{
 390:Src/main.c    **** 			a++;
 391:Src/main.c    **** 		}
 392:Src/main.c    **** 		for( n=1; n<=5; n++){
 393:Src/main.c    **** 			if( n==1 ){
 394:Src/main.c    **** 				meas_value[n] = a - 75;
 395:Src/main.c    **** 			}else{
 396:Src/main.c    **** 				meas_value[n] = a;
 397:Src/main.c    **** 			}
 398:Src/main.c    **** 		}
 399:Src/main.c    **** 
 400:Src/main.c    **** 	  	// end of create dummy data for debug
 401:Src/main.c    **** 
 402:Src/main.c    **** 
 403:Src/main.c    **** 		// read O2 sensor ADC output
 404:Src/main.c    **** 		meas_value[5] = (int16_t)(330 * (float)g_ADCBuffer[0]/255);
 405:Src/main.c    **** 
 406:Src/main.c    **** 		// read Fuel Pump Voltage ADC output
 407:Src/main.c    **** 		FP_volt = (int16_t)(330*(float)g_ADCBuffer[0]/255);
 408:Src/main.c    ****     FP_duty = (int16_t)(FP_volt/(14.4)*10);
 409:Src/main.c    **** 		meas_value[2] = FP_volt;
 410:Src/main.c    **** 
 411:Src/main.c    **** 		// update Fuel Pump Voltage
 412:Src/main.c    ****     draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, FP_duty, 3, 0, 0, "%  ");
 413:Src/main.c    **** 
 414:Src/main.c    **** 		// draw bar graph
 415:Src/main.c    **** 		draw_BarGraph(&u8g2, rpmbar_x, rpmbar_y, rpmbar_width, rpmbar_height, rpm, rpm_min, rpm_max);
 416:Src/main.c    **** 
 417:Src/main.c    **** 		// draw measurement data
 418:Src/main.c    **** 		for( n=0; n<3; n++ ){
 419:Src/main.c    **** 			x = meas_x;
 420:Src/main.c    **** 			y = (n % 3) * meas_height	+ meas_y;
 421:Src/main.c    **** 			draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac[n], me
 422:Src/main.c    **** 		}
 423:Src/main.c    **** 		for( n=3; n<N_meas; n++ ){
 424:Src/main.c    **** 			x = meas_width1 + meas_x + meas_x_offset;
 425:Src/main.c    **** 			y = (n % 3) * meas_height	+ meas_y;
 426:Src/main.c    **** 			draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac[n], me
 427:Src/main.c    **** 		}
 428:Src/main.c    **** 
 429:Src/main.c    **** 
 430:Src/main.c    **** 		// send buffer
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 9


 431:Src/main.c    **** 	    u8g2_SendBuffer(&u8g2);
 432:Src/main.c    **** 
 433:Src/main.c    ****   }
 434:Src/main.c    ****   /* USER CODE END 3 */
 435:Src/main.c    **** 
 436:Src/main.c    **** }
 437:Src/main.c    **** 
 438:Src/main.c    **** /** System Clock Configuration
 439:Src/main.c    **** */
 440:Src/main.c    **** void SystemClock_Config(void)
 441:Src/main.c    **** {
 442:Src/main.c    **** 
 443:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 444:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 445:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 446:Src/main.c    **** 
 447:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 448:Src/main.c    ****     */
 449:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 450:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 451:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 452:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 453:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 454:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 455:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 456:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 457:Src/main.c    ****   {
 458:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 459:Src/main.c    ****   }
 460:Src/main.c    **** 
 461:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 462:Src/main.c    ****     */
 463:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 464:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 465:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 466:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 467:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 468:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 469:Src/main.c    **** 
 470:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 471:Src/main.c    ****   {
 472:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 473:Src/main.c    ****   }
 474:Src/main.c    **** 
 475:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_TIM1;
 476:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 477:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 478:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 479:Src/main.c    ****   {
 480:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 481:Src/main.c    ****   }
 482:Src/main.c    **** 
 483:Src/main.c    ****     /**Configure the Systick interrupt time 
 484:Src/main.c    ****     */
 485:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 486:Src/main.c    **** 
 487:Src/main.c    ****     /**Configure the Systick 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 10


 488:Src/main.c    ****     */
 489:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 490:Src/main.c    **** 
 491:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 492:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 493:Src/main.c    **** }
 494:Src/main.c    **** 
 495:Src/main.c    **** /* USER CODE BEGIN 4 */
 496:Src/main.c    **** 
 497:Src/main.c    **** /* USER CODE END 4 */
 498:Src/main.c    **** 
 499:Src/main.c    **** /**
 500:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 501:Src/main.c    ****   * @param  None
 502:Src/main.c    ****   * @retval None
 503:Src/main.c    ****   */
 504:Src/main.c    **** void _Error_Handler(char * file, int line)
 505:Src/main.c    **** {
  28              		.loc 1 505 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.L2:
  36 0000 FEE7     		b	.L2
  37              		.cfi_endproc
  38              	.LFE128:
  40              		.section	.text.SystemClock_Config,"ax",%progbits
  41              		.align	1
  42              		.global	SystemClock_Config
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	SystemClock_Config:
  49              	.LFB127:
 441:Src/main.c    **** 
  50              		.loc 1 441 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 88
  53              		@ frame_needed = 0, uses_anonymous_args = 0
 441:Src/main.c    **** 
  54              		.loc 1 441 0
  55 0000 00B5     		push	{lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 14, -4
  59 0002 97B0     		sub	sp, sp, #92
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 96
 449:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
  62              		.loc 1 449 0
  63 0004 0123     		movs	r3, #1
  64 0006 0C93     		str	r3, [sp, #48]
 450:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 11


  65              		.loc 1 450 0
  66 0008 4FF4A022 		mov	r2, #327680
  67 000c 0D92     		str	r2, [sp, #52]
 451:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
  68              		.loc 1 451 0
  69 000e 0022     		movs	r2, #0
  70 0010 0E92     		str	r2, [sp, #56]
 452:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  71              		.loc 1 452 0
  72 0012 1093     		str	r3, [sp, #64]
 453:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  73              		.loc 1 453 0
  74 0014 0223     		movs	r3, #2
  75 0016 1393     		str	r3, [sp, #76]
 454:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
  76              		.loc 1 454 0
  77 0018 4FF48033 		mov	r3, #65536
  78 001c 1493     		str	r3, [sp, #80]
 455:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
  79              		.loc 1 455 0
  80 001e 4FF4E013 		mov	r3, #1835008
  81 0022 1593     		str	r3, [sp, #84]
 456:Src/main.c    ****   {
  82              		.loc 1 456 0
  83 0024 0CA8     		add	r0, sp, #48
  84 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
  85              	.LVL1:
  86 002a 58BB     		cbnz	r0, .L8
 463:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  87              		.loc 1 463 0
  88 002c 0F23     		movs	r3, #15
  89 002e 0793     		str	r3, [sp, #28]
 465:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
  90              		.loc 1 465 0
  91 0030 0221     		movs	r1, #2
  92 0032 0891     		str	r1, [sp, #32]
 466:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  93              		.loc 1 466 0
  94 0034 0023     		movs	r3, #0
  95 0036 0993     		str	r3, [sp, #36]
 467:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  96              		.loc 1 467 0
  97 0038 4FF48062 		mov	r2, #1024
  98 003c 0A92     		str	r2, [sp, #40]
 468:Src/main.c    **** 
  99              		.loc 1 468 0
 100 003e 0B93     		str	r3, [sp, #44]
 470:Src/main.c    ****   {
 101              		.loc 1 470 0
 102 0040 07A8     		add	r0, sp, #28
 103 0042 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 104              	.LVL2:
 105 0046 10BB     		cbnz	r0, .L9
 475:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 106              		.loc 1 475 0
 107 0048 41F20103 		movw	r3, #4097
 108 004c 0193     		str	r3, [sp, #4]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 12


 476:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 109              		.loc 1 476 0
 110 004e 0023     		movs	r3, #0
 111 0050 0393     		str	r3, [sp, #12]
 477:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 112              		.loc 1 477 0
 113 0052 0693     		str	r3, [sp, #24]
 478:Src/main.c    ****   {
 114              		.loc 1 478 0
 115 0054 01A8     		add	r0, sp, #4
 116 0056 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 117              	.LVL3:
 118 005a E8B9     		cbnz	r0, .L10
 485:Src/main.c    **** 
 119              		.loc 1 485 0
 120 005c FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 121              	.LVL4:
 122 0060 104B     		ldr	r3, .L11
 123 0062 A3FB0030 		umull	r3, r0, r3, r0
 124 0066 8009     		lsrs	r0, r0, #6
 125 0068 FFF7FEFF 		bl	HAL_SYSTICK_Config
 126              	.LVL5:
 489:Src/main.c    **** 
 127              		.loc 1 489 0
 128 006c 0420     		movs	r0, #4
 129 006e FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 130              	.LVL6:
 492:Src/main.c    **** }
 131              		.loc 1 492 0
 132 0072 0022     		movs	r2, #0
 133 0074 1146     		mov	r1, r2
 134 0076 4FF0FF30 		mov	r0, #-1
 135 007a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 136              	.LVL7:
 493:Src/main.c    **** 
 137              		.loc 1 493 0
 138 007e 17B0     		add	sp, sp, #92
 139              	.LCFI2:
 140              		.cfi_remember_state
 141              		.cfi_def_cfa_offset 4
 142              		@ sp needed
 143 0080 5DF804FB 		ldr	pc, [sp], #4
 144              	.L8:
 145              	.LCFI3:
 146              		.cfi_restore_state
 458:Src/main.c    ****   }
 147              		.loc 1 458 0
 148 0084 4FF4E571 		mov	r1, #458
 149 0088 0748     		ldr	r0, .L11+4
 150 008a FFF7FEFF 		bl	_Error_Handler
 151              	.LVL8:
 152              	.L9:
 472:Src/main.c    ****   }
 153              		.loc 1 472 0
 154 008e 4FF4EC71 		mov	r1, #472
 155 0092 0548     		ldr	r0, .L11+4
 156 0094 FFF7FEFF 		bl	_Error_Handler
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 13


 157              	.LVL9:
 158              	.L10:
 480:Src/main.c    ****   }
 159              		.loc 1 480 0
 160 0098 4FF4F071 		mov	r1, #480
 161 009c 0248     		ldr	r0, .L11+4
 162 009e FFF7FEFF 		bl	_Error_Handler
 163              	.LVL10:
 164              	.L12:
 165 00a2 00BF     		.align	2
 166              	.L11:
 167 00a4 D34D6210 		.word	274877907
 168 00a8 00000000 		.word	.LC0
 169              		.cfi_endproc
 170              	.LFE127:
 172              		.global	__aeabi_dmul
 173              		.global	__aeabi_d2iz
 174              		.global	__aeabi_ui2d
 175              		.global	__aeabi_ddiv
 176              		.global	__aeabi_d2uiz
 177              		.global	__aeabi_i2d
 178              		.section	.text.main,"ax",%progbits
 179              		.align	1
 180              		.global	main
 181              		.syntax unified
 182              		.thumb
 183              		.thumb_func
 184              		.fpu fpv4-sp-d16
 186              	main:
 187              	.LFB126:
 262:Src/main.c    **** 
 188              		.loc 1 262 0
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 2048
 191              		@ frame_needed = 0, uses_anonymous_args = 0
 192 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 193              	.LCFI4:
 194              		.cfi_def_cfa_offset 20
 195              		.cfi_offset 4, -20
 196              		.cfi_offset 5, -16
 197              		.cfi_offset 6, -12
 198              		.cfi_offset 7, -8
 199              		.cfi_offset 14, -4
 200 0002 ADF61C0D 		subw	sp, sp, #2076
 201              	.LCFI5:
 202              		.cfi_def_cfa_offset 2096
 271:Src/main.c    **** 
 203              		.loc 1 271 0
 204 0006 FFF7FEFF 		bl	HAL_Init
 205              	.LVL11:
 284:Src/main.c    **** 
 206              		.loc 1 284 0
 207 000a FFF7FEFF 		bl	SystemClock_Config
 208              	.LVL12:
 291:Src/main.c    ****   MX_DMA_Init();
 209              		.loc 1 291 0
 210 000e FFF7FEFF 		bl	MX_GPIO_Init
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 14


 211              	.LVL13:
 292:Src/main.c    ****   MX_USART2_UART_Init();
 212              		.loc 1 292 0
 213 0012 FFF7FEFF 		bl	MX_DMA_Init
 214              	.LVL14:
 293:Src/main.c    ****   MX_TIM1_Init();
 215              		.loc 1 293 0
 216 0016 FFF7FEFF 		bl	MX_USART2_UART_Init
 217              	.LVL15:
 294:Src/main.c    ****   MX_USART1_UART_Init();
 218              		.loc 1 294 0
 219 001a FFF7FEFF 		bl	MX_TIM1_Init
 220              	.LVL16:
 295:Src/main.c    ****   MX_SPI1_Init();
 221              		.loc 1 295 0
 222 001e FFF7FEFF 		bl	MX_USART1_UART_Init
 223              	.LVL17:
 296:Src/main.c    ****   MX_ADC1_Init();
 224              		.loc 1 296 0
 225 0022 FFF7FEFF 		bl	MX_SPI1_Init
 226              	.LVL18:
 297:Src/main.c    **** 
 227              		.loc 1 297 0
 228 0026 FFF7FEFF 		bl	MX_ADC1_Init
 229              	.LVL19:
 304:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, g_ADCBuffer, ADC_BUFFER_LENGTH);
 230              		.loc 1 304 0
 231 002a 4FF40062 		mov	r2, #2048
 232 002e 0021     		movs	r1, #0
 233 0030 06A8     		add	r0, sp, #24
 234 0032 FFF7FEFF 		bl	memset
 235              	.LVL20:
 305:Src/main.c    **** 
 236              		.loc 1 305 0
 237 0036 4FF48062 		mov	r2, #1024
 238 003a 06A9     		add	r1, sp, #24
 239 003c B048     		ldr	r0, .L38+24
 240 003e FFF7FEFF 		bl	HAL_ADC_Start_DMA
 241              	.LVL21:
 308:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 242              		.loc 1 308 0
 243 0042 B04C     		ldr	r4, .L38+28
 244 0044 B04B     		ldr	r3, .L38+32
 245 0046 B14A     		ldr	r2, .L38+36
 246 0048 B149     		ldr	r1, .L38+40
 247 004a 2046     		mov	r0, r4
 248 004c FFF7FEFF 		bl	u8g2_Setup_ssd1309_128x64_noname2_f
 249              	.LVL22:
 309:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 250              		.loc 1 309 0
 251 0050 0122     		movs	r2, #1
 252 0052 0821     		movs	r1, #8
 253 0054 AF48     		ldr	r0, .L38+44
 254 0056 FFF7FEFF 		bl	HAL_GPIO_WritePin
 255              	.LVL23:
 310:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 256              		.loc 1 310 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 15


 257 005a 2046     		mov	r0, r4
 258 005c FFF7FEFF 		bl	u8x8_InitDisplay
 259              	.LVL24:
 311:Src/main.c    ****   u8g2_SetContrast(&u8g2, 128); // set contrast
 260              		.loc 1 311 0
 261 0060 0021     		movs	r1, #0
 262 0062 2046     		mov	r0, r4
 263 0064 FFF7FEFF 		bl	u8x8_SetPowerSave
 264              	.LVL25:
 312:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 265              		.loc 1 312 0
 266 0068 8021     		movs	r1, #128
 267 006a 2046     		mov	r0, r4
 268 006c FFF7FEFF 		bl	u8x8_SetContrast
 269              	.LVL26:
 313:Src/main.c    **** 
 270              		.loc 1 313 0
 271 0070 2046     		mov	r0, r4
 272 0072 FFF7FEFF 		bl	u8g2_ClearDisplay
 273              	.LVL27:
 315:Src/main.c    **** 
 274              		.loc 1 315 0
 275 0076 2046     		mov	r0, r4
 276 0078 FFF7FEFF 		bl	u8g2_ClearBuffer
 277              	.LVL28:
 319:Src/main.c    **** 
 278              		.loc 1 319 0
 279 007c A64B     		ldr	r3, .L38+48
 280 007e 0193     		str	r3, [sp, #4]
 281 0080 3023     		movs	r3, #48
 282 0082 0093     		str	r3, [sp]
 283 0084 0022     		movs	r2, #0
 284 0086 2821     		movs	r1, #40
 285 0088 2046     		mov	r0, r4
 286 008a FFF7FEFF 		bl	u8g2_DrawXBMP
 287              	.LVL29:
 321:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 288              		.loc 1 321 0
 289 008e A349     		ldr	r1, .L38+52
 290 0090 2046     		mov	r0, r4
 291 0092 FFF7FEFF 		bl	u8g2_SetFont
 292              	.LVL30:
 322:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.1a");
 293              		.loc 1 322 0
 294 0096 A24B     		ldr	r3, .L38+56
 295 0098 3722     		movs	r2, #55
 296 009a 1021     		movs	r1, #16
 297 009c 2046     		mov	r0, r4
 298 009e FFF7FEFF 		bl	u8g2_DrawStr
 299              	.LVL31:
 323:Src/main.c    **** 
 300              		.loc 1 323 0
 301 00a2 A04B     		ldr	r3, .L38+60
 302 00a4 4022     		movs	r2, #64
 303 00a6 2821     		movs	r1, #40
 304 00a8 2046     		mov	r0, r4
 305 00aa FFF7FEFF 		bl	u8g2_DrawStr
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 16


 306              	.LVL32:
 325:Src/main.c    **** 
 307              		.loc 1 325 0
 308 00ae 2046     		mov	r0, r4
 309 00b0 FFF7FEFF 		bl	u8g2_SendBuffer
 310              	.LVL33:
 327:Src/main.c    **** 
 311              		.loc 1 327 0
 312 00b4 4FF4FA60 		mov	r0, #2000
 313 00b8 FFF7FEFF 		bl	HAL_Delay
 314              	.LVL34:
 334:Src/main.c    **** 
 315              		.loc 1 334 0
 316 00bc 2046     		mov	r0, r4
 317 00be FFF7FEFF 		bl	u8g2_ClearBuffer
 318              	.LVL35:
 338:Src/main.c    **** 	  x = meas_x;
 319              		.loc 1 338 0
 320 00c2 0024     		movs	r4, #0
 321 00c4 20E0     		b	.L14
 322              	.LVL36:
 323              	.L15:
 324              	.LBB2:
 340:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width1, meas_height, meas_name[n], meas_unit[n]);
 325              		.loc 1 340 0 discriminator 3
 326 00c6 984B     		ldr	r3, .L38+64
 327 00c8 A3FB0423 		umull	r2, r3, r3, r4
 328 00cc 5B08     		lsrs	r3, r3, #1
 329 00ce 03EB4303 		add	r3, r3, r3, lsl #1
 330 00d2 E31A     		subs	r3, r4, r3
 331 00d4 03EB4303 		add	r3, r3, r3, lsl #1
 332 00d8 9A00     		lsls	r2, r3, #2
 333 00da D2B2     		uxtb	r2, r2
 334 00dc 1032     		adds	r2, r2, #16
 335              	.LVL37:
 341:Src/main.c    ****   }
 336              		.loc 1 341 0 discriminator 3
 337 00de C4EBC401 		rsb	r1, r4, r4, lsl #3
 338 00e2 924B     		ldr	r3, .L38+68
 339 00e4 0B44     		add	r3, r3, r1
 340 00e6 04EB8400 		add	r0, r4, r4, lsl #2
 341 00ea 9149     		ldr	r1, .L38+72
 342 00ec 0144     		add	r1, r1, r0
 343 00ee 0291     		str	r1, [sp, #8]
 344 00f0 0193     		str	r3, [sp, #4]
 345 00f2 0C23     		movs	r3, #12
 346 00f4 0093     		str	r3, [sp]
 347 00f6 4623     		movs	r3, #70
 348 00f8 02F0FC02 		and	r2, r2, #252
 349              	.LVL38:
 350 00fc 0021     		movs	r1, #0
 351 00fe 8148     		ldr	r0, .L38+28
 352 0100 FFF7FEFF 		bl	draw_MeasLabelUnit
 353              	.LVL39:
 354              	.LBE2:
 338:Src/main.c    **** 	  x = meas_x;
 355              		.loc 1 338 0 discriminator 3
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 17


 356 0104 0134     		adds	r4, r4, #1
 357              	.LVL40:
 358 0106 E4B2     		uxtb	r4, r4
 359              	.LVL41:
 360              	.L14:
 338:Src/main.c    **** 	  x = meas_x;
 361              		.loc 1 338 0 is_stmt 0 discriminator 1
 362 0108 022C     		cmp	r4, #2
 363 010a DCD9     		bls	.L15
 343:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 364              		.loc 1 343 0 is_stmt 1
 365 010c 0324     		movs	r4, #3
 366              	.LVL42:
 367 010e 20E0     		b	.L16
 368              	.LVL43:
 369              	.L17:
 370              	.LBB3:
 345:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width2, meas_height, meas_name[n], meas_unit[n]);
 371              		.loc 1 345 0 discriminator 3
 372 0110 854B     		ldr	r3, .L38+64
 373 0112 A3FB0423 		umull	r2, r3, r3, r4
 374 0116 5B08     		lsrs	r3, r3, #1
 375 0118 03EB4303 		add	r3, r3, r3, lsl #1
 376 011c E31A     		subs	r3, r4, r3
 377 011e 03EB4303 		add	r3, r3, r3, lsl #1
 378 0122 9A00     		lsls	r2, r3, #2
 379 0124 D2B2     		uxtb	r2, r2
 380 0126 1032     		adds	r2, r2, #16
 381              	.LVL44:
 346:Src/main.c    ****   }
 382              		.loc 1 346 0 discriminator 3
 383 0128 C4EBC401 		rsb	r1, r4, r4, lsl #3
 384 012c 7F4B     		ldr	r3, .L38+68
 385 012e 0B44     		add	r3, r3, r1
 386 0130 04EB8400 		add	r0, r4, r4, lsl #2
 387 0134 7E49     		ldr	r1, .L38+72
 388 0136 0144     		add	r1, r1, r0
 389 0138 0291     		str	r1, [sp, #8]
 390 013a 0193     		str	r3, [sp, #4]
 391 013c 0C23     		movs	r3, #12
 392 013e 0093     		str	r3, [sp]
 393 0140 3823     		movs	r3, #56
 394 0142 02F0FC02 		and	r2, r2, #252
 395              	.LVL45:
 396 0146 4821     		movs	r1, #72
 397 0148 6E48     		ldr	r0, .L38+28
 398 014a FFF7FEFF 		bl	draw_MeasLabelUnit
 399              	.LVL46:
 400              	.LBE3:
 343:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 401              		.loc 1 343 0 discriminator 3
 402 014e 0134     		adds	r4, r4, #1
 403              	.LVL47:
 404 0150 E4B2     		uxtb	r4, r4
 405              	.LVL48:
 406              	.L16:
 343:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 18


 407              		.loc 1 343 0 is_stmt 0 discriminator 1
 408 0152 052C     		cmp	r4, #5
 409 0154 DCD9     		bls	.L17
 351:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
 410              		.loc 1 351 0 is_stmt 1
 411 0156 0024     		movs	r4, #0
 412              	.LVL49:
 413              	.L18:
 351:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
 414              		.loc 1 351 0 is_stmt 0 discriminator 1
 415 0158 012C     		cmp	r4, #1
 416 015a 16D8     		bhi	.L35
 417              	.LBB4:
 352:Src/main.c    ****   }
 418              		.loc 1 352 0 is_stmt 1 discriminator 3
 419 015c C4EBC401 		rsb	r1, r4, r4, lsl #3
 420 0160 04EB8101 		add	r1, r4, r1, lsl #2
 421 0164 734B     		ldr	r3, .L38+76
 422 0166 1A5D     		ldrb	r2, [r3, r4]	@ zero_extendqisi2
 423 0168 04EB8400 		add	r0, r4, r4, lsl #2
 424 016c 724B     		ldr	r3, .L38+80
 425 016e 0344     		add	r3, r3, r0
 426 0170 0293     		str	r3, [sp, #8]
 427 0172 0192     		str	r2, [sp, #4]
 428 0174 0923     		movs	r3, #9
 429 0176 0093     		str	r3, [sp]
 430 0178 1B23     		movs	r3, #27
 431 017a 3522     		movs	r2, #53
 432 017c 4831     		adds	r1, r1, #72
 433 017e 6148     		ldr	r0, .L38+28
 434 0180 FFF7FEFF 		bl	draw_IndicatorBox
 435              	.LVL50:
 436              	.LBE4:
 351:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
 437              		.loc 1 351 0 discriminator 3
 438 0184 0134     		adds	r4, r4, #1
 439              	.LVL51:
 440 0186 E4B2     		uxtb	r4, r4
 441              	.LVL52:
 442 0188 E6E7     		b	.L18
 443              	.L35:
 354:Src/main.c    **** 
 444              		.loc 1 354 0
 445 018a 5E4C     		ldr	r4, .L38+28
 446              	.LVL53:
 447 018c 2046     		mov	r0, r4
 448 018e FFF7FEFF 		bl	u8g2_SendBuffer
 449              	.LVL54:
 358:Src/main.c    ****   draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, 100, 3, 0, 0, "%  ");
 450              		.loc 1 358 0
 451 0192 6A4D     		ldr	r5, .L38+84
 452 0194 0295     		str	r5, [sp, #8]
 453 0196 6A4B     		ldr	r3, .L38+88
 454 0198 0193     		str	r3, [sp, #4]
 455 019a 0C26     		movs	r6, #12
 456 019c 0096     		str	r6, [sp]
 457 019e 4623     		movs	r3, #70
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 19


 458 01a0 3422     		movs	r2, #52
 459 01a2 0021     		movs	r1, #0
 460 01a4 2046     		mov	r0, r4
 461 01a6 FFF7FEFF 		bl	draw_MeasLabelUnit
 462              	.LVL55:
 359:Src/main.c    **** 
 463              		.loc 1 359 0
 464 01aa 0595     		str	r5, [sp, #20]
 465 01ac 0025     		movs	r5, #0
 466 01ae 0495     		str	r5, [sp, #16]
 467 01b0 0395     		str	r5, [sp, #12]
 468 01b2 0323     		movs	r3, #3
 469 01b4 0293     		str	r3, [sp, #8]
 470 01b6 6423     		movs	r3, #100
 471 01b8 0193     		str	r3, [sp, #4]
 472 01ba 0096     		str	r6, [sp]
 473 01bc 4623     		movs	r3, #70
 474 01be 3422     		movs	r2, #52
 475 01c0 2946     		mov	r1, r5
 476 01c2 2046     		mov	r0, r4
 477 01c4 FFF7FEFF 		bl	draw_Value
 478              	.LVL56:
 362:Src/main.c    **** 
 479              		.loc 1 362 0
 480 01c8 2046     		mov	r0, r4
 481 01ca FFF7FEFF 		bl	u8g2_SendBuffer
 482              	.LVL57:
 483 01ce 28E1     		b	.L32
 484              	.LVL58:
 485              	.L20:
 486              	.LBB5:
 376:Src/main.c    **** 				gear++;
 487              		.loc 1 376 0
 488 01d0 5C4B     		ldr	r3, .L38+92
 489 01d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 490 01d4 032B     		cmp	r3, #3
 491 01d6 23D8     		bhi	.L22
 377:Src/main.c    **** 				rpm = (double)speed / (0.002*60.0) * (MT[gear]*4.1);
 492              		.loc 1 377 0
 493 01d8 0133     		adds	r3, r3, #1
 494 01da DCB2     		uxtb	r4, r3
 495 01dc 594B     		ldr	r3, .L38+92
 496 01de 1C70     		strb	r4, [r3]
 378:Src/main.c    **** 			}else{
 497              		.loc 1 378 0
 498 01e0 594B     		ldr	r3, .L38+96
 499 01e2 1888     		ldrh	r0, [r3]
 500 01e4 FFF7FEFF 		bl	__aeabi_ui2d
 501              	.LVL59:
 502 01e8 3FA3     		adr	r3, .L38
 503 01ea D3E90023 		ldrd	r2, [r3]
 504 01ee FFF7FEFF 		bl	__aeabi_ddiv
 505              	.LVL60:
 506 01f2 0646     		mov	r6, r0
 507 01f4 0F46     		mov	r7, r1
 508 01f6 554B     		ldr	r3, .L38+100
 509 01f8 03EBC404 		add	r4, r3, r4, lsl #3
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 20


 510 01fc 3CA3     		adr	r3, .L38+8
 511 01fe D3E90023 		ldrd	r2, [r3]
 512 0202 D4E90001 		ldrd	r0, [r4]
 513 0206 FFF7FEFF 		bl	__aeabi_dmul
 514              	.LVL61:
 515 020a 0246     		mov	r2, r0
 516 020c 0B46     		mov	r3, r1
 517 020e 3046     		mov	r0, r6
 518 0210 3946     		mov	r1, r7
 519 0212 FFF7FEFF 		bl	__aeabi_dmul
 520              	.LVL62:
 521 0216 FFF7FEFF 		bl	__aeabi_d2uiz
 522              	.LVL63:
 523 021a 4D4B     		ldr	r3, .L38+104
 524 021c 1880     		strh	r0, [r3]	@ movhi
 525 021e 17E1     		b	.L21
 526              	.L22:
 380:Src/main.c    **** 				rpm = 1000;
 527              		.loc 1 380 0
 528 0220 484B     		ldr	r3, .L38+92
 529 0222 0022     		movs	r2, #0
 530 0224 1A70     		strb	r2, [r3]
 381:Src/main.c    **** 			}
 531              		.loc 1 381 0
 532 0226 4A4B     		ldr	r3, .L38+104
 533 0228 4FF47A72 		mov	r2, #1000
 534 022c 1A80     		strh	r2, [r3]	@ movhi
 535 022e 0FE1     		b	.L21
 536              	.L33:
 388:Src/main.c    **** 		}else{
 537              		.loc 1 388 0
 538 0230 0025     		movs	r5, #0
 539              	.LVL64:
 540 0232 34E1     		b	.L23
 541              	.LVL65:
 542              	.L37:
 394:Src/main.c    **** 			}else{
 543              		.loc 1 394 0
 544 0234 A5F14B02 		sub	r2, r5, #75
 545 0238 4649     		ldr	r1, .L38+108
 546 023a 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 547              	.L26:
 392:Src/main.c    **** 			if( n==1 ){
 548              		.loc 1 392 0 discriminator 2
 549 023e 0133     		adds	r3, r3, #1
 550              	.LVL66:
 551 0240 DBB2     		uxtb	r3, r3
 552              	.LVL67:
 553              	.L24:
 392:Src/main.c    **** 			if( n==1 ){
 554              		.loc 1 392 0 is_stmt 0 discriminator 1
 555 0242 052B     		cmp	r3, #5
 556 0244 05D8     		bhi	.L36
 393:Src/main.c    **** 				meas_value[n] = a - 75;
 557              		.loc 1 393 0 is_stmt 1
 558 0246 012B     		cmp	r3, #1
 559 0248 F4D0     		beq	.L37
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 21


 396:Src/main.c    **** 			}
 560              		.loc 1 396 0
 561 024a 424A     		ldr	r2, .L38+108
 562 024c 22F81350 		strh	r5, [r2, r3, lsl #1]	@ movhi
 563 0250 F5E7     		b	.L26
 564              	.L36:
 404:Src/main.c    **** 
 565              		.loc 1 404 0
 566 0252 BDF81830 		ldrh	r3, [sp, #24]
 567              	.LVL68:
 568 0256 07EE103A 		vmov	s14, r3	@ int
 569 025a B8EE477A 		vcvt.f32.u32	s14, s14
 570 025e DFED3E7A 		vldr.32	s15, .L38+112
 571 0262 27EE277A 		vmul.f32	s14, s14, s15
 572 0266 DFED3D6A 		vldr.32	s13, .L38+116
 573 026a C7EE267A 		vdiv.f32	s15, s14, s13
 574 026e FDEEE77A 		vcvt.s32.f32	s15, s15
 575 0272 17EE903A 		vmov	r3, s15	@ int
 576 0276 1CB2     		sxth	r4, r3
 577 0278 364E     		ldr	r6, .L38+108
 578 027a 7481     		strh	r4, [r6, #10]	@ movhi
 407:Src/main.c    ****     FP_duty = (int16_t)(FP_volt/(14.4)*10);
 579              		.loc 1 407 0
 580 027c 384B     		ldr	r3, .L38+120
 581 027e 1C80     		strh	r4, [r3]	@ movhi
 408:Src/main.c    **** 		meas_value[2] = FP_volt;
 582              		.loc 1 408 0
 583 0280 2046     		mov	r0, r4
 584 0282 FFF7FEFF 		bl	__aeabi_i2d
 585              	.LVL69:
 586 0286 1CA3     		adr	r3, .L38+16
 587 0288 D3E90023 		ldrd	r2, [r3]
 588 028c FFF7FEFF 		bl	__aeabi_ddiv
 589              	.LVL70:
 590 0290 0022     		movs	r2, #0
 591 0292 344B     		ldr	r3, .L38+124
 592 0294 FFF7FEFF 		bl	__aeabi_dmul
 593              	.LVL71:
 594 0298 FFF7FEFF 		bl	__aeabi_d2iz
 595              	.LVL72:
 596 029c 00B2     		sxth	r0, r0
 597 029e 324B     		ldr	r3, .L38+128
 598 02a0 1880     		strh	r0, [r3]	@ movhi
 409:Src/main.c    **** 
 599              		.loc 1 409 0
 600 02a2 B480     		strh	r4, [r6, #4]	@ movhi
 412:Src/main.c    **** 
 601              		.loc 1 412 0
 602 02a4 174E     		ldr	r6, .L38+28
 603 02a6 254B     		ldr	r3, .L38+84
 604 02a8 0593     		str	r3, [sp, #20]
 605 02aa 0024     		movs	r4, #0
 606 02ac 0494     		str	r4, [sp, #16]
 607 02ae 0394     		str	r4, [sp, #12]
 608 02b0 0323     		movs	r3, #3
 609 02b2 0293     		str	r3, [sp, #8]
 610 02b4 0190     		str	r0, [sp, #4]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 22


 611 02b6 0C23     		movs	r3, #12
 612 02b8 0093     		str	r3, [sp]
 613 02ba 4623     		movs	r3, #70
 614 02bc 3422     		movs	r2, #52
 615 02be 2146     		mov	r1, r4
 616 02c0 3046     		mov	r0, r6
 617 02c2 FFF7FEFF 		bl	draw_Value
 618              	.LVL73:
 415:Src/main.c    **** 
 619              		.loc 1 415 0
 620 02c6 42F22833 		movw	r3, #9000
 621 02ca 0393     		str	r3, [sp, #12]
 622 02cc 0294     		str	r4, [sp, #8]
 623 02ce 204B     		ldr	r3, .L38+104
 624 02d0 1B88     		ldrh	r3, [r3]
 625 02d2 0193     		str	r3, [sp, #4]
 626 02d4 0E23     		movs	r3, #14
 627 02d6 0093     		str	r3, [sp]
 628 02d8 8023     		movs	r3, #128
 629 02da 2246     		mov	r2, r4
 630 02dc 2146     		mov	r1, r4
 631 02de 3046     		mov	r0, r6
 632 02e0 FFF7FEFF 		bl	draw_BarGraph
 633              	.LVL74:
 418:Src/main.c    **** 			x = meas_x;
 634              		.loc 1 418 0
 635 02e4 6BE0     		b	.L28
 636              	.L39:
 637 02e6 00BF     		.align	3
 638              	.L38:
 639 02e8 B81E85EB 		.word	3951369912
 640 02ec 51B8BE3F 		.word	1069463633
 641 02f0 66666666 		.word	1717986918
 642 02f4 66661040 		.word	1074816614
 643 02f8 CDCCCCCC 		.word	3435973837
 644 02fc CCCC2C40 		.word	1076677836
 645 0300 00000000 		.word	hadc1
 646 0304 00000000 		.word	u8g2
 647 0308 00000000 		.word	u8x8_gpio_and_delay_STM32F303
 648 030c 00000000 		.word	u8x8_byte_4wire_hw_spi
 649 0310 00000000 		.word	u8g2_cb_r0
 650 0314 00040048 		.word	1207960576
 651 0318 00000000 		.word	.LANCHOR0
 652 031c 00000000 		.word	u8g2_font_5x7_tf
 653 0320 00000000 		.word	.LC1
 654 0324 18000000 		.word	.LC2
 655 0328 ABAAAAAA 		.word	-1431655765
 656 032c 00000000 		.word	.LANCHOR1
 657 0330 00000000 		.word	.LANCHOR2
 658 0334 00000000 		.word	.LANCHOR3
 659 0338 00000000 		.word	.LANCHOR4
 660 033c 24000000 		.word	.LC3
 661 0340 28000000 		.word	.LC4
 662 0344 00000000 		.word	.LANCHOR7
 663 0348 00000000 		.word	.LANCHOR8
 664 034c 00000000 		.word	.LANCHOR6
 665 0350 00000000 		.word	.LANCHOR5
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 23


 666 0354 00000000 		.word	.LANCHOR9
 667 0358 0000A543 		.word	1134886912
 668 035c 00007F43 		.word	1132396544
 669 0360 00000000 		.word	.LANCHOR10
 670 0364 00002440 		.word	1076101120
 671 0368 00000000 		.word	.LANCHOR11
 672              	.LVL75:
 673              	.L29:
 420:Src/main.c    **** 			draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac[n], me
 674              		.loc 1 420 0 discriminator 3
 675 036c 524B     		ldr	r3, .L40+16
 676 036e A3FB0423 		umull	r2, r3, r3, r4
 677 0372 5B08     		lsrs	r3, r3, #1
 678 0374 03EB4303 		add	r3, r3, r3, lsl #1
 679 0378 E31A     		subs	r3, r4, r3
 680 037a 03EB4303 		add	r3, r3, r3, lsl #1
 681 037e 9A00     		lsls	r2, r3, #2
 682 0380 D2B2     		uxtb	r2, r2
 683 0382 1032     		adds	r2, r2, #16
 684              	.LVL76:
 421:Src/main.c    **** 		}
 685              		.loc 1 421 0 discriminator 3
 686 0384 4D4B     		ldr	r3, .L40+20
 687 0386 33F91410 		ldrsh	r1, [r3, r4, lsl #1]
 688 038a 4D4B     		ldr	r3, .L40+24
 689 038c 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 690 038e 4D4B     		ldr	r3, .L40+28
 691 0390 1E5D     		ldrb	r6, [r3, r4]	@ zero_extendqisi2
 692 0392 4D4B     		ldr	r3, .L40+32
 693 0394 1F5D     		ldrb	r7, [r3, r4]	@ zero_extendqisi2
 694 0396 04EB840C 		add	ip, r4, r4, lsl #2
 695 039a 4C4B     		ldr	r3, .L40+36
 696 039c 6344     		add	r3, r3, ip
 697 039e 0593     		str	r3, [sp, #20]
 698 03a0 0497     		str	r7, [sp, #16]
 699 03a2 0396     		str	r6, [sp, #12]
 700 03a4 0290     		str	r0, [sp, #8]
 701 03a6 0191     		str	r1, [sp, #4]
 702 03a8 0C23     		movs	r3, #12
 703 03aa 0093     		str	r3, [sp]
 704 03ac 4623     		movs	r3, #70
 705 03ae 02F0FC02 		and	r2, r2, #252
 706              	.LVL77:
 707 03b2 0021     		movs	r1, #0
 708 03b4 4648     		ldr	r0, .L40+40
 709 03b6 FFF7FEFF 		bl	draw_Value
 710              	.LVL78:
 418:Src/main.c    **** 			x = meas_x;
 711              		.loc 1 418 0 discriminator 3
 712 03ba 0134     		adds	r4, r4, #1
 713              	.LVL79:
 714 03bc E4B2     		uxtb	r4, r4
 715              	.LVL80:
 716              	.L28:
 418:Src/main.c    **** 			x = meas_x;
 717              		.loc 1 418 0 is_stmt 0 discriminator 1
 718 03be 022C     		cmp	r4, #2
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 24


 719 03c0 D4D9     		bls	.L29
 423:Src/main.c    **** 			x = meas_width1 + meas_x + meas_x_offset;
 720              		.loc 1 423 0 is_stmt 1
 721 03c2 0324     		movs	r4, #3
 722              	.LVL81:
 723 03c4 28E0     		b	.L30
 724              	.LVL82:
 725              	.L31:
 425:Src/main.c    **** 			draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac[n], me
 726              		.loc 1 425 0 discriminator 3
 727 03c6 3C4B     		ldr	r3, .L40+16
 728 03c8 A3FB0423 		umull	r2, r3, r3, r4
 729 03cc 5B08     		lsrs	r3, r3, #1
 730 03ce 03EB4303 		add	r3, r3, r3, lsl #1
 731 03d2 E31A     		subs	r3, r4, r3
 732 03d4 03EB4303 		add	r3, r3, r3, lsl #1
 733 03d8 9A00     		lsls	r2, r3, #2
 734 03da D2B2     		uxtb	r2, r2
 735 03dc 1032     		adds	r2, r2, #16
 736              	.LVL83:
 426:Src/main.c    **** 		}
 737              		.loc 1 426 0 discriminator 3
 738 03de 374B     		ldr	r3, .L40+20
 739 03e0 33F91410 		ldrsh	r1, [r3, r4, lsl #1]
 740 03e4 364B     		ldr	r3, .L40+24
 741 03e6 185D     		ldrb	r0, [r3, r4]	@ zero_extendqisi2
 742 03e8 364B     		ldr	r3, .L40+28
 743 03ea 1E5D     		ldrb	r6, [r3, r4]	@ zero_extendqisi2
 744 03ec 364B     		ldr	r3, .L40+32
 745 03ee 1F5D     		ldrb	r7, [r3, r4]	@ zero_extendqisi2
 746 03f0 04EB840C 		add	ip, r4, r4, lsl #2
 747 03f4 354B     		ldr	r3, .L40+36
 748 03f6 6344     		add	r3, r3, ip
 749 03f8 0593     		str	r3, [sp, #20]
 750 03fa 0497     		str	r7, [sp, #16]
 751 03fc 0396     		str	r6, [sp, #12]
 752 03fe 0290     		str	r0, [sp, #8]
 753 0400 0191     		str	r1, [sp, #4]
 754 0402 0C23     		movs	r3, #12
 755 0404 0093     		str	r3, [sp]
 756 0406 3823     		movs	r3, #56
 757 0408 02F0FC02 		and	r2, r2, #252
 758              	.LVL84:
 759 040c 4821     		movs	r1, #72
 760 040e 3048     		ldr	r0, .L40+40
 761 0410 FFF7FEFF 		bl	draw_Value
 762              	.LVL85:
 423:Src/main.c    **** 			x = meas_width1 + meas_x + meas_x_offset;
 763              		.loc 1 423 0 discriminator 3
 764 0414 0134     		adds	r4, r4, #1
 765              	.LVL86:
 766 0416 E4B2     		uxtb	r4, r4
 767              	.LVL87:
 768              	.L30:
 423:Src/main.c    **** 			x = meas_width1 + meas_x + meas_x_offset;
 769              		.loc 1 423 0 is_stmt 0 discriminator 1
 770 0418 052C     		cmp	r4, #5
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 25


 771 041a D4D9     		bls	.L31
 431:Src/main.c    **** 
 772              		.loc 1 431 0 is_stmt 1
 773 041c 2C48     		ldr	r0, .L40+40
 774 041e FFF7FEFF 		bl	u8g2_SendBuffer
 775              	.LVL88:
 776              	.L32:
 372:Src/main.c    **** 			  rpm = rpm + (int)(10*MT[gear]);
 777              		.loc 1 372 0
 778 0422 2C4B     		ldr	r3, .L40+44
 779 0424 1C88     		ldrh	r4, [r3]
 780 0426 42F20803 		movw	r3, #8200
 781 042a 9C42     		cmp	r4, r3
 782 042c 3FF6D0AE 		bhi	.L20
 373:Src/main.c    **** //			  rpm=rpm+10;
 783              		.loc 1 373 0
 784 0430 294B     		ldr	r3, .L40+48
 785 0432 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 786 0434 2949     		ldr	r1, .L40+52
 787 0436 01EBC301 		add	r1, r1, r3, lsl #3
 788 043a 0022     		movs	r2, #0
 789 043c 284B     		ldr	r3, .L40+56
 790 043e D1E90001 		ldrd	r0, [r1]
 791 0442 FFF7FEFF 		bl	__aeabi_dmul
 792              	.LVL89:
 793 0446 FFF7FEFF 		bl	__aeabi_d2iz
 794              	.LVL90:
 795 044a 2044     		add	r0, r0, r4
 796 044c 214B     		ldr	r3, .L40+44
 797 044e 1880     		strh	r0, [r3]	@ movhi
 798              	.L21:
 384:Src/main.c    **** 		meas_value[0] = speed; // speed
 799              		.loc 1 384 0
 800 0450 204B     		ldr	r3, .L40+44
 801 0452 1888     		ldrh	r0, [r3]
 802 0454 FFF7FEFF 		bl	__aeabi_ui2d
 803              	.LVL91:
 804 0458 13A3     		adr	r3, .L40
 805 045a D3E90023 		ldrd	r2, [r3]
 806 045e FFF7FEFF 		bl	__aeabi_dmul
 807              	.LVL92:
 808 0462 0022     		movs	r2, #0
 809 0464 1F4B     		ldr	r3, .L40+60
 810 0466 FFF7FEFF 		bl	__aeabi_dmul
 811              	.LVL93:
 812 046a 1B4B     		ldr	r3, .L40+48
 813 046c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 814 046e 1B4B     		ldr	r3, .L40+52
 815 0470 03EBC203 		add	r3, r3, r2, lsl #3
 816 0474 D3E90023 		ldrd	r2, [r3]
 817 0478 FFF7FEFF 		bl	__aeabi_ddiv
 818              	.LVL94:
 819 047c 0CA3     		adr	r3, .L40+8
 820 047e D3E90023 		ldrd	r2, [r3]
 821 0482 FFF7FEFF 		bl	__aeabi_ddiv
 822              	.LVL95:
 823 0486 FFF7FEFF 		bl	__aeabi_d2uiz
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 26


 824              	.LVL96:
 825 048a 80B2     		uxth	r0, r0
 826 048c 164B     		ldr	r3, .L40+64
 827 048e 1880     		strh	r0, [r3]	@ movhi
 385:Src/main.c    **** 
 828              		.loc 1 385 0
 829 0490 0A4B     		ldr	r3, .L40+20
 830 0492 1880     		strh	r0, [r3]	@ movhi
 387:Src/main.c    **** 			a = 0;
 831              		.loc 1 387 0
 832 0494 952D     		cmp	r5, #149
 833 0496 3FF6CBAE 		bhi	.L33
 390:Src/main.c    **** 		}
 834              		.loc 1 390 0
 835 049a 0135     		adds	r5, r5, #1
 836              	.LVL97:
 837 049c ADB2     		uxth	r5, r5
 838              	.LVL98:
 839              	.L23:
 392:Src/main.c    **** 			if( n==1 ){
 840              		.loc 1 392 0
 841 049e 0123     		movs	r3, #1
 842 04a0 CFE6     		b	.L24
 843              	.L41:
 844 04a2 00BFAFF3 		.align	3
 844      0080
 845              	.L40:
 846 04a8 FCA9F1D2 		.word	3539053052
 847 04ac 4D62603F 		.word	1063281229
 848 04b0 66666666 		.word	1717986918
 849 04b4 66661040 		.word	1074816614
 850 04b8 ABAAAAAA 		.word	-1431655765
 851 04bc 00000000 		.word	.LANCHOR9
 852 04c0 00000000 		.word	.LANCHOR12
 853 04c4 00000000 		.word	.LANCHOR13
 854 04c8 00000000 		.word	.LANCHOR14
 855 04cc 00000000 		.word	.LANCHOR2
 856 04d0 00000000 		.word	u8g2
 857 04d4 00000000 		.word	.LANCHOR5
 858 04d8 00000000 		.word	.LANCHOR7
 859 04dc 00000000 		.word	.LANCHOR6
 860 04e0 00002440 		.word	1076101120
 861 04e4 00004E40 		.word	1078853632
 862 04e8 00000000 		.word	.LANCHOR8
 863              	.LBE5:
 864              		.cfi_endproc
 865              	.LFE126:
 867              		.section	.text.assert_failed,"ax",%progbits
 868              		.align	1
 869              		.global	assert_failed
 870              		.syntax unified
 871              		.thumb
 872              		.thumb_func
 873              		.fpu fpv4-sp-d16
 875              	assert_failed:
 876              	.LFB129:
 506:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 27


 507:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 508:Src/main.c    ****   while(1) 
 509:Src/main.c    ****   {
 510:Src/main.c    ****   }
 511:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */ 
 512:Src/main.c    **** }
 513:Src/main.c    **** 
 514:Src/main.c    **** #ifdef USE_FULL_ASSERT
 515:Src/main.c    **** 
 516:Src/main.c    **** /**
 517:Src/main.c    ****    * @brief Reports the name of the source file and the source line number
 518:Src/main.c    ****    * where the assert_param error has occurred.
 519:Src/main.c    ****    * @param file: pointer to the source file name
 520:Src/main.c    ****    * @param line: assert_param error line source number
 521:Src/main.c    ****    * @retval None
 522:Src/main.c    ****    */
 523:Src/main.c    **** void assert_failed(uint8_t* file, uint32_t line)
 524:Src/main.c    **** {
 877              		.loc 1 524 0
 878              		.cfi_startproc
 879              		@ args = 0, pretend = 0, frame = 0
 880              		@ frame_needed = 0, uses_anonymous_args = 0
 881              		@ link register save eliminated.
 882              	.LVL99:
 525:Src/main.c    ****   /* USER CODE BEGIN 6 */
 526:Src/main.c    ****   /* User can add his own implementation to report the file name and line number,
 527:Src/main.c    ****     ex: printf("Wrong parameters value: file %s on line %d¥r¥n", file, line) */
 528:Src/main.c    ****   /* USER CODE END 6 */
 529:Src/main.c    **** 
 530:Src/main.c    **** }
 883              		.loc 1 530 0
 884 0000 7047     		bx	lr
 885              		.cfi_endproc
 886              	.LFE129:
 888              		.global	FP_duty
 889              		.global	FP_volt
 890              		.global	meas_value
 891              		.global	meas_sign
 892              		.global	meas_frac
 893              		.global	meas_digit
 894              		.global	meas_unit
 895              		.global	meas_name
 896              		.global	idct_status
 897              		.global	idct_name
 898              		.global	MT
 899              		.global	gear
 900              		.global	speed
 901              		.global	rpm
 902              		.global	logo_bits
 903              		.comm	u8g2,128,4
 904              		.section	.bss.gear,"aw",%nobits
 905              		.set	.LANCHOR7,. + 0
 908              	gear:
 909 0000 00       		.space	1
 910              		.section	.bss.rpm,"aw",%nobits
 911              		.align	1
 912              		.set	.LANCHOR5,. + 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 28


 915              	rpm:
 916 0000 0000     		.space	2
 917              		.section	.data.FP_duty,"aw",%progbits
 918              		.align	1
 919              		.set	.LANCHOR11,. + 0
 922              	FP_duty:
 923 0000 6400     		.short	100
 924              		.section	.data.FP_volt,"aw",%progbits
 925              		.align	1
 926              		.set	.LANCHOR10,. + 0
 929              	FP_volt:
 930 0000 4A01     		.short	330
 931              		.section	.data.MT,"aw",%progbits
 932              		.align	3
 933              		.set	.LANCHOR6,. + 0
 936              	MT:
 937 0000 77BE9F1A 		.word	446676599
 938 0004 2FDD0B40 		.word	1074519343
 939 0008 1F85EB51 		.word	1374389535
 940 000c B81E0040 		.word	1073749688
 941 0010 A8C64B37 		.word	927712936
 942 0014 8941F63F 		.word	1073103241
 943 0018 00000000 		.word	0
 944 001c 0000F03F 		.word	1072693248
 945 0020 986E1283 		.word	2199023256
 946 0024 C0CAE93F 		.word	1072286400
 947              		.section	.data.meas_value,"aw",%progbits
 948              		.align	2
 949              		.set	.LANCHOR9,. + 0
 952              	meas_value:
 953 0000 8502     		.short	645
 954 0002 6900     		.short	105
 955 0004 EB00     		.short	235
 956 0006 5900     		.short	89
 957 0008 4900     		.short	73
 958 000a 8F00     		.short	143
 959              		.section	.data.speed,"aw",%progbits
 960              		.align	1
 961              		.set	.LANCHOR8,. + 0
 964              	speed:
 965 0000 F000     		.short	240
 966              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 967              		.align	2
 968              	.LC0:
 969 0000 5372632F 		.ascii	"Src/main.c\000"
 969      6D61696E 
 969      2E6300
 970              		.section	.rodata.idct_name,"a",%progbits
 971              		.align	2
 972              		.set	.LANCHOR4,. + 0
 975              	idct_name:
 976 0000 43414E00 		.ascii	"CAN\000"
 977 0004 00       		.space	1
 978 0005 4F324642 		.ascii	"O2FB\000"
 978      00
 979              		.section	.rodata.idct_status,"a",%progbits
 980              		.align	2
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 29


 981              		.set	.LANCHOR3,. + 0
 984              	idct_status:
 985 0000 01       		.byte	1
 986 0001 00       		.byte	0
 987              		.section	.rodata.logo_bits,"a",%progbits
 988              		.align	2
 989              		.set	.LANCHOR0,. + 0
 992              	logo_bits:
 993 0000 00       		.byte	0
 994 0001 00       		.byte	0
 995 0002 00       		.byte	0
 996 0003 00       		.byte	0
 997 0004 00       		.byte	0
 998 0005 00       		.byte	0
 999 0006 00       		.byte	0
 1000 0007 00       		.byte	0
 1001 0008 00       		.byte	0
 1002 0009 00       		.byte	0
 1003 000a 00       		.byte	0
 1004 000b 00       		.byte	0
 1005 000c 00       		.byte	0
 1006 000d 00       		.byte	0
 1007 000e 00       		.byte	0
 1008 000f 00       		.byte	0
 1009 0010 00       		.byte	0
 1010 0011 00       		.byte	0
 1011 0012 00       		.byte	0
 1012 0013 00       		.byte	0
 1013 0014 00       		.byte	0
 1014 0015 00       		.byte	0
 1015 0016 00       		.byte	0
 1016 0017 00       		.byte	0
 1017 0018 00       		.byte	0
 1018 0019 00       		.byte	0
 1019 001a F0       		.byte	-16
 1020 001b 0F       		.byte	15
 1021 001c 00       		.byte	0
 1022 001d 00       		.byte	0
 1023 001e 00       		.byte	0
 1024 001f FC       		.byte	-4
 1025 0020 FF       		.byte	-1
 1026 0021 FF       		.byte	-1
 1027 0022 3F       		.byte	63
 1028 0023 00       		.byte	0
 1029 0024 80       		.byte	-128
 1030 0025 FF       		.byte	-1
 1031 0026 FF       		.byte	-1
 1032 0027 FF       		.byte	-1
 1033 0028 FF       		.byte	-1
 1034 0029 01       		.byte	1
 1035 002a E0       		.byte	-32
 1036 002b 1F       		.byte	31
 1037 002c 00       		.byte	0
 1038 002d 80       		.byte	-128
 1039 002e FF       		.byte	-1
 1040 002f 07       		.byte	7
 1041 0030 E0       		.byte	-32
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 30


 1042 0031 01       		.byte	1
 1043 0032 00       		.byte	0
 1044 0033 80       		.byte	-128
 1045 0034 81       		.byte	-127
 1046 0035 07       		.byte	7
 1047 0036 E0       		.byte	-32
 1048 0037 01       		.byte	1
 1049 0038 00       		.byte	0
 1050 0039 80       		.byte	-128
 1051 003a 81       		.byte	-127
 1052 003b 07       		.byte	7
 1053 003c C0       		.byte	-64
 1054 003d E1       		.byte	-31
 1055 003e 07       		.byte	7
 1056 003f C0       		.byte	-64
 1057 0040 80       		.byte	-128
 1058 0041 03       		.byte	3
 1059 0042 00       		.byte	0
 1060 0043 FC       		.byte	-4
 1061 0044 1F       		.byte	31
 1062 0045 E0       		.byte	-32
 1063 0046 80       		.byte	-128
 1064 0047 03       		.byte	3
 1065 0048 00       		.byte	0
 1066 0049 FE       		.byte	-2
 1067 004a 7F       		.byte	127
 1068 004b 70       		.byte	112
 1069 004c C0       		.byte	-64
 1070 004d 01       		.byte	1
 1071 004e 00       		.byte	0
 1072 004f 0F       		.byte	15
 1073 0050 FE       		.byte	-2
 1074 0051 39       		.byte	57
 1075 0052 E0       		.byte	-32
 1076 0053 00       		.byte	0
 1077 0054 00       		.byte	0
 1078 0055 07       		.byte	7
 1079 0056 F8       		.byte	-8
 1080 0057 1F       		.byte	31
 1081 0058 F0       		.byte	-16
 1082 0059 00       		.byte	0
 1083 005a 00       		.byte	0
 1084 005b 0E       		.byte	14
 1085 005c E0       		.byte	-32
 1086 005d 1F       		.byte	31
 1087 005e 78       		.byte	120
 1088 005f 00       		.byte	0
 1089 0060 00       		.byte	0
 1090 0061 0C       		.byte	12
 1091 0062 C0       		.byte	-64
 1092 0063 FF       		.byte	-1
 1093 0064 3F       		.byte	63
 1094 0065 00       		.byte	0
 1095 0066 00       		.byte	0
 1096 0067 18       		.byte	24
 1097 0068 00       		.byte	0
 1098 0069 FF       		.byte	-1
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 31


 1099 006a 1F       		.byte	31
 1100 006b 00       		.byte	0
 1101 006c 00       		.byte	0
 1102 006d 38       		.byte	56
 1103 006e C0       		.byte	-64
 1104 006f FF       		.byte	-1
 1105 0070 0F       		.byte	15
 1106 0071 00       		.byte	0
 1107 0072 00       		.byte	0
 1108 0073 70       		.byte	112
 1109 0074 E0       		.byte	-32
 1110 0075 F1       		.byte	-15
 1111 0076 03       		.byte	3
 1112 0077 00       		.byte	0
 1113 0078 00       		.byte	0
 1114 0079 E0       		.byte	-32
 1115 007a 78       		.byte	120
 1116 007b 00       		.byte	0
 1117 007c 00       		.byte	0
 1118 007d 00       		.byte	0
 1119 007e 00       		.byte	0
 1120 007f C0       		.byte	-64
 1121 0080 3F       		.byte	63
 1122 0081 E0       		.byte	-32
 1123 0082 01       		.byte	1
 1124 0083 00       		.byte	0
 1125 0084 00       		.byte	0
 1126 0085 80       		.byte	-128
 1127 0086 1F       		.byte	31
 1128 0087 F0       		.byte	-16
 1129 0088 01       		.byte	1
 1130 0089 00       		.byte	0
 1131 008a 00       		.byte	0
 1132 008b 00       		.byte	0
 1133 008c 07       		.byte	7
 1134 008d F8       		.byte	-8
 1135 008e 00       		.byte	0
 1136 008f 00       		.byte	0
 1137 0090 00       		.byte	0
 1138 0091 00       		.byte	0
 1139 0092 1E       		.byte	30
 1140 0093 7C       		.byte	124
 1141 0094 00       		.byte	0
 1142 0095 00       		.byte	0
 1143 0096 00       		.byte	0
 1144 0097 00       		.byte	0
 1145 0098 F8       		.byte	-8
 1146 0099 1F       		.byte	31
 1147 009a 00       		.byte	0
 1148 009b 00       		.byte	0
 1149 009c 00       		.byte	0
 1150 009d 00       		.byte	0
 1151 009e F0       		.byte	-16
 1152 009f 0F       		.byte	15
 1153 00a0 00       		.byte	0
 1154 00a1 00       		.byte	0
 1155 00a2 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 32


 1156 00a3 00       		.byte	0
 1157 00a4 80       		.byte	-128
 1158 00a5 01       		.byte	1
 1159 00a6 00       		.byte	0
 1160 00a7 00       		.byte	0
 1161 00a8 00       		.byte	0
 1162 00a9 00       		.byte	0
 1163 00aa 00       		.byte	0
 1164 00ab 00       		.byte	0
 1165 00ac 00       		.byte	0
 1166 00ad 00       		.byte	0
 1167 00ae 00       		.byte	0
 1168 00af 00       		.byte	0
 1169 00b0 00       		.byte	0
 1170 00b1 00       		.byte	0
 1171 00b2 00       		.byte	0
 1172 00b3 00       		.byte	0
 1173 00b4 00       		.byte	0
 1174 00b5 00       		.byte	0
 1175 00b6 00       		.byte	0
 1176 00b7 00       		.byte	0
 1177 00b8 00       		.byte	0
 1178 00b9 00       		.byte	0
 1179 00ba 00       		.byte	0
 1180 00bb 00       		.byte	0
 1181 00bc 00       		.byte	0
 1182 00bd 00       		.byte	0
 1183 00be 00       		.byte	0
 1184 00bf 00       		.byte	0
 1185 00c0 00       		.byte	0
 1186 00c1 00       		.byte	0
 1187 00c2 00       		.byte	0
 1188 00c3 00       		.byte	0
 1189 00c4 00       		.byte	0
 1190 00c5 00       		.byte	0
 1191 00c6 00       		.byte	0
 1192 00c7 4C       		.byte	76
 1193 00c8 1C       		.byte	28
 1194 00c9 00       		.byte	0
 1195 00ca 00       		.byte	0
 1196 00cb 00       		.byte	0
 1197 00cc 00       		.byte	0
 1198 00cd 32       		.byte	50
 1199 00ce 0E       		.byte	14
 1200 00cf 00       		.byte	0
 1201 00d0 00       		.byte	0
 1202 00d1 00       		.byte	0
 1203 00d2 00       		.byte	0
 1204 00d3 00       		.byte	0
 1205 00d4 C6       		.byte	-58
 1206 00d5 00       		.byte	0
 1207 00d6 18       		.byte	24
 1208 00d7 00       		.byte	0
 1209 00d8 00       		.byte	0
 1210 00d9 7C       		.byte	124
 1211 00da EF       		.byte	-17
 1212 00db FC       		.byte	-4
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 33


 1213 00dc 39       		.byte	57
 1214 00dd 00       		.byte	0
 1215 00de 00       		.byte	0
 1216 00df 4E       		.byte	78
 1217 00e0 C6       		.byte	-58
 1218 00e1 B8       		.byte	-72
 1219 00e2 31       		.byte	49
 1220 00e3 00       		.byte	0
 1221 00e4 00       		.byte	0
 1222 00e5 3E       		.byte	62
 1223 00e6 C6       		.byte	-58
 1224 00e7 98       		.byte	-104
 1225 00e8 31       		.byte	49
 1226 00e9 00       		.byte	0
 1227 00ea 00       		.byte	0
 1228 00eb 3C       		.byte	60
 1229 00ec C6       		.byte	-58
 1230 00ed 98       		.byte	-104
 1231 00ee 31       		.byte	49
 1232 00ef 00       		.byte	0
 1233 00f0 00       		.byte	0
 1234 00f1 0E       		.byte	14
 1235 00f2 C6       		.byte	-58
 1236 00f3 98       		.byte	-104
 1237 00f4 31       		.byte	49
 1238 00f5 00       		.byte	0
 1239 00f6 00       		.byte	0
 1240 00f7 4E       		.byte	78
 1241 00f8 CE       		.byte	-50
 1242 00f9 99       		.byte	-103
 1243 00fa 31       		.byte	49
 1244 00fb 00       		.byte	0
 1245 00fc 00       		.byte	0
 1246 00fd 7C       		.byte	124
 1247 00fe EF       		.byte	-17
 1248 00ff FD       		.byte	-3
 1249 0100 7B       		.byte	123
 1250 0101 00       		.byte	0
 1251 0102 00       		.byte	0
 1252 0103 00       		.byte	0
 1253 0104 00       		.byte	0
 1254 0105 00       		.byte	0
 1255 0106 00       		.byte	0
 1256 0107 00       		.byte	0
 1257 0108 00       		.byte	0
 1258 0109 00       		.byte	0
 1259 010a 00       		.byte	0
 1260 010b 00       		.byte	0
 1261 010c 00       		.byte	0
 1262 010d 00       		.byte	0
 1263 010e 00       		.byte	0
 1264 010f 00       		.byte	0
 1265 0110 00       		.byte	0
 1266 0111 00       		.byte	0
 1267 0112 00       		.byte	0
 1268 0113 00       		.byte	0
 1269 0114 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 34


 1270 0115 00       		.byte	0
 1271 0116 00       		.byte	0
 1272 0117 00       		.byte	0
 1273 0118 00       		.byte	0
 1274 0119 00       		.byte	0
 1275 011a 00       		.byte	0
 1276 011b 00       		.byte	0
 1277 011c 00       		.byte	0
 1278 011d 00       		.byte	0
 1279 011e 00       		.byte	0
 1280 011f 00       		.byte	0
 1281              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1282              		.align	2
 1283              	.LC1:
 1284 0000 4D756C74 		.ascii	"Multi Function Meter\000"
 1284      69204675 
 1284      6E637469 
 1284      6F6E204D 
 1284      65746572 
 1285 0015 000000   		.space	3
 1286              	.LC2:
 1287 0018 5265762E 		.ascii	"Rev. 0.1a\000"
 1287      20302E31 
 1287      6100
 1288 0022 0000     		.space	2
 1289              	.LC3:
 1290 0024 25202000 		.ascii	"%  \000"
 1291              	.LC4:
 1292 0028 44555459 		.ascii	"DUTY\000"
 1292      00
 1293              		.section	.rodata.meas_digit,"a",%progbits
 1294              		.align	2
 1295              		.set	.LANCHOR12,. + 0
 1298              	meas_digit:
 1299 0000 03       		.byte	3
 1300 0001 03       		.byte	3
 1301 0002 03       		.byte	3
 1302 0003 03       		.byte	3
 1303 0004 03       		.byte	3
 1304 0005 03       		.byte	3
 1305              		.section	.rodata.meas_frac,"a",%progbits
 1306              		.align	2
 1307              		.set	.LANCHOR13,. + 0
 1310              	meas_frac:
 1311 0000 02       		.byte	2
 1312 0001 02       		.byte	2
 1313 0002 01       		.byte	1
 1314 0003 00       		.byte	0
 1315 0004 00       		.byte	0
 1316 0005 02       		.byte	2
 1317              		.section	.rodata.meas_name,"a",%progbits
 1318              		.align	2
 1319              		.set	.LANCHOR1,. + 0
 1322              	meas_name:
 1323 0000 4D415000 		.ascii	"MAP\000"
 1324 0004 000000   		.space	3
 1325 0007 4F494C50 		.ascii	"OILP\000"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 35


 1325      00
 1326 000c 0000     		.space	2
 1327 000e 4650564F 		.ascii	"FPVOLT\000"
 1327      4C5400
 1328 0015 45435400 		.ascii	"ECT\000"
 1329 0019 000000   		.space	3
 1330 001c 4F494C54 		.ascii	"OILT\000"
 1330      00
 1331 0021 0000     		.space	2
 1332 0023 4F3200   		.ascii	"O2\000"
 1333 0026 00000000 		.space	4
 1334              		.section	.rodata.meas_sign,"a",%progbits
 1335              		.align	2
 1336              		.set	.LANCHOR14,. + 0
 1339              	meas_sign:
 1340 0000 01       		.byte	1
 1341 0001 00       		.byte	0
 1342 0002 00       		.byte	0
 1343 0003 00       		.byte	0
 1344 0004 00       		.byte	0
 1345 0005 00       		.byte	0
 1346              		.section	.rodata.meas_unit,"a",%progbits
 1347              		.align	2
 1348              		.set	.LANCHOR2,. + 0
 1351              	meas_unit:
 1352 0000 6B706100 		.ascii	"kpa\000"
 1353 0004 00       		.space	1
 1354 0005 6B706100 		.ascii	"kpa\000"
 1355 0009 00       		.space	1
 1356 000a 56202000 		.ascii	"V  \000"
 1357 000e 00       		.space	1
 1358 000f B0       		.byte	-80
 1359 0010 43       		.byte	67
 1360 0011 00       		.byte	0
 1361 0012 0000     		.space	2
 1362 0014 B0       		.byte	-80
 1363 0015 43       		.byte	67
 1364 0016 00       		.byte	0
 1365 0017 0000     		.space	2
 1366 0019 5600     		.ascii	"V\000"
 1367 001b 000000   		.space	3
 1368              		.text
 1369              	.Letext0:
 1370              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 1371              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 1372              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1373              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 1374              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 1375              		.file 7 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 1376              		.file 8 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 1377              		.file 9 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 1378              		.file 10 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 1379              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1380              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 1381              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 1382              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1383              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 36


 1384              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 1385              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi.h"
 1386              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1387              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 1388              		.file 20 "Inc/adc.h"
 1389              		.file 21 "Inc/spi.h"
 1390              		.file 22 "Inc/tim.h"
 1391              		.file 23 "Inc/usart.h"
 1392              		.file 24 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/math.h"
 1393              		.file 25 "/Users/imashio/Electronics/ARM/_Library/u8x8.h"
 1394              		.file 26 "/Users/imashio/Electronics/ARM/_Library/u8g2.h"
 1395              		.file 27 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 1396              		.file 28 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 1397              		.file 29 "Inc/gpio.h"
 1398              		.file 30 "Inc/dma.h"
 1399              		.file 31 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1400              		.file 32 "<built-in>"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 37


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:18     .text._Error_Handler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:25     .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:41     .text.SystemClock_Config:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:48     .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:167    .text.SystemClock_Config:00000000000000a4 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:179    .text.main:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:186    .text.main:0000000000000000 main
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:639    .text.main:00000000000002e8 $d
                            *COM*:0000000000000080 u8g2
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:675    .text.main:000000000000036c $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:846    .text.main:00000000000004a8 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:868    .text.assert_failed:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:875    .text.assert_failed:0000000000000000 assert_failed
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:922    .data.FP_duty:0000000000000000 FP_duty
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:929    .data.FP_volt:0000000000000000 FP_volt
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:952    .data.meas_value:0000000000000000 meas_value
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:1339   .rodata.meas_sign:0000000000000000 meas_sign
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:1310   .rodata.meas_frac:0000000000000000 meas_frac
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:1298   .rodata.meas_digit:0000000000000000 meas_digit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:1351   .rodata.meas_unit:0000000000000000 meas_unit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:1322   .rodata.meas_name:0000000000000000 meas_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:984    .rodata.idct_status:0000000000000000 idct_status
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:975    .rodata.idct_name:0000000000000000 idct_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:936    .data.MT:0000000000000000 MT
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:908    .bss.gear:0000000000000000 gear
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:964    .data.speed:0000000000000000 speed
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:915    .bss.rpm:0000000000000000 rpm
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:992    .rodata.logo_bits:0000000000000000 logo_bits
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:909    .bss.gear:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:911    .bss.rpm:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:918    .data.FP_duty:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:925    .data.FP_volt:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:932    .data.MT:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:948    .data.meas_value:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:960    .data.speed:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:967    .rodata.SystemClock_Config.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:971    .rodata.idct_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:980    .rodata.idct_status:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:988    .rodata.logo_bits:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:1282   .rodata.main.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:1294   .rodata.meas_digit:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:1306   .rodata.meas_frac:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:1318   .rodata.meas_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:1335   .rodata.meas_sign:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s:1347   .rodata.meas_unit:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
__aeabi_dmul
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccxfJFNv.s 			page 38


__aeabi_d2iz
__aeabi_ui2d
__aeabi_ddiv
__aeabi_d2uiz
__aeabi_i2d
HAL_Init
MX_GPIO_Init
MX_DMA_Init
MX_USART2_UART_Init
MX_TIM1_Init
MX_USART1_UART_Init
MX_SPI1_Init
MX_ADC1_Init
memset
HAL_ADC_Start_DMA
u8g2_Setup_ssd1309_128x64_noname2_f
HAL_GPIO_WritePin
u8x8_InitDisplay
u8x8_SetPowerSave
u8x8_SetContrast
u8g2_ClearDisplay
u8g2_ClearBuffer
u8g2_DrawXBMP
u8g2_SetFont
u8g2_DrawStr
u8g2_SendBuffer
HAL_Delay
draw_MeasLabelUnit
draw_IndicatorBox
draw_Value
draw_BarGraph
hadc1
u8x8_gpio_and_delay_STM32F303
u8x8_byte_4wire_hw_spi
u8g2_cb_r0
u8g2_font_5x7_tf
