ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.draw_indicators,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	draw_indicators
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	draw_indicators:
  27              	.LFB126:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "adc.h"
  24:Src/main.c    **** #include "can.h"
  25:Src/main.c    **** #include "dma.h"
  26:Src/main.c    **** #include "i2c.h"
  27:Src/main.c    **** #include "spi.h"
  28:Src/main.c    **** #include "tim.h"
  29:Src/main.c    **** #include "usart.h"
  30:Src/main.c    **** #include "gpio.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 2


  31:Src/main.c    **** 
  32:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  33:Src/main.c    **** /* USER CODE BEGIN Includes */
  34:Src/main.c    **** #include <stdio.h>
  35:Src/main.c    **** #include <math.h>
  36:Src/main.c    **** 
  37:Src/main.c    **** // #include "basic.h"  // original library
  38:Src/main.c    **** #include "usart_transmit_printf.h"
  39:Src/main.c    **** #include "u8g2.h"		// graphic display library
  40:Src/main.c    **** #include "u8x8_gpio_STM32F303.h"
  41:Src/main.c    **** #include "u8x8_byte_4wire_hw_spi.h"
  42:Src/main.c    **** #include "draw_Value.h"
  43:Src/main.c    **** #include "draw_BarGraph.h"
  44:Src/main.c    **** #include "draw_IndicatorBox.h"
  45:Src/main.c    **** //#include "draw_Rotary.h"
  46:Src/main.c    **** 
  47:Src/main.c    **** #include "flag.h"
  48:Src/main.c    **** #include "defi_decoder.h"
  49:Src/main.c    **** #include "pulse_counter.h"
  50:Src/main.c    **** #include "can_obd.h"
  51:Src/main.c    **** #include "gsens_ADXL345.h"
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE END Includes */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  56:Src/main.c    **** /* USER CODE BEGIN PTD */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END PTD */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  61:Src/main.c    **** /* USER CODE BEGIN PD */
  62:Src/main.c    **** /* USER CODE END PD */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  65:Src/main.c    **** /* USER CODE BEGIN PM */
  66:Src/main.c    **** /* USER CODE END PM */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE BEGIN PV */
  71:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  72:Src/main.c    **** 
  73:Src/main.c    **** // mode definition
  74:Src/main.c    **** #define N_mode                5
  75:Src/main.c    **** 
  76:Src/main.c    **** #define MODE_BAR_METER        0
  77:Src/main.c    **** #define MODE_CIRCULAR_METER   1
  78:Src/main.c    **** #define MODE_ROTARY           2
  79:Src/main.c    **** #define MODE_SCOPE_MAP        3
  80:Src/main.c    **** #define MODE_SCOPE_Gsens      4
  81:Src/main.c    **** #define MODE_SETTING          5
  82:Src/main.c    **** 
  83:Src/main.c    **** // RPM bar graph parameter definition
  84:Src/main.c    **** #define	rpmbar_x		  0
  85:Src/main.c    **** #define	rpmbar_y		  0
  86:Src/main.c    **** #define	rpmbar_width	128
  87:Src/main.c    **** #define	rpmbar_height	14
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 3


  88:Src/main.c    **** #define	rpm_min			  0
  89:Src/main.c    **** #define	rpm_max			  9000
  90:Src/main.c    **** 
  91:Src/main.c    **** // measurements display parameter definition
  92:Src/main.c    **** // Bar graph
  93:Src/main.c    **** #define	N_meas			      6
  94:Src/main.c    **** #define	meas_x			      0
  95:Src/main.c    **** #define	meas_y			      16
  96:Src/main.c    **** #define	meas_x_offset   	2
  97:Src/main.c    **** #define	meas_width1		    70
  98:Src/main.c    **** #define	meas_width2		    56
  99:Src/main.c    **** #define	meas_height		    12
 100:Src/main.c    **** // Circular Meter
 101:Src/main.c    **** #define	N_meas_C			    4
 102:Src/main.c    **** #define	meas_C_x			    68
 103:Src/main.c    **** #define	meas_C_y			    2
 104:Src/main.c    **** #define	meas_C_x_offset		2
 105:Src/main.c    **** #define	meas_C_width		  60
 106:Src/main.c    **** #define	meas_C_height		  13
 107:Src/main.c    **** 
 108:Src/main.c    **** // indicators parameter definition
 109:Src/main.c    **** #define	N_idct			      2
 110:Src/main.c    **** #define	idct_x			      72
 111:Src/main.c    **** #define	idct_y			      53
 112:Src/main.c    ****  #define	idct_width		    27 // 2-items
 113:Src/main.c    **** // #define	idct_width		    17 // 3-item
 114:Src/main.c    **** #define	idct_height		    9
 115:Src/main.c    **** 
 116:Src/main.c    **** //  Fuel Pump Voltage display parameter definition
 117:Src/main.c    **** #define	FP_x		    	    0
 118:Src/main.c    **** #define	FP_y              52
 119:Src/main.c    **** #define	FP_height	        12
 120:Src/main.c    **** #define	FP_volt_width	    45
 121:Src/main.c    **** #define	FP_duty_width	    70
 122:Src/main.c    **** 
 123:Src/main.c    **** // wave display parameter definition
 124:Src/main.c    **** #define	wave_x			      0
 125:Src/main.c    **** #define	wave_y			      13
 126:Src/main.c    **** #define	wave_width		    128
 127:Src/main.c    **** #define	wave_height		    52
 128:Src/main.c    **** #define	wave_value_min	  -100
 129:Src/main.c    **** #define	wave_value_max	  +200
 130:Src/main.c    **** 
 131:Src/main.c    **** // logo parameter definition (small 'enfini' logo)
 132:Src/main.c    **** #define logo_width        48
 133:Src/main.c    **** #define logo_height       48
 134:Src/main.c    **** 
 135:Src/main.c    **** const unsigned char logo_bits[] = {
 136:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 137:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 138:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0x3F, 0x00,
 139:Src/main.c    ****   0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x1F, 0x00, 0x80, 0xFF, 0x07,
 140:Src/main.c    ****   0xE0, 0x01, 0x00, 0x80, 0x81, 0x07, 0xE0, 0x01, 0x00, 0x80, 0x81, 0x07,
 141:Src/main.c    ****   0xC0, 0xE1, 0x07, 0xC0, 0x80, 0x03, 0x00, 0xFC, 0x1F, 0xE0, 0x80, 0x03,
 142:Src/main.c    ****   0x00, 0xFE, 0x7F, 0x70, 0xC0, 0x01, 0x00, 0x0F, 0xFE, 0x39, 0xE0, 0x00,
 143:Src/main.c    ****   0x00, 0x07, 0xF8, 0x1F, 0xF0, 0x00, 0x00, 0x0E, 0xE0, 0x1F, 0x78, 0x00,
 144:Src/main.c    ****   0x00, 0x0C, 0xC0, 0xFF, 0x3F, 0x00, 0x00, 0x18, 0x00, 0xFF, 0x1F, 0x00,
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 4


 145:Src/main.c    ****   0x00, 0x38, 0xC0, 0xFF, 0x0F, 0x00, 0x00, 0x70, 0xE0, 0xF1, 0x03, 0x00,
 146:Src/main.c    ****   0x00, 0xE0, 0x78, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3F, 0xE0, 0x01, 0x00,
 147:Src/main.c    ****   0x00, 0x80, 0x1F, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00,
 148:Src/main.c    ****   0x00, 0x00, 0x1E, 0x7C, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00,
 149:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00,
 150:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 151:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 152:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4C, 0x1C, 0x00, 0x00, 0x00,
 153:Src/main.c    ****   0x00, 0x32, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x00, 0x18, 0x00,
 154:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFC, 0x39, 0x00, 0x00, 0x4E, 0xC6, 0xB8, 0x31, 0x00,
 155:Src/main.c    ****   0x00, 0x3E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x3C, 0xC6, 0x98, 0x31, 0x00,
 156:Src/main.c    ****   0x00, 0x0E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x4E, 0xCE, 0x99, 0x31, 0x00,
 157:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFD, 0x7B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 158:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 159:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 160:Src/main.c    ****   };
 161:Src/main.c    **** 
 162:Src/main.c    **** /*
 163:Src/main.c    **** // logo parameter definition (meidium 'enfini' logo)
 164:Src/main.c    **** #define logo_width        54
 165:Src/main.c    **** #define logo_height       48
 166:Src/main.c    **** 
 167:Src/main.c    **** static unsigned char logo_bits[] = {
 168:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0x0F,
 169:Src/main.c    ****   0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0xE0, 0xFF, 0xFF,
 170:Src/main.c    ****   0xFF, 0xFF, 0xFF, 0x01, 0xF8, 0x3F, 0x00, 0x00, 0xF0, 0xFF, 0x07, 0xF8,
 171:Src/main.c    ****   0x01, 0x00, 0x00, 0x70, 0xE0, 0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x80,
 172:Src/main.c    ****   0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00,
 173:Src/main.c    ****   0x38, 0x80, 0x07, 0x00, 0xF8, 0x3F, 0x00, 0x38, 0x80, 0x07, 0x00, 0xFE,
 174:Src/main.c    ****   0xFF, 0x00, 0x1C, 0xC0, 0x03, 0x80, 0xFF, 0xFF, 0x01, 0x0E, 0xC0, 0x01,
 175:Src/main.c    ****   0xC0, 0x07, 0xFC, 0x07, 0x07, 0xE0, 0x01, 0x80, 0x03, 0xF0, 0x9F, 0x03,
 176:Src/main.c    ****   0xF0, 0x00, 0x80, 0x03, 0xC0, 0xFF, 0x03, 0x78, 0x00, 0x00, 0x07, 0x80,
 177:Src/main.c    ****   0xFF, 0x01, 0x3C, 0x00, 0x00, 0x06, 0x00, 0xFE, 0x87, 0x3F, 0x00, 0x00,
 178:Src/main.c    ****   0x0E, 0x00, 0xF8, 0xFF, 0x1F, 0x00, 0x00, 0x1C, 0x00, 0xF8, 0xFF, 0x07,
 179:Src/main.c    ****   0x00, 0x00, 0x38, 0x00, 0xDE, 0xFF, 0x03, 0x00, 0x00, 0x70, 0x00, 0x0F,
 180:Src/main.c    ****   0x7E, 0x00, 0x00, 0x00, 0xE0, 0xC0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xC0,
 181:Src/main.c    ****   0xF1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x00, 0x7C, 0x00, 0x00,
 182:Src/main.c    ****   0x00, 0x00, 0x3F, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x1F,
 183:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x3C, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x78,
 184:Src/main.c    ****   0xE0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0x03, 0x00, 0x00, 0x00,
 185:Src/main.c    ****   0x00, 0xC0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00,
 186:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00,
 187:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x4E, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39,
 188:Src/main.c    ****   0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00,
 189:Src/main.c    ****   0x00, 0x7E, 0x3E, 0xC7, 0x3D, 0x1C, 0x00, 0x00, 0x6F, 0x3E, 0xC7, 0x7F,
 190:Src/main.c    ****   0x1C, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x73, 0x18, 0x00, 0x00, 0x07, 0x1C,
 191:Src/main.c    ****   0x86, 0x71, 0x18, 0x00, 0x00, 0x3E, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00,
 192:Src/main.c    ****   0x1F, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x71, 0x18,
 193:Src/main.c    ****   0x00, 0x00, 0x47, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x7F, 0x3E, 0xCF,
 194:Src/main.c    ****   0xFB, 0x3C, 0x00, 0x00, 0x3C, 0x3E, 0xCF, 0xFB, 0x3C, 0x00, 0x00, 0x00,
 195:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 196:Src/main.c    ****   };
 197:Src/main.c    **** */
 198:Src/main.c    **** 
 199:Src/main.c    **** u8g2_t    u8g2; // a structure which will contain all the data for one display
 200:Src/main.c    **** 
 201:Src/main.c    **** uint8_t   update_display = 0;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 5


 202:Src/main.c    **** 
 203:Src/main.c    **** // uint16_t	rpm = 0;
 204:Src/main.c    **** uint16_t	speed = 240;
 205:Src/main.c    **** uint8_t		gear = 0;
 206:Src/main.c    **** double		MT[5] = {3.483, 2.015, 1.391, 1.000, 0.806};
 207:Src/main.c    **** 
 208:Src/main.c    **** // UI
 209:Src/main.c    **** uint8_t   mode;
 210:Src/main.c    **** uint8_t   setting;
 211:Src/main.c    **** uint8_t   cursor = 0;
 212:Src/main.c    **** 
 213:Src/main.c    **** 
 214:Src/main.c    **** // variables for indicators
 215:Src/main.c    **** const unsigned char idct_name[N_idct][5] = { // length must be (text length + 1)
 216:Src/main.c    **** 		"CAN"	,
 217:Src/main.c    **** 		"GSENS"	,
 218:Src/main.c    **** };
 219:Src/main.c    **** 
 220:Src/main.c    **** uint8_t	idct_status[N_idct] = {
 221:Src/main.c    **** 		0	,
 222:Src/main.c    **** 		0
 223:Src/main.c    **** };
 224:Src/main.c    **** 
 225:Src/main.c    **** // variables for measurement
 226:Src/main.c    **** const unsigned char meas_name[N_meas][7] = { // length must be (text length + 1)
 227:Src/main.c    **** 		"MAP"         ,
 228:Src/main.c    **** 		"OILP"        ,
 229:Src/main.c    **** 		"FPV"         ,
 230:Src/main.c    **** 		"ECT"         ,
 231:Src/main.c    **** 		"OILT"        ,
 232:Src/main.c    **** 		"O2"          
 233:Src/main.c    **** };
 234:Src/main.c    **** 
 235:Src/main.c    **** const unsigned char meas_unit[N_meas][5] = {
 236:Src/main.c    **** 		"kpa"			    ,	// MAP
 237:Src/main.c    **** 		"kpa"			    ,	// OILP
 238:Src/main.c    **** 		"V  "         ,	// FuelPump Voltage
 239:Src/main.c    **** 		{176, 67, 0}  ,	// ECT  degC...{176, 67, 0}
 240:Src/main.c    **** 		{176, 67, 0}	,	// OILT  degC...{176, 67, 0}
 241:Src/main.c    **** 		"V"					    // O2
 242:Src/main.c    **** };
 243:Src/main.c    **** 
 244:Src/main.c    **** const uint8_t	meas_digit[N_meas] = {
 245:Src/main.c    **** 		3	,	// MAP
 246:Src/main.c    **** 		3	,	// OILP
 247:Src/main.c    **** 		3	,	// FuelPump Voltage
 248:Src/main.c    **** 		3	,	// ECT
 249:Src/main.c    **** 		3	,	// OILT
 250:Src/main.c    **** 		3		// O2
 251:Src/main.c    **** };
 252:Src/main.c    **** 
 253:Src/main.c    **** const uint8_t	meas_frac[N_meas] = {
 254:Src/main.c    **** 		2	,	// MAP
 255:Src/main.c    **** 		1	,	// OILP
 256:Src/main.c    **** 		1	,	// FuelPump Voltage
 257:Src/main.c    **** 		0	,	// ECT
 258:Src/main.c    **** 		0	,	// OILT
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 6


 259:Src/main.c    **** 		2		// O2
 260:Src/main.c    **** };
 261:Src/main.c    **** 
 262:Src/main.c    **** const uint8_t	meas_sign[N_meas] = {
 263:Src/main.c    **** 		1	,	// MAP
 264:Src/main.c    **** 		0	,	// OILP
 265:Src/main.c    **** 		0	,	// FuelPump Voltage
 266:Src/main.c    **** 		0	,	// ECT
 267:Src/main.c    **** 		0	,	// OILT
 268:Src/main.c    **** 		0		// O2
 269:Src/main.c    **** };
 270:Src/main.c    **** 
 271:Src/main.c    **** int16_t	meas_value[N_meas] = {
 272:Src/main.c    **** 		105	,	// MAP
 273:Src/main.c    **** 		235	,	// OILP
 274:Src/main.c    **** 		645	,	// FuelPump Voltage
 275:Src/main.c    **** 		89	,	// ECT
 276:Src/main.c    **** 		73	,	// OILT
 277:Src/main.c    **** 		143		// O2
 278:Src/main.c    **** };
 279:Src/main.c    **** 
 280:Src/main.c    **** // O2 senser Voltage
 281:Src/main.c    **** int16_t   O2_volt = 330;
 282:Src/main.c    **** 
 283:Src/main.c    **** // Fuel Pump Voltage
 284:Src/main.c    **** int16_t   FP_volt = 330;
 285:Src/main.c    **** int16_t   FP_duty = 100;
 286:Src/main.c    **** 
 287:Src/main.c    **** // CAN Tranceiver --------------------------------------------------
 288:Src/main.c    **** uint8_t   CAN_EN;
 289:Src/main.c    **** 
 290:Src/main.c    **** // ADXL345 3-axis acceration sensor --------------------------------
 291:Src/main.c    **** uint8_t   Gsens_EN;
 292:Src/main.c    **** // uint8_t   Gsens_X1;
 293:Src/main.c    **** // uint8_t   Gsens_X0;
 294:Src/main.c    **** int16_t   Gsens_X;
 295:Src/main.c    **** // uint8_t   Gsens_Y1;
 296:Src/main.c    **** // uint8_t   Gsens_Y0;
 297:Src/main.c    **** int16_t   Gsens_Y;
 298:Src/main.c    **** // uint8_t   Gsens_Z1;
 299:Src/main.c    **** // uint8_t   Gsens_Z0;
 300:Src/main.c    **** int16_t   Gsens_Z;
 301:Src/main.c    **** 
 302:Src/main.c    **** #define ADXL0_ADDR 0x1D
 303:Src/main.c    **** // ADXL345     I2C
 304:Src/main.c    **** // SDO/ALT   Address
 305:Src/main.c    **** //    H        0x1D
 306:Src/main.c    **** //    L        0x53
 307:Src/main.c    **** 
 308:Src/main.c    **** /*
 309:Src/main.c    **** void ADXL345_RegWrite(uint8_t slv_addr, uint8_t addr, uint8_t data){
 310:Src/main.c    ****   uint8_t i2c_buf[2];
 311:Src/main.c    ****   i2c_buf[0] = addr;
 312:Src/main.c    ****   i2c_buf[1] = data;  
 313:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1, slv_addr << 1, &i2c_buf, 2, 10);
 314:Src/main.c    **** }
 315:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 7


 316:Src/main.c    **** int8_t ADXL345_RegRead_1byte(uint8_t slv_addr, uint8_t addr){
 317:Src/main.c    ****   uint8_t data;
 318:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1, slv_addr << 1, &addr, 1, 10);
 319:Src/main.c    ****   HAL_I2C_Master_Receive(&hi2c1, slv_addr << 1, &data, 1, 10);
 320:Src/main.c    ****   return data;
 321:Src/main.c    **** }
 322:Src/main.c    **** */
 323:Src/main.c    **** 
 324:Src/main.c    **** /* USER CODE END PV */
 325:Src/main.c    **** 
 326:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 327:Src/main.c    **** void SystemClock_Config(void);
 328:Src/main.c    **** /* USER CODE BEGIN PFP */
 329:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 330:Src/main.c    **** 
 331:Src/main.c    **** /* USER CODE END PFP */
 332:Src/main.c    **** 
 333:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 334:Src/main.c    **** /* USER CODE BEGIN 0 */
 335:Src/main.c    **** void draw_indicators(){
  29              		.loc 1 335 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 20
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
 336:Src/main.c    ****   uint8_t n;
 337:Src/main.c    ****   uint8_t x, y;
 338:Src/main.c    ****   // draw indicators
 339:Src/main.c    **** 
 340:Src/main.c    ****   for( n=0; n<N_idct; n++ ){
 341:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
  42              		.loc 1 341 0
  43 0002 0E4F     		ldr	r7, .L4
  44 0004 0E4D     		ldr	r5, .L4+4
  45 0006 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
  46 0008 0E4C     		ldr	r4, .L4+8
 335:Src/main.c    ****   uint8_t n;
  47              		.loc 1 335 0
  48 000a 85B0     		sub	sp, sp, #20
  49              	.LCFI1:
  50              		.cfi_def_cfa_offset 40
  51              		.loc 1 341 0
  52 000c 0926     		movs	r6, #9
  53 000e 0193     		str	r3, [sp, #4]
  54 0010 2846     		mov	r0, r5
  55 0012 0294     		str	r4, [sp, #8]
  56 0014 0096     		str	r6, [sp]
  57 0016 1B23     		movs	r3, #27
  58 0018 3522     		movs	r2, #53
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 8


  59 001a 4821     		movs	r1, #72
  60 001c FFF7FEFF 		bl	draw_IndicatorBox
  61              	.LVL1:
  62 0020 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
  63 0022 0096     		str	r6, [sp]
  64 0024 0534     		adds	r4, r4, #5
  65 0026 CDE90134 		strd	r3, r4, [sp, #4]
  66 002a 2846     		mov	r0, r5
  67 002c 1B23     		movs	r3, #27
  68 002e 3522     		movs	r2, #53
  69 0030 6521     		movs	r1, #101
  70 0032 FFF7FEFF 		bl	draw_IndicatorBox
  71              	.LVL2:
 342:Src/main.c    ****   }
 343:Src/main.c    **** }
  72              		.loc 1 343 0
  73 0036 05B0     		add	sp, sp, #20
  74              	.LCFI2:
  75              		.cfi_def_cfa_offset 20
  76              		@ sp needed
  77 0038 F0BD     		pop	{r4, r5, r6, r7, pc}
  78              	.L5:
  79 003a 00BF     		.align	2
  80              	.L4:
  81 003c 00000000 		.word	.LANCHOR1
  82 0040 00000000 		.word	u8g2
  83 0044 00000000 		.word	.LANCHOR0
  84              		.cfi_endproc
  85              	.LFE126:
  87              		.section	.text.draw_MeasLabels,"ax",%progbits
  88              		.align	1
  89              		.p2align 2,,3
  90              		.global	draw_MeasLabels
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  94              		.fpu fpv4-sp-d16
  96              	draw_MeasLabels:
  97              	.LFB127:
 344:Src/main.c    **** 
 345:Src/main.c    **** void draw_MeasLabels(){
  98              		.loc 1 345 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              	.LVL3:
 103 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 104              	.LCFI3:
 105              		.cfi_def_cfa_offset 20
 106              		.cfi_offset 4, -20
 107              		.cfi_offset 5, -16
 108              		.cfi_offset 6, -12
 109              		.cfi_offset 7, -8
 110              		.cfi_offset 14, -4
 346:Src/main.c    ****   uint8_t n;
 347:Src/main.c    ****   uint8_t x, y;
 348:Src/main.c    ****   // draw measurements label & unit
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 9


 349:Src/main.c    ****   for( n=0; n<3; n++ ){
 350:Src/main.c    **** 	  x = meas_x;
 351:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 352:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width1, meas_height, meas_name[n], meas_unit[n]);
 111              		.loc 1 352 0
 112 0002 334C     		ldr	r4, .L8
 113 0004 334E     		ldr	r6, .L8+4
 114 0006 344F     		ldr	r7, .L8+8
 345:Src/main.c    ****   uint8_t n;
 115              		.loc 1 345 0
 116 0008 87B0     		sub	sp, sp, #28
 117              	.LCFI4:
 118              		.cfi_def_cfa_offset 48
 119              		.loc 1 352 0
 120 000a 0C25     		movs	r5, #12
 121 000c 0297     		str	r7, [sp, #8]
 122 000e 2046     		mov	r0, r4
 123 0010 CDE90056 		strd	r5, r6, [sp]
 124 0014 4623     		movs	r3, #70
 125 0016 1022     		movs	r2, #16
 126 0018 0021     		movs	r1, #0
 127 001a FFF7FEFF 		bl	draw_MeasLabelUnit
 128              	.LVL4:
 129 001e 7A1D     		adds	r2, r7, #5
 130 0020 F31D     		adds	r3, r6, #7
 131 0022 CDE90132 		strd	r3, r2, [sp, #4]
 132 0026 2046     		mov	r0, r4
 133 0028 0095     		str	r5, [sp]
 134 002a 4623     		movs	r3, #70
 135 002c 1C22     		movs	r2, #28
 136 002e 0021     		movs	r1, #0
 137 0030 FFF7FEFF 		bl	draw_MeasLabelUnit
 138              	.LVL5:
 139 0034 07F10A02 		add	r2, r7, #10
 140 0038 06F10E03 		add	r3, r6, #14
 141 003c CDE90132 		strd	r3, r2, [sp, #4]
 142 0040 2046     		mov	r0, r4
 143 0042 0095     		str	r5, [sp]
 144 0044 4623     		movs	r3, #70
 145 0046 2822     		movs	r2, #40
 146 0048 0021     		movs	r1, #0
 147 004a FFF7FEFF 		bl	draw_MeasLabelUnit
 148              	.LVL6:
 353:Src/main.c    ****   }
 354:Src/main.c    ****   for( n=3; n<N_meas; n++ ){
 355:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 356:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 357:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width2, meas_height, meas_name[n], meas_unit[n]);
 149              		.loc 1 357 0
 150 004e 07F10F02 		add	r2, r7, #15
 151 0052 06F11503 		add	r3, r6, #21
 152 0056 CDE90132 		strd	r3, r2, [sp, #4]
 153 005a 2046     		mov	r0, r4
 154 005c 0095     		str	r5, [sp]
 155 005e 3823     		movs	r3, #56
 156 0060 1022     		movs	r2, #16
 157 0062 4821     		movs	r1, #72
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 10


 158 0064 FFF7FEFF 		bl	draw_MeasLabelUnit
 159              	.LVL7:
 160 0068 07F11402 		add	r2, r7, #20
 161 006c 06F11C03 		add	r3, r6, #28
 162 0070 CDE90132 		strd	r3, r2, [sp, #4]
 163 0074 2046     		mov	r0, r4
 164 0076 0095     		str	r5, [sp]
 165 0078 3823     		movs	r3, #56
 166 007a 1C22     		movs	r2, #28
 167 007c 4821     		movs	r1, #72
 168 007e 1937     		adds	r7, r7, #25
 169 0080 2336     		adds	r6, r6, #35
 170 0082 FFF7FEFF 		bl	draw_MeasLabelUnit
 171              	.LVL8:
 172 0086 CDE90167 		strd	r6, r7, [sp, #4]
 173 008a 2046     		mov	r0, r4
 174 008c 0095     		str	r5, [sp]
 175 008e 3823     		movs	r3, #56
 176 0090 2822     		movs	r2, #40
 177 0092 4821     		movs	r1, #72
 178 0094 FFF7FEFF 		bl	draw_MeasLabelUnit
 179              	.LVL9:
 358:Src/main.c    ****   }
 359:Src/main.c    **** 
 360:Src/main.c    ****   // Fuel Pump voltage & duty
 361:Src/main.c    ****   draw_MeasLabelUnit(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, "DUTY", "%  ");
 180              		.loc 1 361 0
 181 0098 104E     		ldr	r6, .L8+12
 182 009a 114B     		ldr	r3, .L8+16
 183 009c 0095     		str	r5, [sp]
 184 009e 2046     		mov	r0, r4
 185 00a0 CDE90136 		strd	r3, r6, [sp, #4]
 186 00a4 3422     		movs	r2, #52
 187 00a6 4623     		movs	r3, #70
 188 00a8 0021     		movs	r1, #0
 189 00aa FFF7FEFF 		bl	draw_MeasLabelUnit
 190              	.LVL10:
 362:Src/main.c    ****   draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, 100, 3, 0, 0, "%  ");
 191              		.loc 1 362 0
 192 00ae 0021     		movs	r1, #0
 193 00b0 0322     		movs	r2, #3
 194 00b2 6423     		movs	r3, #100
 195 00b4 CDE90132 		strd	r3, r2, [sp, #4]
 196 00b8 0596     		str	r6, [sp, #20]
 197 00ba 0095     		str	r5, [sp]
 198 00bc 2046     		mov	r0, r4
 199 00be CDE90311 		strd	r1, r1, [sp, #12]
 200 00c2 4623     		movs	r3, #70
 201 00c4 3422     		movs	r2, #52
 202 00c6 FFF7FEFF 		bl	draw_Value
 203              	.LVL11:
 363:Src/main.c    **** }
 204              		.loc 1 363 0
 205 00ca 07B0     		add	sp, sp, #28
 206              	.LCFI5:
 207              		.cfi_def_cfa_offset 20
 208              		@ sp needed
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 11


 209 00cc F0BD     		pop	{r4, r5, r6, r7, pc}
 210              	.L9:
 211 00ce 00BF     		.align	2
 212              	.L8:
 213 00d0 00000000 		.word	u8g2
 214 00d4 00000000 		.word	.LANCHOR3
 215 00d8 00000000 		.word	.LANCHOR2
 216 00dc 00000000 		.word	.LC0
 217 00e0 04000000 		.word	.LC1
 218              		.cfi_endproc
 219              	.LFE127:
 221              		.section	.text.draw_MeasLabels_Rotary,"ax",%progbits
 222              		.align	1
 223              		.p2align 2,,3
 224              		.global	draw_MeasLabels_Rotary
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	draw_MeasLabels_Rotary:
 231              	.LFB128:
 364:Src/main.c    **** 
 365:Src/main.c    **** void draw_MeasLabels_Rotary(){
 232              		.loc 1 365 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              	.LVL12:
 237 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 238              	.LCFI6:
 239              		.cfi_def_cfa_offset 24
 240              		.cfi_offset 4, -24
 241              		.cfi_offset 5, -20
 242              		.cfi_offset 6, -16
 243              		.cfi_offset 7, -12
 244              		.cfi_offset 8, -8
 245              		.cfi_offset 14, -4
 246 0004 0D4E     		ldr	r6, .L14
 247 0006 0E4D     		ldr	r5, .L14+4
 366:Src/main.c    ****   uint8_t n;
 367:Src/main.c    ****   uint8_t x, y;
 368:Src/main.c    ****   // draw measurements label & unit
 369:Src/main.c    ****   for( n=0; n<4; n++ ){
 370:Src/main.c    **** 	  x = meas_x;
 371:Src/main.c    **** 	  y = (n % 4) * meas_height	+ meas_y;
 372:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width1, meas_height, meas_name[n], meas_unit[n]);
 248              		.loc 1 372 0
 249 0008 DFF83880 		ldr	r8, .L14+8
 365:Src/main.c    ****   uint8_t n;
 250              		.loc 1 365 0
 251 000c 84B0     		sub	sp, sp, #16
 252              	.LCFI7:
 253              		.cfi_def_cfa_offset 40
 365:Src/main.c    ****   uint8_t n;
 254              		.loc 1 365 0
 255 000e 1024     		movs	r4, #16
 256              		.loc 1 372 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 12


 257 0010 0C27     		movs	r7, #12
 258              	.LVL13:
 259              	.L11:
 260              		.loc 1 372 0 is_stmt 0 discriminator 3
 261 0012 2246     		mov	r2, r4
 262 0014 0C34     		adds	r4, r4, #12
 263              	.LVL14:
 264 0016 CDE90165 		strd	r6, r5, [sp, #4]
 265 001a 0097     		str	r7, [sp]
 266 001c 4623     		movs	r3, #70
 267 001e 0021     		movs	r1, #0
 268 0020 4046     		mov	r0, r8
 269 0022 E4B2     		uxtb	r4, r4
 270 0024 FFF7FEFF 		bl	draw_MeasLabelUnit
 271              	.LVL15:
 369:Src/main.c    **** 	  x = meas_x;
 272              		.loc 1 369 0 is_stmt 1 discriminator 3
 273 0028 402C     		cmp	r4, #64
 274 002a 06F10706 		add	r6, r6, #7
 275 002e 05F10505 		add	r5, r5, #5
 276 0032 EED1     		bne	.L11
 373:Src/main.c    ****   }
 374:Src/main.c    **** }
 277              		.loc 1 374 0
 278 0034 04B0     		add	sp, sp, #16
 279              	.LCFI8:
 280              		.cfi_def_cfa_offset 24
 281              		@ sp needed
 282 0036 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 283              	.L15:
 284 003a 00BF     		.align	2
 285              	.L14:
 286 003c 00000000 		.word	.LANCHOR3
 287 0040 00000000 		.word	.LANCHOR2
 288 0044 00000000 		.word	u8g2
 289              		.cfi_endproc
 290              	.LFE128:
 292              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 293              		.align	1
 294              		.p2align 2,,3
 295              		.global	HAL_ADC_ConvCpltCallback
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 299              		.fpu fpv4-sp-d16
 301              	HAL_ADC_ConvCpltCallback:
 302              	.LFB129:
 375:Src/main.c    **** 
 376:Src/main.c    **** 
 377:Src/main.c    **** // ADC buffer definition
 378:Src/main.c    **** enum{ ADC_BUFFER_LENGTH = 10 };
 379:Src/main.c    **** uint16_t g_ADCBuffer[ADC_BUFFER_LENGTH];
 380:Src/main.c    **** uint16_t adc[ADC_BUFFER_LENGTH];  
 381:Src/main.c    **** 
 382:Src/main.c    **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc){
 303              		.loc 1 382 0
 304              		.cfi_startproc
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 13


 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308              	.LVL16:
 309 0000 054B     		ldr	r3, .L19
 310 0002 064A     		ldr	r2, .L19+4
 311 0004 03F11400 		add	r0, r3, #20
 312              	.LVL17:
 313              	.L17:
 314              	.LBB26:
 383:Src/main.c    **** 	for (unsigned int i =0; i<ADC_BUFFER_LENGTH; i++){
 384:Src/main.c    **** 	   adc[i] = g_ADCBuffer[i];  // store the values in adc[]
 315              		.loc 1 384 0 discriminator 3
 316 0008 33F8021B 		ldrh	r1, [r3], #2
 317 000c 22F8021B 		strh	r1, [r2], #2	@ movhi
 383:Src/main.c    **** 	for (unsigned int i =0; i<ADC_BUFFER_LENGTH; i++){
 318              		.loc 1 383 0 discriminator 3
 319 0010 8342     		cmp	r3, r0
 320 0012 F9D1     		bne	.L17
 321              	.LBE26:
 385:Src/main.c    **** 	}
 386:Src/main.c    **** }
 322              		.loc 1 386 0
 323 0014 7047     		bx	lr
 324              	.L20:
 325 0016 00BF     		.align	2
 326              	.L19:
 327 0018 00000000 		.word	g_ADCBuffer
 328 001c 00000000 		.word	adc
 329              		.cfi_endproc
 330              	.LFE129:
 332              		.section	.text.SystemClock_Config,"ax",%progbits
 333              		.align	1
 334              		.p2align 2,,3
 335              		.global	SystemClock_Config
 336              		.syntax unified
 337              		.thumb
 338              		.thumb_func
 339              		.fpu fpv4-sp-d16
 341              	SystemClock_Config:
 342              	.LFB131:
 387:Src/main.c    **** 
 388:Src/main.c    **** /* USER CODE END 0 */
 389:Src/main.c    **** 
 390:Src/main.c    **** /**
 391:Src/main.c    ****   * @brief  The application entry point.
 392:Src/main.c    ****   * @retval int
 393:Src/main.c    ****   */
 394:Src/main.c    **** int main(void)
 395:Src/main.c    **** {
 396:Src/main.c    ****   /* USER CODE BEGIN 1 */
 397:Src/main.c    **** 
 398:Src/main.c    ****   /* USER CODE END 1 */
 399:Src/main.c    ****   
 400:Src/main.c    **** 
 401:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 402:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 14


 403:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 404:Src/main.c    ****   HAL_Init();
 405:Src/main.c    **** 
 406:Src/main.c    ****   /* USER CODE BEGIN Init */
 407:Src/main.c    ****   uint8_t n;
 408:Src/main.c    ****   uint8_t x, y;
 409:Src/main.c    **** 
 410:Src/main.c    ****   uint8_t a = 0; // for dummy data
 411:Src/main.c    ****   uint8_t b = 0; // for dummy data
 412:Src/main.c    **** 
 413:Src/main.c    ****   // ROTARY
 414:Src/main.c    ****   uint16_t rpm_integral;
 415:Src/main.c    ****   uint8_t index_animation;
 416:Src/main.c    **** 
 417:Src/main.c    ****   // circular buffer for ADC data
 418:Src/main.c    ****   uint16_t circular_buffer_index = 0;
 419:Src/main.c    ****   int16_t circular_buffer[128]={};
 420:Src/main.c    **** 
 421:Src/main.c    ****   /* USER CODE END Init */
 422:Src/main.c    **** 
 423:Src/main.c    ****   /* Configure the system clock */
 424:Src/main.c    ****   SystemClock_Config();
 425:Src/main.c    **** 
 426:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 427:Src/main.c    **** 
 428:Src/main.c    ****   /* USER CODE END SysInit */
 429:Src/main.c    **** 
 430:Src/main.c    ****   /* Initialize all configured peripherals */
 431:Src/main.c    ****   MX_GPIO_Init();
 432:Src/main.c    ****   MX_DMA_Init();
 433:Src/main.c    ****   MX_ADC1_Init();
 434:Src/main.c    ****   MX_CAN_Init();
 435:Src/main.c    ****   MX_I2C1_Init();
 436:Src/main.c    ****   MX_SPI1_Init();
 437:Src/main.c    ****   MX_TIM1_Init();
 438:Src/main.c    ****   MX_TIM2_Init();
 439:Src/main.c    ****   MX_TIM3_Init();
 440:Src/main.c    ****   MX_TIM6_Init();
 441:Src/main.c    ****   MX_USART1_UART_Init();
 442:Src/main.c    ****   MX_USART2_UART_Init();
 443:Src/main.c    ****   MX_TIM7_Init();
 444:Src/main.c    ****   /* USER CODE BEGIN 2 */
 445:Src/main.c    **** 
 446:Src/main.c    ****   ///// PWM initialize ----------------------------------------------------------------
 447:Src/main.c    **** 
 448:Src/main.c    ****   ///// Timer /////
 449:Src/main.c    ****   // TIM1 - PWM for Fuel Pump Driver (Cycle 100kHz = 1MHz / 100count)
 450:Src/main.c    **** //  if (HAL_TIM_Base_Start_IT(&htim1) != HAL_OK){
 451:Src/main.c    ****   if (HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1) != HAL_OK){
 452:Src/main.c    ****     Error_Handler();
 453:Src/main.c    ****   }
 454:Src/main.c    **** 
 455:Src/main.c    ****   // TIM2 - display (Cycle 20ms = 1/100kHz x 2,000count)
 456:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim2) != HAL_OK){
 457:Src/main.c    ****     Error_Handler();
 458:Src/main.c    ****   }
 459:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 15


 460:Src/main.c    ****   // TIM3 - Pulse counter for Tacho (f 200kHz, count 65535)
 461:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim3) != HAL_OK){
 462:Src/main.c    ****     Error_Handler();
 463:Src/main.c    ****   }
 464:Src/main.c    **** 
 465:Src/main.c    ****   // TIM6 - SW interrupt control (Cycle 100ms = 1/100kHz x 10,000count)
 466:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim6) != HAL_OK){
 467:Src/main.c    ****     Error_Handler();
 468:Src/main.c    ****   }
 469:Src/main.c    **** 
 470:Src/main.c    ****   // TIM7 - SW interrupt control (Cycle 1000ms = 1/32.757kHz x 32,768count)
 471:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim7) != HAL_OK){
 472:Src/main.c    ****     Error_Handler();
 473:Src/main.c    ****   }
 474:Src/main.c    **** 
 475:Src/main.c    **** 
 476:Src/main.c    ****   // ADC
 477:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, g_ADCBuffer, ADC_BUFFER_LENGTH);
 478:Src/main.c    **** 
 479:Src/main.c    ****   // UART1 interrupt setup for DEFI decoder
 480:Src/main.c    ****   HAL_UART_Receive_IT(&huart1, &UART1_Data, 1);
 481:Src/main.c    ****   // variables is defined in 'defi.h'
 482:Src/main.c    **** 
 483:Src/main.c    ****   // CAN initialization
 484:Src/main.c    ****   CAN_OBD_Init();
 485:Src/main.c    **** 
 486:Src/main.c    **** 
 487:Src/main.c    ****   // OLED diaplay initialization
 488:Src/main.c    ****   u8g2_Setup_ssd1309_128x64_noname2_f(&u8g2, U8G2_R0, u8x8_byte_4wire_hw_spi, u8x8_gpio_and_delay_S
 489:Src/main.c    **** 
 490:Src/main.c    ****   // OLED display Reset (must be more than 3us!!)
 491:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 0); // Set RES=L (OLED Reset)
 492:Src/main.c    ****   HAL_Delay(5);
 493:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 494:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 495:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 496:Src/main.c    ****   u8g2_SetContrast(&u8g2, 255); // set contrast
 497:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 498:Src/main.c    **** 
 499:Src/main.c    ****   // draw opening
 500:Src/main.c    ****   u8g2_DrawXBMP(&u8g2, 40, 0, logo_width, logo_height, logo_bits );
 501:Src/main.c    **** 
 502:Src/main.c    ****   u8g2_SetFont(&u8g2, u8g2_font_5x7_tf);
 503:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 504:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.2b");
 505:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 506:Src/main.c    **** 
 507:Src/main.c    ****   HAL_Delay(1000);
 508:Src/main.c    **** 
 509:Src/main.c    ****   u8g2_ClearBuffer(&u8g2);
 510:Src/main.c    **** 
 511:Src/main.c    ****   HAL_UART_Transmit_printf(&huart2, "Hello. This is MFM.\n");
 512:Src/main.c    **** 
 513:Src/main.c    ****   // Set PWM Duty for Timer1 / Output1 (Asymmetric PWM2)
 514:Src/main.c    ****   TIM1->CCR1 = (100 - FP_duty);
 515:Src/main.c    **** 
 516:Src/main.c    ****   /* USER CODE END 2 */
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 16


 517:Src/main.c    **** 
 518:Src/main.c    ****   /* Infinite loop */
 519:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 520:Src/main.c    **** 
 521:Src/main.c    ****   draw_MeasLabels();
 522:Src/main.c    ****   draw_indicators();
 523:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 524:Src/main.c    **** 
 525:Src/main.c    **** 
 526:Src/main.c    ****   // I2C communication to ADXL345(3-axis G-sensor)
 527:Src/main.c    ****   Gsens_EN = Gsens_ADXL345_Init(0);
 528:Src/main.c    **** 
 529:Src/main.c    ****   while(1){
 530:Src/main.c    ****     /* USER CODE END WHILE */
 531:Src/main.c    **** 
 532:Src/main.c    ****     /* USER CODE BEGIN 3 */
 533:Src/main.c    **** 
 534:Src/main.c    ****     ///// STATUS ----------------------------------------------------------------
 535:Src/main.c    ****     if( flag_status ){
 536:Src/main.c    ****       CAN_EN = 0;
 537:Src/main.c    ****       flag_status = 0;
 538:Src/main.c    ****     }
 539:Src/main.c    **** 
 540:Src/main.c    ****     if( CAN_EN == 0 ){
 541:Src/main.c    ****       CAN_EN = CAN_Received;
 542:Src/main.c    ****     }
 543:Src/main.c    ****     idct_status[0] = CAN_EN;
 544:Src/main.c    ****     idct_status[1] = Gsens_EN;
 545:Src/main.c    **** 
 546:Src/main.c    ****     ///// ADC ----------------------------------------------------------------
 547:Src/main.c    **** 
 548:Src/main.c    **** 		// read O2 sensor ADC output
 549:Src/main.c    **** 		O2_volt = (int16_t)(330 * (float)adc[0]/255);
 550:Src/main.c    **** 
 551:Src/main.c    **** 		// read Fuel Pump Voltage ADC output
 552:Src/main.c    **** 		FP_volt = (int16_t)((165/33)*33*(float)adc[1]/255);
 553:Src/main.c    ****     // Ressister attenation ratio '165/33'
 554:Src/main.c    ****     
 555:Src/main.c    ****     ///// Fuel Pump ----------------------------------------------------------------
 556:Src/main.c    ****     // Duty calculation
 557:Src/main.c    ****     if( (rpm >= 3000)|(DEFI_value[0] >= 0) ){ // DEFI_value[0] .. MAP
 558:Src/main.c    ****       FP_duty = 100;
 559:Src/main.c    ****     }else{
 560:Src/main.c    ****       FP_duty = (uint16_t)(rpm/3000*100);
 561:Src/main.c    ****     }
 562:Src/main.c    ****     // Saturation process
 563:Src/main.c    ****     if( FP_duty > 100 ){
 564:Src/main.c    ****       FP_duty = 100;
 565:Src/main.c    ****     }else if( FP_duty < 60 ){
 566:Src/main.c    ****       FP_duty = 60;
 567:Src/main.c    ****     }
 568:Src/main.c    **** 
 569:Src/main.c    ****     ///// CAN ----------------------------------------------------------------
 570:Src/main.c    **** 
 571:Src/main.c    ****     //CAN_OBD_Response(MAP, rpm, SPEED, THROTTLE);
 572:Src/main.c    ****     CAN_OBD_Response(DEFI_value[0], rpm, 0x00, 0x00);
 573:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 17


 574:Src/main.c    ****     ///// Measure data  ----------------------------------------------------------------
 575:Src/main.c    ****     defi_decoder(UART1_RxData); // DEFI decoder
 576:Src/main.c    **** 
 577:Src/main.c    ****     if( flag_meas == 1 ){
 578:Src/main.c    **** 
 579:Src/main.c    **** //      CAN_EN = 0;
 580:Src/main.c    **** 
 581:Src/main.c    ****       // I2C communication to ADXL345(3-axis G-sensor)
 582:Src/main.c    ****       if( Gsens_EN == 1 ){
 583:Src/main.c    ****         // Acceration 1G = 100
 584:Src/main.c    ****         Gsens_X = Gsens_ADXL345_Read_G('x', 0);
 585:Src/main.c    ****         Gsens_Y = Gsens_ADXL345_Read_G('y', 0);
 586:Src/main.c    ****         Gsens_Z = Gsens_ADXL345_Read_G('z', 0);
 587:Src/main.c    **** 
 588:Src/main.c    ****         HAL_UART_Transmit_printf(&huart2, "(%d,%d,%d)\n", Gsens_X, Gsens_Y, Gsens_Z); // debug
 589:Src/main.c    ****         
 590:Src/main.c    ****       }
 591:Src/main.c    **** 
 592:Src/main.c    **** /*
 593:Src/main.c    ****   	  // start of create dummy data for debug
 594:Src/main.c    ****       if( rpm <= 8200 ){
 595:Src/main.c    ****           rpm = rpm + (int)(20*MT[gear]);
 596:Src/main.c    ****           //rpm=rpm+10;
 597:Src/main.c    ****       }else{
 598:Src/main.c    ****         if( gear < 4 ){
 599:Src/main.c    ****           gear++;
 600:Src/main.c    ****           rpm = (double)speed / (0.002*60.0) * (MT[gear]*4.1);
 601:Src/main.c    ****         }else{
 602:Src/main.c    ****           gear = 0;
 603:Src/main.c    ****           rpm = 1000;
 604:Src/main.c    ****         }
 605:Src/main.c    ****       }
 606:Src/main.c    ****       speed = (double)rpm*0.002*60.0/MT[gear]/4.1;
 607:Src/main.c    **** 
 608:Src/main.c    ****       if( a >= 150){
 609:Src/main.c    ****         a = 0;
 610:Src/main.c    ****       }else{
 611:Src/main.c    ****         a++;
 612:Src/main.c    ****       }
 613:Src/main.c    ****   	  // end of create dummy data for debug
 614:Src/main.c    **** */
 615:Src/main.c    **** 
 616:Src/main.c    ****       meas_value[0] = DEFI_value[0];  // MAP
 617:Src/main.c    **** 		  meas_value[1] = DEFI_value[2];  // OILP
 618:Src/main.c    **** 			meas_value[2] = FP_volt;        // FuelPump Voltage
 619:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 620:Src/main.c    **** 			meas_value[4] = DEFI_value[5];  // OILT
 621:Src/main.c    **** 		  meas_value[5] = O2_volt;        // O2
 622:Src/main.c    **** 
 623:Src/main.c    ****       flag_meas = 0; // enable again by TIM2 interrupt
 624:Src/main.c    ****     }
 625:Src/main.c    **** 
 626:Src/main.c    **** 
 627:Src/main.c    ****     ///// FP driver ----------------------------------------------------------------
 628:Src/main.c    ****     // Set PWM Duty for Timer1 / Output1 (Asymmetric PWM2)
 629:Src/main.c    ****     TIM1->CCR1 = (100 - FP_duty);
 630:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 18


 631:Src/main.c    **** 
 632:Src/main.c    ****     ///// Switch ----------------------------------------------------------------
 633:Src/main.c    ****     if( flag_sw != 0 ){
 634:Src/main.c    ****       switch( flag_sw ){
 635:Src/main.c    ****         case 1:
 636:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "UP "); // debug
 637:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 638:Src/main.c    ****           // SW "UP"
 639:Src/main.c    ****           if( setting == 0 ){
 640:Src/main.c    ****             if( mode == N_mode-1 ){
 641:Src/main.c    ****               mode = 0;
 642:Src/main.c    ****             }else{
 643:Src/main.c    ****               mode++;
 644:Src/main.c    ****             }
 645:Src/main.c    ****           }
 646:Src/main.c    ****           break;
 647:Src/main.c    ****         case 2:
 648:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "DOWN "); // debug
 649:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 650:Src/main.c    ****           // SW "DOWN"
 651:Src/main.c    ****           if( setting == 0 ){
 652:Src/main.c    ****             if( mode == 0 ){
 653:Src/main.c    ****               mode = N_mode-1;
 654:Src/main.c    ****             }else{
 655:Src/main.c    ****               mode--;
 656:Src/main.c    ****             }
 657:Src/main.c    ****           }
 658:Src/main.c    ****           break;
 659:Src/main.c    ****         case 3:
 660:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "ENTER "); // debug
 661:Src/main.c    ****           HAL_NVIC_DisableIRQ (EXTI1_IRQn);
 662:Src/main.c    ****           // SW "ENTER"
 663:Src/main.c    **** 
 664:Src/main.c    ****           // if( setting == 0 ){
 665:Src/main.c    ****           //   mode = cursor;
 666:Src/main.c    ****           //   u8g2_ClearBuffer(&u8g2);
 667:Src/main.c    ****           // }else{
 668:Src/main.c    ****           //   mode = 10;
 669:Src/main.c    ****           // }
 670:Src/main.c    ****           // break;
 671:Src/main.c    **** 
 672:Src/main.c    ****         default:
 673:Src/main.c    ****           break;
 674:Src/main.c    ****       }
 675:Src/main.c    ****       u8g2_ClearBuffer(&u8g2);
 676:Src/main.c    ****       if( mode == MODE_BAR_METER ){
 677:Src/main.c    ****         draw_MeasLabels();
 678:Src/main.c    ****         draw_indicators();
 679:Src/main.c    **** 
 680:Src/main.c    ****       }else if( mode == MODE_CIRCULAR_METER ){
 681:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 682:Src/main.c    ****           x = meas_C_x;
 683:Src/main.c    ****           y = n * meas_C_height	+ meas_C_y;
 684:Src/main.c    ****           draw_MeasLabelUnit(&u8g2, x, y, meas_C_width, meas_C_height, meas_name[n], meas_unit[n]);
 685:Src/main.c    ****         }
 686:Src/main.c    ****         // draw indicators
 687:Src/main.c    ****         for( n=0; n<4; n++ ){
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 19


 688:Src/main.c    ****           draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_s
 689:Src/main.c    ****         }
 690:Src/main.c    ****         draw_CircularMeter_Init(32, 32, 31, 3, -60, 300, 10, 20, -1, -80, 120);
 691:Src/main.c    **** //        draw_CircularMeter_Init(26, 26, 26, 3, -60, 300, 10, 20, -1, -80, 120);
 692:Src/main.c    ****         draw_CircularMeter(&u8g2, 0);
 693:Src/main.c    **** 
 694:Src/main.c    ****       }else if( mode == MODE_ROTARY ){
 695:Src/main.c    ****         draw_MeasLabels_Rotary();
 696:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 2, meas_width1, meas_height, "TACHO", "rpm");
 697:Src/main.c    **** 
 698:Src/main.c    ****       }else if( mode == MODE_SCOPE_MAP ){
 699:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_m
 700:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "MAP", "kPa");
 701:Src/main.c    **** 
 702:Src/main.c    ****       }else if( mode == MODE_SCOPE_Gsens ){
 703:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, -200, 200, 4);
 704:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "LatG", "G");
 705:Src/main.c    **** 
 706:Src/main.c    ****       }
 707:Src/main.c    ****       u8g2_SendBuffer(&u8g2);
 708:Src/main.c    ****       TIM6->CNT = 0;
 709:Src/main.c    ****       flag_sw = 0;
 710:Src/main.c    ****     }
 711:Src/main.c    **** 
 712:Src/main.c    **** 
 713:Src/main.c    ****     ///// Display sequence ----------------------------------------------------------------
 714:Src/main.c    ****     if( flag_disp ){
 715:Src/main.c    **** 
 716:Src/main.c    ****       ///// multi meter /////
 717:Src/main.c    ****       if( mode == MODE_BAR_METER ){
 718:Src/main.c    ****         // update Fuel Pump Voltage
 719:Src/main.c    ****         draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, FP_duty, 3, 0, 0, "%  ");
 720:Src/main.c    **** 
 721:Src/main.c    ****         // draw bar graph
 722:Src/main.c    ****         draw_BarGraph(&u8g2, rpmbar_x, rpmbar_y, rpmbar_width, rpmbar_height, rpm, rpm_min, rpm_max
 723:Src/main.c    **** 
 724:Src/main.c    ****         // draw measurement data
 725:Src/main.c    ****         for( n=0; n<3; n++ ){
 726:Src/main.c    ****           x = meas_x;
 727:Src/main.c    ****           y = (n % 3) * meas_height	+ meas_y;
 728:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac
 729:Src/main.c    ****         }
 730:Src/main.c    ****         for( n=3; n<N_meas; n++ ){
 731:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 732:Src/main.c    ****           y = (n % 3) * meas_height	+ meas_y;
 733:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 734:Src/main.c    ****         }
 735:Src/main.c    ****         
 736:Src/main.c    ****         draw_indicators();
 737:Src/main.c    **** 
 738:Src/main.c    ****       ///// Circular Meter /////
 739:Src/main.c    ****       }else if( mode == MODE_CIRCULAR_METER ){
 740:Src/main.c    **** 
 741:Src/main.c    ****         draw_CircularMeter(&u8g2, meas_value[0]);
 742:Src/main.c    ****         
 743:Src/main.c    ****         draw_Value(&u8g2, 36, 33, 30, 16, meas_value[0], 3, 2, 1, "");
 744:Src/main.c    ****         draw_MeasUnit(&u8g2, 38, 40, 28, 16, "kPa");
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 20


 745:Src/main.c    **** /*        
 746:Src/main.c    ****         draw_Value(&u8g2, 34, 28, 30, 16, meas_value[0], 3, 2, 1, "");
 747:Src/main.c    ****         draw_MeasUnit(&u8g2, 36, 36, 28, 16, "kPa");
 748:Src/main.c    **** */
 749:Src/main.c    **** 
 750:Src/main.c    ****         // draw measurement data
 751:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 752:Src/main.c    ****           x = meas_C_x;
 753:Src/main.c    ****           y = n * meas_C_height	+ meas_C_y;
 754:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_C_width, meas_C_height, meas_value[n], meas_digit[n], meas_f
 755:Src/main.c    ****         }
 756:Src/main.c    **** 
 757:Src/main.c    **** 
 758:Src/main.c    ****       }else if( mode == MODE_ROTARY ){
 759:Src/main.c    **** 
 760:Src/main.c    ****         rpm_integral = rpm_integral + rpm;
 761:Src/main.c    ****         if( rpm_integral > 10000 ){
 762:Src/main.c    ****           rpm_integral = rpm_integral - 10000;
 763:Src/main.c    ****         }
 764:Src/main.c    ****         index_animation = (uint8_t)( (float)rpm_integral / 1000.0 );
 765:Src/main.c    **** 
 766:Src/main.c    ****         draw_Rotary(&u8g2, 58, 2, index_animation);
 767:Src/main.c    **** 
 768:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 2, meas_width1, meas_height, "TACHO", "rpm");
 769:Src/main.c    ****         draw_Value(&u8g2, 0, 2, meas_width1, meas_height, rpm, 4, 0, 0, "rpm");
 770:Src/main.c    **** 
 771:Src/main.c    ****         draw_MeasLabels_Rotary();
 772:Src/main.c    ****         // draw measurement data
 773:Src/main.c    ****         for( n=0; n<4; n++ ){
 774:Src/main.c    ****           x = meas_x;
 775:Src/main.c    ****           y = (n % 4) * meas_height	+ meas_y;
 776:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac
 777:Src/main.c    ****         }
 778:Src/main.c    **** 
 779:Src/main.c    **** 
 780:Src/main.c    ****       ///// Scope /////
 781:Src/main.c    ****       }else if( mode == MODE_SCOPE_MAP ){
 782:Src/main.c    **** 
 783:Src/main.c    ****         if( circular_buffer_index > 0 ){
 784:Src/main.c    ****           circular_buffer_index--;
 785:Src/main.c    ****         }else{
 786:Src/main.c    ****           circular_buffer_index = 128;
 787:Src/main.c    ****         }
 788:Src/main.c    ****         circular_buffer[circular_buffer_index] = meas_value[0];
 789:Src/main.c    **** 
 790:Src/main.c    ****         // draw wave
 791:Src/main.c    ****         draw_Wave(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_max, c
 792:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 793:Src/main.c    **** 
 794:Src/main.c    ****       ///// G-Scope /////
 795:Src/main.c    ****       }else if( mode == MODE_SCOPE_Gsens ){
 796:Src/main.c    **** 
 797:Src/main.c    ****         if( circular_buffer_index > 0 ){
 798:Src/main.c    ****           circular_buffer_index--;
 799:Src/main.c    ****         }else{
 800:Src/main.c    ****           circular_buffer_index = 128;
 801:Src/main.c    ****         }
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 21


 802:Src/main.c    ****         circular_buffer[circular_buffer_index] = Gsens_Y;
 803:Src/main.c    **** 
 804:Src/main.c    ****         // draw wave
 805:Src/main.c    ****         draw_Wave(&u8g2, wave_x, wave_y, wave_width, wave_height, -200, +200, circular_buffer, circ
 806:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 807:Src/main.c    **** 
 808:Src/main.c    ****       // mode setting
 809:Src/main.c    ****       }else if( mode == MODE_SETTING ){
 810:Src/main.c    **** 
 811:Src/main.c    ****         u8g2_ClearBuffer(&u8g2);
 812:Src/main.c    ****         u8g2_SetFont(&u8g2, u8g2_font_7x14B_tf);
 813:Src/main.c    ****         u8g2_DrawStr(&u8g2, 2, 15, "Mode Setting" );
 814:Src/main.c    ****         if( cursor == 0 ){
 815:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, ">" );
 816:Src/main.c    ****         }else{
 817:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, " " );
 818:Src/main.c    ****         }
 819:Src/main.c    ****         u8g2_DrawStr(&u8g2,10, 30, "Multi-Meter" );
 820:Src/main.c    ****         if( cursor == 1 ){
 821:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 822:Src/main.c    ****         }else{
 823:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, " " );
 824:Src/main.c    ****         }
 825:Src/main.c    ****         u8g2_DrawStr(&u8g2,10, 45, "Scope" );
 826:Src/main.c    ****         u8g2_SendBuffer(&u8g2);
 827:Src/main.c    ****       }
 828:Src/main.c    ****       // send buffer
 829:Src/main.c    ****       u8g2_SendBuffer(&u8g2);
 830:Src/main.c    **** 
 831:Src/main.c    ****       flag_disp = 0; // enable again by TIM2 interrupt
 832:Src/main.c    ****     }
 833:Src/main.c    **** 
 834:Src/main.c    ****   }
 835:Src/main.c    ****   /* USER CODE END 3 */
 836:Src/main.c    **** }
 837:Src/main.c    **** 
 838:Src/main.c    **** /**
 839:Src/main.c    ****   * @brief System Clock Configuration
 840:Src/main.c    ****   * @retval None
 841:Src/main.c    ****   */
 842:Src/main.c    **** void SystemClock_Config(void)
 843:Src/main.c    **** {
 343              		.loc 1 843 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 88
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347 0000 30B5     		push	{r4, r5, lr}
 348              	.LCFI9:
 349              		.cfi_def_cfa_offset 12
 350              		.cfi_offset 4, -12
 351              		.cfi_offset 5, -8
 352              		.cfi_offset 14, -4
 353 0002 97B0     		sub	sp, sp, #92
 354              	.LCFI10:
 355              		.cfi_def_cfa_offset 104
 844:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 356              		.loc 1 844 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 22


 357 0004 0023     		movs	r3, #0
 845:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 846:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 847:Src/main.c    **** 
 848:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 849:Src/main.c    ****   */
 850:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 358              		.loc 1 850 0
 359 0006 0324     		movs	r4, #3
 851:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 360              		.loc 1 851 0
 361 0008 4FF4A022 		mov	r2, #327680
 852:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 853:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 362              		.loc 1 853 0
 363 000c 0120     		movs	r0, #1
 844:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 364              		.loc 1 844 0
 365 000e CDE90E33 		strd	r3, r3, [sp, #56]
 366 0012 1293     		str	r3, [sp, #72]
 845:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 367              		.loc 1 845 0
 368 0014 0193     		str	r3, [sp, #4]
 846:Src/main.c    **** 
 369              		.loc 1 846 0
 370 0016 0693     		str	r3, [sp, #24]
 845:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 371              		.loc 1 845 0
 372 0018 CDE90233 		strd	r3, r3, [sp, #8]
 373 001c CDE90433 		strd	r3, r3, [sp, #16]
 846:Src/main.c    **** 
 374              		.loc 1 846 0
 375 0020 CDE90733 		strd	r3, r3, [sp, #28]
 376 0024 CDE90933 		strd	r3, r3, [sp, #36]
 377 0028 0B93     		str	r3, [sp, #44]
 854:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 378              		.loc 1 854 0
 379 002a 1021     		movs	r1, #16
 850:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 380              		.loc 1 850 0
 381 002c 0C94     		str	r4, [sp, #48]
 851:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 382              		.loc 1 851 0
 383 002e 0D92     		str	r2, [sp, #52]
 855:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 384              		.loc 1 855 0
 385 0030 0224     		movs	r4, #2
 856:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 386              		.loc 1 856 0
 387 0032 4FF48032 		mov	r2, #65536
 853:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 388              		.loc 1 853 0
 389 0036 1090     		str	r0, [sp, #64]
 857:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 390              		.loc 1 857 0
 391 0038 4FF4E013 		mov	r3, #1835008
 858:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 23


 392              		.loc 1 858 0
 393 003c 0CA8     		add	r0, sp, #48
 854:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 394              		.loc 1 854 0
 395 003e 1191     		str	r1, [sp, #68]
 856:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 396              		.loc 1 856 0
 397 0040 CDE91342 		strd	r4, r2, [sp, #76]
 857:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 398              		.loc 1 857 0
 399 0044 1593     		str	r3, [sp, #84]
 400              		.loc 1 858 0
 401 0046 FFF7FEFF 		bl	HAL_RCC_OscConfig
 402              	.LVL18:
 403 004a 00B1     		cbz	r0, .L22
 404              	.L23:
 405 004c FEE7     		b	.L23
 406              	.L22:
 407 004e 0346     		mov	r3, r0
 859:Src/main.c    ****   {
 860:Src/main.c    ****     Error_Handler();
 861:Src/main.c    ****   }
 862:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 863:Src/main.c    ****   */
 864:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 865:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 866:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 867:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 868:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 408              		.loc 1 868 0
 409 0050 4FF48062 		mov	r2, #1024
 869:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 870:Src/main.c    **** 
 871:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 410              		.loc 1 871 0
 411 0054 01A8     		add	r0, sp, #4
 412 0056 2146     		mov	r1, r4
 864:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 413              		.loc 1 864 0
 414 0058 0F25     		movs	r5, #15
 867:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 415              		.loc 1 867 0
 416 005a 0393     		str	r3, [sp, #12]
 869:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 417              		.loc 1 869 0
 418 005c 0593     		str	r3, [sp, #20]
 866:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 419              		.loc 1 866 0
 420 005e 0294     		str	r4, [sp, #8]
 864:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 421              		.loc 1 864 0
 422 0060 0195     		str	r5, [sp, #4]
 868:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 423              		.loc 1 868 0
 424 0062 0492     		str	r2, [sp, #16]
 425              		.loc 1 871 0
 426 0064 FFF7FEFF 		bl	HAL_RCC_ClockConfig
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 24


 427              	.LVL19:
 428 0068 0346     		mov	r3, r0
 429 006a 00B1     		cbz	r0, .L24
 430              	.L25:
 431 006c FEE7     		b	.L25
 432              	.L24:
 872:Src/main.c    ****   {
 873:Src/main.c    ****     Error_Handler();
 874:Src/main.c    ****   }
 875:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1
 433              		.loc 1 875 0
 434 006e 41F22102 		movw	r2, #4129
 876:Src/main.c    ****                               |RCC_PERIPHCLK_TIM1;
 877:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 878:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 879:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 880:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 435              		.loc 1 880 0
 436 0072 06A8     		add	r0, sp, #24
 878:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 437              		.loc 1 878 0
 438 0074 CDE90833 		strd	r3, r3, [sp, #32]
 879:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 439              		.loc 1 879 0
 440 0078 0B93     		str	r3, [sp, #44]
 875:Src/main.c    ****                               |RCC_PERIPHCLK_TIM1;
 441              		.loc 1 875 0
 442 007a 0692     		str	r2, [sp, #24]
 443              		.loc 1 880 0
 444 007c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 445              	.LVL20:
 446 0080 00B1     		cbz	r0, .L21
 447              	.L27:
 448 0082 FEE7     		b	.L27
 449              	.L21:
 881:Src/main.c    ****   {
 882:Src/main.c    ****     Error_Handler();
 883:Src/main.c    ****   }
 884:Src/main.c    **** }
 450              		.loc 1 884 0
 451 0084 17B0     		add	sp, sp, #92
 452              	.LCFI11:
 453              		.cfi_def_cfa_offset 12
 454              		@ sp needed
 455 0086 30BD     		pop	{r4, r5, pc}
 456              		.cfi_endproc
 457              	.LFE131:
 459              		.global	__aeabi_f2d
 460              		.global	__aeabi_ddiv
 461              		.global	__aeabi_d2uiz
 462              		.section	.text.startup.main,"ax",%progbits
 463              		.align	1
 464              		.p2align 2,,3
 465              		.global	main
 466              		.syntax unified
 467              		.thumb
 468              		.thumb_func
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 25


 469              		.fpu fpv4-sp-d16
 471              	main:
 472              	.LFB130:
 395:Src/main.c    ****   /* USER CODE BEGIN 1 */
 473              		.loc 1 395 0
 474              		.cfi_startproc
 475              		@ args = 0, pretend = 0, frame = 272
 476              		@ frame_needed = 0, uses_anonymous_args = 0
 477 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 478              	.LCFI12:
 479              		.cfi_def_cfa_offset 36
 480              		.cfi_offset 4, -36
 481              		.cfi_offset 5, -32
 482              		.cfi_offset 6, -28
 483              		.cfi_offset 7, -24
 484              		.cfi_offset 8, -20
 485              		.cfi_offset 9, -16
 486              		.cfi_offset 10, -12
 487              		.cfi_offset 11, -8
 488              		.cfi_offset 14, -4
 489 0004 2DED048B 		vpush.64	{d8, d9}
 490              	.LCFI13:
 491              		.cfi_def_cfa_offset 52
 492              		.cfi_offset 80, -52
 493              		.cfi_offset 81, -48
 494              		.cfi_offset 82, -44
 495              		.cfi_offset 83, -40
 496 0008 CDB0     		sub	sp, sp, #308
 497              	.LCFI14:
 498              		.cfi_def_cfa_offset 360
 404:Src/main.c    **** 
 499              		.loc 1 404 0
 500 000a FFF7FEFF 		bl	HAL_Init
 501              	.LVL21:
 419:Src/main.c    **** 
 502              		.loc 1 419 0
 503 000e 0021     		movs	r1, #0
 504 0010 4FF48072 		mov	r2, #256
 505 0014 0CA8     		add	r0, sp, #48
 506 0016 FFF7FEFF 		bl	memset
 507              	.LVL22:
 424:Src/main.c    **** 
 508              		.loc 1 424 0
 509 001a FFF7FEFF 		bl	SystemClock_Config
 510              	.LVL23:
 431:Src/main.c    ****   MX_DMA_Init();
 511              		.loc 1 431 0
 512 001e FFF7FEFF 		bl	MX_GPIO_Init
 513              	.LVL24:
 432:Src/main.c    ****   MX_ADC1_Init();
 514              		.loc 1 432 0
 515 0022 FFF7FEFF 		bl	MX_DMA_Init
 516              	.LVL25:
 433:Src/main.c    ****   MX_CAN_Init();
 517              		.loc 1 433 0
 518 0026 FFF7FEFF 		bl	MX_ADC1_Init
 519              	.LVL26:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 26


 434:Src/main.c    ****   MX_I2C1_Init();
 520              		.loc 1 434 0
 521 002a FFF7FEFF 		bl	MX_CAN_Init
 522              	.LVL27:
 435:Src/main.c    ****   MX_SPI1_Init();
 523              		.loc 1 435 0
 524 002e FFF7FEFF 		bl	MX_I2C1_Init
 525              	.LVL28:
 436:Src/main.c    ****   MX_TIM1_Init();
 526              		.loc 1 436 0
 527 0032 FFF7FEFF 		bl	MX_SPI1_Init
 528              	.LVL29:
 437:Src/main.c    ****   MX_TIM2_Init();
 529              		.loc 1 437 0
 530 0036 FFF7FEFF 		bl	MX_TIM1_Init
 531              	.LVL30:
 438:Src/main.c    ****   MX_TIM3_Init();
 532              		.loc 1 438 0
 533 003a FFF7FEFF 		bl	MX_TIM2_Init
 534              	.LVL31:
 439:Src/main.c    ****   MX_TIM6_Init();
 535              		.loc 1 439 0
 536 003e FFF7FEFF 		bl	MX_TIM3_Init
 537              	.LVL32:
 440:Src/main.c    ****   MX_USART1_UART_Init();
 538              		.loc 1 440 0
 539 0042 FFF7FEFF 		bl	MX_TIM6_Init
 540              	.LVL33:
 441:Src/main.c    ****   MX_USART2_UART_Init();
 541              		.loc 1 441 0
 542 0046 FFF7FEFF 		bl	MX_USART1_UART_Init
 543              	.LVL34:
 442:Src/main.c    ****   MX_TIM7_Init();
 544              		.loc 1 442 0
 545 004a FFF7FEFF 		bl	MX_USART2_UART_Init
 546              	.LVL35:
 443:Src/main.c    ****   /* USER CODE BEGIN 2 */
 547              		.loc 1 443 0
 548 004e FFF7FEFF 		bl	MX_TIM7_Init
 549              	.LVL36:
 451:Src/main.c    ****     Error_Handler();
 550              		.loc 1 451 0
 551 0052 0021     		movs	r1, #0
 552 0054 B548     		ldr	r0, .L120
 553 0056 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 554              	.LVL37:
 555 005a 00B1     		cbz	r0, .L30
 556              	.L31:
 557 005c FEE7     		b	.L31
 558              	.L30:
 456:Src/main.c    ****     Error_Handler();
 559              		.loc 1 456 0
 560 005e B448     		ldr	r0, .L120+4
 561 0060 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 562              	.LVL38:
 563 0064 00B1     		cbz	r0, .L32
 564              	.L33:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 27


 565 0066 FEE7     		b	.L33
 566              	.L32:
 461:Src/main.c    ****     Error_Handler();
 567              		.loc 1 461 0
 568 0068 B248     		ldr	r0, .L120+8
 569 006a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 570              	.LVL39:
 571 006e 00B1     		cbz	r0, .L34
 572              	.L35:
 573 0070 FEE7     		b	.L35
 574              	.L34:
 466:Src/main.c    ****     Error_Handler();
 575              		.loc 1 466 0
 576 0072 B148     		ldr	r0, .L120+12
 577 0074 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 578              	.LVL40:
 579 0078 00B1     		cbz	r0, .L36
 580              	.L37:
 581 007a FEE7     		b	.L37
 582              	.L36:
 471:Src/main.c    ****     Error_Handler();
 583              		.loc 1 471 0
 584 007c AF48     		ldr	r0, .L120+16
 585 007e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 586              	.LVL41:
 587 0082 0546     		mov	r5, r0
 588 0084 00B1     		cbz	r0, .L38
 589              	.L39:
 590 0086 FEE7     		b	.L39
 591              	.L38:
 477:Src/main.c    **** 
 592              		.loc 1 477 0
 593 0088 0A22     		movs	r2, #10
 594 008a AD49     		ldr	r1, .L120+20
 595 008c AD48     		ldr	r0, .L120+24
 514:Src/main.c    **** 
 596              		.loc 1 514 0
 597 008e DFF83CB3 		ldr	fp, .L120+160
 598 0092 DFF83CA3 		ldr	r10, .L120+164
 599 0096 DFF83C83 		ldr	r8, .L120+168
 600 009a AB4C     		ldr	r4, .L120+28
 601 009c DFF83893 		ldr	r9, .L120+172
 602              	.LBB27:
 549:Src/main.c    **** 
 603              		.loc 1 549 0
 604 00a0 9FEDAA9A 		vldr.32	s18, .L120+32
 605 00a4 9FEDAA8A 		vldr.32	s16, .L120+36
 552:Src/main.c    ****     // Ressister attenation ratio '165/33'
 606              		.loc 1 552 0
 607 00a8 DFEDAA8A 		vldr.32	s17, .L120+40
 608              	.LBE27:
 477:Src/main.c    **** 
 609              		.loc 1 477 0
 610 00ac FFF7FEFF 		bl	HAL_ADC_Start_DMA
 611              	.LVL42:
 480:Src/main.c    ****   // variables is defined in 'defi.h'
 612              		.loc 1 480 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 28


 613 00b0 0122     		movs	r2, #1
 614 00b2 A949     		ldr	r1, .L120+44
 615 00b4 A948     		ldr	r0, .L120+48
 616 00b6 FFF7FEFF 		bl	HAL_UART_Receive_IT
 617              	.LVL43:
 484:Src/main.c    **** 
 618              		.loc 1 484 0
 619 00ba FFF7FEFF 		bl	CAN_OBD_Init
 620              	.LVL44:
 488:Src/main.c    **** 
 621              		.loc 1 488 0
 622 00be A84B     		ldr	r3, .L120+52
 623 00c0 A84A     		ldr	r2, .L120+56
 624 00c2 A949     		ldr	r1, .L120+60
 625 00c4 A948     		ldr	r0, .L120+64
 626 00c6 FFF7FEFF 		bl	u8g2_Setup_ssd1309_128x64_noname2_f
 627              	.LVL45:
 491:Src/main.c    ****   HAL_Delay(5);
 628              		.loc 1 491 0
 629 00ca 2A46     		mov	r2, r5
 630 00cc 0821     		movs	r1, #8
 631 00ce A848     		ldr	r0, .L120+68
 632 00d0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 633              	.LVL46:
 492:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 634              		.loc 1 492 0
 635 00d4 0520     		movs	r0, #5
 636 00d6 FFF7FEFF 		bl	HAL_Delay
 637              	.LVL47:
 493:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 638              		.loc 1 493 0
 639 00da 0122     		movs	r2, #1
 640 00dc 0821     		movs	r1, #8
 641 00de A448     		ldr	r0, .L120+68
 642 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 643              	.LVL48:
 494:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 644              		.loc 1 494 0
 645 00e4 A148     		ldr	r0, .L120+64
 646 00e6 FFF7FEFF 		bl	u8x8_InitDisplay
 647              	.LVL49:
 495:Src/main.c    ****   u8g2_SetContrast(&u8g2, 255); // set contrast
 648              		.loc 1 495 0
 649 00ea 2946     		mov	r1, r5
 650 00ec 9F48     		ldr	r0, .L120+64
 651 00ee FFF7FEFF 		bl	u8x8_SetPowerSave
 652              	.LVL50:
 496:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 653              		.loc 1 496 0
 654 00f2 FF21     		movs	r1, #255
 655 00f4 9D48     		ldr	r0, .L120+64
 656 00f6 FFF7FEFF 		bl	u8x8_SetContrast
 657              	.LVL51:
 497:Src/main.c    **** 
 658              		.loc 1 497 0
 659 00fa 9C48     		ldr	r0, .L120+64
 660 00fc FFF7FEFF 		bl	u8g2_ClearDisplay
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 29


 661              	.LVL52:
 500:Src/main.c    **** 
 662              		.loc 1 500 0
 663 0100 9C4B     		ldr	r3, .L120+72
 664 0102 0193     		str	r3, [sp, #4]
 665 0104 3023     		movs	r3, #48
 666 0106 0093     		str	r3, [sp]
 667 0108 2A46     		mov	r2, r5
 668 010a 2821     		movs	r1, #40
 669 010c 9748     		ldr	r0, .L120+64
 670 010e FFF7FEFF 		bl	u8g2_DrawXBMP
 671              	.LVL53:
 502:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 672              		.loc 1 502 0
 673 0112 9949     		ldr	r1, .L120+76
 674 0114 9548     		ldr	r0, .L120+64
 675 0116 FFF7FEFF 		bl	u8g2_SetFont
 676              	.LVL54:
 503:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.2b");
 677              		.loc 1 503 0
 678 011a 984B     		ldr	r3, .L120+80
 679 011c 9348     		ldr	r0, .L120+64
 680 011e 3722     		movs	r2, #55
 681 0120 1021     		movs	r1, #16
 682 0122 FFF7FEFF 		bl	u8g2_DrawStr
 683              	.LVL55:
 504:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 684              		.loc 1 504 0
 685 0126 964B     		ldr	r3, .L120+84
 686 0128 9048     		ldr	r0, .L120+64
 687 012a 4022     		movs	r2, #64
 688 012c 2821     		movs	r1, #40
 689 012e FFF7FEFF 		bl	u8g2_DrawStr
 690              	.LVL56:
 505:Src/main.c    **** 
 691              		.loc 1 505 0
 692 0132 8E48     		ldr	r0, .L120+64
 693 0134 FFF7FEFF 		bl	u8g2_SendBuffer
 694              	.LVL57:
 507:Src/main.c    **** 
 695              		.loc 1 507 0
 696 0138 4FF47A70 		mov	r0, #1000
 697 013c FFF7FEFF 		bl	HAL_Delay
 698              	.LVL58:
 509:Src/main.c    **** 
 699              		.loc 1 509 0
 700 0140 8A48     		ldr	r0, .L120+64
 701 0142 FFF7FEFF 		bl	u8g2_ClearBuffer
 702              	.LVL59:
 511:Src/main.c    **** 
 703              		.loc 1 511 0
 704 0146 8F49     		ldr	r1, .L120+88
 705 0148 8F48     		ldr	r0, .L120+92
 706 014a FFF7FEFF 		bl	HAL_UART_Transmit_printf
 707              	.LVL60:
 514:Src/main.c    **** 
 708              		.loc 1 514 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 30


 709 014e BBF90030 		ldrsh	r3, [fp]
 710 0152 8E4A     		ldr	r2, .L120+96
 711 0154 C3F16403 		rsb	r3, r3, #100
 712 0158 5363     		str	r3, [r2, #52]
 521:Src/main.c    ****   draw_indicators();
 713              		.loc 1 521 0
 714 015a FFF7FEFF 		bl	draw_MeasLabels
 715              	.LVL61:
 522:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 716              		.loc 1 522 0
 717 015e FFF7FEFF 		bl	draw_indicators
 718              	.LVL62:
 523:Src/main.c    **** 
 719              		.loc 1 523 0
 720 0162 8248     		ldr	r0, .L120+64
 721 0164 FFF7FEFF 		bl	u8g2_SendBuffer
 722              	.LVL63:
 527:Src/main.c    **** 
 723              		.loc 1 527 0
 724 0168 2846     		mov	r0, r5
 725 016a FFF7FEFF 		bl	Gsens_ADXL345_Init
 726              	.LVL64:
 727 016e 884B     		ldr	r3, .L120+100
 418:Src/main.c    ****   int16_t circular_buffer[128]={};
 728              		.loc 1 418 0
 729 0170 0A95     		str	r5, [sp, #40]
 527:Src/main.c    **** 
 730              		.loc 1 527 0
 731 0172 1870     		strb	r0, [r3]
 732              	.LVL65:
 733              	.L83:
 734              	.LBB38:
 537:Src/main.c    ****     }
 735              		.loc 1 537 0
 736 0174 0026     		movs	r6, #0
 737 0176 89E0     		b	.L65
 738              	.L112:
 739 0178 CAF80060 		str	r6, [r10]
 740              	.L41:
 541:Src/main.c    ****     }
 741              		.loc 1 541 0
 742 017c 854B     		ldr	r3, .L120+104
 743 017e 864A     		ldr	r2, .L120+108
 744 0180 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 745 0182 DBB2     		uxtb	r3, r3
 746 0184 1370     		strb	r3, [r2]
 747              	.L42:
 549:Src/main.c    **** 
 748              		.loc 1 549 0
 749 0186 854A     		ldr	r2, .L120+112
 543:Src/main.c    ****     idct_status[1] = Gsens_EN;
 750              		.loc 1 543 0
 751 0188 8548     		ldr	r0, .L120+116
 549:Src/main.c    **** 
 752              		.loc 1 549 0
 753 018a 1188     		ldrh	r1, [r2]
 552:Src/main.c    ****     // Ressister attenation ratio '165/33'
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 31


 754              		.loc 1 552 0
 755 018c 5288     		ldrh	r2, [r2, #2]
 543:Src/main.c    ****     idct_status[1] = Gsens_EN;
 756              		.loc 1 543 0
 757 018e 0370     		strb	r3, [r0]
 549:Src/main.c    **** 
 758              		.loc 1 549 0
 759 0190 07EE101A 		vmov	s14, r1	@ int
 552:Src/main.c    ****     // Ressister attenation ratio '165/33'
 760              		.loc 1 552 0
 761 0194 07EE902A 		vmov	s15, r2	@ int
 549:Src/main.c    **** 
 762              		.loc 1 549 0
 763 0198 B8EE477A 		vcvt.f32.u32	s14, s14
 552:Src/main.c    ****     // Ressister attenation ratio '165/33'
 764              		.loc 1 552 0
 765 019c F8EE677A 		vcvt.f32.u32	s15, s15
 549:Src/main.c    **** 
 766              		.loc 1 549 0
 767 01a0 27EE097A 		vmul.f32	s14, s14, s18
 552:Src/main.c    ****     // Ressister attenation ratio '165/33'
 768              		.loc 1 552 0
 769 01a4 67EEA87A 		vmul.f32	s15, s15, s17
 549:Src/main.c    **** 
 770              		.loc 1 549 0
 771 01a8 C7EE086A 		vdiv.f32	s13, s14, s16
 544:Src/main.c    **** 
 772              		.loc 1 544 0
 773 01ac 7849     		ldr	r1, .L120+100
 557:Src/main.c    ****       FP_duty = 100;
 774              		.loc 1 557 0
 775 01ae B8F80030 		ldrh	r3, [r8]
 544:Src/main.c    **** 
 776              		.loc 1 544 0
 777 01b2 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 778 01b4 4170     		strb	r1, [r0, #1]
 549:Src/main.c    **** 
 779              		.loc 1 549 0
 780 01b6 7B48     		ldr	r0, .L120+120
 557:Src/main.c    ****       FP_duty = 100;
 781              		.loc 1 557 0
 782 01b8 2288     		ldrh	r2, [r4]
 783 01ba 1BB2     		sxth	r3, r3
 784 01bc 40F6B731 		movw	r1, #2999
 785 01c0 8B42     		cmp	r3, r1
 786 01c2 12B2     		sxth	r2, r2
 552:Src/main.c    ****     // Ressister attenation ratio '165/33'
 787              		.loc 1 552 0
 788 01c4 87EE887A 		vdiv.f32	s14, s15, s16
 549:Src/main.c    **** 
 789              		.loc 1 549 0
 790 01c8 FDEEE66A 		vcvt.s32.f32	s13, s13
 552:Src/main.c    ****     // Ressister attenation ratio '165/33'
 791              		.loc 1 552 0
 792 01cc BDEEC77A 		vcvt.s32.f32	s14, s14
 549:Src/main.c    **** 
 793              		.loc 1 549 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 32


 794 01d0 16EE905A 		vmov	r5, s13	@ int
 795 01d4 0580     		strh	r5, [r0]	@ movhi
 552:Src/main.c    ****     // Ressister attenation ratio '165/33'
 796              		.loc 1 552 0
 797 01d6 7448     		ldr	r0, .L120+124
 798 01d8 17EE105A 		vmov	r5, s14	@ int
 799 01dc 0580     		strh	r5, [r0]	@ movhi
 557:Src/main.c    ****       FP_duty = 100;
 800              		.loc 1 557 0
 801 01de 15DC     		bgt	.L46
 802 01e0 002A     		cmp	r2, #0
 803 01e2 13DA     		bge	.L46
 560:Src/main.c    ****     }
 804              		.loc 1 560 0
 805 01e4 B8F80030 		ldrh	r3, [r8]
 806 01e8 704A     		ldr	r2, .L120+128
 807 01ea 1BB2     		sxth	r3, r3
 808 01ec 82FB0312 		smull	r1, r2, r2, r3
 809 01f0 DB17     		asrs	r3, r3, #31
 810 01f2 C3EBA213 		rsb	r3, r3, r2, asr #6
 811 01f6 03EB8303 		add	r3, r3, r3, lsl #2
 812 01fa 03EB8303 		add	r3, r3, r3, lsl #2
 813 01fe 9B00     		lsls	r3, r3, #2
 814 0200 1BB2     		sxth	r3, r3
 563:Src/main.c    ****       FP_duty = 100;
 815              		.loc 1 563 0
 816 0202 642B     		cmp	r3, #100
 560:Src/main.c    ****     }
 817              		.loc 1 560 0
 818 0204 ABF80030 		strh	r3, [fp]	@ movhi
 563:Src/main.c    ****       FP_duty = 100;
 819              		.loc 1 563 0
 820 0208 40F3CE83 		ble	.L103
 821              	.L46:
 558:Src/main.c    ****     }else{
 822              		.loc 1 558 0
 823 020c 6423     		movs	r3, #100
 824 020e ABF80030 		strh	r3, [fp]	@ movhi
 825              	.L45:
 572:Src/main.c    **** 
 826              		.loc 1 572 0
 827 0212 2088     		ldrh	r0, [r4]
 828 0214 B8F80010 		ldrh	r1, [r8]
 829 0218 0023     		movs	r3, #0
 830 021a 1A46     		mov	r2, r3
 831 021c C0B2     		uxtb	r0, r0
 832 021e FFF7FEFF 		bl	CAN_OBD_Response
 833              	.LVL66:
 575:Src/main.c    **** 
 834              		.loc 1 575 0
 835 0222 6348     		ldr	r0, .L120+132
 836 0224 FFF7FEFF 		bl	defi_decoder
 837              	.LVL67:
 577:Src/main.c    **** 
 838              		.loc 1 577 0
 839 0228 624B     		ldr	r3, .L120+136
 840 022a 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 33


 841 022c 012B     		cmp	r3, #1
 842 022e 38D0     		beq	.L104
 843              	.L47:
 629:Src/main.c    **** 
 844              		.loc 1 629 0
 845 0230 BBF90030 		ldrsh	r3, [fp]
 846 0234 554A     		ldr	r2, .L120+96
 847 0236 C3F16403 		rsb	r3, r3, #100
 848 023a 5363     		str	r3, [r2, #52]
 633:Src/main.c    ****       switch( flag_sw ){
 849              		.loc 1 633 0
 850 023c 5E4B     		ldr	r3, .L120+140
 851 023e 1B68     		ldr	r3, [r3]
 852 0240 0BB3     		cbz	r3, .L49
 634:Src/main.c    ****         case 1:
 853              		.loc 1 634 0
 854 0242 022B     		cmp	r3, #2
 855 0244 00F0CA80 		beq	.L51
 856 0248 032B     		cmp	r3, #3
 857 024a 66D0     		beq	.L52
 858 024c 012B     		cmp	r3, #1
 859 024e 00F0D980 		beq	.L105
 860              	.L50:
 675:Src/main.c    ****       if( mode == MODE_BAR_METER ){
 861              		.loc 1 675 0
 862 0252 4648     		ldr	r0, .L120+64
 863 0254 FFF7FEFF 		bl	u8g2_ClearBuffer
 864              	.LVL68:
 676:Src/main.c    ****         draw_MeasLabels();
 865              		.loc 1 676 0
 866 0258 584B     		ldr	r3, .L120+144
 867 025a 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 868 025c 002D     		cmp	r5, #0
 869 025e 3CD0     		beq	.L106
 680:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 870              		.loc 1 680 0
 871 0260 012D     		cmp	r5, #1
 872 0262 00F0E480 		beq	.L107
 694:Src/main.c    ****         draw_MeasLabels_Rotary();
 873              		.loc 1 694 0
 874 0266 022D     		cmp	r5, #2
 875 0268 00F05281 		beq	.L108
 698:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_m
 876              		.loc 1 698 0
 877 026c 032D     		cmp	r5, #3
 878 026e 00F06281 		beq	.L109
 702:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, -200, 200, 4);
 879              		.loc 1 702 0
 880 0272 042D     		cmp	r5, #4
 881 0274 00F07A81 		beq	.L110
 882              	.L59:
 707:Src/main.c    ****       TIM6->CNT = 0;
 883              		.loc 1 707 0
 884 0278 3C48     		ldr	r0, .L120+64
 885 027a FFF7FEFF 		bl	u8g2_SendBuffer
 886              	.LVL69:
 708:Src/main.c    ****       flag_sw = 0;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 34


 887              		.loc 1 708 0
 888 027e 504B     		ldr	r3, .L120+148
 889 0280 5E62     		str	r6, [r3, #36]
 709:Src/main.c    ****     }
 890              		.loc 1 709 0
 891 0282 4D4B     		ldr	r3, .L120+140
 892 0284 1E60     		str	r6, [r3]
 893              	.L49:
 714:Src/main.c    **** 
 894              		.loc 1 714 0
 895 0286 4F4B     		ldr	r3, .L120+152
 896 0288 1B68     		ldr	r3, [r3]
 897 028a 5BBB     		cbnz	r3, .L111
 898              	.L65:
 535:Src/main.c    ****       CAN_EN = 0;
 899              		.loc 1 535 0
 900 028c DAF80030 		ldr	r3, [r10]
 901 0290 002B     		cmp	r3, #0
 902 0292 7FF471AF 		bne	.L112
 540:Src/main.c    ****       CAN_EN = CAN_Received;
 903              		.loc 1 540 0
 904 0296 404B     		ldr	r3, .L120+108
 905 0298 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 906 029a 002B     		cmp	r3, #0
 907 029c 7FF473AF 		bne	.L42
 908 02a0 6CE7     		b	.L41
 909              	.L104:
 582:Src/main.c    ****         // Acceration 1G = 100
 910              		.loc 1 582 0
 911 02a2 3B4B     		ldr	r3, .L120+100
 912 02a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 913 02a6 012B     		cmp	r3, #1
 914 02a8 00F01381 		beq	.L113
 915              	.L48:
 618:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 916              		.loc 1 618 0
 917 02ac 3E4B     		ldr	r3, .L120+124
 616:Src/main.c    **** 		  meas_value[1] = DEFI_value[2];  // OILP
 918              		.loc 1 616 0
 919 02ae 2288     		ldrh	r2, [r4]
 618:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 920              		.loc 1 618 0
 921 02b0 1B88     		ldrh	r3, [r3]
 616:Src/main.c    **** 		  meas_value[1] = DEFI_value[2];  // OILP
 922              		.loc 1 616 0
 923 02b2 A9F80020 		strh	r2, [r9]	@ movhi
 618:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 924              		.loc 1 618 0
 925 02b6 A9F80430 		strh	r3, [r9, #4]	@ movhi
 617:Src/main.c    **** 			meas_value[2] = FP_volt;        // FuelPump Voltage
 926              		.loc 1 617 0
 927 02ba A288     		ldrh	r2, [r4, #4]
 621:Src/main.c    **** 
 928              		.loc 1 621 0
 929 02bc 394B     		ldr	r3, .L120+120
 623:Src/main.c    ****     }
 930              		.loc 1 623 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 35


 931 02be 3D49     		ldr	r1, .L120+136
 617:Src/main.c    **** 			meas_value[2] = FP_volt;        // FuelPump Voltage
 932              		.loc 1 617 0
 933 02c0 A9F80220 		strh	r2, [r9, #2]	@ movhi
 619:Src/main.c    **** 			meas_value[4] = DEFI_value[5];  // OILT
 934              		.loc 1 619 0
 935 02c4 A289     		ldrh	r2, [r4, #12]
 936 02c6 A9F80620 		strh	r2, [r9, #6]	@ movhi
 621:Src/main.c    **** 
 937              		.loc 1 621 0
 938 02ca 1B88     		ldrh	r3, [r3]
 620:Src/main.c    **** 		  meas_value[5] = O2_volt;        // O2
 939              		.loc 1 620 0
 940 02cc 6289     		ldrh	r2, [r4, #10]
 623:Src/main.c    ****     }
 941              		.loc 1 623 0
 942 02ce 0E60     		str	r6, [r1]
 620:Src/main.c    **** 		  meas_value[5] = O2_volt;        // O2
 943              		.loc 1 620 0
 944 02d0 A9F80820 		strh	r2, [r9, #8]	@ movhi
 621:Src/main.c    **** 
 945              		.loc 1 621 0
 946 02d4 A9F80A30 		strh	r3, [r9, #10]	@ movhi
 947 02d8 AAE7     		b	.L47
 948              	.L106:
 677:Src/main.c    ****         draw_indicators();
 949              		.loc 1 677 0
 950 02da FFF7FEFF 		bl	draw_MeasLabels
 951              	.LVL70:
 678:Src/main.c    **** 
 952              		.loc 1 678 0
 953 02de FFF7FEFF 		bl	draw_indicators
 954              	.LVL71:
 955 02e2 C9E7     		b	.L59
 956              	.L111:
 717:Src/main.c    ****         // update Fuel Pump Voltage
 957              		.loc 1 717 0
 958 02e4 354B     		ldr	r3, .L120+144
 959 02e6 1D78     		ldrb	r5, [r3]	@ zero_extendqisi2
 960 02e8 002D     		cmp	r5, #0
 961 02ea 00F05381 		beq	.L114
 739:Src/main.c    **** 
 962              		.loc 1 739 0
 963 02ee 012D     		cmp	r5, #1
 964 02f0 00F0D382 		beq	.L115
 758:Src/main.c    **** 
 965              		.loc 1 758 0
 966 02f4 022D     		cmp	r5, #2
 967 02f6 00F03B82 		beq	.L116
 781:Src/main.c    **** 
 968              		.loc 1 781 0
 969 02fa 032D     		cmp	r5, #3
 970 02fc 00F00682 		beq	.L117
 795:Src/main.c    **** 
 971              		.loc 1 795 0
 972 0300 042D     		cmp	r5, #4
 973 0302 00F09F82 		beq	.L118
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 36


 809:Src/main.c    **** 
 974              		.loc 1 809 0
 975 0306 052D     		cmp	r5, #5
 976 0308 00F01683 		beq	.L119
 977              	.L69:
 978              	.LVL72:
 829:Src/main.c    **** 
 979              		.loc 1 829 0
 980 030c 1748     		ldr	r0, .L120+64
 981 030e FFF7FEFF 		bl	u8g2_SendBuffer
 982              	.LVL73:
 831:Src/main.c    ****     }
 983              		.loc 1 831 0
 984 0312 2C4A     		ldr	r2, .L120+152
 985 0314 0023     		movs	r3, #0
 986 0316 1360     		str	r3, [r2]
 987 0318 2CE7     		b	.L83
 988              	.LVL74:
 989              	.L52:
 660:Src/main.c    ****           HAL_NVIC_DisableIRQ (EXTI1_IRQn);
 990              		.loc 1 660 0
 991 031a 2B49     		ldr	r1, .L120+156
 992 031c 1A48     		ldr	r0, .L120+92
 993 031e FFF7FEFF 		bl	HAL_UART_Transmit_printf
 994              	.LVL75:
 661:Src/main.c    ****           // SW "ENTER"
 995              		.loc 1 661 0
 996 0322 0720     		movs	r0, #7
 997 0324 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 998              	.LVL76:
 999 0328 93E7     		b	.L50
 1000              	.L121:
 1001 032a 00BF     		.align	2
 1002              	.L120:
 1003 032c 00000000 		.word	htim1
 1004 0330 00000000 		.word	htim2
 1005 0334 00000000 		.word	htim3
 1006 0338 00000000 		.word	htim6
 1007 033c 00000000 		.word	htim7
 1008 0340 00000000 		.word	g_ADCBuffer
 1009 0344 00000000 		.word	hadc1
 1010 0348 00000000 		.word	DEFI_value
 1011 034c 0000A543 		.word	1134886912
 1012 0350 00007F43 		.word	1132396544
 1013 0354 00002543 		.word	1126498304
 1014 0358 00000000 		.word	UART1_Data
 1015 035c 00000000 		.word	huart1
 1016 0360 00000000 		.word	u8x8_gpio_and_delay_STM32F303
 1017 0364 00000000 		.word	u8x8_byte_4wire_hw_spi
 1018 0368 00000000 		.word	u8g2_cb_r0
 1019 036c 00000000 		.word	u8g2
 1020 0370 00040048 		.word	1207960576
 1021 0374 00000000 		.word	.LANCHOR4
 1022 0378 00000000 		.word	u8g2_font_5x7_tf
 1023 037c 00000000 		.word	.LC2
 1024 0380 18000000 		.word	.LC3
 1025 0384 24000000 		.word	.LC4
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 37


 1026 0388 00000000 		.word	huart2
 1027 038c 002C0140 		.word	1073818624
 1028 0390 00000000 		.word	Gsens_EN
 1029 0394 00000000 		.word	CAN_Received
 1030 0398 00000000 		.word	CAN_EN
 1031 039c 00000000 		.word	adc
 1032 03a0 00000000 		.word	.LANCHOR1
 1033 03a4 00000000 		.word	.LANCHOR6
 1034 03a8 00000000 		.word	.LANCHOR7
 1035 03ac F1197605 		.word	91625969
 1036 03b0 00000000 		.word	UART1_RxData
 1037 03b4 00000000 		.word	flag_meas
 1038 03b8 00000000 		.word	flag_sw
 1039 03bc 00000000 		.word	mode
 1040 03c0 00100040 		.word	1073745920
 1041 03c4 00000000 		.word	flag_disp
 1042 03c8 54000000 		.word	.LC8
 1043 03cc 00000000 		.word	.LANCHOR5
 1044 03d0 00000000 		.word	flag_status
 1045 03d4 00000000 		.word	rpm
 1046 03d8 00000000 		.word	.LANCHOR8
 1047              	.L51:
 648:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 1048              		.loc 1 648 0
 1049 03dc B049     		ldr	r1, .L122
 1050 03de B148     		ldr	r0, .L122+4
 1051 03e0 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 1052              	.LVL77:
 649:Src/main.c    ****           // SW "DOWN"
 1053              		.loc 1 649 0
 1054 03e4 1720     		movs	r0, #23
 1055 03e6 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1056              	.LVL78:
 651:Src/main.c    ****             if( mode == 0 ){
 1057              		.loc 1 651 0
 1058 03ea AF4B     		ldr	r3, .L122+8
 1059 03ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1060 03ee 002B     		cmp	r3, #0
 1061 03f0 7FF42FAF 		bne	.L50
 652:Src/main.c    ****               mode = N_mode-1;
 1062              		.loc 1 652 0
 1063 03f4 AD4A     		ldr	r2, .L122+12
 1064 03f6 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1065 03f8 002B     		cmp	r3, #0
 1066 03fa 40F09880 		bne	.L57
 653:Src/main.c    ****             }else{
 1067              		.loc 1 653 0
 1068 03fe 0423     		movs	r3, #4
 1069 0400 1370     		strb	r3, [r2]
 1070 0402 26E7     		b	.L50
 1071              	.L105:
 636:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 1072              		.loc 1 636 0
 1073 0404 AA49     		ldr	r1, .L122+16
 1074 0406 A748     		ldr	r0, .L122+4
 1075 0408 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 1076              	.LVL79:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 38


 637:Src/main.c    ****           // SW "UP"
 1077              		.loc 1 637 0
 1078 040c 1720     		movs	r0, #23
 1079 040e FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1080              	.LVL80:
 639:Src/main.c    ****             if( mode == N_mode-1 ){
 1081              		.loc 1 639 0
 1082 0412 A54B     		ldr	r3, .L122+8
 1083 0414 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1084 0416 002B     		cmp	r3, #0
 1085 0418 7FF41BAF 		bne	.L50
 640:Src/main.c    ****               mode = 0;
 1086              		.loc 1 640 0
 1087 041c A34A     		ldr	r2, .L122+12
 1088 041e 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1089 0420 042A     		cmp	r2, #4
 1090 0422 00F08580 		beq	.L100
 643:Src/main.c    ****             }
 1091              		.loc 1 643 0
 1092 0426 A14B     		ldr	r3, .L122+12
 1093 0428 0132     		adds	r2, r2, #1
 1094 042a 1A70     		strb	r2, [r3]
 1095 042c 11E7     		b	.L50
 1096              	.L107:
 1097 042e A14B     		ldr	r3, .L122+20
 1098 0430 1A46     		mov	r2, r3
 1099 0432 A14B     		ldr	r3, .L122+24
 1100 0434 0993     		str	r3, [sp, #36]
 680:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 1101              		.loc 1 680 0
 1102 0436 0225     		movs	r5, #2
 1103              	.L61:
 1104              	.LVL81:
 1105              	.LBB28:
 684:Src/main.c    ****         }
 1106              		.loc 1 684 0 discriminator 3
 1107 0438 099B     		ldr	r3, [sp, #36]
 1108 043a 0293     		str	r3, [sp, #8]
 1109 043c 0D21     		movs	r1, #13
 1110 043e 1746     		mov	r7, r2
 1111 0440 0192     		str	r2, [sp, #4]
 1112 0442 0091     		str	r1, [sp]
 1113 0444 2A46     		mov	r2, r5
 1114 0446 3C23     		movs	r3, #60
 1115 0448 4421     		movs	r1, #68
 1116 044a 9C48     		ldr	r0, .L122+28
 1117 044c FFF7FEFF 		bl	draw_MeasLabelUnit
 1118              	.LVL82:
 1119 0450 0D35     		adds	r5, r5, #13
 1120              	.LVL83:
 1121 0452 099B     		ldr	r3, [sp, #36]
 1122 0454 EDB2     		uxtb	r5, r5
 1123 0456 3A46     		mov	r2, r7
 1124 0458 0533     		adds	r3, r3, #5
 681:Src/main.c    ****           x = meas_C_x;
 1125              		.loc 1 681 0 discriminator 3
 1126 045a 362D     		cmp	r5, #54
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 39


 1127 045c 02F10702 		add	r2, r2, #7
 1128 0460 0993     		str	r3, [sp, #36]
 1129 0462 E9D1     		bne	.L61
 1130 0464 964B     		ldr	r3, .L122+32
 1131 0466 0993     		str	r3, [sp, #36]
 1132 0468 964B     		ldr	r3, .L122+36
 681:Src/main.c    ****           x = meas_C_x;
 1133              		.loc 1 681 0 is_stmt 0
 1134 046a 4825     		movs	r5, #72
 1135 046c 1946     		mov	r1, r3
 1136              	.L62:
 1137              	.LVL84:
 688:Src/main.c    ****         }
 1138              		.loc 1 688 0 is_stmt 1 discriminator 3
 1139 046e 099A     		ldr	r2, [sp, #36]
 1140 0470 9248     		ldr	r0, .L122+28
 1141 0472 12F8013B 		ldrb	r3, [r2], #1	@ zero_extendqisi2
 1142 0476 0291     		str	r1, [sp, #8]
 1143 0478 0F46     		mov	r7, r1
 1144 047a 0921     		movs	r1, #9
 1145 047c CDE90013 		strd	r1, r3, [sp]
 1146 0480 2946     		mov	r1, r5
 1147 0482 1D35     		adds	r5, r5, #29
 1148 0484 0992     		str	r2, [sp, #36]
 1149              	.LVL85:
 1150 0486 1B23     		movs	r3, #27
 1151 0488 3522     		movs	r2, #53
 1152 048a EDB2     		uxtb	r5, r5
 1153 048c FFF7FEFF 		bl	draw_IndicatorBox
 1154              	.LVL86:
 1155 0490 7B1D     		adds	r3, r7, #5
 687:Src/main.c    ****           draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_s
 1156              		.loc 1 687 0 discriminator 3
 1157 0492 BC2D     		cmp	r5, #188
 1158 0494 1946     		mov	r1, r3
 1159 0496 EAD1     		bne	.L62
 690:Src/main.c    **** //        draw_CircularMeter_Init(26, 26, 26, 3, -60, 300, 10, 20, -1, -80, 120);
 1160              		.loc 1 690 0
 1161 0498 7822     		movs	r2, #120
 1162 049a 6FF04F03 		mvn	r3, #79
 1163 049e 4FF0FF31 		mov	r1, #-1
 1164 04a2 0692     		str	r2, [sp, #24]
 1165 04a4 0593     		str	r3, [sp, #20]
 1166 04a6 0491     		str	r1, [sp, #16]
 1167 04a8 1425     		movs	r5, #20
 1168 04aa 2021     		movs	r1, #32
 1169 04ac 0A20     		movs	r0, #10
 1170 04ae 4FF49672 		mov	r2, #300
 1171 04b2 6FF03B03 		mvn	r3, #59
 1172 04b6 CDE90032 		strd	r3, r2, [sp]
 1173 04ba CDE90205 		strd	r0, r5, [sp, #8]
 1174 04be 0323     		movs	r3, #3
 1175 04c0 0846     		mov	r0, r1
 1176 04c2 1F22     		movs	r2, #31
 1177 04c4 FFF7FEFF 		bl	draw_CircularMeter_Init
 1178              	.LVL87:
 692:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 40


 1179              		.loc 1 692 0
 1180 04c8 0021     		movs	r1, #0
 1181 04ca 7C48     		ldr	r0, .L122+28
 1182 04cc FFF7FEFF 		bl	draw_CircularMeter
 1183              	.LVL88:
 1184              	.LBE28:
 1185 04d0 D2E6     		b	.L59
 1186              	.LVL89:
 1187              	.L113:
 584:Src/main.c    ****         Gsens_Y = Gsens_ADXL345_Read_G('y', 0);
 1188              		.loc 1 584 0
 1189 04d2 0021     		movs	r1, #0
 1190 04d4 7820     		movs	r0, #120
 1191 04d6 FFF7FEFF 		bl	Gsens_ADXL345_Read_G
 1192              	.LVL90:
 1193 04da 7B4B     		ldr	r3, .L122+40
 585:Src/main.c    ****         Gsens_Z = Gsens_ADXL345_Read_G('z', 0);
 1194              		.loc 1 585 0
 1195 04dc 7B4D     		ldr	r5, .L122+44
 584:Src/main.c    ****         Gsens_Y = Gsens_ADXL345_Read_G('y', 0);
 1196              		.loc 1 584 0
 1197 04de 1880     		strh	r0, [r3]	@ movhi
 585:Src/main.c    ****         Gsens_Z = Gsens_ADXL345_Read_G('z', 0);
 1198              		.loc 1 585 0
 1199 04e0 0021     		movs	r1, #0
 1200 04e2 7920     		movs	r0, #121
 1201 04e4 FFF7FEFF 		bl	Gsens_ADXL345_Read_G
 1202              	.LVL91:
 586:Src/main.c    **** 
 1203              		.loc 1 586 0
 1204 04e8 0021     		movs	r1, #0
 585:Src/main.c    ****         Gsens_Z = Gsens_ADXL345_Read_G('z', 0);
 1205              		.loc 1 585 0
 1206 04ea 2880     		strh	r0, [r5]	@ movhi
 586:Src/main.c    **** 
 1207              		.loc 1 586 0
 1208 04ec 7A20     		movs	r0, #122
 1209 04ee FFF7FEFF 		bl	Gsens_ADXL345_Read_G
 1210              	.LVL92:
 585:Src/main.c    ****         Gsens_Z = Gsens_ADXL345_Read_G('z', 0);
 1211              		.loc 1 585 0
 1212 04f2 2F46     		mov	r7, r5
 588:Src/main.c    ****         
 1213              		.loc 1 588 0
 1214 04f4 744A     		ldr	r2, .L122+40
 1215 04f6 B7F90030 		ldrsh	r3, [r7]
 586:Src/main.c    **** 
 1216              		.loc 1 586 0
 1217 04fa 754F     		ldr	r7, .L122+48
 588:Src/main.c    ****         
 1218              		.loc 1 588 0
 1219 04fc B2F90020 		ldrsh	r2, [r2]
 1220 0500 7449     		ldr	r1, .L122+52
 1221 0502 0090     		str	r0, [sp]
 586:Src/main.c    **** 
 1222              		.loc 1 586 0
 1223 0504 0546     		mov	r5, r0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 41


 1224 0506 3D80     		strh	r5, [r7]	@ movhi
 588:Src/main.c    ****         
 1225              		.loc 1 588 0
 1226 0508 6648     		ldr	r0, .L122+4
 1227 050a FFF7FEFF 		bl	HAL_UART_Transmit_printf
 1228              	.LVL93:
 1229 050e CDE6     		b	.L48
 1230              	.L108:
 695:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 2, meas_width1, meas_height, "TACHO", "rpm");
 1231              		.loc 1 695 0
 1232 0510 FFF7FEFF 		bl	draw_MeasLabels_Rotary
 1233              	.LVL94:
 696:Src/main.c    **** 
 1234              		.loc 1 696 0
 1235 0514 704A     		ldr	r2, .L122+56
 1236 0516 0292     		str	r2, [sp, #8]
 1237 0518 0C23     		movs	r3, #12
 1238 051a 704A     		ldr	r2, .L122+60
 1239 051c 0192     		str	r2, [sp, #4]
 1240 051e 0093     		str	r3, [sp]
 1241 0520 2A46     		mov	r2, r5
 1242 0522 4623     		movs	r3, #70
 1243 0524 0021     		movs	r1, #0
 1244 0526 6548     		ldr	r0, .L122+28
 1245 0528 FFF7FEFF 		bl	draw_MeasLabelUnit
 1246              	.LVL95:
 1247 052c A4E6     		b	.L59
 1248              	.L57:
 655:Src/main.c    ****             }
 1249              		.loc 1 655 0
 1250 052e 013B     		subs	r3, r3, #1
 1251              	.L100:
 1252 0530 5E4A     		ldr	r2, .L122+12
 1253 0532 1370     		strb	r3, [r2]
 1254 0534 8DE6     		b	.L50
 1255              	.L109:
 1256              	.LBB29:
 699:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "MAP", "kPa");
 1257              		.loc 1 699 0
 1258 0536 C821     		movs	r1, #200
 1259 0538 6FF06302 		mvn	r2, #99
 1260 053c 3423     		movs	r3, #52
 1261 053e CDE90032 		strd	r3, r2, [sp]
 1262 0542 CDE90215 		strd	r1, r5, [sp, #8]
 1263 0546 8023     		movs	r3, #128
 1264 0548 0D22     		movs	r2, #13
 1265 054a 0021     		movs	r1, #0
 1266 054c 5B48     		ldr	r0, .L122+28
 1267 054e FFF7FEFF 		bl	draw_Wave_axis
 1268              	.LVL96:
 700:Src/main.c    **** 
 1269              		.loc 1 700 0
 1270 0552 6349     		ldr	r1, .L122+64
 1271 0554 0291     		str	r1, [sp, #8]
 1272 0556 6349     		ldr	r1, .L122+68
 1273 0558 0D23     		movs	r3, #13
 1274 055a 0022     		movs	r2, #0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 42


 1275              	.L101:
 1276              	.LBE29:
 1277              	.LBB30:
 704:Src/main.c    **** 
 1278              		.loc 1 704 0
 1279 055c CDE90031 		strd	r3, r1, [sp]
 1280 0560 5648     		ldr	r0, .L122+28
 1281 0562 1146     		mov	r1, r2
 1282 0564 4023     		movs	r3, #64
 1283 0566 FFF7FEFF 		bl	draw_MeasLabelUnit
 1284              	.LVL97:
 1285 056a 85E6     		b	.L59
 1286              	.L110:
 703:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "LatG", "G");
 1287              		.loc 1 703 0
 1288 056c C821     		movs	r1, #200
 1289 056e 6FF0C702 		mvn	r2, #199
 1290 0572 3423     		movs	r3, #52
 1291 0574 CDE90032 		strd	r3, r2, [sp]
 1292 0578 CDE90215 		strd	r1, r5, [sp, #8]
 1293 057c 8023     		movs	r3, #128
 1294 057e 0D22     		movs	r2, #13
 1295 0580 0021     		movs	r1, #0
 1296 0582 4E48     		ldr	r0, .L122+28
 1297 0584 FFF7FEFF 		bl	draw_Wave_axis
 1298              	.LVL98:
 704:Src/main.c    **** 
 1299              		.loc 1 704 0
 1300 0588 5749     		ldr	r1, .L122+72
 1301 058a 0291     		str	r1, [sp, #8]
 1302 058c 0D23     		movs	r3, #13
 1303 058e 0022     		movs	r2, #0
 1304 0590 5649     		ldr	r1, .L122+76
 1305 0592 E3E7     		b	.L101
 1306              	.L114:
 1307              	.LBE30:
 719:Src/main.c    **** 
 1308              		.loc 1 719 0
 1309 0594 BBF90030 		ldrsh	r3, [fp]
 1310 0598 554A     		ldr	r2, .L122+80
 1311 059a 0193     		str	r3, [sp, #4]
 1312 059c 0326     		movs	r6, #3
 1313 059e 0C23     		movs	r3, #12
 1314 05a0 CDE90452 		strd	r5, r2, [sp, #16]
 1315 05a4 0093     		str	r3, [sp]
 1316 05a6 3422     		movs	r2, #52
 1317 05a8 4623     		movs	r3, #70
 1318 05aa 2946     		mov	r1, r5
 1319 05ac 4348     		ldr	r0, .L122+28
 1320 05ae CDE90265 		strd	r6, r5, [sp, #8]
 1321 05b2 FFF7FEFF 		bl	draw_Value
 1322              	.LVL99:
 722:Src/main.c    **** 
 1323              		.loc 1 722 0
 1324 05b6 B8F80010 		ldrh	r1, [r8]
 1325 05ba 0191     		str	r1, [sp, #4]
 1326 05bc 42F22832 		movw	r2, #9000
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 43


 1327 05c0 0E23     		movs	r3, #14
 1328 05c2 0392     		str	r2, [sp, #12]
 1329 05c4 0093     		str	r3, [sp]
 1330 05c6 2A46     		mov	r2, r5
 1331 05c8 8023     		movs	r3, #128
 1332 05ca 2946     		mov	r1, r5
 1333 05cc 3B48     		ldr	r0, .L122+28
 1334 05ce 0295     		str	r5, [sp, #8]
 1335 05d0 FFF7FEFF 		bl	draw_BarGraph
 1336              	.LVL100:
 728:Src/main.c    ****         }
 1337              		.loc 1 728 0
 1338 05d4 0C21     		movs	r1, #12
 1339 05d6 0091     		str	r1, [sp]
 1340 05d8 3749     		ldr	r1, .L122+24
 1341 05da B9F90030 		ldrsh	r3, [r9]
 1342 05de 0591     		str	r1, [sp, #20]
 1343 05e0 0222     		movs	r2, #2
 1344 05e2 0121     		movs	r1, #1
 1345 05e4 CDE90321 		strd	r2, r1, [sp, #12]
 1346 05e8 0193     		str	r3, [sp, #4]
 1347 05ea 1022     		movs	r2, #16
 1348 05ec 4623     		movs	r3, #70
 1349 05ee 2946     		mov	r1, r5
 1350 05f0 3248     		ldr	r0, .L122+28
 1351 05f2 0296     		str	r6, [sp, #8]
 1352 05f4 FFF7FEFF 		bl	draw_Value
 1353              	.LVL101:
 1354 05f8 0122     		movs	r2, #1
 1355 05fa CDE90262 		strd	r6, r2, [sp, #8]
 1356 05fe 0C22     		movs	r2, #12
 1357 0600 0092     		str	r2, [sp]
 1358 0602 3C4A     		ldr	r2, .L122+84
 1359 0604 B9F90230 		ldrsh	r3, [r9, #2]
 1360 0608 0193     		str	r3, [sp, #4]
 1361 060a CDE90452 		strd	r5, r2, [sp, #16]
 1362 060e 4623     		movs	r3, #70
 1363 0610 1C22     		movs	r2, #28
 1364 0612 2946     		mov	r1, r5
 1365 0614 2948     		ldr	r0, .L122+28
 1366 0616 FFF7FEFF 		bl	draw_Value
 1367              	.LVL102:
 1368 061a 0122     		movs	r2, #1
 1369 061c CDE90262 		strd	r6, r2, [sp, #8]
 1370 0620 0C22     		movs	r2, #12
 1371 0622 0092     		str	r2, [sp]
 1372 0624 344A     		ldr	r2, .L122+88
 1373 0626 B9F90430 		ldrsh	r3, [r9, #4]
 1374 062a 0193     		str	r3, [sp, #4]
 1375 062c CDE90452 		strd	r5, r2, [sp, #16]
 1376 0630 2946     		mov	r1, r5
 1377 0632 2248     		ldr	r0, .L122+28
 1378 0634 4623     		movs	r3, #70
 1379 0636 2822     		movs	r2, #40
 733:Src/main.c    ****         }
 1380              		.loc 1 733 0
 1381 0638 0C27     		movs	r7, #12
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 44


 1382 063a 0997     		str	r7, [sp, #36]
 728:Src/main.c    ****         }
 1383              		.loc 1 728 0
 1384 063c FFF7FEFF 		bl	draw_Value
 1385              	.LVL103:
 1386 0640 3046     		mov	r0, r6
 1387 0642 2946     		mov	r1, r5
 1388              	.LVL104:
 1389              	.L68:
 732:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 1390              		.loc 1 732 0 discriminator 3
 1391 0644 2D4A     		ldr	r2, .L122+92
 733:Src/main.c    ****         }
 1392              		.loc 1 733 0 discriminator 3
 1393 0646 0491     		str	r1, [sp, #16]
 732:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 1394              		.loc 1 732 0 discriminator 3
 1395 0648 F3B2     		uxtb	r3, r6
 1396 064a A2FB0372 		umull	r7, r2, r2, r3
 1397 064e 5208     		lsrs	r2, r2, #1
 1398 0650 02EB4202 		add	r2, r2, r2, lsl #1
 1399 0654 9B1A     		subs	r3, r3, r2
 1400 0656 03EB4303 		add	r3, r3, r3, lsl #1
 733:Src/main.c    ****         }
 1401              		.loc 1 733 0 discriminator 3
 1402 065a 174F     		ldr	r7, .L122+24
 1403 065c 39F91610 		ldrsh	r1, [r9, r6, lsl #1]
 1404 0660 0191     		str	r1, [sp, #4]
 732:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 1405              		.loc 1 732 0 discriminator 3
 1406 0662 9A00     		lsls	r2, r3, #2
 733:Src/main.c    ****         }
 1407              		.loc 1 733 0 discriminator 3
 1408 0664 06EB8603 		add	r3, r6, r6, lsl #2
 1409 0668 3B44     		add	r3, r3, r7
 1410 066a CDE90205 		strd	r0, r5, [sp, #8]
 732:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 1411              		.loc 1 732 0 discriminator 3
 1412 066e 1032     		adds	r2, r2, #16
 733:Src/main.c    ****         }
 1413              		.loc 1 733 0 discriminator 3
 1414 0670 0998     		ldr	r0, [sp, #36]
 1415 0672 0090     		str	r0, [sp]
 1416 0674 0593     		str	r3, [sp, #20]
 1417 0676 02F0FC02 		and	r2, r2, #252
 1418 067a 0136     		adds	r6, r6, #1
 1419              	.LVL105:
 1420 067c 3823     		movs	r3, #56
 1421 067e 4821     		movs	r1, #72
 1422 0680 0E48     		ldr	r0, .L122+28
 1423 0682 FFF7FEFF 		bl	draw_Value
 1424              	.LVL106:
 730:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 1425              		.loc 1 730 0 discriminator 3
 1426 0686 062E     		cmp	r6, #6
 1427 0688 06D0     		beq	.L67
 1428 068a 1D4B     		ldr	r3, .L122+96
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 45


 1429 068c 985D     		ldrb	r0, [r3, r6]	@ zero_extendqisi2
 1430 068e 1D4B     		ldr	r3, .L122+100
 1431 0690 9D5D     		ldrb	r5, [r3, r6]	@ zero_extendqisi2
 1432 0692 1D4B     		ldr	r3, .L122+104
 1433 0694 995D     		ldrb	r1, [r3, r6]	@ zero_extendqisi2
 1434 0696 D5E7     		b	.L68
 1435              	.L67:
 736:Src/main.c    **** 
 1436              		.loc 1 736 0
 1437 0698 FFF7FEFF 		bl	draw_indicators
 1438              	.LVL107:
 1439 069c 36E6     		b	.L69
 1440              	.L123:
 1441 069e 00BF     		.align	2
 1442              	.L122:
 1443 06a0 4C000000 		.word	.LC7
 1444 06a4 00000000 		.word	huart2
 1445 06a8 00000000 		.word	setting
 1446 06ac 00000000 		.word	mode
 1447 06b0 48000000 		.word	.LC6
 1448 06b4 00000000 		.word	.LANCHOR3
 1449 06b8 00000000 		.word	.LANCHOR2
 1450 06bc 00000000 		.word	u8g2
 1451 06c0 00000000 		.word	.LANCHOR1
 1452 06c4 00000000 		.word	.LANCHOR0
 1453 06c8 00000000 		.word	Gsens_X
 1454 06cc 00000000 		.word	Gsens_Y
 1455 06d0 00000000 		.word	Gsens_Z
 1456 06d4 3C000000 		.word	.LC5
 1457 06d8 5C000000 		.word	.LC9
 1458 06dc 60000000 		.word	.LC10
 1459 06e0 68000000 		.word	.LC11
 1460 06e4 6C000000 		.word	.LC12
 1461 06e8 70000000 		.word	.LC13
 1462 06ec 74000000 		.word	.LC14
 1463 06f0 00000000 		.word	.LC0
 1464 06f4 05000000 		.word	.LANCHOR2+5
 1465 06f8 0A000000 		.word	.LANCHOR2+10
 1466 06fc ABAAAAAA 		.word	-1431655765
 1467 0700 00000000 		.word	.LANCHOR9
 1468 0704 00000000 		.word	.LANCHOR10
 1469 0708 00000000 		.word	.LANCHOR11
 1470              	.LVL108:
 1471              	.L117:
 1472              	.LBB31:
 783:Src/main.c    ****           circular_buffer_index--;
 1473              		.loc 1 783 0
 1474 070c 0A9B     		ldr	r3, [sp, #40]
 1475 070e 002B     		cmp	r3, #0
 1476 0710 00F0BF80 		beq	.L84
 784:Src/main.c    ****         }else{
 1477              		.loc 1 784 0
 1478 0714 013B     		subs	r3, r3, #1
 1479 0716 9BB2     		uxth	r3, r3
 1480 0718 0A93     		str	r3, [sp, #40]
 1481              	.LVL109:
 1482 071a 1D46     		mov	r5, r3
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 46


 1483              	.LVL110:
 1484              	.L76:
 791:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 1485              		.loc 1 791 0
 1486 071c 6FF06302 		mvn	r2, #99
 1487 0720 3423     		movs	r3, #52
 1488 0722 CDE90032 		strd	r3, r2, [sp]
 788:Src/main.c    **** 
 1489              		.loc 1 788 0
 1490 0726 0CAA     		add	r2, sp, #48
 1491 0728 B9F80030 		ldrh	r3, [r9]
 791:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 1492              		.loc 1 791 0
 1493 072c 0495     		str	r5, [sp, #16]
 1494 072e C821     		movs	r1, #200
 1495 0730 0CA8     		add	r0, sp, #48
 1496 0732 CDE90210 		strd	r1, r0, [sp, #8]
 788:Src/main.c    **** 
 1497              		.loc 1 788 0
 1498 0736 22F81530 		strh	r3, [r2, r5, lsl #1]	@ movhi
 791:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 1499              		.loc 1 791 0
 1500 073a 0021     		movs	r1, #0
 1501 073c 8023     		movs	r3, #128
 1502 073e 0D22     		movs	r2, #13
 1503 0740 9C48     		ldr	r0, .L124
 792:Src/main.c    **** 
 1504              		.loc 1 792 0
 1505 0742 9D4E     		ldr	r6, .L124+4
 791:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 1506              		.loc 1 791 0
 1507 0744 FFF7FEFF 		bl	draw_Wave
 1508              	.LVL111:
 792:Src/main.c    **** 
 1509              		.loc 1 792 0
 1510 0748 0CAB     		add	r3, sp, #48
 1511 074a 0220     		movs	r0, #2
 1512 074c 33F91530 		ldrsh	r3, [r3, r5, lsl #1]
 1513 0750 0193     		str	r3, [sp, #4]
 1514 0752 0125     		movs	r5, #1
 1515 0754 0321     		movs	r1, #3
 1516 0756 0D23     		movs	r3, #13
 1517 0758 0022     		movs	r2, #0
 1518              	.L102:
 1519              	.LBE31:
 1520              	.LBB32:
 806:Src/main.c    **** 
 1521              		.loc 1 806 0
 1522 075a CDE90210 		strd	r1, r0, [sp, #8]
 1523 075e 0093     		str	r3, [sp]
 1524 0760 CDE90456 		strd	r5, r6, [sp, #16]
 1525 0764 1146     		mov	r1, r2
 1526 0766 4023     		movs	r3, #64
 1527 0768 9248     		ldr	r0, .L124
 1528 076a FFF7FEFF 		bl	draw_Value
 1529              	.LVL112:
 1530              	.LBE32:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 47


 1531 076e CDE5     		b	.L69
 1532              	.LVL113:
 1533              	.L116:
 1534              	.LBB33:
 760:Src/main.c    ****         if( rpm_integral > 10000 ){
 1535              		.loc 1 760 0
 1536 0770 B8F80030 		ldrh	r3, [r8]
 1537 0774 0B9A     		ldr	r2, [sp, #44]
 1538 0776 1A44     		add	r2, r2, r3
 1539 0778 92B2     		uxth	r2, r2
 761:Src/main.c    ****           rpm_integral = rpm_integral - 10000;
 1540              		.loc 1 761 0
 1541 077a 42F21073 		movw	r3, #10000
 1542 077e 9A42     		cmp	r2, r3
 760:Src/main.c    ****         if( rpm_integral > 10000 ){
 1543              		.loc 1 760 0
 1544 0780 0B92     		str	r2, [sp, #44]
 1545              	.LVL114:
 761:Src/main.c    ****           rpm_integral = rpm_integral - 10000;
 1546              		.loc 1 761 0
 1547 0782 04D9     		bls	.L73
 762:Src/main.c    ****         }
 1548              		.loc 1 762 0
 1549 0784 A2F51C53 		sub	r3, r2, #9984
 1550 0788 103B     		subs	r3, r3, #16
 1551 078a 9BB2     		uxth	r3, r3
 1552 078c 0B93     		str	r3, [sp, #44]
 1553              	.LVL115:
 1554              	.L73:
 764:Src/main.c    **** 
 1555              		.loc 1 764 0
 1556 078e DDED0B7A 		vldr.32	s15, [sp, #44]	@ int
 768:Src/main.c    ****         draw_Value(&u8g2, 0, 2, meas_width1, meas_height, rpm, 4, 0, 0, "rpm");
 1557              		.loc 1 768 0
 1558 0792 8A4E     		ldr	r6, .L124+8
 764:Src/main.c    **** 
 1559              		.loc 1 764 0
 1560 0794 F8EE677A 		vcvt.f32.u32	s15, s15
 768:Src/main.c    ****         draw_Value(&u8g2, 0, 2, meas_width1, meas_height, rpm, 4, 0, 0, "rpm");
 1561              		.loc 1 768 0
 1562 0798 0C25     		movs	r5, #12
 764:Src/main.c    **** 
 1563              		.loc 1 764 0
 1564 079a 17EE900A 		vmov	r0, s15
 1565 079e FFF7FEFF 		bl	__aeabi_f2d
 1566              	.LVL116:
 1567 07a2 0022     		movs	r2, #0
 1568 07a4 864B     		ldr	r3, .L124+12
 1569 07a6 FFF7FEFF 		bl	__aeabi_ddiv
 1570              	.LVL117:
 1571 07aa FFF7FEFF 		bl	__aeabi_d2uiz
 1572              	.LVL118:
 766:Src/main.c    **** 
 1573              		.loc 1 766 0
 1574 07ae 0222     		movs	r2, #2
 1575 07b0 C3B2     		uxtb	r3, r0
 1576 07b2 3A21     		movs	r1, #58
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 48


 1577 07b4 7F48     		ldr	r0, .L124
 1578 07b6 FFF7FEFF 		bl	draw_Rotary
 1579              	.LVL119:
 768:Src/main.c    ****         draw_Value(&u8g2, 0, 2, meas_width1, meas_height, rpm, 4, 0, 0, "rpm");
 1580              		.loc 1 768 0
 1581 07ba 824B     		ldr	r3, .L124+16
 1582 07bc 0296     		str	r6, [sp, #8]
 1583 07be CDE90053 		strd	r5, r3, [sp]
 1584 07c2 0222     		movs	r2, #2
 1585 07c4 4623     		movs	r3, #70
 1586 07c6 0021     		movs	r1, #0
 1587 07c8 7A48     		ldr	r0, .L124
 1588 07ca FFF7FEFF 		bl	draw_MeasLabelUnit
 1589              	.LVL120:
 769:Src/main.c    **** 
 1590              		.loc 1 769 0
 1591 07ce B8F80030 		ldrh	r3, [r8]
 1592 07d2 7848     		ldr	r0, .L124
 1593 07d4 0095     		str	r5, [sp]
 1594 07d6 0021     		movs	r1, #0
 1595 07d8 1BB2     		sxth	r3, r3
 1596 07da 0422     		movs	r2, #4
 1597 07dc CDE90311 		strd	r1, r1, [sp, #12]
 1598 07e0 0596     		str	r6, [sp, #20]
 1599 07e2 0193     		str	r3, [sp, #4]
 1600 07e4 0292     		str	r2, [sp, #8]
 1601 07e6 4623     		movs	r3, #70
 1602 07e8 0222     		movs	r2, #2
 776:Src/main.c    ****         }
 1603              		.loc 1 776 0
 1604 07ea 2F46     		mov	r7, r5
 771:Src/main.c    ****         // draw measurement data
 1605              		.loc 1 771 0
 1606 07ec 0D46     		mov	r5, r1
 769:Src/main.c    **** 
 1607              		.loc 1 769 0
 1608 07ee FFF7FEFF 		bl	draw_Value
 1609              	.LVL121:
 771:Src/main.c    ****         // draw measurement data
 1610              		.loc 1 771 0
 1611 07f2 FFF7FEFF 		bl	draw_MeasLabels_Rotary
 1612              	.LVL122:
 1613 07f6 0120     		movs	r0, #1
 1614 07f8 0221     		movs	r1, #2
 1615 07fa 0322     		movs	r2, #3
 1616 07fc 8446     		mov	ip, r0
 1617 07fe 1026     		movs	r6, #16
 1618 0800 0846     		mov	r0, r1
 1619 0802 1146     		mov	r1, r2
 1620              	.LVL123:
 1621              	.L74:
 776:Src/main.c    ****         }
 1622              		.loc 1 776 0 discriminator 3
 1623 0804 704A     		ldr	r2, .L124+20
 1624 0806 0291     		str	r1, [sp, #8]
 1625 0808 05EB8503 		add	r3, r5, r5, lsl #2
 1626 080c 1344     		add	r3, r3, r2
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 49


 1627 080e 39F91520 		ldrsh	r2, [r9, r5, lsl #1]
 1628 0812 0593     		str	r3, [sp, #20]
 1629 0814 CDE9030C 		strd	r0, ip, [sp, #12]
 1630 0818 0192     		str	r2, [sp, #4]
 1631 081a 0097     		str	r7, [sp]
 1632 081c 3246     		mov	r2, r6
 1633 081e 4623     		movs	r3, #70
 1634 0820 0021     		movs	r1, #0
 1635 0822 6448     		ldr	r0, .L124
 1636 0824 0135     		adds	r5, r5, #1
 1637              	.LVL124:
 1638 0826 FFF7FEFF 		bl	draw_Value
 1639              	.LVL125:
 1640 082a 0C36     		adds	r6, r6, #12
 1641              	.LVL126:
 773:Src/main.c    ****           x = meas_x;
 1642              		.loc 1 773 0 discriminator 3
 1643 082c 042D     		cmp	r5, #4
 1644 082e F6B2     		uxtb	r6, r6
 1645 0830 3FF46CAD 		beq	.L69
 1646 0834 654B     		ldr	r3, .L124+24
 1647 0836 595D     		ldrb	r1, [r3, r5]	@ zero_extendqisi2
 1648 0838 654B     		ldr	r3, .L124+28
 1649 083a 585D     		ldrb	r0, [r3, r5]	@ zero_extendqisi2
 1650 083c 654B     		ldr	r3, .L124+32
 1651 083e 13F805C0 		ldrb	ip, [r3, r5]	@ zero_extendqisi2
 1652 0842 DFE7     		b	.L74
 1653              	.LVL127:
 1654              	.L118:
 1655              	.LBE33:
 1656              	.LBB34:
 797:Src/main.c    ****           circular_buffer_index--;
 1657              		.loc 1 797 0
 1658 0844 0A9B     		ldr	r3, [sp, #40]
 1659 0846 002B     		cmp	r3, #0
 1660 0848 72D0     		beq	.L85
 798:Src/main.c    ****         }else{
 1661              		.loc 1 798 0
 1662 084a 013B     		subs	r3, r3, #1
 1663 084c 9BB2     		uxth	r3, r3
 1664 084e 0A93     		str	r3, [sp, #40]
 1665              	.LVL128:
 1666 0850 1D46     		mov	r5, r3
 1667              	.LVL129:
 1668              	.L78:
 805:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 1669              		.loc 1 805 0
 1670 0852 C821     		movs	r1, #200
 1671 0854 6FF0C702 		mvn	r2, #199
 1672 0858 3423     		movs	r3, #52
 1673 085a 0CA8     		add	r0, sp, #48
 1674 085c CDE90210 		strd	r1, r0, [sp, #8]
 1675 0860 CDE90032 		strd	r3, r2, [sp]
 802:Src/main.c    **** 
 1676              		.loc 1 802 0
 1677 0864 5C4B     		ldr	r3, .L124+36
 805:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 50


 1678              		.loc 1 805 0
 1679 0866 0495     		str	r5, [sp, #16]
 802:Src/main.c    **** 
 1680              		.loc 1 802 0
 1681 0868 0CAA     		add	r2, sp, #48
 1682 086a 1B88     		ldrh	r3, [r3]
 1683 086c 22F81530 		strh	r3, [r2, r5, lsl #1]	@ movhi
 805:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 1684              		.loc 1 805 0
 1685 0870 0021     		movs	r1, #0
 1686 0872 8023     		movs	r3, #128
 1687 0874 0D22     		movs	r2, #13
 1688 0876 4F48     		ldr	r0, .L124
 806:Src/main.c    **** 
 1689              		.loc 1 806 0
 1690 0878 584E     		ldr	r6, .L124+40
 805:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 1691              		.loc 1 805 0
 1692 087a FFF7FEFF 		bl	draw_Wave
 1693              	.LVL130:
 806:Src/main.c    **** 
 1694              		.loc 1 806 0
 1695 087e 0CAB     		add	r3, sp, #48
 1696 0880 0220     		movs	r0, #2
 1697 0882 33F91530 		ldrsh	r3, [r3, r5, lsl #1]
 1698 0886 0193     		str	r3, [sp, #4]
 1699 0888 0125     		movs	r5, #1
 1700 088a 0321     		movs	r1, #3
 1701 088c 0D23     		movs	r3, #13
 1702 088e 0022     		movs	r2, #0
 1703 0890 63E7     		b	.L102
 1704              	.LVL131:
 1705              	.L84:
 1706              	.LBE34:
 1707              	.LBB35:
 1708 0892 8023     		movs	r3, #128
 1709 0894 0A93     		str	r3, [sp, #40]
 786:Src/main.c    ****         }
 1710              		.loc 1 786 0
 1711 0896 1D46     		mov	r5, r3
 1712 0898 40E7     		b	.L76
 1713              	.L115:
 1714              	.LBE35:
 1715              	.LBB36:
 741:Src/main.c    ****         
 1716              		.loc 1 741 0
 1717 089a B9F90010 		ldrsh	r1, [r9]
 1718 089e 4548     		ldr	r0, .L124
 1719 08a0 FFF7FEFF 		bl	draw_CircularMeter
 1720              	.LVL132:
 743:Src/main.c    ****         draw_MeasUnit(&u8g2, 38, 40, 28, 16, "kPa");
 1721              		.loc 1 743 0
 1722 08a4 B9F90030 		ldrsh	r3, [r9]
 1723 08a8 4D4A     		ldr	r2, .L124+44
 1724 08aa 0592     		str	r2, [sp, #20]
 1725 08ac 4FF0020C 		mov	ip, #2
 1726 08b0 1026     		movs	r6, #16
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 51


 1727 08b2 0322     		movs	r2, #3
 1728 08b4 CDE903C5 		strd	ip, r5, [sp, #12]
 1729 08b8 CDE90132 		strd	r3, r2, [sp, #4]
 1730 08bc 0096     		str	r6, [sp]
 1731 08be 1E23     		movs	r3, #30
 1732 08c0 2122     		movs	r2, #33
 1733 08c2 2421     		movs	r1, #36
 1734 08c4 3B48     		ldr	r0, .L124
 744:Src/main.c    **** /*        
 1735              		.loc 1 744 0
 1736 08c6 6746     		mov	r7, ip
 743:Src/main.c    ****         draw_MeasUnit(&u8g2, 38, 40, 28, 16, "kPa");
 1737              		.loc 1 743 0
 1738 08c8 FFF7FEFF 		bl	draw_Value
 1739              	.LVL133:
 744:Src/main.c    **** /*        
 1740              		.loc 1 744 0
 1741 08cc 3A4B     		ldr	r3, .L124+4
 1742 08ce 0096     		str	r6, [sp]
 1743 08d0 0193     		str	r3, [sp, #4]
 1744 08d2 2822     		movs	r2, #40
 1745 08d4 2621     		movs	r1, #38
 1746 08d6 3748     		ldr	r0, .L124
 1747 08d8 1C23     		movs	r3, #28
 1748 08da FFF7FEFF 		bl	draw_MeasUnit
 1749              	.LVL134:
 1750 08de 2846     		mov	r0, r5
 1751 08e0 0322     		movs	r2, #3
 754:Src/main.c    ****         }
 1752              		.loc 1 754 0
 1753 08e2 8446     		mov	ip, r0
 744:Src/main.c    **** /*        
 1754              		.loc 1 744 0
 1755 08e4 0026     		movs	r6, #0
 754:Src/main.c    ****         }
 1756              		.loc 1 754 0
 1757 08e6 0D25     		movs	r5, #13
 1758 08e8 3846     		mov	r0, r7
 1759 08ea 1146     		mov	r1, r2
 1760              	.LVL135:
 1761              	.L71:
 754:Src/main.c    ****         }
 1762              		.loc 1 754 0 is_stmt 0 discriminator 3
 1763 08ec 364A     		ldr	r2, .L124+20
 1764 08ee 0291     		str	r1, [sp, #8]
 1765 08f0 06EB8603 		add	r3, r6, r6, lsl #2
 1766 08f4 1344     		add	r3, r3, r2
 1767 08f6 39F91620 		ldrsh	r2, [r9, r6, lsl #1]
 1768 08fa 0593     		str	r3, [sp, #20]
 1769 08fc CDE9030C 		strd	r0, ip, [sp, #12]
 1770 0900 0192     		str	r2, [sp, #4]
 1771 0902 3C23     		movs	r3, #60
 1772 0904 3A46     		mov	r2, r7
 1773 0906 0095     		str	r5, [sp]
 1774 0908 4421     		movs	r1, #68
 1775 090a 2A48     		ldr	r0, .L124
 1776 090c FFF7FEFF 		bl	draw_Value
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 52


 1777              	.LVL136:
 1778 0910 3B46     		mov	r3, r7
 1779 0912 0136     		adds	r6, r6, #1
 1780 0914 0D33     		adds	r3, r3, #13
 1781 0916 DBB2     		uxtb	r3, r3
 751:Src/main.c    ****           x = meas_C_x;
 1782              		.loc 1 751 0 is_stmt 1 discriminator 3
 1783 0918 042E     		cmp	r6, #4
 1784 091a 1F46     		mov	r7, r3
 1785              	.LVL137:
 1786 091c 3FF4F6AC 		beq	.L69
 1787 0920 2A4B     		ldr	r3, .L124+24
 1788 0922 995D     		ldrb	r1, [r3, r6]	@ zero_extendqisi2
 1789 0924 2A4B     		ldr	r3, .L124+28
 1790 0926 985D     		ldrb	r0, [r3, r6]	@ zero_extendqisi2
 1791 0928 2A4B     		ldr	r3, .L124+32
 1792 092a 13F806C0 		ldrb	ip, [r3, r6]	@ zero_extendqisi2
 1793 092e DDE7     		b	.L71
 1794              	.LVL138:
 1795              	.L85:
 1796              	.LBE36:
 1797              	.LBB37:
 1798 0930 8023     		movs	r3, #128
 1799 0932 0A93     		str	r3, [sp, #40]
 800:Src/main.c    ****         }
 1800              		.loc 1 800 0
 1801 0934 1D46     		mov	r5, r3
 1802 0936 8CE7     		b	.L78
 1803              	.L119:
 1804              	.LBE37:
 811:Src/main.c    ****         u8g2_SetFont(&u8g2, u8g2_font_7x14B_tf);
 1805              		.loc 1 811 0
 1806 0938 1E48     		ldr	r0, .L124
 1807 093a FFF7FEFF 		bl	u8g2_ClearBuffer
 1808              	.LVL139:
 812:Src/main.c    ****         u8g2_DrawStr(&u8g2, 2, 15, "Mode Setting" );
 1809              		.loc 1 812 0
 1810 093e 2949     		ldr	r1, .L124+48
 1811 0940 1C48     		ldr	r0, .L124
 1812 0942 FFF7FEFF 		bl	u8g2_SetFont
 1813              	.LVL140:
 813:Src/main.c    ****         if( cursor == 0 ){
 1814              		.loc 1 813 0
 1815 0946 284B     		ldr	r3, .L124+52
 1816 0948 1A48     		ldr	r0, .L124
 1817 094a 0F22     		movs	r2, #15
 1818 094c 0221     		movs	r1, #2
 1819 094e FFF7FEFF 		bl	u8g2_DrawStr
 1820              	.LVL141:
 814:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, ">" );
 1821              		.loc 1 814 0
 1822 0952 264B     		ldr	r3, .L124+56
 1823 0954 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1824 0956 03BB     		cbnz	r3, .L79
 815:Src/main.c    ****         }else{
 1825              		.loc 1 815 0
 1826 0958 254B     		ldr	r3, .L124+60
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 53


 1827 095a 1648     		ldr	r0, .L124
 1828 095c 1E22     		movs	r2, #30
 1829 095e 0221     		movs	r1, #2
 1830 0960 FFF7FEFF 		bl	u8g2_DrawStr
 1831              	.LVL142:
 1832              	.L80:
 819:Src/main.c    ****         if( cursor == 1 ){
 1833              		.loc 1 819 0
 1834 0964 234B     		ldr	r3, .L124+64
 1835 0966 1348     		ldr	r0, .L124
 1836 0968 1E22     		movs	r2, #30
 1837 096a 0A21     		movs	r1, #10
 1838 096c FFF7FEFF 		bl	u8g2_DrawStr
 1839              	.LVL143:
 820:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 1840              		.loc 1 820 0
 1841 0970 1E4B     		ldr	r3, .L124+56
 823:Src/main.c    ****         }
 1842              		.loc 1 823 0
 1843 0972 1048     		ldr	r0, .L124
 820:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 1844              		.loc 1 820 0
 1845 0974 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1846 0976 012B     		cmp	r3, #1
 821:Src/main.c    ****         }else{
 1847              		.loc 1 821 0
 1848 0978 0CBF     		ite	eq
 1849 097a 1D4B     		ldreq	r3, .L124+60
 823:Src/main.c    ****         }
 1850              		.loc 1 823 0
 1851 097c 1E4B     		ldrne	r3, .L124+68
 1852 097e 2D22     		movs	r2, #45
 1853 0980 0221     		movs	r1, #2
 1854 0982 FFF7FEFF 		bl	u8g2_DrawStr
 1855              	.LVL144:
 825:Src/main.c    ****         u8g2_SendBuffer(&u8g2);
 1856              		.loc 1 825 0
 1857 0986 1D4B     		ldr	r3, .L124+72
 1858 0988 0A48     		ldr	r0, .L124
 1859 098a 2D22     		movs	r2, #45
 1860 098c 0A21     		movs	r1, #10
 1861 098e FFF7FEFF 		bl	u8g2_DrawStr
 1862              	.LVL145:
 826:Src/main.c    ****       }
 1863              		.loc 1 826 0
 1864 0992 0848     		ldr	r0, .L124
 1865 0994 FFF7FEFF 		bl	u8g2_SendBuffer
 1866              	.LVL146:
 1867 0998 B8E4     		b	.L69
 1868              	.L79:
 817:Src/main.c    ****         }
 1869              		.loc 1 817 0
 1870 099a 174B     		ldr	r3, .L124+68
 1871 099c 0548     		ldr	r0, .L124
 1872 099e 1E22     		movs	r2, #30
 1873 09a0 0221     		movs	r1, #2
 1874 09a2 FFF7FEFF 		bl	u8g2_DrawStr
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 54


 1875              	.LVL147:
 1876 09a6 DDE7     		b	.L80
 1877              	.L103:
 565:Src/main.c    ****       FP_duty = 60;
 1878              		.loc 1 565 0
 1879 09a8 3B2B     		cmp	r3, #59
 566:Src/main.c    ****     }
 1880              		.loc 1 566 0
 1881 09aa DCBF     		itt	le
 1882 09ac 3C23     		movle	r3, #60
 1883 09ae ABF80030 		strhle	r3, [fp]	@ movhi
 1884 09b2 2EE4     		b	.L45
 1885              	.L125:
 1886              		.align	2
 1887              	.L124:
 1888 09b4 00000000 		.word	u8g2
 1889 09b8 68000000 		.word	.LC11
 1890 09bc 5C000000 		.word	.LC9
 1891 09c0 00408F40 		.word	1083129856
 1892 09c4 60000000 		.word	.LC10
 1893 09c8 00000000 		.word	.LANCHOR2
 1894 09cc 00000000 		.word	.LANCHOR9
 1895 09d0 00000000 		.word	.LANCHOR10
 1896 09d4 00000000 		.word	.LANCHOR11
 1897 09d8 00000000 		.word	Gsens_Y
 1898 09dc 70000000 		.word	.LC13
 1899 09e0 7C000000 		.word	.LC15
 1900 09e4 00000000 		.word	u8g2_font_7x14B_tf
 1901 09e8 80000000 		.word	.LC16
 1902 09ec 00000000 		.word	.LANCHOR12
 1903 09f0 90000000 		.word	.LC17
 1904 09f4 98000000 		.word	.LC19
 1905 09f8 94000000 		.word	.LC18
 1906 09fc A4000000 		.word	.LC20
 1907              	.LBE38:
 1908              		.cfi_endproc
 1909              	.LFE130:
 1911              		.section	.text.Error_Handler,"ax",%progbits
 1912              		.align	1
 1913              		.p2align 2,,3
 1914              		.global	Error_Handler
 1915              		.syntax unified
 1916              		.thumb
 1917              		.thumb_func
 1918              		.fpu fpv4-sp-d16
 1920              	Error_Handler:
 1921              	.LFB132:
 885:Src/main.c    **** 
 886:Src/main.c    **** /* USER CODE BEGIN 4 */
 887:Src/main.c    **** 
 888:Src/main.c    **** /* USER CODE END 4 */
 889:Src/main.c    **** 
 890:Src/main.c    **** /**
 891:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 892:Src/main.c    ****   * @retval None
 893:Src/main.c    ****   */
 894:Src/main.c    **** void Error_Handler(void)
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 55


 895:Src/main.c    **** {
 1922              		.loc 1 895 0
 1923              		.cfi_startproc
 1924              		@ Volatile: function does not return.
 1925              		@ args = 0, pretend = 0, frame = 0
 1926              		@ frame_needed = 0, uses_anonymous_args = 0
 1927              		@ link register save eliminated.
 1928              	.L127:
 1929 0000 FEE7     		b	.L127
 1930              		.cfi_endproc
 1931              	.LFE132:
 1933              		.comm	adc,20,4
 1934              		.comm	g_ADCBuffer,20,4
 1935              		.comm	Gsens_Z,2,2
 1936              		.comm	Gsens_Y,2,2
 1937              		.comm	Gsens_X,2,2
 1938              		.comm	Gsens_EN,1,1
 1939              		.comm	CAN_EN,1,1
 1940              		.global	FP_duty
 1941              		.global	FP_volt
 1942              		.global	O2_volt
 1943              		.global	meas_value
 1944              		.global	meas_sign
 1945              		.global	meas_frac
 1946              		.global	meas_digit
 1947              		.global	meas_unit
 1948              		.global	meas_name
 1949              		.global	idct_status
 1950              		.global	idct_name
 1951              		.global	cursor
 1952              		.comm	setting,1,1
 1953              		.comm	mode,1,1
 1954              		.global	MT
 1955              		.global	gear
 1956              		.global	speed
 1957              		.global	update_display
 1958              		.comm	u8g2,128,4
 1959              		.global	logo_bits
 1960 0002 00BF     		.section	.bss.cursor,"aw",%nobits
 1961              		.set	.LANCHOR12,. + 0
 1964              	cursor:
 1965 0000 00       		.space	1
 1966              		.section	.bss.gear,"aw",%nobits
 1969              	gear:
 1970 0000 00       		.space	1
 1971              		.section	.bss.idct_status,"aw",%nobits
 1972              		.align	2
 1973              		.set	.LANCHOR1,. + 0
 1976              	idct_status:
 1977 0000 0000     		.space	2
 1978              		.section	.bss.update_display,"aw",%nobits
 1981              	update_display:
 1982 0000 00       		.space	1
 1983              		.section	.data.FP_duty,"aw",%progbits
 1984              		.align	1
 1985              		.set	.LANCHOR5,. + 0
 1988              	FP_duty:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 56


 1989 0000 6400     		.short	100
 1990              		.section	.data.FP_volt,"aw",%progbits
 1991              		.align	1
 1992              		.set	.LANCHOR7,. + 0
 1995              	FP_volt:
 1996 0000 4A01     		.short	330
 1997              		.section	.data.MT,"aw",%progbits
 1998              		.align	3
 2001              	MT:
 2002 0000 77BE9F1A 		.word	446676599
 2003 0004 2FDD0B40 		.word	1074519343
 2004 0008 1F85EB51 		.word	1374389535
 2005 000c B81E0040 		.word	1073749688
 2006 0010 A8C64B37 		.word	927712936
 2007 0014 8941F63F 		.word	1073103241
 2008 0018 00000000 		.word	0
 2009 001c 0000F03F 		.word	1072693248
 2010 0020 986E1283 		.word	2199023256
 2011 0024 C0CAE93F 		.word	1072286400
 2012              		.section	.data.O2_volt,"aw",%progbits
 2013              		.align	1
 2014              		.set	.LANCHOR6,. + 0
 2017              	O2_volt:
 2018 0000 4A01     		.short	330
 2019              		.section	.data.meas_value,"aw",%progbits
 2020              		.align	2
 2021              		.set	.LANCHOR8,. + 0
 2024              	meas_value:
 2025 0000 6900     		.short	105
 2026 0002 EB00     		.short	235
 2027 0004 8502     		.short	645
 2028 0006 5900     		.short	89
 2029 0008 4900     		.short	73
 2030 000a 8F00     		.short	143
 2031              		.section	.data.speed,"aw",%progbits
 2032              		.align	1
 2035              	speed:
 2036 0000 F000     		.short	240
 2037              		.section	.rodata.draw_MeasLabels.str1.4,"aMS",%progbits,1
 2038              		.align	2
 2039              	.LC0:
 2040 0000 25202000 		.ascii	"%  \000"
 2041              	.LC1:
 2042 0004 44555459 		.ascii	"DUTY\000"
 2042      00
 2043              		.section	.rodata.idct_name,"a",%progbits
 2044              		.align	2
 2045              		.set	.LANCHOR0,. + 0
 2048              	idct_name:
 2049 0000 43414E00 		.ascii	"CAN\000"
 2050 0004 00       		.space	1
 2051 0005 4753454E 		.ascii	"GSENS"
 2051      53
 2052              		.section	.rodata.logo_bits,"a",%progbits
 2053              		.align	2
 2054              		.set	.LANCHOR4,. + 0
 2057              	logo_bits:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 57


 2058 0000 00       		.byte	0
 2059 0001 00       		.byte	0
 2060 0002 00       		.byte	0
 2061 0003 00       		.byte	0
 2062 0004 00       		.byte	0
 2063 0005 00       		.byte	0
 2064 0006 00       		.byte	0
 2065 0007 00       		.byte	0
 2066 0008 00       		.byte	0
 2067 0009 00       		.byte	0
 2068 000a 00       		.byte	0
 2069 000b 00       		.byte	0
 2070 000c 00       		.byte	0
 2071 000d 00       		.byte	0
 2072 000e 00       		.byte	0
 2073 000f 00       		.byte	0
 2074 0010 00       		.byte	0
 2075 0011 00       		.byte	0
 2076 0012 00       		.byte	0
 2077 0013 00       		.byte	0
 2078 0014 00       		.byte	0
 2079 0015 00       		.byte	0
 2080 0016 00       		.byte	0
 2081 0017 00       		.byte	0
 2082 0018 00       		.byte	0
 2083 0019 00       		.byte	0
 2084 001a F0       		.byte	-16
 2085 001b 0F       		.byte	15
 2086 001c 00       		.byte	0
 2087 001d 00       		.byte	0
 2088 001e 00       		.byte	0
 2089 001f FC       		.byte	-4
 2090 0020 FF       		.byte	-1
 2091 0021 FF       		.byte	-1
 2092 0022 3F       		.byte	63
 2093 0023 00       		.byte	0
 2094 0024 80       		.byte	-128
 2095 0025 FF       		.byte	-1
 2096 0026 FF       		.byte	-1
 2097 0027 FF       		.byte	-1
 2098 0028 FF       		.byte	-1
 2099 0029 01       		.byte	1
 2100 002a E0       		.byte	-32
 2101 002b 1F       		.byte	31
 2102 002c 00       		.byte	0
 2103 002d 80       		.byte	-128
 2104 002e FF       		.byte	-1
 2105 002f 07       		.byte	7
 2106 0030 E0       		.byte	-32
 2107 0031 01       		.byte	1
 2108 0032 00       		.byte	0
 2109 0033 80       		.byte	-128
 2110 0034 81       		.byte	-127
 2111 0035 07       		.byte	7
 2112 0036 E0       		.byte	-32
 2113 0037 01       		.byte	1
 2114 0038 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 58


 2115 0039 80       		.byte	-128
 2116 003a 81       		.byte	-127
 2117 003b 07       		.byte	7
 2118 003c C0       		.byte	-64
 2119 003d E1       		.byte	-31
 2120 003e 07       		.byte	7
 2121 003f C0       		.byte	-64
 2122 0040 80       		.byte	-128
 2123 0041 03       		.byte	3
 2124 0042 00       		.byte	0
 2125 0043 FC       		.byte	-4
 2126 0044 1F       		.byte	31
 2127 0045 E0       		.byte	-32
 2128 0046 80       		.byte	-128
 2129 0047 03       		.byte	3
 2130 0048 00       		.byte	0
 2131 0049 FE       		.byte	-2
 2132 004a 7F       		.byte	127
 2133 004b 70       		.byte	112
 2134 004c C0       		.byte	-64
 2135 004d 01       		.byte	1
 2136 004e 00       		.byte	0
 2137 004f 0F       		.byte	15
 2138 0050 FE       		.byte	-2
 2139 0051 39       		.byte	57
 2140 0052 E0       		.byte	-32
 2141 0053 00       		.byte	0
 2142 0054 00       		.byte	0
 2143 0055 07       		.byte	7
 2144 0056 F8       		.byte	-8
 2145 0057 1F       		.byte	31
 2146 0058 F0       		.byte	-16
 2147 0059 00       		.byte	0
 2148 005a 00       		.byte	0
 2149 005b 0E       		.byte	14
 2150 005c E0       		.byte	-32
 2151 005d 1F       		.byte	31
 2152 005e 78       		.byte	120
 2153 005f 00       		.byte	0
 2154 0060 00       		.byte	0
 2155 0061 0C       		.byte	12
 2156 0062 C0       		.byte	-64
 2157 0063 FF       		.byte	-1
 2158 0064 3F       		.byte	63
 2159 0065 00       		.byte	0
 2160 0066 00       		.byte	0
 2161 0067 18       		.byte	24
 2162 0068 00       		.byte	0
 2163 0069 FF       		.byte	-1
 2164 006a 1F       		.byte	31
 2165 006b 00       		.byte	0
 2166 006c 00       		.byte	0
 2167 006d 38       		.byte	56
 2168 006e C0       		.byte	-64
 2169 006f FF       		.byte	-1
 2170 0070 0F       		.byte	15
 2171 0071 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 59


 2172 0072 00       		.byte	0
 2173 0073 70       		.byte	112
 2174 0074 E0       		.byte	-32
 2175 0075 F1       		.byte	-15
 2176 0076 03       		.byte	3
 2177 0077 00       		.byte	0
 2178 0078 00       		.byte	0
 2179 0079 E0       		.byte	-32
 2180 007a 78       		.byte	120
 2181 007b 00       		.byte	0
 2182 007c 00       		.byte	0
 2183 007d 00       		.byte	0
 2184 007e 00       		.byte	0
 2185 007f C0       		.byte	-64
 2186 0080 3F       		.byte	63
 2187 0081 E0       		.byte	-32
 2188 0082 01       		.byte	1
 2189 0083 00       		.byte	0
 2190 0084 00       		.byte	0
 2191 0085 80       		.byte	-128
 2192 0086 1F       		.byte	31
 2193 0087 F0       		.byte	-16
 2194 0088 01       		.byte	1
 2195 0089 00       		.byte	0
 2196 008a 00       		.byte	0
 2197 008b 00       		.byte	0
 2198 008c 07       		.byte	7
 2199 008d F8       		.byte	-8
 2200 008e 00       		.byte	0
 2201 008f 00       		.byte	0
 2202 0090 00       		.byte	0
 2203 0091 00       		.byte	0
 2204 0092 1E       		.byte	30
 2205 0093 7C       		.byte	124
 2206 0094 00       		.byte	0
 2207 0095 00       		.byte	0
 2208 0096 00       		.byte	0
 2209 0097 00       		.byte	0
 2210 0098 F8       		.byte	-8
 2211 0099 1F       		.byte	31
 2212 009a 00       		.byte	0
 2213 009b 00       		.byte	0
 2214 009c 00       		.byte	0
 2215 009d 00       		.byte	0
 2216 009e F0       		.byte	-16
 2217 009f 0F       		.byte	15
 2218 00a0 00       		.byte	0
 2219 00a1 00       		.byte	0
 2220 00a2 00       		.byte	0
 2221 00a3 00       		.byte	0
 2222 00a4 80       		.byte	-128
 2223 00a5 01       		.byte	1
 2224 00a6 00       		.byte	0
 2225 00a7 00       		.byte	0
 2226 00a8 00       		.byte	0
 2227 00a9 00       		.byte	0
 2228 00aa 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 60


 2229 00ab 00       		.byte	0
 2230 00ac 00       		.byte	0
 2231 00ad 00       		.byte	0
 2232 00ae 00       		.byte	0
 2233 00af 00       		.byte	0
 2234 00b0 00       		.byte	0
 2235 00b1 00       		.byte	0
 2236 00b2 00       		.byte	0
 2237 00b3 00       		.byte	0
 2238 00b4 00       		.byte	0
 2239 00b5 00       		.byte	0
 2240 00b6 00       		.byte	0
 2241 00b7 00       		.byte	0
 2242 00b8 00       		.byte	0
 2243 00b9 00       		.byte	0
 2244 00ba 00       		.byte	0
 2245 00bb 00       		.byte	0
 2246 00bc 00       		.byte	0
 2247 00bd 00       		.byte	0
 2248 00be 00       		.byte	0
 2249 00bf 00       		.byte	0
 2250 00c0 00       		.byte	0
 2251 00c1 00       		.byte	0
 2252 00c2 00       		.byte	0
 2253 00c3 00       		.byte	0
 2254 00c4 00       		.byte	0
 2255 00c5 00       		.byte	0
 2256 00c6 00       		.byte	0
 2257 00c7 4C       		.byte	76
 2258 00c8 1C       		.byte	28
 2259 00c9 00       		.byte	0
 2260 00ca 00       		.byte	0
 2261 00cb 00       		.byte	0
 2262 00cc 00       		.byte	0
 2263 00cd 32       		.byte	50
 2264 00ce 0E       		.byte	14
 2265 00cf 00       		.byte	0
 2266 00d0 00       		.byte	0
 2267 00d1 00       		.byte	0
 2268 00d2 00       		.byte	0
 2269 00d3 00       		.byte	0
 2270 00d4 C6       		.byte	-58
 2271 00d5 00       		.byte	0
 2272 00d6 18       		.byte	24
 2273 00d7 00       		.byte	0
 2274 00d8 00       		.byte	0
 2275 00d9 7C       		.byte	124
 2276 00da EF       		.byte	-17
 2277 00db FC       		.byte	-4
 2278 00dc 39       		.byte	57
 2279 00dd 00       		.byte	0
 2280 00de 00       		.byte	0
 2281 00df 4E       		.byte	78
 2282 00e0 C6       		.byte	-58
 2283 00e1 B8       		.byte	-72
 2284 00e2 31       		.byte	49
 2285 00e3 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 61


 2286 00e4 00       		.byte	0
 2287 00e5 3E       		.byte	62
 2288 00e6 C6       		.byte	-58
 2289 00e7 98       		.byte	-104
 2290 00e8 31       		.byte	49
 2291 00e9 00       		.byte	0
 2292 00ea 00       		.byte	0
 2293 00eb 3C       		.byte	60
 2294 00ec C6       		.byte	-58
 2295 00ed 98       		.byte	-104
 2296 00ee 31       		.byte	49
 2297 00ef 00       		.byte	0
 2298 00f0 00       		.byte	0
 2299 00f1 0E       		.byte	14
 2300 00f2 C6       		.byte	-58
 2301 00f3 98       		.byte	-104
 2302 00f4 31       		.byte	49
 2303 00f5 00       		.byte	0
 2304 00f6 00       		.byte	0
 2305 00f7 4E       		.byte	78
 2306 00f8 CE       		.byte	-50
 2307 00f9 99       		.byte	-103
 2308 00fa 31       		.byte	49
 2309 00fb 00       		.byte	0
 2310 00fc 00       		.byte	0
 2311 00fd 7C       		.byte	124
 2312 00fe EF       		.byte	-17
 2313 00ff FD       		.byte	-3
 2314 0100 7B       		.byte	123
 2315 0101 00       		.byte	0
 2316 0102 00       		.byte	0
 2317 0103 00       		.byte	0
 2318 0104 00       		.byte	0
 2319 0105 00       		.byte	0
 2320 0106 00       		.byte	0
 2321 0107 00       		.byte	0
 2322 0108 00       		.byte	0
 2323 0109 00       		.byte	0
 2324 010a 00       		.byte	0
 2325 010b 00       		.byte	0
 2326 010c 00       		.byte	0
 2327 010d 00       		.byte	0
 2328 010e 00       		.byte	0
 2329 010f 00       		.byte	0
 2330 0110 00       		.byte	0
 2331 0111 00       		.byte	0
 2332 0112 00       		.byte	0
 2333 0113 00       		.byte	0
 2334 0114 00       		.byte	0
 2335 0115 00       		.byte	0
 2336 0116 00       		.byte	0
 2337 0117 00       		.byte	0
 2338 0118 00       		.byte	0
 2339 0119 00       		.byte	0
 2340 011a 00       		.byte	0
 2341 011b 00       		.byte	0
 2342 011c 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 62


 2343 011d 00       		.byte	0
 2344 011e 00       		.byte	0
 2345 011f 00       		.byte	0
 2346              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2347              		.align	2
 2348              	.LC2:
 2349 0000 4D756C74 		.ascii	"Multi Function Meter\000"
 2349      69204675 
 2349      6E637469 
 2349      6F6E204D 
 2349      65746572 
 2350 0015 000000   		.space	3
 2351              	.LC3:
 2352 0018 5265762E 		.ascii	"Rev. 0.2b\000"
 2352      20302E32 
 2352      6200
 2353 0022 0000     		.space	2
 2354              	.LC4:
 2355 0024 48656C6C 		.ascii	"Hello. This is MFM.\012\000"
 2355      6F2E2054 
 2355      68697320 
 2355      6973204D 
 2355      464D2E0A 
 2356 0039 000000   		.space	3
 2357              	.LC5:
 2358 003c 2825642C 		.ascii	"(%d,%d,%d)\012\000"
 2358      25642C25 
 2358      64290A00 
 2359              	.LC6:
 2360 0048 55502000 		.ascii	"UP \000"
 2361              	.LC7:
 2362 004c 444F574E 		.ascii	"DOWN \000"
 2362      2000
 2363 0052 0000     		.space	2
 2364              	.LC8:
 2365 0054 454E5445 		.ascii	"ENTER \000"
 2365      522000
 2366 005b 00       		.space	1
 2367              	.LC9:
 2368 005c 72706D00 		.ascii	"rpm\000"
 2369              	.LC10:
 2370 0060 54414348 		.ascii	"TACHO\000"
 2370      4F00
 2371 0066 0000     		.space	2
 2372              	.LC11:
 2373 0068 6B506100 		.ascii	"kPa\000"
 2374              	.LC12:
 2375 006c 4D415000 		.ascii	"MAP\000"
 2376              	.LC13:
 2377 0070 4700     		.ascii	"G\000"
 2378 0072 0000     		.space	2
 2379              	.LC14:
 2380 0074 4C617447 		.ascii	"LatG\000"
 2380      00
 2381 0079 000000   		.space	3
 2382              	.LC15:
 2383 007c 00       		.ascii	"\000"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 63


 2384 007d 000000   		.space	3
 2385              	.LC16:
 2386 0080 4D6F6465 		.ascii	"Mode Setting\000"
 2386      20536574 
 2386      74696E67 
 2386      00
 2387 008d 000000   		.space	3
 2388              	.LC17:
 2389 0090 3E00     		.ascii	">\000"
 2390 0092 0000     		.space	2
 2391              	.LC18:
 2392 0094 2000     		.ascii	" \000"
 2393 0096 0000     		.space	2
 2394              	.LC19:
 2395 0098 4D756C74 		.ascii	"Multi-Meter\000"
 2395      692D4D65 
 2395      74657200 
 2396              	.LC20:
 2397 00a4 53636F70 		.ascii	"Scope\000"
 2397      6500
 2398              		.section	.rodata.meas_digit,"a",%progbits
 2399              		.align	2
 2400              		.set	.LANCHOR9,. + 0
 2403              	meas_digit:
 2404 0000 03       		.byte	3
 2405 0001 03       		.byte	3
 2406 0002 03       		.byte	3
 2407 0003 03       		.byte	3
 2408 0004 03       		.byte	3
 2409 0005 03       		.byte	3
 2410              		.section	.rodata.meas_frac,"a",%progbits
 2411              		.align	2
 2412              		.set	.LANCHOR10,. + 0
 2415              	meas_frac:
 2416 0000 02       		.byte	2
 2417 0001 01       		.byte	1
 2418 0002 01       		.byte	1
 2419 0003 00       		.byte	0
 2420 0004 00       		.byte	0
 2421 0005 02       		.byte	2
 2422              		.section	.rodata.meas_name,"a",%progbits
 2423              		.align	2
 2424              		.set	.LANCHOR3,. + 0
 2427              	meas_name:
 2428 0000 4D415000 		.ascii	"MAP\000"
 2429 0004 000000   		.space	3
 2430 0007 4F494C50 		.ascii	"OILP\000"
 2430      00
 2431 000c 0000     		.space	2
 2432 000e 46505600 		.ascii	"FPV\000"
 2433 0012 000000   		.space	3
 2434 0015 45435400 		.ascii	"ECT\000"
 2435 0019 000000   		.space	3
 2436 001c 4F494C54 		.ascii	"OILT\000"
 2436      00
 2437 0021 0000     		.space	2
 2438 0023 4F3200   		.ascii	"O2\000"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 64


 2439 0026 00000000 		.space	4
 2440              		.section	.rodata.meas_sign,"a",%progbits
 2441              		.align	2
 2442              		.set	.LANCHOR11,. + 0
 2445              	meas_sign:
 2446 0000 01       		.byte	1
 2447 0001 00       		.byte	0
 2448 0002 00       		.byte	0
 2449 0003 00       		.byte	0
 2450 0004 00       		.byte	0
 2451 0005 00       		.byte	0
 2452              		.section	.rodata.meas_unit,"a",%progbits
 2453              		.align	2
 2454              		.set	.LANCHOR2,. + 0
 2457              	meas_unit:
 2458 0000 6B706100 		.ascii	"kpa\000"
 2459 0004 00       		.space	1
 2460 0005 6B706100 		.ascii	"kpa\000"
 2461 0009 00       		.space	1
 2462 000a 56202000 		.ascii	"V  \000"
 2463 000e 00       		.space	1
 2464 000f B0       		.byte	-80
 2465 0010 43       		.byte	67
 2466 0011 00       		.byte	0
 2467 0012 0000     		.space	2
 2468 0014 B0       		.byte	-80
 2469 0015 43       		.byte	67
 2470 0016 00       		.byte	0
 2471 0017 0000     		.space	2
 2472 0019 5600     		.ascii	"V\000"
 2473 001b 000000   		.space	3
 2474              		.text
 2475              	.Letext0:
 2476              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 2477              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 2478              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2479              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 2480              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 2481              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 2482              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2483              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 2484              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 2485              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 2486              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 2487              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 2488              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 2489              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2c.h"
 2490              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi.h"
 2491              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 2492              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 2493              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 2494              		.file 20 "Inc/adc.h"
 2495              		.file 21 "Inc/can.h"
 2496              		.file 22 "Inc/i2c.h"
 2497              		.file 23 "Inc/spi.h"
 2498              		.file 24 "Inc/tim.h"
 2499              		.file 25 "Inc/usart.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 65


 2500              		.file 26 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 2501              		.file 27 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 2502              		.file 28 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef
 2503              		.file 29 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 2504              		.file 30 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/math.h"
 2505              		.file 31 "/Users/imashio/Electronics/ARM/_Library/u8x8.h"
 2506              		.file 32 "/Users/imashio/Electronics/ARM/_Library/u8g2.h"
 2507              		.file 33 "/Users/imashio/Electronics/ARM/_Library/flag.h"
 2508              		.file 34 "Inc/defi_decoder.h"
 2509              		.file 35 "Inc/pulse_counter.h"
 2510              		.file 36 "Inc/can_obd.h"
 2511              		.file 37 "/Users/imashio/Electronics/ARM/_Library/draw_Value.h"
 2512              		.file 38 "/Users/imashio/Electronics/ARM/_Library/draw_IndicatorBox.h"
 2513              		.file 39 "/Users/imashio/Electronics/ARM/_Library/usart_transmit_printf.h"
 2514              		.file 40 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 2515              		.file 41 "Inc/gsens_ADXL345.h"
 2516              		.file 42 "/Users/imashio/Electronics/ARM/_Library/draw_BarGraph.h"
 2517              		.file 43 "Inc/gpio.h"
 2518              		.file 44 "Inc/dma.h"
 2519              		.file 45 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 2520              		.file 46 "<built-in>"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 66


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:18     .text.draw_indicators:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:26     .text.draw_indicators:0000000000000000 draw_indicators
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:81     .text.draw_indicators:000000000000003c $d
                            *COM*:0000000000000080 u8g2
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:88     .text.draw_MeasLabels:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:96     .text.draw_MeasLabels:0000000000000000 draw_MeasLabels
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:213    .text.draw_MeasLabels:00000000000000d0 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:222    .text.draw_MeasLabels_Rotary:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:230    .text.draw_MeasLabels_Rotary:0000000000000000 draw_MeasLabels_Rotary
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:286    .text.draw_MeasLabels_Rotary:000000000000003c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:293    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:301    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:327    .text.HAL_ADC_ConvCpltCallback:0000000000000018 $d
                            *COM*:0000000000000014 g_ADCBuffer
                            *COM*:0000000000000014 adc
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:333    .text.SystemClock_Config:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:341    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:463    .text.startup.main:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:471    .text.startup.main:0000000000000000 main
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:1003   .text.startup.main:000000000000032c $d
                            *COM*:0000000000000001 Gsens_EN
                            *COM*:0000000000000001 CAN_EN
                            *COM*:0000000000000001 mode
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:1049   .text.startup.main:00000000000003dc $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:1443   .text.startup.main:00000000000006a0 $d
                            *COM*:0000000000000001 setting
                            *COM*:0000000000000002 Gsens_X
                            *COM*:0000000000000002 Gsens_Y
                            *COM*:0000000000000002 Gsens_Z
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:1474   .text.startup.main:000000000000070c $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:1888   .text.startup.main:00000000000009b4 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:1912   .text.Error_Handler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:1920   .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:1988   .data.FP_duty:0000000000000000 FP_duty
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:1995   .data.FP_volt:0000000000000000 FP_volt
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2017   .data.O2_volt:0000000000000000 O2_volt
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2024   .data.meas_value:0000000000000000 meas_value
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2445   .rodata.meas_sign:0000000000000000 meas_sign
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2415   .rodata.meas_frac:0000000000000000 meas_frac
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2403   .rodata.meas_digit:0000000000000000 meas_digit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2457   .rodata.meas_unit:0000000000000000 meas_unit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2427   .rodata.meas_name:0000000000000000 meas_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:1976   .bss.idct_status:0000000000000000 idct_status
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2048   .rodata.idct_name:0000000000000000 idct_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:1964   .bss.cursor:0000000000000000 cursor
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2001   .data.MT:0000000000000000 MT
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:1969   .bss.gear:0000000000000000 gear
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2035   .data.speed:0000000000000000 speed
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:1981   .bss.update_display:0000000000000000 update_display
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2057   .rodata.logo_bits:0000000000000000 logo_bits
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:1965   .bss.cursor:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:1970   .bss.gear:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:1972   .bss.idct_status:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:1982   .bss.update_display:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:1984   .data.FP_duty:0000000000000000 $d
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 67


/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:1991   .data.FP_volt:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:1998   .data.MT:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2013   .data.O2_volt:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2020   .data.meas_value:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2032   .data.speed:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2038   .rodata.draw_MeasLabels.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2044   .rodata.idct_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2053   .rodata.logo_bits:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2347   .rodata.main.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2399   .rodata.meas_digit:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2411   .rodata.meas_frac:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2423   .rodata.meas_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2441   .rodata.meas_sign:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s:2453   .rodata.meas_unit:0000000000000000 $d

UNDEFINED SYMBOLS
draw_IndicatorBox
draw_MeasLabelUnit
draw_Value
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_f2d
__aeabi_ddiv
__aeabi_d2uiz
HAL_Init
memset
MX_GPIO_Init
MX_DMA_Init
MX_ADC1_Init
MX_CAN_Init
MX_I2C1_Init
MX_SPI1_Init
MX_TIM1_Init
MX_TIM2_Init
MX_TIM3_Init
MX_TIM6_Init
MX_USART1_UART_Init
MX_USART2_UART_Init
MX_TIM7_Init
HAL_TIM_PWM_Start
HAL_TIM_Base_Start_IT
HAL_ADC_Start_DMA
HAL_UART_Receive_IT
CAN_OBD_Init
u8g2_Setup_ssd1309_128x64_noname2_f
HAL_GPIO_WritePin
HAL_Delay
u8x8_InitDisplay
u8x8_SetPowerSave
u8x8_SetContrast
u8g2_ClearDisplay
u8g2_DrawXBMP
u8g2_SetFont
u8g2_DrawStr
u8g2_SendBuffer
u8g2_ClearBuffer
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccwge7Dr.s 			page 68


HAL_UART_Transmit_printf
Gsens_ADXL345_Init
CAN_OBD_Response
defi_decoder
HAL_NVIC_DisableIRQ
htim1
htim2
htim3
htim6
htim7
hadc1
DEFI_value
UART1_Data
huart1
u8x8_gpio_and_delay_STM32F303
u8x8_byte_4wire_hw_spi
u8g2_cb_r0
u8g2_font_5x7_tf
huart2
CAN_Received
UART1_RxData
flag_meas
flag_sw
flag_disp
flag_status
rpm
draw_CircularMeter_Init
draw_CircularMeter
Gsens_ADXL345_Read_G
draw_Wave_axis
draw_BarGraph
draw_Wave
draw_Rotary
draw_MeasUnit
u8g2_font_7x14B_tf
