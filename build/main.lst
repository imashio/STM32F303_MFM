ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADXL345_RegWrite,"ax",%progbits
  18              		.align	1
  19              		.global	ADXL345_RegWrite
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	ADXL345_RegWrite:
  26              	.LFB126:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 2


  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  39:Src/main.c    **** #include "main.h"
  40:Src/main.c    **** #include "stm32f3xx_hal.h"
  41:Src/main.c    **** #include "adc.h"
  42:Src/main.c    **** #include "can.h"
  43:Src/main.c    **** #include "dma.h"
  44:Src/main.c    **** #include "i2c.h"
  45:Src/main.c    **** #include "spi.h"
  46:Src/main.c    **** #include "tim.h"
  47:Src/main.c    **** #include "usart.h"
  48:Src/main.c    **** #include "gpio.h"
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN Includes */
  51:Src/main.c    **** #include <stdio.h>
  52:Src/main.c    **** #include <math.h>
  53:Src/main.c    **** 
  54:Src/main.c    **** // #include "basic.h"  // original library
  55:Src/main.c    **** #include "usart_transmit_printf.h"
  56:Src/main.c    **** #include "u8g2.h"		// graphic display library
  57:Src/main.c    **** #include "u8x8_gpio_STM32F303.h"
  58:Src/main.c    **** #include "u8x8_byte_4wire_hw_spi.h"
  59:Src/main.c    **** #include "draw_Value.h"
  60:Src/main.c    **** #include "draw_BarGraph.h"
  61:Src/main.c    **** #include "draw_IndicatorBox.h"
  62:Src/main.c    **** 
  63:Src/main.c    **** #include "flag.h"
  64:Src/main.c    **** #include "defi_decoder.h"
  65:Src/main.c    **** #include "pulse_counter.h"
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END Includes */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE BEGIN PV */
  72:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  73:Src/main.c    **** u8g2_t u8g2; // a structure which will contain all the data for one display
  74:Src/main.c    **** 
  75:Src/main.c    **** // mode definition
  76:Src/main.c    **** #define N_mode        3
  77:Src/main.c    **** 
  78:Src/main.c    **** // RPM bar graph parameter definition
  79:Src/main.c    **** #define	rpmbar_x		  0
  80:Src/main.c    **** #define	rpmbar_y		  0
  81:Src/main.c    **** #define	rpmbar_width	128
  82:Src/main.c    **** #define	rpmbar_height	14
  83:Src/main.c    **** #define	rpm_min			  0
  84:Src/main.c    **** #define	rpm_max			  9000
  85:Src/main.c    **** 
  86:Src/main.c    **** // measurements display parameter definition
  87:Src/main.c    **** // Bar graph
  88:Src/main.c    **** #define	N_meas			  6
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 3


  89:Src/main.c    **** #define	meas_x			  0
  90:Src/main.c    **** #define	meas_y			  16
  91:Src/main.c    **** #define	meas_x_offset	2
  92:Src/main.c    **** #define	meas_width1		70
  93:Src/main.c    **** #define	meas_width2		56
  94:Src/main.c    **** #define	meas_height		12
  95:Src/main.c    **** // Circular Meter
  96:Src/main.c    **** #define	N_meas_C			4
  97:Src/main.c    **** #define	meas_C_x			68
  98:Src/main.c    **** #define	meas_C_y			2
  99:Src/main.c    **** #define	meas_C_x_offset		2
 100:Src/main.c    **** #define	meas_C_width		60
 101:Src/main.c    **** #define	meas_C_height		13
 102:Src/main.c    **** 
 103:Src/main.c    **** // indicators parameter definition
 104:Src/main.c    **** #define	N_idct			  2
 105:Src/main.c    **** #define	idct_x			  72
 106:Src/main.c    **** #define	idct_y			  53
 107:Src/main.c    **** #define	idct_width		27
 108:Src/main.c    **** #define	idct_height		9
 109:Src/main.c    **** 
 110:Src/main.c    **** //  Fuel Pump Voltage dosplay parameter definition
 111:Src/main.c    **** #define	FP_x		    	0
 112:Src/main.c    **** #define	FP_y          52
 113:Src/main.c    **** #define	FP_height	    12
 114:Src/main.c    **** #define	FP_volt_width	45
 115:Src/main.c    **** #define	FP_duty_width	70
 116:Src/main.c    **** 
 117:Src/main.c    **** // wave display parameter definition
 118:Src/main.c    **** #define	wave_x			  0
 119:Src/main.c    **** #define	wave_y			  13
 120:Src/main.c    **** #define	wave_width		128
 121:Src/main.c    **** #define	wave_height		52
 122:Src/main.c    **** #define	wave_value_min	-100
 123:Src/main.c    **** #define	wave_value_max	+200
 124:Src/main.c    **** 
 125:Src/main.c    **** // logo parameter definition (small 'enfini' logo)
 126:Src/main.c    **** #define logo_width    48
 127:Src/main.c    **** #define logo_height   48
 128:Src/main.c    **** 
 129:Src/main.c    **** uint8_t   update_display = 0;
 130:Src/main.c    **** 
 131:Src/main.c    **** const unsigned char logo_bits[] = {
 132:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 133:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 134:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0x3F, 0x00,
 135:Src/main.c    ****   0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x1F, 0x00, 0x80, 0xFF, 0x07,
 136:Src/main.c    ****   0xE0, 0x01, 0x00, 0x80, 0x81, 0x07, 0xE0, 0x01, 0x00, 0x80, 0x81, 0x07,
 137:Src/main.c    ****   0xC0, 0xE1, 0x07, 0xC0, 0x80, 0x03, 0x00, 0xFC, 0x1F, 0xE0, 0x80, 0x03,
 138:Src/main.c    ****   0x00, 0xFE, 0x7F, 0x70, 0xC0, 0x01, 0x00, 0x0F, 0xFE, 0x39, 0xE0, 0x00,
 139:Src/main.c    ****   0x00, 0x07, 0xF8, 0x1F, 0xF0, 0x00, 0x00, 0x0E, 0xE0, 0x1F, 0x78, 0x00,
 140:Src/main.c    ****   0x00, 0x0C, 0xC0, 0xFF, 0x3F, 0x00, 0x00, 0x18, 0x00, 0xFF, 0x1F, 0x00,
 141:Src/main.c    ****   0x00, 0x38, 0xC0, 0xFF, 0x0F, 0x00, 0x00, 0x70, 0xE0, 0xF1, 0x03, 0x00,
 142:Src/main.c    ****   0x00, 0xE0, 0x78, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3F, 0xE0, 0x01, 0x00,
 143:Src/main.c    ****   0x00, 0x80, 0x1F, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00,
 144:Src/main.c    ****   0x00, 0x00, 0x1E, 0x7C, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00,
 145:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00,
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 4


 146:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 147:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 148:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4C, 0x1C, 0x00, 0x00, 0x00,
 149:Src/main.c    ****   0x00, 0x32, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x00, 0x18, 0x00,
 150:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFC, 0x39, 0x00, 0x00, 0x4E, 0xC6, 0xB8, 0x31, 0x00,
 151:Src/main.c    ****   0x00, 0x3E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x3C, 0xC6, 0x98, 0x31, 0x00,
 152:Src/main.c    ****   0x00, 0x0E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x4E, 0xCE, 0x99, 0x31, 0x00,
 153:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFD, 0x7B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 154:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 155:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 156:Src/main.c    ****   };
 157:Src/main.c    **** 
 158:Src/main.c    **** /*
 159:Src/main.c    **** // logo parameter definition (meidium 'enfini' logo)
 160:Src/main.c    **** #define logo_width 54
 161:Src/main.c    **** #define logo_height 48
 162:Src/main.c    **** 
 163:Src/main.c    **** static unsigned char logo_bits[] = {
 164:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0x0F,
 165:Src/main.c    ****   0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0xE0, 0xFF, 0xFF,
 166:Src/main.c    ****   0xFF, 0xFF, 0xFF, 0x01, 0xF8, 0x3F, 0x00, 0x00, 0xF0, 0xFF, 0x07, 0xF8,
 167:Src/main.c    ****   0x01, 0x00, 0x00, 0x70, 0xE0, 0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x80,
 168:Src/main.c    ****   0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00,
 169:Src/main.c    ****   0x38, 0x80, 0x07, 0x00, 0xF8, 0x3F, 0x00, 0x38, 0x80, 0x07, 0x00, 0xFE,
 170:Src/main.c    ****   0xFF, 0x00, 0x1C, 0xC0, 0x03, 0x80, 0xFF, 0xFF, 0x01, 0x0E, 0xC0, 0x01,
 171:Src/main.c    ****   0xC0, 0x07, 0xFC, 0x07, 0x07, 0xE0, 0x01, 0x80, 0x03, 0xF0, 0x9F, 0x03,
 172:Src/main.c    ****   0xF0, 0x00, 0x80, 0x03, 0xC0, 0xFF, 0x03, 0x78, 0x00, 0x00, 0x07, 0x80,
 173:Src/main.c    ****   0xFF, 0x01, 0x3C, 0x00, 0x00, 0x06, 0x00, 0xFE, 0x87, 0x3F, 0x00, 0x00,
 174:Src/main.c    ****   0x0E, 0x00, 0xF8, 0xFF, 0x1F, 0x00, 0x00, 0x1C, 0x00, 0xF8, 0xFF, 0x07,
 175:Src/main.c    ****   0x00, 0x00, 0x38, 0x00, 0xDE, 0xFF, 0x03, 0x00, 0x00, 0x70, 0x00, 0x0F,
 176:Src/main.c    ****   0x7E, 0x00, 0x00, 0x00, 0xE0, 0xC0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xC0,
 177:Src/main.c    ****   0xF1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x00, 0x7C, 0x00, 0x00,
 178:Src/main.c    ****   0x00, 0x00, 0x3F, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x1F,
 179:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x3C, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x78,
 180:Src/main.c    ****   0xE0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0x03, 0x00, 0x00, 0x00,
 181:Src/main.c    ****   0x00, 0xC0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00,
 182:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00,
 183:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x4E, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39,
 184:Src/main.c    ****   0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00,
 185:Src/main.c    ****   0x00, 0x7E, 0x3E, 0xC7, 0x3D, 0x1C, 0x00, 0x00, 0x6F, 0x3E, 0xC7, 0x7F,
 186:Src/main.c    ****   0x1C, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x73, 0x18, 0x00, 0x00, 0x07, 0x1C,
 187:Src/main.c    ****   0x86, 0x71, 0x18, 0x00, 0x00, 0x3E, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00,
 188:Src/main.c    ****   0x1F, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x71, 0x18,
 189:Src/main.c    ****   0x00, 0x00, 0x47, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x7F, 0x3E, 0xCF,
 190:Src/main.c    ****   0xFB, 0x3C, 0x00, 0x00, 0x3C, 0x3E, 0xCF, 0xFB, 0x3C, 0x00, 0x00, 0x00,
 191:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 192:Src/main.c    ****   };
 193:Src/main.c    **** */
 194:Src/main.c    **** 
 195:Src/main.c    **** // uint16_t	rpm = 0;
 196:Src/main.c    **** uint16_t	speed = 240;
 197:Src/main.c    **** uint8_t		gear = 0;
 198:Src/main.c    **** double		MT[5] = {3.483, 2.015, 1.391, 1.000, 0.806};
 199:Src/main.c    **** 
 200:Src/main.c    **** // UI
 201:Src/main.c    **** uint8_t mode;
 202:Src/main.c    **** uint8_t setting;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 5


 203:Src/main.c    **** uint8_t cursor = 0;
 204:Src/main.c    **** 
 205:Src/main.c    **** 
 206:Src/main.c    **** /*
 207:Src/main.c    **** typedef struct {
 208:Src/main.c    **** 	unsigned char	name;
 209:Src/main.c    **** 	uint8_t			status;
 210:Src/main.c    **** } idct;
 211:Src/main.c    **** */
 212:Src/main.c    **** 
 213:Src/main.c    **** // variables for indicators
 214:Src/main.c    **** const unsigned char idct_name[N_idct][5] = { // length must be (text length + 1)
 215:Src/main.c    **** 		"CAN"	,
 216:Src/main.c    **** 		"O2FB"
 217:Src/main.c    **** };
 218:Src/main.c    **** 
 219:Src/main.c    **** const uint8_t	idct_status[N_idct] = {
 220:Src/main.c    **** 		1	,
 221:Src/main.c    **** 		1
 222:Src/main.c    **** };
 223:Src/main.c    **** 
 224:Src/main.c    **** // variables for measurement
 225:Src/main.c    **** const unsigned char meas_name[N_meas][7] = { // length must be (text length + 1)
 226:Src/main.c    **** 		"MAP"	,
 227:Src/main.c    **** 		"OILP"	,
 228:Src/main.c    **** 		"FPV"	,
 229:Src/main.c    **** 		"ECT"	,
 230:Src/main.c    **** 		"OILT"	,
 231:Src/main.c    **** 		"O2"
 232:Src/main.c    **** };
 233:Src/main.c    **** 
 234:Src/main.c    **** const unsigned char meas_unit[N_meas][5] = {
 235:Src/main.c    **** 		"kpa"			,	// MAP
 236:Src/main.c    **** 		"kpa"			,	// OILP
 237:Src/main.c    **** 		"V  "     ,	// FuelPump Voltage
 238:Src/main.c    **** 		{176, 67, 0}	,	// ECT  degC...{176, 67, 0}
 239:Src/main.c    **** 		{176, 67, 0}	,	// OILT  degC...{176, 67, 0}
 240:Src/main.c    **** 		"V"					// O2
 241:Src/main.c    **** };
 242:Src/main.c    **** 
 243:Src/main.c    **** const uint8_t	meas_digit[N_meas] = {
 244:Src/main.c    **** 		3	,	// MAP
 245:Src/main.c    **** 		3	,	// OILP
 246:Src/main.c    **** 		3	,	// FuelPump Voltage
 247:Src/main.c    **** 		3	,	// ECT
 248:Src/main.c    **** 		3	,	// OILT
 249:Src/main.c    **** 		3		// O2
 250:Src/main.c    **** };
 251:Src/main.c    **** 
 252:Src/main.c    **** const uint8_t	meas_frac[N_meas] = {
 253:Src/main.c    **** 		2	,	// MAP
 254:Src/main.c    **** 		1	,	// OILP
 255:Src/main.c    **** 		1	,	// FuelPump Voltage
 256:Src/main.c    **** 		0	,	// ECT
 257:Src/main.c    **** 		0	,	// OILT
 258:Src/main.c    **** 		2		// O2
 259:Src/main.c    **** };
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 6


 260:Src/main.c    **** 
 261:Src/main.c    **** const uint8_t	meas_sign[N_meas] = {
 262:Src/main.c    **** 		1	,	// MAP
 263:Src/main.c    **** 		0	,	// OILP
 264:Src/main.c    **** 		0	,	// FuelPump Voltage
 265:Src/main.c    **** 		0	,	// ECT
 266:Src/main.c    **** 		0	,	// OILT
 267:Src/main.c    **** 		0		// O2
 268:Src/main.c    **** };
 269:Src/main.c    **** 
 270:Src/main.c    **** int16_t	meas_value[N_meas] = {
 271:Src/main.c    **** 		105	,	// MAP
 272:Src/main.c    **** 		235	,	// OILP
 273:Src/main.c    **** 		645	,	// FuelPump Voltage
 274:Src/main.c    **** 		89	,	// ECT
 275:Src/main.c    **** 		73	,	// OILT
 276:Src/main.c    **** 		143		// O2
 277:Src/main.c    **** };
 278:Src/main.c    **** 
 279:Src/main.c    **** // O2 senser Voltage
 280:Src/main.c    **** int16_t O2_volt = 330;
 281:Src/main.c    **** 
 282:Src/main.c    **** // Fuel Pump Voltage
 283:Src/main.c    **** int16_t FP_volt = 330;
 284:Src/main.c    **** int16_t FP_duty = 100;
 285:Src/main.c    **** 
 286:Src/main.c    **** uint8_t   Gsens_X1;
 287:Src/main.c    **** uint8_t   Gsens_X0;
 288:Src/main.c    **** int16_t   Gsens_X;
 289:Src/main.c    **** uint8_t   Gsens_Y1;
 290:Src/main.c    **** uint8_t   Gsens_Y0;
 291:Src/main.c    **** int16_t   Gsens_Y;
 292:Src/main.c    **** uint8_t   Gsens_Z1;
 293:Src/main.c    **** uint8_t   Gsens_Z0;
 294:Src/main.c    **** int16_t   Gsens_Z;
 295:Src/main.c    **** 
 296:Src/main.c    **** #define ADXL0_ADDR 0x1D
 297:Src/main.c    **** // ADXL345     I2C
 298:Src/main.c    **** // SDO/ALT   Address
 299:Src/main.c    **** //    H        0x1D
 300:Src/main.c    **** //    L        0x53
 301:Src/main.c    **** 
 302:Src/main.c    **** void ADXL345_RegWrite(uint8_t slv_addr, uint8_t addr, uint8_t data){
  28              		.loc 1 302 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 00B5     		push	{lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 14, -4
  37 0002 85B0     		sub	sp, sp, #20
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
 303:Src/main.c    ****   uint8_t i2c_buf[2];
 304:Src/main.c    ****   i2c_buf[0] = addr;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 7


  40              		.loc 1 304 0
  41 0004 8DF80C10 		strb	r1, [sp, #12]
 305:Src/main.c    ****   i2c_buf[1] = data;  
  42              		.loc 1 305 0
  43 0008 8DF80D20 		strb	r2, [sp, #13]
 306:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1, slv_addr << 1, &i2c_buf, 2, 10);
  44              		.loc 1 306 0
  45 000c 0A23     		movs	r3, #10
  46 000e 0093     		str	r3, [sp]
  47 0010 0223     		movs	r3, #2
  48 0012 03AA     		add	r2, sp, #12
  49              	.LVL1:
  50 0014 4100     		lsls	r1, r0, #1
  51              	.LVL2:
  52 0016 0348     		ldr	r0, .L3
  53              	.LVL3:
  54 0018 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
  55              	.LVL4:
 307:Src/main.c    **** }
  56              		.loc 1 307 0
  57 001c 05B0     		add	sp, sp, #20
  58              	.LCFI2:
  59              		.cfi_def_cfa_offset 4
  60              		@ sp needed
  61 001e 5DF804FB 		ldr	pc, [sp], #4
  62              	.L4:
  63 0022 00BF     		.align	2
  64              	.L3:
  65 0024 00000000 		.word	hi2c1
  66              		.cfi_endproc
  67              	.LFE126:
  69              		.section	.text.ADXL345_RegRead_1byte,"ax",%progbits
  70              		.align	1
  71              		.global	ADXL345_RegRead_1byte
  72              		.syntax unified
  73              		.thumb
  74              		.thumb_func
  75              		.fpu fpv4-sp-d16
  77              	ADXL345_RegRead_1byte:
  78              	.LFB127:
 308:Src/main.c    **** 
 309:Src/main.c    **** uint8_t ADXL345_RegRead_1byte(uint8_t slv_addr, uint8_t addr){
  79              		.loc 1 309 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 16
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              	.LVL5:
  84 0000 70B5     		push	{r4, r5, r6, lr}
  85              	.LCFI3:
  86              		.cfi_def_cfa_offset 16
  87              		.cfi_offset 4, -16
  88              		.cfi_offset 5, -12
  89              		.cfi_offset 6, -8
  90              		.cfi_offset 14, -4
  91 0002 86B0     		sub	sp, sp, #24
  92              	.LCFI4:
  93              		.cfi_def_cfa_offset 40
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 8


  94 0004 06AA     		add	r2, sp, #24
  95 0006 02F8091D 		strb	r1, [r2, #-9]!
 310:Src/main.c    ****   uint8_t data;
 311:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1, slv_addr << 1, &addr, 1, 10);
  96              		.loc 1 311 0
  97 000a 4500     		lsls	r5, r0, #1
  98 000c 094C     		ldr	r4, .L7
  99 000e 0A26     		movs	r6, #10
 100 0010 0096     		str	r6, [sp]
 101 0012 0123     		movs	r3, #1
 102 0014 2946     		mov	r1, r5
 103              	.LVL6:
 104 0016 2046     		mov	r0, r4
 105              	.LVL7:
 106 0018 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 107              	.LVL8:
 312:Src/main.c    ****   HAL_I2C_Master_Receive(&hi2c1, slv_addr << 1, &data, 1, 10);
 108              		.loc 1 312 0
 109 001c 0096     		str	r6, [sp]
 110 001e 0123     		movs	r3, #1
 111 0020 0DF11702 		add	r2, sp, #23
 112 0024 2946     		mov	r1, r5
 113 0026 2046     		mov	r0, r4
 114 0028 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 115              	.LVL9:
 313:Src/main.c    ****   return data;
 314:Src/main.c    **** }
 116              		.loc 1 314 0
 117 002c 9DF81700 		ldrb	r0, [sp, #23]	@ zero_extendqisi2
 118 0030 06B0     		add	sp, sp, #24
 119              	.LCFI5:
 120              		.cfi_def_cfa_offset 16
 121              		@ sp needed
 122 0032 70BD     		pop	{r4, r5, r6, pc}
 123              	.L8:
 124              		.align	2
 125              	.L7:
 126 0034 00000000 		.word	hi2c1
 127              		.cfi_endproc
 128              	.LFE127:
 130              		.section	.text.draw_indicators,"ax",%progbits
 131              		.align	1
 132              		.global	draw_indicators
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 136              		.fpu fpv4-sp-d16
 138              	draw_indicators:
 139              	.LFB128:
 315:Src/main.c    **** /* USER CODE END PV */
 316:Src/main.c    **** 
 317:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 318:Src/main.c    **** void SystemClock_Config(void);
 319:Src/main.c    **** 
 320:Src/main.c    **** /* USER CODE BEGIN PFP */
 321:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 322:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 9


 323:Src/main.c    **** /* USER CODE END PFP */
 324:Src/main.c    **** 
 325:Src/main.c    **** /* USER CODE BEGIN 0 */
 326:Src/main.c    **** void draw_indicators(){
 140              		.loc 1 326 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144 0000 10B5     		push	{r4, lr}
 145              	.LCFI6:
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 4, -8
 148              		.cfi_offset 14, -4
 149 0002 84B0     		sub	sp, sp, #16
 150              	.LCFI7:
 151              		.cfi_def_cfa_offset 24
 152              	.LVL10:
 327:Src/main.c    ****   uint8_t n;
 328:Src/main.c    ****   uint8_t x, y;
 329:Src/main.c    ****   // draw indicators
 330:Src/main.c    ****   for( n=0; n<N_idct; n++ ){
 153              		.loc 1 330 0
 154 0004 0024     		movs	r4, #0
 155 0006 16E0     		b	.L10
 156              	.LVL11:
 157              	.L11:
 331:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
 158              		.loc 1 331 0 discriminator 3
 159 0008 04EB8402 		add	r2, r4, r4, lsl #2
 160 000c 0C4B     		ldr	r3, .L13
 161 000e 1344     		add	r3, r3, r2
 162 0010 C4EBC401 		rsb	r1, r4, r4, lsl #3
 163 0014 04EB8101 		add	r1, r4, r1, lsl #2
 164 0018 4831     		adds	r1, r1, #72
 165 001a 0293     		str	r3, [sp, #8]
 166 001c 094B     		ldr	r3, .L13+4
 167 001e 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 168 0020 0193     		str	r3, [sp, #4]
 169 0022 0923     		movs	r3, #9
 170 0024 0093     		str	r3, [sp]
 171 0026 1B23     		movs	r3, #27
 172 0028 3522     		movs	r2, #53
 173 002a C9B2     		uxtb	r1, r1
 174 002c 0648     		ldr	r0, .L13+8
 175 002e FFF7FEFF 		bl	draw_IndicatorBox
 176              	.LVL12:
 330:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
 177              		.loc 1 330 0 discriminator 3
 178 0032 0134     		adds	r4, r4, #1
 179              	.LVL13:
 180 0034 E4B2     		uxtb	r4, r4
 181              	.LVL14:
 182              	.L10:
 330:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
 183              		.loc 1 330 0 is_stmt 0 discriminator 1
 184 0036 012C     		cmp	r4, #1
 185 0038 E6D9     		bls	.L11
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 10


 332:Src/main.c    ****   }
 333:Src/main.c    **** }
 186              		.loc 1 333 0 is_stmt 1
 187 003a 04B0     		add	sp, sp, #16
 188              	.LCFI8:
 189              		.cfi_def_cfa_offset 8
 190              		@ sp needed
 191 003c 10BD     		pop	{r4, pc}
 192              	.LVL15:
 193              	.L14:
 194 003e 00BF     		.align	2
 195              	.L13:
 196 0040 00000000 		.word	.LANCHOR0
 197 0044 00000000 		.word	.LANCHOR1
 198 0048 00000000 		.word	u8g2
 199              		.cfi_endproc
 200              	.LFE128:
 202              		.section	.text.draw_MeasLabels,"ax",%progbits
 203              		.align	1
 204              		.global	draw_MeasLabels
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu fpv4-sp-d16
 210              	draw_MeasLabels:
 211              	.LFB129:
 334:Src/main.c    **** 
 335:Src/main.c    **** void draw_MeasLabels(){
 212              		.loc 1 335 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216 0000 70B5     		push	{r4, r5, r6, lr}
 217              	.LCFI9:
 218              		.cfi_def_cfa_offset 16
 219              		.cfi_offset 4, -16
 220              		.cfi_offset 5, -12
 221              		.cfi_offset 6, -8
 222              		.cfi_offset 14, -4
 223 0002 86B0     		sub	sp, sp, #24
 224              	.LCFI10:
 225              		.cfi_def_cfa_offset 40
 226              	.LVL16:
 336:Src/main.c    ****   uint8_t n;
 337:Src/main.c    ****   uint8_t x, y;
 338:Src/main.c    ****   // draw measurements label & unit
 339:Src/main.c    ****   for( n=0; n<3; n++ ){
 227              		.loc 1 339 0
 228 0004 0024     		movs	r4, #0
 229 0006 20E0     		b	.L16
 230              	.LVL17:
 231              	.L17:
 340:Src/main.c    **** 	  x = meas_x;
 341:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 232              		.loc 1 341 0 discriminator 3
 233 0008 324B     		ldr	r3, .L21
 234 000a A3FB0423 		umull	r2, r3, r3, r4
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 11


 235 000e 5B08     		lsrs	r3, r3, #1
 236 0010 03EB4303 		add	r3, r3, r3, lsl #1
 237 0014 E31A     		subs	r3, r4, r3
 238 0016 03EB4303 		add	r3, r3, r3, lsl #1
 239 001a 9A00     		lsls	r2, r3, #2
 240 001c D2B2     		uxtb	r2, r2
 241 001e 1032     		adds	r2, r2, #16
 242              	.LVL18:
 342:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width1, meas_height, meas_name[n], meas_unit[n]);
 243              		.loc 1 342 0 discriminator 3
 244 0020 C4EBC401 		rsb	r1, r4, r4, lsl #3
 245 0024 2C4B     		ldr	r3, .L21+4
 246 0026 0B44     		add	r3, r3, r1
 247 0028 04EB8400 		add	r0, r4, r4, lsl #2
 248 002c 2B49     		ldr	r1, .L21+8
 249 002e 0144     		add	r1, r1, r0
 250 0030 0291     		str	r1, [sp, #8]
 251 0032 0193     		str	r3, [sp, #4]
 252 0034 0C23     		movs	r3, #12
 253 0036 0093     		str	r3, [sp]
 254 0038 4623     		movs	r3, #70
 255 003a 02F0FC02 		and	r2, r2, #252
 256              	.LVL19:
 257 003e 0021     		movs	r1, #0
 258 0040 2748     		ldr	r0, .L21+12
 259 0042 FFF7FEFF 		bl	draw_MeasLabelUnit
 260              	.LVL20:
 339:Src/main.c    **** 	  x = meas_x;
 261              		.loc 1 339 0 discriminator 3
 262 0046 0134     		adds	r4, r4, #1
 263              	.LVL21:
 264 0048 E4B2     		uxtb	r4, r4
 265              	.LVL22:
 266              	.L16:
 339:Src/main.c    **** 	  x = meas_x;
 267              		.loc 1 339 0 is_stmt 0 discriminator 1
 268 004a 022C     		cmp	r4, #2
 269 004c DCD9     		bls	.L17
 343:Src/main.c    ****   }
 344:Src/main.c    ****   for( n=3; n<N_meas; n++ ){
 270              		.loc 1 344 0 is_stmt 1
 271 004e 0324     		movs	r4, #3
 272              	.LVL23:
 273 0050 20E0     		b	.L18
 274              	.LVL24:
 275              	.L19:
 345:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 346:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 276              		.loc 1 346 0 discriminator 3
 277 0052 204B     		ldr	r3, .L21
 278 0054 A3FB0423 		umull	r2, r3, r3, r4
 279 0058 5B08     		lsrs	r3, r3, #1
 280 005a 03EB4303 		add	r3, r3, r3, lsl #1
 281 005e E31A     		subs	r3, r4, r3
 282 0060 03EB4303 		add	r3, r3, r3, lsl #1
 283 0064 9A00     		lsls	r2, r3, #2
 284 0066 D2B2     		uxtb	r2, r2
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 12


 285 0068 1032     		adds	r2, r2, #16
 286              	.LVL25:
 347:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width2, meas_height, meas_name[n], meas_unit[n]);
 287              		.loc 1 347 0 discriminator 3
 288 006a C4EBC401 		rsb	r1, r4, r4, lsl #3
 289 006e 1A4B     		ldr	r3, .L21+4
 290 0070 0B44     		add	r3, r3, r1
 291 0072 04EB8400 		add	r0, r4, r4, lsl #2
 292 0076 1949     		ldr	r1, .L21+8
 293 0078 0144     		add	r1, r1, r0
 294 007a 0291     		str	r1, [sp, #8]
 295 007c 0193     		str	r3, [sp, #4]
 296 007e 0C23     		movs	r3, #12
 297 0080 0093     		str	r3, [sp]
 298 0082 3823     		movs	r3, #56
 299 0084 02F0FC02 		and	r2, r2, #252
 300              	.LVL26:
 301 0088 4821     		movs	r1, #72
 302 008a 1548     		ldr	r0, .L21+12
 303 008c FFF7FEFF 		bl	draw_MeasLabelUnit
 304              	.LVL27:
 344:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 305              		.loc 1 344 0 discriminator 3
 306 0090 0134     		adds	r4, r4, #1
 307              	.LVL28:
 308 0092 E4B2     		uxtb	r4, r4
 309              	.LVL29:
 310              	.L18:
 344:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 311              		.loc 1 344 0 is_stmt 0 discriminator 1
 312 0094 052C     		cmp	r4, #5
 313 0096 DCD9     		bls	.L19
 348:Src/main.c    ****   }
 349:Src/main.c    **** 
 350:Src/main.c    ****   // Fuel Pump voltage & duty
 351:Src/main.c    ****   draw_MeasLabelUnit(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, "DUTY", "%  ");
 314              		.loc 1 351 0 is_stmt 1
 315 0098 114C     		ldr	r4, .L21+12
 316              	.LVL30:
 317 009a 124E     		ldr	r6, .L21+16
 318 009c 0296     		str	r6, [sp, #8]
 319 009e 124B     		ldr	r3, .L21+20
 320 00a0 0193     		str	r3, [sp, #4]
 321 00a2 0C25     		movs	r5, #12
 322 00a4 0095     		str	r5, [sp]
 323 00a6 4623     		movs	r3, #70
 324 00a8 3422     		movs	r2, #52
 325 00aa 0021     		movs	r1, #0
 326 00ac 2046     		mov	r0, r4
 327 00ae FFF7FEFF 		bl	draw_MeasLabelUnit
 328              	.LVL31:
 352:Src/main.c    ****   draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, 100, 3, 0, 0, "%  ");
 329              		.loc 1 352 0
 330 00b2 0596     		str	r6, [sp, #20]
 331 00b4 0021     		movs	r1, #0
 332 00b6 0491     		str	r1, [sp, #16]
 333 00b8 0391     		str	r1, [sp, #12]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 13


 334 00ba 0323     		movs	r3, #3
 335 00bc 0293     		str	r3, [sp, #8]
 336 00be 6423     		movs	r3, #100
 337 00c0 0193     		str	r3, [sp, #4]
 338 00c2 0095     		str	r5, [sp]
 339 00c4 4623     		movs	r3, #70
 340 00c6 3422     		movs	r2, #52
 341 00c8 2046     		mov	r0, r4
 342 00ca FFF7FEFF 		bl	draw_Value
 343              	.LVL32:
 353:Src/main.c    **** }
 344              		.loc 1 353 0
 345 00ce 06B0     		add	sp, sp, #24
 346              	.LCFI11:
 347              		.cfi_def_cfa_offset 16
 348              		@ sp needed
 349 00d0 70BD     		pop	{r4, r5, r6, pc}
 350              	.L22:
 351 00d2 00BF     		.align	2
 352              	.L21:
 353 00d4 ABAAAAAA 		.word	-1431655765
 354 00d8 00000000 		.word	.LANCHOR2
 355 00dc 00000000 		.word	.LANCHOR3
 356 00e0 00000000 		.word	u8g2
 357 00e4 00000000 		.word	.LC0
 358 00e8 04000000 		.word	.LC1
 359              		.cfi_endproc
 360              	.LFE129:
 362              		.section	.text._Error_Handler,"ax",%progbits
 363              		.align	1
 364              		.global	_Error_Handler
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 368              		.fpu fpv4-sp-d16
 370              	_Error_Handler:
 371              	.LFB132:
 354:Src/main.c    **** 
 355:Src/main.c    **** /* USER CODE END 0 */
 356:Src/main.c    **** 
 357:Src/main.c    **** int main(void)
 358:Src/main.c    **** {
 359:Src/main.c    **** 
 360:Src/main.c    ****   /* USER CODE BEGIN 1 */
 361:Src/main.c    **** 
 362:Src/main.c    ****   /* USER CODE END 1 */
 363:Src/main.c    **** 
 364:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 365:Src/main.c    **** 
 366:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 367:Src/main.c    ****   HAL_Init();
 368:Src/main.c    **** 
 369:Src/main.c    ****   /* USER CODE BEGIN Init */
 370:Src/main.c    ****   uint8_t n;
 371:Src/main.c    ****   uint8_t x, y;
 372:Src/main.c    **** 
 373:Src/main.c    ****   uint16_t a = 0; // for dummy data
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 14


 374:Src/main.c    ****   uint16_t b = 0; // for dummy data
 375:Src/main.c    **** 
 376:Src/main.c    ****   // circular buffer for ADC data
 377:Src/main.c    ****   uint16_t circular_buffer_index = 0;
 378:Src/main.c    ****   int16_t circular_buffer[128]={};
 379:Src/main.c    **** 
 380:Src/main.c    ****   /* USER CODE END Init */
 381:Src/main.c    **** 
 382:Src/main.c    ****   /* Configure the system clock */
 383:Src/main.c    ****   SystemClock_Config();
 384:Src/main.c    **** 
 385:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 386:Src/main.c    **** 
 387:Src/main.c    ****   /* USER CODE END SysInit */
 388:Src/main.c    **** 
 389:Src/main.c    ****   /* Initialize all configured peripherals */
 390:Src/main.c    ****   MX_GPIO_Init();
 391:Src/main.c    ****   MX_DMA_Init();
 392:Src/main.c    ****   MX_USART2_UART_Init();
 393:Src/main.c    ****   MX_TIM1_Init();
 394:Src/main.c    ****   MX_USART1_UART_Init();
 395:Src/main.c    ****   MX_SPI1_Init();
 396:Src/main.c    ****   MX_ADC1_Init();
 397:Src/main.c    ****   MX_TIM2_Init();
 398:Src/main.c    ****   MX_CAN_Init();
 399:Src/main.c    ****   MX_TIM6_Init();
 400:Src/main.c    ****   MX_I2C1_Init();
 401:Src/main.c    ****   MX_TIM3_Init();
 402:Src/main.c    **** 
 403:Src/main.c    ****   /* USER CODE BEGIN 2 */
 404:Src/main.c    **** 
 405:Src/main.c    ****   ///// PWM initialize ----------------------------------------------------------------
 406:Src/main.c    **** 
 407:Src/main.c    ****   ///// Timer /////
 408:Src/main.c    ****   // TIM1 - PWM for Fuel Pump Driver (Cycle 100kHz = 1MHz / 100count)
 409:Src/main.c    ****   /*
 410:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim1) != HAL_OK)
 411:Src/main.c    ****   {
 412:Src/main.c    ****     Error_Handler();
 413:Src/main.c    ****   }
 414:Src/main.c    ****   */
 415:Src/main.c    ****   // Start Timer1 / ch1
 416:Src/main.c    ****   if (HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1) != HAL_OK)
 417:Src/main.c    ****   {
 418:Src/main.c    ****     Error_Handler();
 419:Src/main.c    ****   }
 420:Src/main.c    **** 
 421:Src/main.c    ****   // TIM2 - display (Cycle 20ms = 1/100kHz x 2,000count)
 422:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim2) != HAL_OK)
 423:Src/main.c    ****   {
 424:Src/main.c    ****     Error_Handler();
 425:Src/main.c    ****   }
 426:Src/main.c    **** 
 427:Src/main.c    ****   // TIM3 - Pulse counter for Tacho (f 200kHz, count 65535)
 428:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim3) != HAL_OK)
 429:Src/main.c    ****   {
 430:Src/main.c    ****     Error_Handler();
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 15


 431:Src/main.c    ****   }
 432:Src/main.c    **** 
 433:Src/main.c    ****   // TIM6 - SW interrupt control (Cycle 100ms = 1/100kHz x 10,000count)
 434:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim6) != HAL_OK)
 435:Src/main.c    ****   {
 436:Src/main.c    ****     Error_Handler();
 437:Src/main.c    ****   }
 438:Src/main.c    **** 
 439:Src/main.c    ****   // UART1 interrupt setup for DEFI decoder
 440:Src/main.c    ****   HAL_UART_Receive_IT(&huart1, &UART1_Data, 1);
 441:Src/main.c    ****   // variables is defined in 'defi.h'
 442:Src/main.c    **** 
 443:Src/main.c    **** 
 444:Src/main.c    ****   // ADC (for PA0) buffer definition
 445:Src/main.c    ****   enum{ ADC_BUFFER_LENGTH = 1024 };
 446:Src/main.c    ****   uint16_t g_ADCBuffer[ADC_BUFFER_LENGTH];
 447:Src/main.c    ****   memset(g_ADCBuffer, 0, sizeof(g_ADCBuffer));
 448:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, g_ADCBuffer, ADC_BUFFER_LENGTH);
 449:Src/main.c    **** 
 450:Src/main.c    **** 
 451:Src/main.c    ****   // OLED diaplay initialization
 452:Src/main.c    ****   u8g2_Setup_ssd1309_128x64_noname2_f(&u8g2, U8G2_R0, u8x8_byte_4wire_hw_spi, u8x8_gpio_and_delay_S
 453:Src/main.c    **** 
 454:Src/main.c    ****   // OLED display Reset (must be more than 3us!!)
 455:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 0); // Set RES=L (OLED Reset)
 456:Src/main.c    ****   HAL_Delay(5);
 457:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 458:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 459:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 460:Src/main.c    ****   u8g2_SetContrast(&u8g2, 255); // set contrast
 461:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 462:Src/main.c    **** 
 463:Src/main.c    ****   // draw opening
 464:Src/main.c    ****   u8g2_DrawXBMP(&u8g2, 40, 0, logo_width, logo_height, logo_bits );
 465:Src/main.c    **** 
 466:Src/main.c    ****   u8g2_SetFont(&u8g2, u8g2_font_5x7_tf);
 467:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 468:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.1a");
 469:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 470:Src/main.c    **** 
 471:Src/main.c    ****   HAL_Delay(500);
 472:Src/main.c    **** //  HAL_Delay(2000);
 473:Src/main.c    **** 
 474:Src/main.c    ****   u8g2_ClearBuffer(&u8g2);
 475:Src/main.c    **** 
 476:Src/main.c    ****   HAL_UART_Transmit_printf(&huart2, "Hello. This is MFM.\n");
 477:Src/main.c    **** 
 478:Src/main.c    ****   // Set PWM Duty for Timer1 / Output1 (Asymmetric PWM2)
 479:Src/main.c    ****   TIM1->CCR1 = (100 - FP_duty);
 480:Src/main.c    **** 
 481:Src/main.c    ****   /* USER CODE END 2 */
 482:Src/main.c    **** 
 483:Src/main.c    ****   /* Infinite loop */
 484:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 485:Src/main.c    **** 
 486:Src/main.c    ****   draw_MeasLabels();
 487:Src/main.c    ****   draw_indicators();
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 16


 488:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 489:Src/main.c    **** 
 490:Src/main.c    **** 
 491:Src/main.c    ****   // I2C communication to ADXL345(3-axis G-sensor)
 492:Src/main.c    ****   a = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x00); // DEIVID
 493:Src/main.c    ****   ADXL345_RegWrite(ADXL0_ADDR, 0x2D, 0x08); // Enable 'Measure' at "POWER_CTL"
 494:Src/main.c    ****   a = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x2D); // Check "POWER_CTL"
 495:Src/main.c    **** 
 496:Src/main.c    **** 
 497:Src/main.c    ****   while(1)
 498:Src/main.c    ****   {
 499:Src/main.c    ****   /* USER CODE END WHILE */
 500:Src/main.c    **** 
 501:Src/main.c    ****   /* USER CODE BEGIN 3 */
 502:Src/main.c    **** 
 503:Src/main.c    ****     ///// ADC ----------------------------------------------------------------
 504:Src/main.c    **** 		// read O2 sensor ADC output
 505:Src/main.c    **** 		O2_volt = (int16_t)(330 * (float)g_ADCBuffer[0]/255);
 506:Src/main.c    **** 
 507:Src/main.c    **** 		// read Fuel Pump Voltage ADC output
 508:Src/main.c    **** 		FP_volt = (int16_t)((165/33)*33*(float)g_ADCBuffer[0]/255);
 509:Src/main.c    ****     // Ressister attenation ratio '165/33'
 510:Src/main.c    ****     FP_duty = (int16_t)(FP_volt/(16.6)*10);
 511:Src/main.c    **** 
 512:Src/main.c    ****     //// Measure data  ----------------------------------------------------------------
 513:Src/main.c    ****     defi_decoder(UART1_RxData); // DEFI decoder
 514:Src/main.c    **** 
 515:Src/main.c    ****     if( flag_meas == 1 ){
 516:Src/main.c    **** 
 517:Src/main.c    ****       // I2C communication to ADXL345(3-axis G-sensor)
 518:Src/main.c    ****       Gsens_X1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x33); // Check "DATAX1" (MSB side)
 519:Src/main.c    ****       Gsens_X0 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x32); // Check "DATAX0" (LSB side)
 520:Src/main.c    ****       Gsens_X = (Gsens_X1<<8) | Gsens_X0;
 521:Src/main.c    ****       Gsens_Y1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x35); // Check "DATAY1" (MSB side)
 522:Src/main.c    ****       Gsens_Y0 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x34); // Check "DATAY0" (LSB side)
 523:Src/main.c    ****       Gsens_Y = (Gsens_Y1<<8) | Gsens_Y0;
 524:Src/main.c    ****       Gsens_Z1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x37); // Check "DATAZ1" (MSB side)
 525:Src/main.c    ****       Gsens_Z0 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x36); // Check "DATAZ0" (LSB side)
 526:Src/main.c    ****       Gsens_Z = (Gsens_Z1<<8) | Gsens_Z0;
 527:Src/main.c    ****       HAL_UART_Transmit_printf(&huart2, "(%d,%d,%d)\n", Gsens_X, Gsens_Y, Gsens_Z); // debug
 528:Src/main.c    **** 
 529:Src/main.c    **** /*
 530:Src/main.c    ****   	  // start of create dummy data for debug
 531:Src/main.c    ****       if( rpm <= 8200 ){
 532:Src/main.c    ****           rpm = rpm + (int)(20*MT[gear]);
 533:Src/main.c    ****           //rpm=rpm+10;
 534:Src/main.c    ****       }else{
 535:Src/main.c    ****         if( gear < 4 ){
 536:Src/main.c    ****           gear++;
 537:Src/main.c    ****           rpm = (double)speed / (0.002*60.0) * (MT[gear]*4.1);
 538:Src/main.c    ****         }else{
 539:Src/main.c    ****           gear = 0;
 540:Src/main.c    ****           rpm = 1000;
 541:Src/main.c    ****         }
 542:Src/main.c    ****       }
 543:Src/main.c    ****       speed = (double)rpm*0.002*60.0/MT[gear]/4.1;
 544:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 17


 545:Src/main.c    ****       if( a >= 150){
 546:Src/main.c    ****         a = 0;
 547:Src/main.c    ****       }else{
 548:Src/main.c    ****         a++;
 549:Src/main.c    ****       }
 550:Src/main.c    ****   	  // end of create dummy data for debug
 551:Src/main.c    **** */
 552:Src/main.c    ****       meas_value[0] = DEFI_value[0];  // MAP
 553:Src/main.c    **** 		  meas_value[1] = DEFI_value[2];  // OILP
 554:Src/main.c    **** 			meas_value[2] = FP_volt;        // FuelPump Voltage
 555:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 556:Src/main.c    **** 			meas_value[4] = DEFI_value[5];  // OILT
 557:Src/main.c    **** 		  meas_value[5] = O2_volt;        // O2
 558:Src/main.c    **** 
 559:Src/main.c    **** 
 560:Src/main.c    ****       flag_meas = 0; // enable again by TIM2 interrupt
 561:Src/main.c    ****     }
 562:Src/main.c    **** 
 563:Src/main.c    ****     ///// FP driver ----------------------------------------------------------------
 564:Src/main.c    ****     // Set PWM Duty for Timer1 / Output1 (Asymmetric PWM2)
 565:Src/main.c    ****     TIM1->CCR1 = (100 - FP_duty);
 566:Src/main.c    **** 
 567:Src/main.c    ****     ///// Switch ----------------------------------------------------------------
 568:Src/main.c    ****     if( flag_sw != 0 ){
 569:Src/main.c    ****       switch( flag_sw ){
 570:Src/main.c    ****         case 1:
 571:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "UP ");
 572:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 573:Src/main.c    ****           // SW "UP"
 574:Src/main.c    ****           if( setting == 0 ){
 575:Src/main.c    ****             if( mode == N_mode-1 ){
 576:Src/main.c    ****               mode = 0;
 577:Src/main.c    ****             }else{
 578:Src/main.c    ****               mode++;
 579:Src/main.c    ****             }
 580:Src/main.c    ****           }
 581:Src/main.c    ****           break;
 582:Src/main.c    ****         case 2:
 583:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "DOWN ");
 584:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 585:Src/main.c    ****           // SW "DOWN"
 586:Src/main.c    ****           if( setting == 0 ){
 587:Src/main.c    ****             if( mode == 0 ){
 588:Src/main.c    ****               mode = N_mode-1;
 589:Src/main.c    ****             }else{
 590:Src/main.c    ****               mode--;
 591:Src/main.c    ****             }
 592:Src/main.c    ****           }
 593:Src/main.c    ****           break;
 594:Src/main.c    ****         case 3:
 595:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "ENTER ");
 596:Src/main.c    ****           HAL_NVIC_DisableIRQ (EXTI1_IRQn);
 597:Src/main.c    ****           // SW "ENTER"
 598:Src/main.c    **** 
 599:Src/main.c    ****           // if( setting == 0 ){
 600:Src/main.c    ****           //   mode = cursor;
 601:Src/main.c    ****           //   u8g2_ClearBuffer(&u8g2);
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 18


 602:Src/main.c    ****           // }else{
 603:Src/main.c    ****           //   mode = 10;
 604:Src/main.c    ****           // }
 605:Src/main.c    ****           // break;
 606:Src/main.c    **** 
 607:Src/main.c    ****         default:
 608:Src/main.c    ****           break;
 609:Src/main.c    ****       }
 610:Src/main.c    ****       u8g2_ClearBuffer(&u8g2);
 611:Src/main.c    ****       if( mode == 0 ){
 612:Src/main.c    ****         draw_MeasLabels();
 613:Src/main.c    ****         draw_indicators();
 614:Src/main.c    **** 
 615:Src/main.c    ****       }else if( mode == 1 ){
 616:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 617:Src/main.c    ****           x = meas_C_x;
 618:Src/main.c    ****           y = n * meas_C_height	+ meas_C_y;
 619:Src/main.c    ****           draw_MeasLabelUnit(&u8g2, x, y, meas_C_width, meas_C_height, meas_name[n], meas_unit[n]);
 620:Src/main.c    ****         }
 621:Src/main.c    ****         // draw indicators
 622:Src/main.c    ****         for( n=0; n<4; n++ ){
 623:Src/main.c    ****           draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_s
 624:Src/main.c    ****         }
 625:Src/main.c    ****         draw_CircularMeter_Init(32, 32, 31, 3, -60, 300, 10, 20, -1, -80, 120);
 626:Src/main.c    **** //        draw_CircularMeter_Init(26, 26, 26, 3, -60, 300, 10, 20, -1, -80, 120);
 627:Src/main.c    ****         draw_CircularMeter(&u8g2, 0);
 628:Src/main.c    **** 
 629:Src/main.c    ****       }else if( mode == 2 ){
 630:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_m
 631:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "MAP", "kPa");
 632:Src/main.c    **** 
 633:Src/main.c    ****       }
 634:Src/main.c    ****       u8g2_SendBuffer(&u8g2);
 635:Src/main.c    ****       TIM6->CNT = 0;
 636:Src/main.c    ****       flag_sw = 0;
 637:Src/main.c    ****     }
 638:Src/main.c    **** 
 639:Src/main.c    ****     ///// Display sequence ----------------------------------------------------------------
 640:Src/main.c    ****     if( flag_disp == 1 ){
 641:Src/main.c    ****       ///// multi meter /////
 642:Src/main.c    ****       if( mode == 0 ){
 643:Src/main.c    ****         // update Fuel Pump Voltage
 644:Src/main.c    ****         draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, FP_duty, 3, 0, 0, "%  ");
 645:Src/main.c    **** 
 646:Src/main.c    ****         // draw bar graph
 647:Src/main.c    ****         draw_BarGraph(&u8g2, rpmbar_x, rpmbar_y, rpmbar_width, rpmbar_height, rpm, rpm_min, rpm_max
 648:Src/main.c    **** 
 649:Src/main.c    ****         // draw measurement data
 650:Src/main.c    ****         for( n=0; n<3; n++ ){
 651:Src/main.c    ****           x = meas_x;
 652:Src/main.c    ****           y = (n % 3) * meas_height	+ meas_y;
 653:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac
 654:Src/main.c    ****         }
 655:Src/main.c    ****         for( n=3; n<N_meas; n++ ){
 656:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 657:Src/main.c    ****           y = (n % 3) * meas_height	+ meas_y;
 658:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 19


 659:Src/main.c    ****         }
 660:Src/main.c    ****         
 661:Src/main.c    ****       ///// Circular Meter /////
 662:Src/main.c    ****       }else if( mode == 1 ){
 663:Src/main.c    **** 
 664:Src/main.c    ****         draw_CircularMeter(&u8g2, meas_value[0]);
 665:Src/main.c    ****         
 666:Src/main.c    ****         draw_Value(&u8g2, 36, 33, 30, 16, meas_value[0], 3, 2, 1, "");
 667:Src/main.c    ****         draw_MeasUnit(&u8g2, 38, 40, 28, 16, "kPa");
 668:Src/main.c    **** /*        
 669:Src/main.c    ****         draw_Value(&u8g2, 34, 28, 30, 16, meas_value[0], 3, 2, 1, "");
 670:Src/main.c    ****         draw_MeasUnit(&u8g2, 36, 36, 28, 16, "kPa");
 671:Src/main.c    **** */
 672:Src/main.c    **** 
 673:Src/main.c    ****         // draw measurement data
 674:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 675:Src/main.c    ****           x = meas_C_x;
 676:Src/main.c    ****           y = n * meas_C_height	+ meas_C_y;
 677:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_C_width, meas_C_height, meas_value[n], meas_digit[n], meas_f
 678:Src/main.c    ****         }
 679:Src/main.c    **** 
 680:Src/main.c    ****       ///// Scope /////
 681:Src/main.c    ****       }else if( mode == 2 ){
 682:Src/main.c    **** 
 683:Src/main.c    ****         if( circular_buffer_index > 0 ){
 684:Src/main.c    ****           circular_buffer_index--;
 685:Src/main.c    ****         }else{
 686:Src/main.c    ****           circular_buffer_index = 128;
 687:Src/main.c    ****         }
 688:Src/main.c    ****         circular_buffer[circular_buffer_index] = meas_value[0];
 689:Src/main.c    **** 
 690:Src/main.c    ****         // draw wave
 691:Src/main.c    ****         draw_Wave(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_max, c
 692:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 693:Src/main.c    **** 
 694:Src/main.c    ****       // mode setting
 695:Src/main.c    ****       }else if( setting == 1 ){
 696:Src/main.c    ****         u8g2_ClearBuffer(&u8g2);
 697:Src/main.c    ****         u8g2_SetFont(&u8g2, u8g2_font_7x14B_tf);
 698:Src/main.c    ****         u8g2_DrawStr(&u8g2, 2, 15, "Mode Setting" );
 699:Src/main.c    ****         if( cursor == 0 ){
 700:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, ">" );
 701:Src/main.c    ****         }else{
 702:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, " " );
 703:Src/main.c    ****         }
 704:Src/main.c    ****         u8g2_DrawStr(&u8g2,10, 30, "Multi-Meter" );
 705:Src/main.c    ****         if( cursor == 1 ){
 706:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 707:Src/main.c    ****         }else{
 708:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, " " );
 709:Src/main.c    ****         }
 710:Src/main.c    ****         u8g2_DrawStr(&u8g2,10, 45, "Scope" );
 711:Src/main.c    ****         u8g2_SendBuffer(&u8g2);
 712:Src/main.c    ****       }
 713:Src/main.c    ****       // send buffer
 714:Src/main.c    ****       u8g2_SendBuffer(&u8g2);
 715:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 20


 716:Src/main.c    ****       flag_disp = 0; // enable again by TIM2 interrupt
 717:Src/main.c    ****     }
 718:Src/main.c    **** 
 719:Src/main.c    ****   }
 720:Src/main.c    ****   /* USER CODE END 3 */
 721:Src/main.c    **** 
 722:Src/main.c    **** }
 723:Src/main.c    **** 
 724:Src/main.c    **** /** System Clock Configuration
 725:Src/main.c    **** */
 726:Src/main.c    **** void SystemClock_Config(void)
 727:Src/main.c    **** {
 728:Src/main.c    **** 
 729:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 730:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 731:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 732:Src/main.c    **** 
 733:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 734:Src/main.c    ****     */
 735:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 736:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 737:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 738:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 739:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 740:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 741:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 742:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 743:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 744:Src/main.c    ****   {
 745:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 746:Src/main.c    ****   }
 747:Src/main.c    **** 
 748:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 749:Src/main.c    ****     */
 750:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 751:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 752:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 753:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 754:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 755:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 756:Src/main.c    **** 
 757:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 758:Src/main.c    ****   {
 759:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 760:Src/main.c    ****   }
 761:Src/main.c    **** 
 762:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1
 763:Src/main.c    ****                               |RCC_PERIPHCLK_TIM1;
 764:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 765:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 766:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 767:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 768:Src/main.c    ****   {
 769:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 770:Src/main.c    ****   }
 771:Src/main.c    **** 
 772:Src/main.c    ****     /**Configure the Systick interrupt time 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 21


 773:Src/main.c    ****     */
 774:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 775:Src/main.c    **** 
 776:Src/main.c    ****     /**Configure the Systick 
 777:Src/main.c    ****     */
 778:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 779:Src/main.c    **** 
 780:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 781:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 782:Src/main.c    **** }
 783:Src/main.c    **** 
 784:Src/main.c    **** /* USER CODE BEGIN 4 */
 785:Src/main.c    **** 
 786:Src/main.c    **** /* USER CODE END 4 */
 787:Src/main.c    **** 
 788:Src/main.c    **** /**
 789:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 790:Src/main.c    ****   * @param  None
 791:Src/main.c    ****   * @retval None
 792:Src/main.c    ****   */
 793:Src/main.c    **** void _Error_Handler(char * file, int line)
 794:Src/main.c    **** {
 372              		.loc 1 794 0
 373              		.cfi_startproc
 374              		@ Volatile: function does not return.
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 378              	.LVL33:
 379              	.L24:
 380 0000 FEE7     		b	.L24
 381              		.cfi_endproc
 382              	.LFE132:
 384              		.section	.text.SystemClock_Config,"ax",%progbits
 385              		.align	1
 386              		.global	SystemClock_Config
 387              		.syntax unified
 388              		.thumb
 389              		.thumb_func
 390              		.fpu fpv4-sp-d16
 392              	SystemClock_Config:
 393              	.LFB131:
 727:Src/main.c    **** 
 394              		.loc 1 727 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 88
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 727:Src/main.c    **** 
 398              		.loc 1 727 0
 399 0000 00B5     		push	{lr}
 400              	.LCFI12:
 401              		.cfi_def_cfa_offset 4
 402              		.cfi_offset 14, -4
 403 0002 97B0     		sub	sp, sp, #92
 404              	.LCFI13:
 405              		.cfi_def_cfa_offset 96
 735:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 22


 406              		.loc 1 735 0
 407 0004 0323     		movs	r3, #3
 408 0006 0C93     		str	r3, [sp, #48]
 736:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 409              		.loc 1 736 0
 410 0008 4FF4A023 		mov	r3, #327680
 411 000c 0D93     		str	r3, [sp, #52]
 737:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 412              		.loc 1 737 0
 413 000e 0023     		movs	r3, #0
 414 0010 0E93     		str	r3, [sp, #56]
 738:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 415              		.loc 1 738 0
 416 0012 0123     		movs	r3, #1
 417 0014 1093     		str	r3, [sp, #64]
 739:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 418              		.loc 1 739 0
 419 0016 1023     		movs	r3, #16
 420 0018 1193     		str	r3, [sp, #68]
 740:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 421              		.loc 1 740 0
 422 001a 0223     		movs	r3, #2
 423 001c 1393     		str	r3, [sp, #76]
 741:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 424              		.loc 1 741 0
 425 001e 4FF48033 		mov	r3, #65536
 426 0022 1493     		str	r3, [sp, #80]
 742:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 427              		.loc 1 742 0
 428 0024 4FF4E013 		mov	r3, #1835008
 429 0028 1593     		str	r3, [sp, #84]
 743:Src/main.c    ****   {
 430              		.loc 1 743 0
 431 002a 0CA8     		add	r0, sp, #48
 432 002c FFF7FEFF 		bl	HAL_RCC_OscConfig
 433              	.LVL34:
 434 0030 60BB     		cbnz	r0, .L30
 750:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 435              		.loc 1 750 0
 436 0032 0F23     		movs	r3, #15
 437 0034 0793     		str	r3, [sp, #28]
 752:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 438              		.loc 1 752 0
 439 0036 0221     		movs	r1, #2
 440 0038 0891     		str	r1, [sp, #32]
 753:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 441              		.loc 1 753 0
 442 003a 0023     		movs	r3, #0
 443 003c 0993     		str	r3, [sp, #36]
 754:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 444              		.loc 1 754 0
 445 003e 4FF48062 		mov	r2, #1024
 446 0042 0A92     		str	r2, [sp, #40]
 755:Src/main.c    **** 
 447              		.loc 1 755 0
 448 0044 0B93     		str	r3, [sp, #44]
 757:Src/main.c    ****   {
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 23


 449              		.loc 1 757 0
 450 0046 07A8     		add	r0, sp, #28
 451 0048 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 452              	.LVL35:
 453 004c 18BB     		cbnz	r0, .L31
 762:Src/main.c    ****                               |RCC_PERIPHCLK_TIM1;
 454              		.loc 1 762 0
 455 004e 41F22103 		movw	r3, #4129
 456 0052 0193     		str	r3, [sp, #4]
 764:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 457              		.loc 1 764 0
 458 0054 0023     		movs	r3, #0
 459 0056 0393     		str	r3, [sp, #12]
 765:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 460              		.loc 1 765 0
 461 0058 0493     		str	r3, [sp, #16]
 766:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 462              		.loc 1 766 0
 463 005a 0693     		str	r3, [sp, #24]
 767:Src/main.c    ****   {
 464              		.loc 1 767 0
 465 005c 01A8     		add	r0, sp, #4
 466 005e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 467              	.LVL36:
 468 0062 E8B9     		cbnz	r0, .L32
 774:Src/main.c    **** 
 469              		.loc 1 774 0
 470 0064 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 471              	.LVL37:
 472 0068 104B     		ldr	r3, .L33
 473 006a A3FB0030 		umull	r3, r0, r3, r0
 474 006e 8009     		lsrs	r0, r0, #6
 475 0070 FFF7FEFF 		bl	HAL_SYSTICK_Config
 476              	.LVL38:
 778:Src/main.c    **** 
 477              		.loc 1 778 0
 478 0074 0420     		movs	r0, #4
 479 0076 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 480              	.LVL39:
 781:Src/main.c    **** }
 481              		.loc 1 781 0
 482 007a 0022     		movs	r2, #0
 483 007c 1146     		mov	r1, r2
 484 007e 4FF0FF30 		mov	r0, #-1
 485 0082 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 486              	.LVL40:
 782:Src/main.c    **** 
 487              		.loc 1 782 0
 488 0086 17B0     		add	sp, sp, #92
 489              	.LCFI14:
 490              		.cfi_remember_state
 491              		.cfi_def_cfa_offset 4
 492              		@ sp needed
 493 0088 5DF804FB 		ldr	pc, [sp], #4
 494              	.L30:
 495              	.LCFI15:
 496              		.cfi_restore_state
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 24


 745:Src/main.c    ****   }
 497              		.loc 1 745 0
 498 008c 40F2E921 		movw	r1, #745
 499 0090 0748     		ldr	r0, .L33+4
 500 0092 FFF7FEFF 		bl	_Error_Handler
 501              	.LVL41:
 502              	.L31:
 759:Src/main.c    ****   }
 503              		.loc 1 759 0
 504 0096 40F2F721 		movw	r1, #759
 505 009a 0548     		ldr	r0, .L33+4
 506 009c FFF7FEFF 		bl	_Error_Handler
 507              	.LVL42:
 508              	.L32:
 769:Src/main.c    ****   }
 509              		.loc 1 769 0
 510 00a0 40F20131 		movw	r1, #769
 511 00a4 0248     		ldr	r0, .L33+4
 512 00a6 FFF7FEFF 		bl	_Error_Handler
 513              	.LVL43:
 514              	.L34:
 515 00aa 00BF     		.align	2
 516              	.L33:
 517 00ac D34D6210 		.word	274877907
 518 00b0 00000000 		.word	.LC2
 519              		.cfi_endproc
 520              	.LFE131:
 522              		.global	__aeabi_i2d
 523              		.global	__aeabi_ddiv
 524              		.global	__aeabi_dmul
 525              		.global	__aeabi_d2iz
 526              		.section	.text.main,"ax",%progbits
 527              		.align	1
 528              		.global	main
 529              		.syntax unified
 530              		.thumb
 531              		.thumb_func
 532              		.fpu fpv4-sp-d16
 534              	main:
 535              	.LFB130:
 358:Src/main.c    **** 
 536              		.loc 1 358 0
 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 2304
 539              		@ frame_needed = 0, uses_anonymous_args = 0
 540 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 541              	.LCFI16:
 542              		.cfi_def_cfa_offset 20
 543              		.cfi_offset 4, -20
 544              		.cfi_offset 5, -16
 545              		.cfi_offset 6, -12
 546              		.cfi_offset 7, -8
 547              		.cfi_offset 14, -4
 548 0002 ADF6241D 		subw	sp, sp, #2340
 549              	.LCFI17:
 550              		.cfi_def_cfa_offset 2360
 367:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 25


 551              		.loc 1 367 0
 552 0006 FFF7FEFF 		bl	HAL_Init
 553              	.LVL44:
 378:Src/main.c    **** 
 554              		.loc 1 378 0
 555 000a 4FF48072 		mov	r2, #256
 556 000e 0021     		movs	r1, #0
 557 0010 0DF50260 		add	r0, sp, #2080
 558 0014 FFF7FEFF 		bl	memset
 559              	.LVL45:
 383:Src/main.c    **** 
 560              		.loc 1 383 0
 561 0018 FFF7FEFF 		bl	SystemClock_Config
 562              	.LVL46:
 390:Src/main.c    ****   MX_DMA_Init();
 563              		.loc 1 390 0
 564 001c FFF7FEFF 		bl	MX_GPIO_Init
 565              	.LVL47:
 391:Src/main.c    ****   MX_USART2_UART_Init();
 566              		.loc 1 391 0
 567 0020 FFF7FEFF 		bl	MX_DMA_Init
 568              	.LVL48:
 392:Src/main.c    ****   MX_TIM1_Init();
 569              		.loc 1 392 0
 570 0024 FFF7FEFF 		bl	MX_USART2_UART_Init
 571              	.LVL49:
 393:Src/main.c    ****   MX_USART1_UART_Init();
 572              		.loc 1 393 0
 573 0028 FFF7FEFF 		bl	MX_TIM1_Init
 574              	.LVL50:
 394:Src/main.c    ****   MX_SPI1_Init();
 575              		.loc 1 394 0
 576 002c FFF7FEFF 		bl	MX_USART1_UART_Init
 577              	.LVL51:
 395:Src/main.c    ****   MX_ADC1_Init();
 578              		.loc 1 395 0
 579 0030 FFF7FEFF 		bl	MX_SPI1_Init
 580              	.LVL52:
 396:Src/main.c    ****   MX_TIM2_Init();
 581              		.loc 1 396 0
 582 0034 FFF7FEFF 		bl	MX_ADC1_Init
 583              	.LVL53:
 397:Src/main.c    ****   MX_CAN_Init();
 584              		.loc 1 397 0
 585 0038 FFF7FEFF 		bl	MX_TIM2_Init
 586              	.LVL54:
 398:Src/main.c    ****   MX_TIM6_Init();
 587              		.loc 1 398 0
 588 003c FFF7FEFF 		bl	MX_CAN_Init
 589              	.LVL55:
 399:Src/main.c    ****   MX_I2C1_Init();
 590              		.loc 1 399 0
 591 0040 FFF7FEFF 		bl	MX_TIM6_Init
 592              	.LVL56:
 400:Src/main.c    ****   MX_TIM3_Init();
 593              		.loc 1 400 0
 594 0044 FFF7FEFF 		bl	MX_I2C1_Init
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 26


 595              	.LVL57:
 401:Src/main.c    **** 
 596              		.loc 1 401 0
 597 0048 FFF7FEFF 		bl	MX_TIM3_Init
 598              	.LVL58:
 416:Src/main.c    ****   {
 599              		.loc 1 416 0
 600 004c 0021     		movs	r1, #0
 601 004e 8348     		ldr	r0, .L87
 602 0050 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 603              	.LVL59:
 604 0054 20B1     		cbz	r0, .L36
 418:Src/main.c    ****   }
 605              		.loc 1 418 0
 606 0056 4FF4D171 		mov	r1, #418
 607 005a 8148     		ldr	r0, .L87+4
 608 005c FFF7FEFF 		bl	_Error_Handler
 609              	.LVL60:
 610              	.L36:
 422:Src/main.c    ****   {
 611              		.loc 1 422 0
 612 0060 8048     		ldr	r0, .L87+8
 613 0062 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 614              	.LVL61:
 615 0066 20B1     		cbz	r0, .L37
 424:Src/main.c    ****   }
 616              		.loc 1 424 0
 617 0068 4FF4D471 		mov	r1, #424
 618 006c 7C48     		ldr	r0, .L87+4
 619 006e FFF7FEFF 		bl	_Error_Handler
 620              	.LVL62:
 621              	.L37:
 428:Src/main.c    ****   {
 622              		.loc 1 428 0
 623 0072 7D48     		ldr	r0, .L87+12
 624 0074 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 625              	.LVL63:
 626 0078 20B1     		cbz	r0, .L38
 430:Src/main.c    ****   }
 627              		.loc 1 430 0
 628 007a 4FF4D771 		mov	r1, #430
 629 007e 7848     		ldr	r0, .L87+4
 630 0080 FFF7FEFF 		bl	_Error_Handler
 631              	.LVL64:
 632              	.L38:
 434:Src/main.c    ****   {
 633              		.loc 1 434 0
 634 0084 7948     		ldr	r0, .L87+16
 635 0086 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 636              	.LVL65:
 637 008a 20B1     		cbz	r0, .L39
 436:Src/main.c    ****   }
 638              		.loc 1 436 0
 639 008c 4FF4DA71 		mov	r1, #436
 640 0090 7348     		ldr	r0, .L87+4
 641 0092 FFF7FEFF 		bl	_Error_Handler
 642              	.LVL66:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 27


 643              	.L39:
 440:Src/main.c    ****   // variables is defined in 'defi.h'
 644              		.loc 1 440 0
 645 0096 0122     		movs	r2, #1
 646 0098 7549     		ldr	r1, .L87+20
 647 009a 7648     		ldr	r0, .L87+24
 648 009c FFF7FEFF 		bl	HAL_UART_Receive_IT
 649              	.LVL67:
 447:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, g_ADCBuffer, ADC_BUFFER_LENGTH);
 650              		.loc 1 447 0
 651 00a0 4FF40062 		mov	r2, #2048
 652 00a4 0021     		movs	r1, #0
 653 00a6 08A8     		add	r0, sp, #32
 654 00a8 FFF7FEFF 		bl	memset
 655              	.LVL68:
 448:Src/main.c    **** 
 656              		.loc 1 448 0
 657 00ac 4FF48062 		mov	r2, #1024
 658 00b0 08A9     		add	r1, sp, #32
 659 00b2 7148     		ldr	r0, .L87+28
 660 00b4 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 661              	.LVL69:
 452:Src/main.c    **** 
 662              		.loc 1 452 0
 663 00b8 704C     		ldr	r4, .L87+32
 664 00ba 714B     		ldr	r3, .L87+36
 665 00bc 714A     		ldr	r2, .L87+40
 666 00be 7249     		ldr	r1, .L87+44
 667 00c0 2046     		mov	r0, r4
 668 00c2 FFF7FEFF 		bl	u8g2_Setup_ssd1309_128x64_noname2_f
 669              	.LVL70:
 455:Src/main.c    ****   HAL_Delay(5);
 670              		.loc 1 455 0
 671 00c6 714D     		ldr	r5, .L87+48
 672 00c8 0022     		movs	r2, #0
 673 00ca 0821     		movs	r1, #8
 674 00cc 2846     		mov	r0, r5
 675 00ce FFF7FEFF 		bl	HAL_GPIO_WritePin
 676              	.LVL71:
 456:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 677              		.loc 1 456 0
 678 00d2 0520     		movs	r0, #5
 679 00d4 FFF7FEFF 		bl	HAL_Delay
 680              	.LVL72:
 457:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 681              		.loc 1 457 0
 682 00d8 0122     		movs	r2, #1
 683 00da 0821     		movs	r1, #8
 684 00dc 2846     		mov	r0, r5
 685 00de FFF7FEFF 		bl	HAL_GPIO_WritePin
 686              	.LVL73:
 458:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 687              		.loc 1 458 0
 688 00e2 2046     		mov	r0, r4
 689 00e4 FFF7FEFF 		bl	u8x8_InitDisplay
 690              	.LVL74:
 459:Src/main.c    ****   u8g2_SetContrast(&u8g2, 255); // set contrast
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 28


 691              		.loc 1 459 0
 692 00e8 0021     		movs	r1, #0
 693 00ea 2046     		mov	r0, r4
 694 00ec FFF7FEFF 		bl	u8x8_SetPowerSave
 695              	.LVL75:
 460:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 696              		.loc 1 460 0
 697 00f0 FF21     		movs	r1, #255
 698 00f2 2046     		mov	r0, r4
 699 00f4 FFF7FEFF 		bl	u8x8_SetContrast
 700              	.LVL76:
 461:Src/main.c    **** 
 701              		.loc 1 461 0
 702 00f8 2046     		mov	r0, r4
 703 00fa FFF7FEFF 		bl	u8g2_ClearDisplay
 704              	.LVL77:
 464:Src/main.c    **** 
 705              		.loc 1 464 0
 706 00fe 644B     		ldr	r3, .L87+52
 707 0100 0193     		str	r3, [sp, #4]
 708 0102 3023     		movs	r3, #48
 709 0104 0093     		str	r3, [sp]
 710 0106 0022     		movs	r2, #0
 711 0108 2821     		movs	r1, #40
 712 010a 2046     		mov	r0, r4
 713 010c FFF7FEFF 		bl	u8g2_DrawXBMP
 714              	.LVL78:
 466:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 715              		.loc 1 466 0
 716 0110 6049     		ldr	r1, .L87+56
 717 0112 2046     		mov	r0, r4
 718 0114 FFF7FEFF 		bl	u8g2_SetFont
 719              	.LVL79:
 467:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.1a");
 720              		.loc 1 467 0
 721 0118 5F4B     		ldr	r3, .L87+60
 722 011a 3722     		movs	r2, #55
 723 011c 1021     		movs	r1, #16
 724 011e 2046     		mov	r0, r4
 725 0120 FFF7FEFF 		bl	u8g2_DrawStr
 726              	.LVL80:
 468:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 727              		.loc 1 468 0
 728 0124 5D4B     		ldr	r3, .L87+64
 729 0126 4022     		movs	r2, #64
 730 0128 2821     		movs	r1, #40
 731 012a 2046     		mov	r0, r4
 732 012c FFF7FEFF 		bl	u8g2_DrawStr
 733              	.LVL81:
 469:Src/main.c    **** 
 734              		.loc 1 469 0
 735 0130 2046     		mov	r0, r4
 736 0132 FFF7FEFF 		bl	u8g2_SendBuffer
 737              	.LVL82:
 471:Src/main.c    **** //  HAL_Delay(2000);
 738              		.loc 1 471 0
 739 0136 4FF4FA70 		mov	r0, #500
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 29


 740 013a FFF7FEFF 		bl	HAL_Delay
 741              	.LVL83:
 474:Src/main.c    **** 
 742              		.loc 1 474 0
 743 013e 2046     		mov	r0, r4
 744 0140 FFF7FEFF 		bl	u8g2_ClearBuffer
 745              	.LVL84:
 476:Src/main.c    **** 
 746              		.loc 1 476 0
 747 0144 5649     		ldr	r1, .L87+68
 748 0146 5748     		ldr	r0, .L87+72
 749 0148 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 750              	.LVL85:
 479:Src/main.c    **** 
 751              		.loc 1 479 0
 752 014c 564B     		ldr	r3, .L87+76
 753 014e B3F90030 		ldrsh	r3, [r3]
 754 0152 C3F16403 		rsb	r3, r3, #100
 755 0156 554A     		ldr	r2, .L87+80
 756 0158 5363     		str	r3, [r2, #52]
 486:Src/main.c    ****   draw_indicators();
 757              		.loc 1 486 0
 758 015a FFF7FEFF 		bl	draw_MeasLabels
 759              	.LVL86:
 487:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 760              		.loc 1 487 0
 761 015e FFF7FEFF 		bl	draw_indicators
 762              	.LVL87:
 488:Src/main.c    **** 
 763              		.loc 1 488 0
 764 0162 2046     		mov	r0, r4
 765 0164 FFF7FEFF 		bl	u8g2_SendBuffer
 766              	.LVL88:
 492:Src/main.c    ****   ADXL345_RegWrite(ADXL0_ADDR, 0x2D, 0x08); // Enable 'Measure' at "POWER_CTL"
 767              		.loc 1 492 0
 768 0168 0021     		movs	r1, #0
 769 016a 1D20     		movs	r0, #29
 770 016c FFF7FEFF 		bl	ADXL345_RegRead_1byte
 771              	.LVL89:
 493:Src/main.c    ****   a = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x2D); // Check "POWER_CTL"
 772              		.loc 1 493 0
 773 0170 0822     		movs	r2, #8
 774 0172 2D21     		movs	r1, #45
 775 0174 1D20     		movs	r0, #29
 776 0176 FFF7FEFF 		bl	ADXL345_RegWrite
 777              	.LVL90:
 494:Src/main.c    **** 
 778              		.loc 1 494 0
 779 017a 2D21     		movs	r1, #45
 780 017c 1D20     		movs	r0, #29
 781 017e FFF7FEFF 		bl	ADXL345_RegRead_1byte
 782              	.LVL91:
 377:Src/main.c    ****   int16_t circular_buffer[128]={};
 783              		.loc 1 377 0
 784 0182 0025     		movs	r5, #0
 785 0184 D9E0     		b	.L55
 786              	.LVL92:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 30


 787              	.L80:
 788              	.LBB2:
 518:Src/main.c    ****       Gsens_X0 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x32); // Check "DATAX0" (LSB side)
 789              		.loc 1 518 0
 790 0186 3321     		movs	r1, #51
 791 0188 1D20     		movs	r0, #29
 792 018a FFF7FEFF 		bl	ADXL345_RegRead_1byte
 793              	.LVL93:
 794 018e 484C     		ldr	r4, .L87+84
 795 0190 2070     		strb	r0, [r4]
 519:Src/main.c    ****       Gsens_X = (Gsens_X1<<8) | Gsens_X0;
 796              		.loc 1 519 0
 797 0192 3221     		movs	r1, #50
 798 0194 1D20     		movs	r0, #29
 799 0196 FFF7FEFF 		bl	ADXL345_RegRead_1byte
 800              	.LVL94:
 801 019a 464B     		ldr	r3, .L87+88
 802 019c 1870     		strb	r0, [r3]
 520:Src/main.c    ****       Gsens_Y1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x35); // Check "DATAY1" (MSB side)
 803              		.loc 1 520 0
 804 019e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 805 01a0 40EA0320 		orr	r0, r0, r3, lsl #8
 806 01a4 444C     		ldr	r4, .L87+92
 807 01a6 2080     		strh	r0, [r4]	@ movhi
 521:Src/main.c    ****       Gsens_Y0 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x34); // Check "DATAY0" (LSB side)
 808              		.loc 1 521 0
 809 01a8 3521     		movs	r1, #53
 810 01aa 1D20     		movs	r0, #29
 811 01ac FFF7FEFF 		bl	ADXL345_RegRead_1byte
 812              	.LVL95:
 813 01b0 424E     		ldr	r6, .L87+96
 814 01b2 3070     		strb	r0, [r6]
 522:Src/main.c    ****       Gsens_Y = (Gsens_Y1<<8) | Gsens_Y0;
 815              		.loc 1 522 0
 816 01b4 3421     		movs	r1, #52
 817 01b6 1D20     		movs	r0, #29
 818 01b8 FFF7FEFF 		bl	ADXL345_RegRead_1byte
 819              	.LVL96:
 820 01bc 404B     		ldr	r3, .L87+100
 821 01be 1870     		strb	r0, [r3]
 523:Src/main.c    ****       Gsens_Z1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x37); // Check "DATAZ1" (MSB side)
 822              		.loc 1 523 0
 823 01c0 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 824 01c2 40EA0320 		orr	r0, r0, r3, lsl #8
 825 01c6 3F4F     		ldr	r7, .L87+104
 826 01c8 3880     		strh	r0, [r7]	@ movhi
 524:Src/main.c    ****       Gsens_Z0 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x36); // Check "DATAZ0" (LSB side)
 827              		.loc 1 524 0
 828 01ca 3721     		movs	r1, #55
 829 01cc 1D20     		movs	r0, #29
 830 01ce FFF7FEFF 		bl	ADXL345_RegRead_1byte
 831              	.LVL97:
 832 01d2 3D4E     		ldr	r6, .L87+108
 833 01d4 3070     		strb	r0, [r6]
 525:Src/main.c    ****       Gsens_Z = (Gsens_Z1<<8) | Gsens_Z0;
 834              		.loc 1 525 0
 835 01d6 3621     		movs	r1, #54
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 31


 836 01d8 1D20     		movs	r0, #29
 837 01da FFF7FEFF 		bl	ADXL345_RegRead_1byte
 838              	.LVL98:
 839 01de 3B4B     		ldr	r3, .L87+112
 840 01e0 1870     		strb	r0, [r3]
 526:Src/main.c    ****       HAL_UART_Transmit_printf(&huart2, "(%d,%d,%d)\n", Gsens_X, Gsens_Y, Gsens_Z); // debug
 841              		.loc 1 526 0
 842 01e2 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 843 01e4 40EA0320 		orr	r0, r0, r3, lsl #8
 844 01e8 00B2     		sxth	r0, r0
 845 01ea 394B     		ldr	r3, .L87+116
 846 01ec 1880     		strh	r0, [r3]	@ movhi
 527:Src/main.c    **** 
 847              		.loc 1 527 0
 848 01ee B7F90030 		ldrsh	r3, [r7]
 849 01f2 B4F90020 		ldrsh	r2, [r4]
 850 01f6 0090     		str	r0, [sp]
 851 01f8 3649     		ldr	r1, .L87+120
 852 01fa 2A48     		ldr	r0, .L87+72
 853 01fc FFF7FEFF 		bl	HAL_UART_Transmit_printf
 854              	.LVL99:
 552:Src/main.c    **** 		  meas_value[1] = DEFI_value[2];  // OILP
 855              		.loc 1 552 0
 856 0200 354A     		ldr	r2, .L87+124
 857 0202 1188     		ldrh	r1, [r2]
 858 0204 354B     		ldr	r3, .L87+128
 859 0206 1980     		strh	r1, [r3]	@ movhi
 553:Src/main.c    **** 			meas_value[2] = FP_volt;        // FuelPump Voltage
 860              		.loc 1 553 0
 861 0208 9188     		ldrh	r1, [r2, #4]
 862 020a 5980     		strh	r1, [r3, #2]	@ movhi
 554:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 863              		.loc 1 554 0
 864 020c 3449     		ldr	r1, .L87+132
 865 020e 0988     		ldrh	r1, [r1]
 866 0210 9980     		strh	r1, [r3, #4]	@ movhi
 555:Src/main.c    **** 			meas_value[4] = DEFI_value[5];  // OILT
 867              		.loc 1 555 0
 868 0212 9189     		ldrh	r1, [r2, #12]
 869 0214 D980     		strh	r1, [r3, #6]	@ movhi
 556:Src/main.c    **** 		  meas_value[5] = O2_volt;        // O2
 870              		.loc 1 556 0
 871 0216 5289     		ldrh	r2, [r2, #10]
 872 0218 1A81     		strh	r2, [r3, #8]	@ movhi
 557:Src/main.c    **** 
 873              		.loc 1 557 0
 874 021a 324A     		ldr	r2, .L87+136
 875 021c 1288     		ldrh	r2, [r2]
 876 021e 5A81     		strh	r2, [r3, #10]	@ movhi
 560:Src/main.c    ****     }
 877              		.loc 1 560 0
 878 0220 314B     		ldr	r3, .L87+140
 879 0222 0022     		movs	r2, #0
 880 0224 1A60     		str	r2, [r3]
 881 0226 C0E0     		b	.L40
 882              	.L81:
 576:Src/main.c    ****             }else{
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 32


 883              		.loc 1 576 0
 884 0228 304B     		ldr	r3, .L87+144
 885 022a 0022     		movs	r2, #0
 886 022c 1A70     		strb	r2, [r3]
 887 022e 6AE0     		b	.L42
 888              	.L43:
 583:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 889              		.loc 1 583 0
 890 0230 2F49     		ldr	r1, .L87+148
 891 0232 1C48     		ldr	r0, .L87+72
 892 0234 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 893              	.LVL100:
 584:Src/main.c    ****           // SW "DOWN"
 894              		.loc 1 584 0
 895 0238 1720     		movs	r0, #23
 896 023a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 897              	.LVL101:
 586:Src/main.c    ****             if( mode == 0 ){
 898              		.loc 1 586 0
 899 023e 2D4B     		ldr	r3, .L87+152
 900 0240 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 901 0242 002B     		cmp	r3, #0
 902 0244 5FD1     		bne	.L42
 587:Src/main.c    ****               mode = N_mode-1;
 903              		.loc 1 587 0
 904 0246 294B     		ldr	r3, .L87+144
 905 0248 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 906 024a 1BB9     		cbnz	r3, .L47
 588:Src/main.c    ****             }else{
 907              		.loc 1 588 0
 908 024c 274B     		ldr	r3, .L87+144
 909 024e 0222     		movs	r2, #2
 910 0250 1A70     		strb	r2, [r3]
 911 0252 58E0     		b	.L42
 912              	.L47:
 590:Src/main.c    ****             }
 913              		.loc 1 590 0
 914 0254 013B     		subs	r3, r3, #1
 915 0256 254A     		ldr	r2, .L87+144
 916 0258 1370     		strb	r3, [r2]
 917 025a 54E0     		b	.L42
 918              	.L88:
 919              		.align	2
 920              	.L87:
 921 025c 00000000 		.word	htim1
 922 0260 00000000 		.word	.LC2
 923 0264 00000000 		.word	htim2
 924 0268 00000000 		.word	htim3
 925 026c 00000000 		.word	htim6
 926 0270 00000000 		.word	UART1_Data
 927 0274 00000000 		.word	huart1
 928 0278 00000000 		.word	hadc1
 929 027c 00000000 		.word	u8g2
 930 0280 00000000 		.word	u8x8_gpio_and_delay_STM32F303
 931 0284 00000000 		.word	u8x8_byte_4wire_hw_spi
 932 0288 00000000 		.word	u8g2_cb_r0
 933 028c 00040048 		.word	1207960576
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 33


 934 0290 00000000 		.word	.LANCHOR4
 935 0294 00000000 		.word	u8g2_font_5x7_tf
 936 0298 00000000 		.word	.LC3
 937 029c 18000000 		.word	.LC4
 938 02a0 24000000 		.word	.LC5
 939 02a4 00000000 		.word	huart2
 940 02a8 00000000 		.word	.LANCHOR5
 941 02ac 002C0140 		.word	1073818624
 942 02b0 00000000 		.word	Gsens_X1
 943 02b4 00000000 		.word	Gsens_X0
 944 02b8 00000000 		.word	Gsens_X
 945 02bc 00000000 		.word	Gsens_Y1
 946 02c0 00000000 		.word	Gsens_Y0
 947 02c4 00000000 		.word	Gsens_Y
 948 02c8 00000000 		.word	Gsens_Z1
 949 02cc 00000000 		.word	Gsens_Z0
 950 02d0 00000000 		.word	Gsens_Z
 951 02d4 3C000000 		.word	.LC6
 952 02d8 00000000 		.word	DEFI_value
 953 02dc 00000000 		.word	.LANCHOR8
 954 02e0 00000000 		.word	.LANCHOR7
 955 02e4 00000000 		.word	.LANCHOR6
 956 02e8 00000000 		.word	flag_meas
 957 02ec 00000000 		.word	mode
 958 02f0 4C000000 		.word	.LC8
 959 02f4 00000000 		.word	setting
 960              	.L44:
 595:Src/main.c    ****           HAL_NVIC_DisableIRQ (EXTI1_IRQn);
 961              		.loc 1 595 0
 962 02f8 AF49     		ldr	r1, .L89+8
 963 02fa B048     		ldr	r0, .L89+12
 964 02fc FFF7FEFF 		bl	HAL_UART_Transmit_printf
 965              	.LVL102:
 596:Src/main.c    ****           // SW "ENTER"
 966              		.loc 1 596 0
 967 0300 0720     		movs	r0, #7
 968 0302 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 969              	.LVL103:
 970              	.L42:
 610:Src/main.c    ****       if( mode == 0 ){
 971              		.loc 1 610 0
 972 0306 AE48     		ldr	r0, .L89+16
 973 0308 FFF7FEFF 		bl	u8g2_ClearBuffer
 974              	.LVL104:
 611:Src/main.c    ****         draw_MeasLabels();
 975              		.loc 1 611 0
 976 030c AD4B     		ldr	r3, .L89+20
 977 030e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 978 0310 002B     		cmp	r3, #0
 979 0312 70D0     		beq	.L76
 615:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 980              		.loc 1 615 0
 981 0314 012B     		cmp	r3, #1
 982 0316 00F09180 		beq	.L77
 629:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_m
 983              		.loc 1 629 0
 984 031a 022B     		cmp	r3, #2
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 34


 985 031c 00F0C680 		beq	.L78
 986              	.L49:
 634:Src/main.c    ****       TIM6->CNT = 0;
 987              		.loc 1 634 0
 988 0320 A748     		ldr	r0, .L89+16
 989 0322 FFF7FEFF 		bl	u8g2_SendBuffer
 990              	.LVL105:
 635:Src/main.c    ****       flag_sw = 0;
 991              		.loc 1 635 0
 992 0326 0023     		movs	r3, #0
 993 0328 A74A     		ldr	r2, .L89+24
 994 032a 5362     		str	r3, [r2, #36]
 636:Src/main.c    ****     }
 995              		.loc 1 636 0
 996 032c A74A     		ldr	r2, .L89+28
 997 032e 1360     		str	r3, [r2]
 998              	.L41:
 640:Src/main.c    ****       ///// multi meter /////
 999              		.loc 1 640 0
 1000 0330 A74B     		ldr	r3, .L89+32
 1001 0332 1B68     		ldr	r3, [r3]
 1002 0334 012B     		cmp	r3, #1
 1003 0336 00F0D480 		beq	.L79
 1004              	.LVL106:
 1005              	.L55:
 505:Src/main.c    **** 
 1006              		.loc 1 505 0
 1007 033a BDF82030 		ldrh	r3, [sp, #32]
 1008 033e 07EE903A 		vmov	s15, r3	@ int
 1009 0342 F8EE677A 		vcvt.f32.u32	s15, s15
 1010 0346 DFEDA36A 		vldr.32	s13, .L89+36
 1011 034a 67EEA66A 		vmul.f32	s13, s15, s13
 1012 034e 9FEDA26A 		vldr.32	s12, .L89+40
 1013 0352 86EE867A 		vdiv.f32	s14, s13, s12
 1014 0356 BDEEC77A 		vcvt.s32.f32	s14, s14
 1015 035a A04B     		ldr	r3, .L89+44
 1016 035c 17EE102A 		vmov	r2, s14	@ int
 1017 0360 1A80     		strh	r2, [r3]	@ movhi
 508:Src/main.c    ****     // Ressister attenation ratio '165/33'
 1018              		.loc 1 508 0
 1019 0362 9FED9F7A 		vldr.32	s14, .L89+48
 1020 0366 27EE877A 		vmul.f32	s14, s15, s14
 1021 036a C7EE067A 		vdiv.f32	s15, s14, s12
 1022 036e FDEEE77A 		vcvt.s32.f32	s15, s15
 1023 0372 17EE903A 		vmov	r3, s15	@ int
 1024 0376 18B2     		sxth	r0, r3
 1025 0378 9A4B     		ldr	r3, .L89+52
 1026 037a 1880     		strh	r0, [r3]	@ movhi
 510:Src/main.c    **** 
 1027              		.loc 1 510 0
 1028 037c FFF7FEFF 		bl	__aeabi_i2d
 1029              	.LVL107:
 1030 0380 8BA3     		adr	r3, .L89
 1031 0382 D3E90023 		ldrd	r2, [r3]
 1032 0386 FFF7FEFF 		bl	__aeabi_ddiv
 1033              	.LVL108:
 1034 038a 0022     		movs	r2, #0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 35


 1035 038c 964B     		ldr	r3, .L89+56
 1036 038e FFF7FEFF 		bl	__aeabi_dmul
 1037              	.LVL109:
 1038 0392 FFF7FEFF 		bl	__aeabi_d2iz
 1039              	.LVL110:
 1040 0396 954B     		ldr	r3, .L89+60
 1041 0398 1880     		strh	r0, [r3]	@ movhi
 513:Src/main.c    **** 
 1042              		.loc 1 513 0
 1043 039a 9548     		ldr	r0, .L89+64
 1044 039c FFF7FEFF 		bl	defi_decoder
 1045              	.LVL111:
 515:Src/main.c    **** 
 1046              		.loc 1 515 0
 1047 03a0 944B     		ldr	r3, .L89+68
 1048 03a2 1B68     		ldr	r3, [r3]
 1049 03a4 012B     		cmp	r3, #1
 1050 03a6 3FF4EEAE 		beq	.L80
 1051              	.L40:
 565:Src/main.c    **** 
 1052              		.loc 1 565 0
 1053 03aa 904B     		ldr	r3, .L89+60
 1054 03ac B3F90030 		ldrsh	r3, [r3]
 1055 03b0 C3F16403 		rsb	r3, r3, #100
 1056 03b4 904A     		ldr	r2, .L89+72
 1057 03b6 5363     		str	r3, [r2, #52]
 568:Src/main.c    ****       switch( flag_sw ){
 1058              		.loc 1 568 0
 1059 03b8 844B     		ldr	r3, .L89+28
 1060 03ba 1B68     		ldr	r3, [r3]
 1061 03bc 002B     		cmp	r3, #0
 1062 03be B7D0     		beq	.L41
 569:Src/main.c    ****         case 1:
 1063              		.loc 1 569 0
 1064 03c0 022B     		cmp	r3, #2
 1065 03c2 3FF435AF 		beq	.L43
 1066 03c6 032B     		cmp	r3, #3
 1067 03c8 96D0     		beq	.L44
 1068 03ca 012B     		cmp	r3, #1
 1069 03cc 9BD1     		bne	.L42
 571:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 1070              		.loc 1 571 0
 1071 03ce 8B49     		ldr	r1, .L89+76
 1072 03d0 7A48     		ldr	r0, .L89+12
 1073 03d2 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 1074              	.LVL112:
 572:Src/main.c    ****           // SW "UP"
 1075              		.loc 1 572 0
 1076 03d6 1720     		movs	r0, #23
 1077 03d8 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1078              	.LVL113:
 574:Src/main.c    ****             if( mode == N_mode-1 ){
 1079              		.loc 1 574 0
 1080 03dc 884B     		ldr	r3, .L89+80
 1081 03de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1082 03e0 002B     		cmp	r3, #0
 1083 03e2 90D1     		bne	.L42
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 36


 575:Src/main.c    ****               mode = 0;
 1084              		.loc 1 575 0
 1085 03e4 774B     		ldr	r3, .L89+20
 1086 03e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1087 03e8 022B     		cmp	r3, #2
 1088 03ea 3FF41DAF 		beq	.L81
 578:Src/main.c    ****             }
 1089              		.loc 1 578 0
 1090 03ee 0133     		adds	r3, r3, #1
 1091 03f0 744A     		ldr	r2, .L89+20
 1092 03f2 1370     		strb	r3, [r2]
 1093 03f4 87E7     		b	.L42
 1094              	.L76:
 612:Src/main.c    ****         draw_indicators();
 1095              		.loc 1 612 0
 1096 03f6 FFF7FEFF 		bl	draw_MeasLabels
 1097              	.LVL114:
 613:Src/main.c    **** 
 1098              		.loc 1 613 0
 1099 03fa FFF7FEFF 		bl	draw_indicators
 1100              	.LVL115:
 1101 03fe 8FE7     		b	.L49
 1102              	.LVL116:
 1103              	.L52:
 1104              	.LBB3:
 618:Src/main.c    ****           draw_MeasLabelUnit(&u8g2, x, y, meas_C_width, meas_C_height, meas_name[n], meas_unit[n]);
 1105              		.loc 1 618 0 discriminator 3
 1106 0400 04EB4402 		add	r2, r4, r4, lsl #1
 1107 0404 04EB8202 		add	r2, r4, r2, lsl #2
 1108 0408 D2B2     		uxtb	r2, r2
 1109 040a 0232     		adds	r2, r2, #2
 1110              	.LVL117:
 619:Src/main.c    ****         }
 1111              		.loc 1 619 0 discriminator 3
 1112 040c C4EBC401 		rsb	r1, r4, r4, lsl #3
 1113 0410 7C4B     		ldr	r3, .L89+84
 1114 0412 0B44     		add	r3, r3, r1
 1115 0414 04EB8400 		add	r0, r4, r4, lsl #2
 1116 0418 7B49     		ldr	r1, .L89+88
 1117 041a 0144     		add	r1, r1, r0
 1118 041c 0291     		str	r1, [sp, #8]
 1119 041e 0193     		str	r3, [sp, #4]
 1120 0420 0D23     		movs	r3, #13
 1121 0422 0093     		str	r3, [sp]
 1122 0424 3C23     		movs	r3, #60
 1123 0426 D2B2     		uxtb	r2, r2
 1124 0428 4421     		movs	r1, #68
 1125 042a 6548     		ldr	r0, .L89+16
 1126 042c FFF7FEFF 		bl	draw_MeasLabelUnit
 1127              	.LVL118:
 616:Src/main.c    ****           x = meas_C_x;
 1128              		.loc 1 616 0 discriminator 3
 1129 0430 0134     		adds	r4, r4, #1
 1130              	.LVL119:
 1131 0432 E4B2     		uxtb	r4, r4
 1132              	.LVL120:
 1133              	.L50:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 37


 616:Src/main.c    ****           x = meas_C_x;
 1134              		.loc 1 616 0 is_stmt 0 discriminator 1
 1135 0434 032C     		cmp	r4, #3
 1136 0436 E3D9     		bls	.L52
 622:Src/main.c    ****           draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_s
 1137              		.loc 1 622 0 is_stmt 1
 1138 0438 0024     		movs	r4, #0
 1139              	.LVL121:
 1140 043a 18E0     		b	.L53
 1141              	.L77:
 616:Src/main.c    ****           x = meas_C_x;
 1142              		.loc 1 616 0
 1143 043c 0024     		movs	r4, #0
 1144 043e F9E7     		b	.L50
 1145              	.LVL122:
 1146              	.L54:
 623:Src/main.c    ****         }
 1147              		.loc 1 623 0 discriminator 3
 1148 0440 04EB8402 		add	r2, r4, r4, lsl #2
 1149 0444 714B     		ldr	r3, .L89+92
 1150 0446 1344     		add	r3, r3, r2
 1151 0448 C4EBC401 		rsb	r1, r4, r4, lsl #3
 1152 044c 04EB8101 		add	r1, r4, r1, lsl #2
 1153 0450 4831     		adds	r1, r1, #72
 1154 0452 0293     		str	r3, [sp, #8]
 1155 0454 6E4B     		ldr	r3, .L89+96
 1156 0456 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1157 0458 0193     		str	r3, [sp, #4]
 1158 045a 0923     		movs	r3, #9
 1159 045c 0093     		str	r3, [sp]
 1160 045e 1B23     		movs	r3, #27
 1161 0460 3522     		movs	r2, #53
 1162 0462 C9B2     		uxtb	r1, r1
 1163 0464 5648     		ldr	r0, .L89+16
 1164 0466 FFF7FEFF 		bl	draw_IndicatorBox
 1165              	.LVL123:
 622:Src/main.c    ****           draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_s
 1166              		.loc 1 622 0 discriminator 3
 1167 046a 0134     		adds	r4, r4, #1
 1168              	.LVL124:
 1169 046c E4B2     		uxtb	r4, r4
 1170              	.LVL125:
 1171              	.L53:
 622:Src/main.c    ****           draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_s
 1172              		.loc 1 622 0 is_stmt 0 discriminator 1
 1173 046e 032C     		cmp	r4, #3
 1174 0470 E6D9     		bls	.L54
 625:Src/main.c    **** //        draw_CircularMeter_Init(26, 26, 26, 3, -60, 300, 10, 20, -1, -80, 120);
 1175              		.loc 1 625 0 is_stmt 1
 1176 0472 7823     		movs	r3, #120
 1177 0474 0693     		str	r3, [sp, #24]
 1178 0476 6FF04F03 		mvn	r3, #79
 1179 047a 0593     		str	r3, [sp, #20]
 1180 047c 4FF0FF33 		mov	r3, #-1
 1181 0480 0493     		str	r3, [sp, #16]
 1182 0482 1423     		movs	r3, #20
 1183 0484 0393     		str	r3, [sp, #12]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 38


 1184 0486 0A23     		movs	r3, #10
 1185 0488 0293     		str	r3, [sp, #8]
 1186 048a 4FF49673 		mov	r3, #300
 1187 048e 0193     		str	r3, [sp, #4]
 1188 0490 6FF03B03 		mvn	r3, #59
 1189 0494 0093     		str	r3, [sp]
 1190 0496 0323     		movs	r3, #3
 1191 0498 1F22     		movs	r2, #31
 1192 049a 2021     		movs	r1, #32
 1193 049c 0846     		mov	r0, r1
 1194 049e FFF7FEFF 		bl	draw_CircularMeter_Init
 1195              	.LVL126:
 627:Src/main.c    **** 
 1196              		.loc 1 627 0
 1197 04a2 0021     		movs	r1, #0
 1198 04a4 4648     		ldr	r0, .L89+16
 1199 04a6 FFF7FEFF 		bl	draw_CircularMeter
 1200              	.LVL127:
 1201              	.LBE3:
 1202 04aa 39E7     		b	.L49
 1203              	.LVL128:
 1204              	.L78:
 1205              	.LBB4:
 630:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "MAP", "kPa");
 1206              		.loc 1 630 0
 1207 04ac 444C     		ldr	r4, .L89+16
 1208 04ae C823     		movs	r3, #200
 1209 04b0 0293     		str	r3, [sp, #8]
 1210 04b2 6FF06303 		mvn	r3, #99
 1211 04b6 0193     		str	r3, [sp, #4]
 1212 04b8 3423     		movs	r3, #52
 1213 04ba 0093     		str	r3, [sp]
 1214 04bc 8023     		movs	r3, #128
 1215 04be 0D22     		movs	r2, #13
 1216 04c0 0021     		movs	r1, #0
 1217 04c2 2046     		mov	r0, r4
 1218 04c4 FFF7FEFF 		bl	draw_Wave_axis
 1219              	.LVL129:
 631:Src/main.c    **** 
 1220              		.loc 1 631 0
 1221 04c8 524B     		ldr	r3, .L89+100
 1222 04ca 0293     		str	r3, [sp, #8]
 1223 04cc 524B     		ldr	r3, .L89+104
 1224 04ce 0193     		str	r3, [sp, #4]
 1225 04d0 0D23     		movs	r3, #13
 1226 04d2 0093     		str	r3, [sp]
 1227 04d4 4023     		movs	r3, #64
 1228 04d6 0022     		movs	r2, #0
 1229 04d8 1146     		mov	r1, r2
 1230 04da 2046     		mov	r0, r4
 1231 04dc FFF7FEFF 		bl	draw_MeasLabelUnit
 1232              	.LVL130:
 1233 04e0 1EE7     		b	.L49
 1234              	.L79:
 1235              	.LBE4:
 642:Src/main.c    ****         // update Fuel Pump Voltage
 1236              		.loc 1 642 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 39


 1237 04e2 384B     		ldr	r3, .L89+20
 1238 04e4 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1239 04e6 8CB1     		cbz	r4, .L82
 662:Src/main.c    **** 
 1240              		.loc 1 662 0
 1241 04e8 012C     		cmp	r4, #1
 1242 04ea 00F0D180 		beq	.L83
 681:Src/main.c    **** 
 1243              		.loc 1 681 0
 1244 04ee 022C     		cmp	r4, #2
 1245 04f0 00F01881 		beq	.L84
 695:Src/main.c    ****         u8g2_ClearBuffer(&u8g2);
 1246              		.loc 1 695 0
 1247 04f4 424B     		ldr	r3, .L89+80
 1248 04f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1249 04f8 012B     		cmp	r3, #1
 1250 04fa 00F04381 		beq	.L85
 1251              	.L61:
 714:Src/main.c    **** 
 1252              		.loc 1 714 0
 1253 04fe 3048     		ldr	r0, .L89+16
 1254 0500 FFF7FEFF 		bl	u8g2_SendBuffer
 1255              	.LVL131:
 716:Src/main.c    ****     }
 1256              		.loc 1 716 0
 1257 0504 324B     		ldr	r3, .L89+32
 1258 0506 0022     		movs	r2, #0
 1259 0508 1A60     		str	r2, [r3]
 1260 050a 16E7     		b	.L55
 1261              	.L82:
 644:Src/main.c    **** 
 1262              		.loc 1 644 0
 1263 050c 2C4F     		ldr	r7, .L89+16
 1264 050e 434B     		ldr	r3, .L89+108
 1265 0510 0593     		str	r3, [sp, #20]
 1266 0512 0026     		movs	r6, #0
 1267 0514 0496     		str	r6, [sp, #16]
 1268 0516 0396     		str	r6, [sp, #12]
 1269 0518 0323     		movs	r3, #3
 1270 051a 0293     		str	r3, [sp, #8]
 1271 051c 334B     		ldr	r3, .L89+60
 1272 051e B3F90030 		ldrsh	r3, [r3]
 1273 0522 0193     		str	r3, [sp, #4]
 1274 0524 0C23     		movs	r3, #12
 1275 0526 0093     		str	r3, [sp]
 1276 0528 4623     		movs	r3, #70
 1277 052a 3422     		movs	r2, #52
 1278 052c 3146     		mov	r1, r6
 1279 052e 3846     		mov	r0, r7
 1280 0530 FFF7FEFF 		bl	draw_Value
 1281              	.LVL132:
 647:Src/main.c    **** 
 1282              		.loc 1 647 0
 1283 0534 3A4B     		ldr	r3, .L89+112
 1284 0536 1B88     		ldrh	r3, [r3]
 1285 0538 42F22832 		movw	r2, #9000
 1286 053c 0392     		str	r2, [sp, #12]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 40


 1287 053e 0296     		str	r6, [sp, #8]
 1288 0540 0193     		str	r3, [sp, #4]
 1289 0542 0E23     		movs	r3, #14
 1290 0544 0093     		str	r3, [sp]
 1291 0546 8023     		movs	r3, #128
 1292 0548 3246     		mov	r2, r6
 1293 054a 3146     		mov	r1, r6
 1294 054c 3846     		mov	r0, r7
 1295 054e FFF7FEFF 		bl	draw_BarGraph
 1296              	.LVL133:
 650:Src/main.c    ****           x = meas_x;
 1297              		.loc 1 650 0
 1298 0552 28E0     		b	.L57
 1299              	.LVL134:
 1300              	.L58:
 652:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac
 1301              		.loc 1 652 0 discriminator 3
 1302 0554 334B     		ldr	r3, .L89+116
 1303 0556 A3FB0423 		umull	r2, r3, r3, r4
 1304 055a 5B08     		lsrs	r3, r3, #1
 1305 055c 03EB4303 		add	r3, r3, r3, lsl #1
 1306 0560 E31A     		subs	r3, r4, r3
 1307 0562 03EB4303 		add	r3, r3, r3, lsl #1
 1308 0566 9A00     		lsls	r2, r3, #2
 1309 0568 D2B2     		uxtb	r2, r2
 1310 056a 1032     		adds	r2, r2, #16
 1311              	.LVL135:
 653:Src/main.c    ****         }
 1312              		.loc 1 653 0 discriminator 3
 1313 056c 04EB8401 		add	r1, r4, r4, lsl #2
 1314 0570 254B     		ldr	r3, .L89+88
 1315 0572 0B44     		add	r3, r3, r1
 1316 0574 0593     		str	r3, [sp, #20]
 1317 0576 2C4B     		ldr	r3, .L89+120
 1318 0578 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1319 057a 0493     		str	r3, [sp, #16]
 1320 057c 2B4B     		ldr	r3, .L89+124
 1321 057e 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1322 0580 0393     		str	r3, [sp, #12]
 1323 0582 2B4B     		ldr	r3, .L89+128
 1324 0584 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1325 0586 0293     		str	r3, [sp, #8]
 1326 0588 2A4B     		ldr	r3, .L89+132
 1327 058a 33F91430 		ldrsh	r3, [r3, r4, lsl #1]
 1328 058e 0193     		str	r3, [sp, #4]
 1329 0590 0C23     		movs	r3, #12
 1330 0592 0093     		str	r3, [sp]
 1331 0594 4623     		movs	r3, #70
 1332 0596 02F0FC02 		and	r2, r2, #252
 1333              	.LVL136:
 1334 059a 0021     		movs	r1, #0
 1335 059c 0848     		ldr	r0, .L89+16
 1336 059e FFF7FEFF 		bl	draw_Value
 1337              	.LVL137:
 650:Src/main.c    ****           x = meas_x;
 1338              		.loc 1 650 0 discriminator 3
 1339 05a2 0134     		adds	r4, r4, #1
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 41


 1340              	.LVL138:
 1341 05a4 E4B2     		uxtb	r4, r4
 1342              	.LVL139:
 1343              	.L57:
 650:Src/main.c    ****           x = meas_x;
 1344              		.loc 1 650 0 is_stmt 0 discriminator 1
 1345 05a6 022C     		cmp	r4, #2
 1346 05a8 D4D9     		bls	.L58
 655:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 1347              		.loc 1 655 0 is_stmt 1
 1348 05aa 0324     		movs	r4, #3
 1349              	.LVL140:
 1350 05ac 6DE0     		b	.L59
 1351              	.L90:
 1352 05ae 00BF     		.align	3
 1353              	.L89:
 1354 05b0 9A999999 		.word	2576980378
 1355 05b4 99993040 		.word	1076926873
 1356 05b8 54000000 		.word	.LC9
 1357 05bc 00000000 		.word	huart2
 1358 05c0 00000000 		.word	u8g2
 1359 05c4 00000000 		.word	mode
 1360 05c8 00100040 		.word	1073745920
 1361 05cc 00000000 		.word	flag_sw
 1362 05d0 00000000 		.word	flag_disp
 1363 05d4 0000A543 		.word	1134886912
 1364 05d8 00007F43 		.word	1132396544
 1365 05dc 00000000 		.word	.LANCHOR6
 1366 05e0 00002543 		.word	1126498304
 1367 05e4 00000000 		.word	.LANCHOR7
 1368 05e8 00002440 		.word	1076101120
 1369 05ec 00000000 		.word	.LANCHOR5
 1370 05f0 00000000 		.word	UART1_RxData
 1371 05f4 00000000 		.word	flag_meas
 1372 05f8 002C0140 		.word	1073818624
 1373 05fc 48000000 		.word	.LC7
 1374 0600 00000000 		.word	setting
 1375 0604 00000000 		.word	.LANCHOR2
 1376 0608 00000000 		.word	.LANCHOR3
 1377 060c 00000000 		.word	.LANCHOR0
 1378 0610 00000000 		.word	.LANCHOR1
 1379 0614 5C000000 		.word	.LC10
 1380 0618 60000000 		.word	.LC11
 1381 061c 00000000 		.word	.LC0
 1382 0620 00000000 		.word	rpm
 1383 0624 ABAAAAAA 		.word	-1431655765
 1384 0628 00000000 		.word	.LANCHOR9
 1385 062c 00000000 		.word	.LANCHOR10
 1386 0630 00000000 		.word	.LANCHOR11
 1387 0634 00000000 		.word	.LANCHOR8
 1388              	.LVL141:
 1389              	.L60:
 657:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 1390              		.loc 1 657 0 discriminator 3
 1391 0638 724B     		ldr	r3, .L91
 1392 063a A3FB0423 		umull	r2, r3, r3, r4
 1393 063e 5B08     		lsrs	r3, r3, #1
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 42


 1394 0640 03EB4303 		add	r3, r3, r3, lsl #1
 1395 0644 E31A     		subs	r3, r4, r3
 1396 0646 03EB4303 		add	r3, r3, r3, lsl #1
 1397 064a 9A00     		lsls	r2, r3, #2
 1398 064c D2B2     		uxtb	r2, r2
 1399 064e 1032     		adds	r2, r2, #16
 1400              	.LVL142:
 658:Src/main.c    ****         }
 1401              		.loc 1 658 0 discriminator 3
 1402 0650 04EB8401 		add	r1, r4, r4, lsl #2
 1403 0654 6C4B     		ldr	r3, .L91+4
 1404 0656 0B44     		add	r3, r3, r1
 1405 0658 0593     		str	r3, [sp, #20]
 1406 065a 6C4B     		ldr	r3, .L91+8
 1407 065c 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1408 065e 0493     		str	r3, [sp, #16]
 1409 0660 6B4B     		ldr	r3, .L91+12
 1410 0662 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1411 0664 0393     		str	r3, [sp, #12]
 1412 0666 6B4B     		ldr	r3, .L91+16
 1413 0668 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1414 066a 0293     		str	r3, [sp, #8]
 1415 066c 6A4B     		ldr	r3, .L91+20
 1416 066e 33F91430 		ldrsh	r3, [r3, r4, lsl #1]
 1417 0672 0193     		str	r3, [sp, #4]
 1418 0674 0C23     		movs	r3, #12
 1419 0676 0093     		str	r3, [sp]
 1420 0678 3823     		movs	r3, #56
 1421 067a 02F0FC02 		and	r2, r2, #252
 1422              	.LVL143:
 1423 067e 4821     		movs	r1, #72
 1424 0680 6648     		ldr	r0, .L91+24
 1425 0682 FFF7FEFF 		bl	draw_Value
 1426              	.LVL144:
 655:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 1427              		.loc 1 655 0 discriminator 3
 1428 0686 0134     		adds	r4, r4, #1
 1429              	.LVL145:
 1430 0688 E4B2     		uxtb	r4, r4
 1431              	.LVL146:
 1432              	.L59:
 655:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 1433              		.loc 1 655 0 is_stmt 0 discriminator 1
 1434 068a 052C     		cmp	r4, #5
 1435 068c D4D9     		bls	.L60
 1436 068e 36E7     		b	.L61
 1437              	.LVL147:
 1438              	.L83:
 1439              	.LBB5:
 664:Src/main.c    ****         
 1440              		.loc 1 664 0 is_stmt 1
 1441 0690 614E     		ldr	r6, .L91+20
 1442 0692 624C     		ldr	r4, .L91+24
 1443 0694 B6F90010 		ldrsh	r1, [r6]
 1444 0698 2046     		mov	r0, r4
 1445 069a FFF7FEFF 		bl	draw_CircularMeter
 1446              	.LVL148:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 43


 666:Src/main.c    ****         draw_MeasUnit(&u8g2, 38, 40, 28, 16, "kPa");
 1447              		.loc 1 666 0
 1448 069e 604B     		ldr	r3, .L91+28
 1449 06a0 0593     		str	r3, [sp, #20]
 1450 06a2 0123     		movs	r3, #1
 1451 06a4 0493     		str	r3, [sp, #16]
 1452 06a6 0223     		movs	r3, #2
 1453 06a8 0393     		str	r3, [sp, #12]
 1454 06aa 0323     		movs	r3, #3
 1455 06ac 0293     		str	r3, [sp, #8]
 1456 06ae B6F90030 		ldrsh	r3, [r6]
 1457 06b2 0193     		str	r3, [sp, #4]
 1458 06b4 1026     		movs	r6, #16
 1459 06b6 0096     		str	r6, [sp]
 1460 06b8 1E23     		movs	r3, #30
 1461 06ba 2122     		movs	r2, #33
 1462 06bc 2421     		movs	r1, #36
 1463 06be 2046     		mov	r0, r4
 1464 06c0 FFF7FEFF 		bl	draw_Value
 1465              	.LVL149:
 667:Src/main.c    **** /*        
 1466              		.loc 1 667 0
 1467 06c4 574B     		ldr	r3, .L91+32
 1468 06c6 0193     		str	r3, [sp, #4]
 1469 06c8 0096     		str	r6, [sp]
 1470 06ca 1C23     		movs	r3, #28
 1471 06cc 2822     		movs	r2, #40
 1472 06ce 2621     		movs	r1, #38
 1473 06d0 2046     		mov	r0, r4
 1474 06d2 FFF7FEFF 		bl	draw_MeasUnit
 1475              	.LVL150:
 674:Src/main.c    ****           x = meas_C_x;
 1476              		.loc 1 674 0
 1477 06d6 0024     		movs	r4, #0
 1478              	.LVL151:
 1479              	.L63:
 674:Src/main.c    ****           x = meas_C_x;
 1480              		.loc 1 674 0 is_stmt 0 discriminator 1
 1481 06d8 032C     		cmp	r4, #3
 1482 06da 3FF610AF 		bhi	.L61
 1483              	.LVL152:
 676:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_C_width, meas_C_height, meas_value[n], meas_digit[n], meas_f
 1484              		.loc 1 676 0 is_stmt 1 discriminator 3
 1485 06de 04EB4402 		add	r2, r4, r4, lsl #1
 1486 06e2 04EB8202 		add	r2, r4, r2, lsl #2
 1487 06e6 D2B2     		uxtb	r2, r2
 1488 06e8 0232     		adds	r2, r2, #2
 1489              	.LVL153:
 677:Src/main.c    ****         }
 1490              		.loc 1 677 0 discriminator 3
 1491 06ea 04EB8401 		add	r1, r4, r4, lsl #2
 1492 06ee 464B     		ldr	r3, .L91+4
 1493 06f0 0B44     		add	r3, r3, r1
 1494 06f2 0593     		str	r3, [sp, #20]
 1495 06f4 454B     		ldr	r3, .L91+8
 1496 06f6 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1497 06f8 0493     		str	r3, [sp, #16]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 44


 1498 06fa 454B     		ldr	r3, .L91+12
 1499 06fc 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1500 06fe 0393     		str	r3, [sp, #12]
 1501 0700 444B     		ldr	r3, .L91+16
 1502 0702 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1503 0704 0293     		str	r3, [sp, #8]
 1504 0706 444B     		ldr	r3, .L91+20
 1505 0708 33F91430 		ldrsh	r3, [r3, r4, lsl #1]
 1506 070c 0193     		str	r3, [sp, #4]
 1507 070e 0D23     		movs	r3, #13
 1508 0710 0093     		str	r3, [sp]
 1509 0712 3C23     		movs	r3, #60
 1510 0714 D2B2     		uxtb	r2, r2
 1511 0716 4421     		movs	r1, #68
 1512 0718 4048     		ldr	r0, .L91+24
 1513 071a FFF7FEFF 		bl	draw_Value
 1514              	.LVL154:
 674:Src/main.c    ****           x = meas_C_x;
 1515              		.loc 1 674 0 discriminator 3
 1516 071e 0134     		adds	r4, r4, #1
 1517              	.LVL155:
 1518 0720 E4B2     		uxtb	r4, r4
 1519              	.LVL156:
 1520 0722 D9E7     		b	.L63
 1521              	.LVL157:
 1522              	.L84:
 1523              	.LBE5:
 1524              	.LBB6:
 683:Src/main.c    ****           circular_buffer_index--;
 1525              		.loc 1 683 0
 1526 0724 65B3     		cbz	r5, .L73
 684:Src/main.c    ****         }else{
 1527              		.loc 1 684 0
 1528 0726 013D     		subs	r5, r5, #1
 1529              	.LVL158:
 1530 0728 ADB2     		uxth	r5, r5
 1531              	.LVL159:
 1532              	.L66:
 688:Src/main.c    **** 
 1533              		.loc 1 688 0
 1534 072a 3B4B     		ldr	r3, .L91+20
 1535 072c B3F90030 		ldrsh	r3, [r3]
 1536 0730 0DF50264 		add	r4, sp, #2080
 1537 0734 24F81530 		strh	r3, [r4, r5, lsl #1]	@ movhi
 691:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 1538              		.loc 1 691 0
 1539 0738 384E     		ldr	r6, .L91+24
 1540 073a 0495     		str	r5, [sp, #16]
 1541 073c 0394     		str	r4, [sp, #12]
 1542 073e C823     		movs	r3, #200
 1543 0740 0293     		str	r3, [sp, #8]
 1544 0742 6FF06303 		mvn	r3, #99
 1545 0746 0193     		str	r3, [sp, #4]
 1546 0748 3423     		movs	r3, #52
 1547 074a 0093     		str	r3, [sp]
 1548 074c 8023     		movs	r3, #128
 1549 074e 0D22     		movs	r2, #13
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 45


 1550 0750 0021     		movs	r1, #0
 1551 0752 3046     		mov	r0, r6
 1552 0754 FFF7FEFF 		bl	draw_Wave
 1553              	.LVL160:
 692:Src/main.c    **** 
 1554              		.loc 1 692 0
 1555 0758 324B     		ldr	r3, .L91+32
 1556 075a 0593     		str	r3, [sp, #20]
 1557 075c 0123     		movs	r3, #1
 1558 075e 0493     		str	r3, [sp, #16]
 1559 0760 0223     		movs	r3, #2
 1560 0762 0393     		str	r3, [sp, #12]
 1561 0764 0323     		movs	r3, #3
 1562 0766 0293     		str	r3, [sp, #8]
 1563 0768 34F91530 		ldrsh	r3, [r4, r5, lsl #1]
 1564 076c 0193     		str	r3, [sp, #4]
 1565 076e 0D23     		movs	r3, #13
 1566 0770 0093     		str	r3, [sp]
 1567 0772 4023     		movs	r3, #64
 1568 0774 0022     		movs	r2, #0
 1569 0776 1146     		mov	r1, r2
 1570 0778 3046     		mov	r0, r6
 1571 077a FFF7FEFF 		bl	draw_Value
 1572              	.LVL161:
 1573              	.LBE6:
 1574 077e BEE6     		b	.L61
 1575              	.L73:
 1576              	.LBB7:
 686:Src/main.c    ****         }
 1577              		.loc 1 686 0
 1578 0780 8025     		movs	r5, #128
 1579              	.LVL162:
 1580 0782 D2E7     		b	.L66
 1581              	.LVL163:
 1582              	.L85:
 1583              	.LBE7:
 696:Src/main.c    ****         u8g2_SetFont(&u8g2, u8g2_font_7x14B_tf);
 1584              		.loc 1 696 0
 1585 0784 254C     		ldr	r4, .L91+24
 1586 0786 2046     		mov	r0, r4
 1587 0788 FFF7FEFF 		bl	u8g2_ClearBuffer
 1588              	.LVL164:
 697:Src/main.c    ****         u8g2_DrawStr(&u8g2, 2, 15, "Mode Setting" );
 1589              		.loc 1 697 0
 1590 078c 2649     		ldr	r1, .L91+36
 1591 078e 2046     		mov	r0, r4
 1592 0790 FFF7FEFF 		bl	u8g2_SetFont
 1593              	.LVL165:
 698:Src/main.c    ****         if( cursor == 0 ){
 1594              		.loc 1 698 0
 1595 0794 254B     		ldr	r3, .L91+40
 1596 0796 0F22     		movs	r2, #15
 1597 0798 0221     		movs	r1, #2
 1598 079a 2046     		mov	r0, r4
 1599 079c FFF7FEFF 		bl	u8g2_DrawStr
 1600              	.LVL166:
 699:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, ">" );
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 46


 1601              		.loc 1 699 0
 1602 07a0 234B     		ldr	r3, .L91+44
 1603 07a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1604 07a4 03BB     		cbnz	r3, .L67
 700:Src/main.c    ****         }else{
 1605              		.loc 1 700 0
 1606 07a6 234B     		ldr	r3, .L91+48
 1607 07a8 1E22     		movs	r2, #30
 1608 07aa 0221     		movs	r1, #2
 1609 07ac 2046     		mov	r0, r4
 1610 07ae FFF7FEFF 		bl	u8g2_DrawStr
 1611              	.LVL167:
 1612              	.L68:
 704:Src/main.c    ****         if( cursor == 1 ){
 1613              		.loc 1 704 0
 1614 07b2 214B     		ldr	r3, .L91+52
 1615 07b4 1E22     		movs	r2, #30
 1616 07b6 0A21     		movs	r1, #10
 1617 07b8 1848     		ldr	r0, .L91+24
 1618 07ba FFF7FEFF 		bl	u8g2_DrawStr
 1619              	.LVL168:
 705:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 1620              		.loc 1 705 0
 1621 07be 1C4B     		ldr	r3, .L91+44
 1622 07c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1623 07c2 012B     		cmp	r3, #1
 1624 07c4 17D0     		beq	.L86
 708:Src/main.c    ****         }
 1625              		.loc 1 708 0
 1626 07c6 1D4B     		ldr	r3, .L91+56
 1627 07c8 2D22     		movs	r2, #45
 1628 07ca 0221     		movs	r1, #2
 1629 07cc 1348     		ldr	r0, .L91+24
 1630 07ce FFF7FEFF 		bl	u8g2_DrawStr
 1631              	.LVL169:
 1632              	.L70:
 710:Src/main.c    ****         u8g2_SendBuffer(&u8g2);
 1633              		.loc 1 710 0
 1634 07d2 124C     		ldr	r4, .L91+24
 1635 07d4 1A4B     		ldr	r3, .L91+60
 1636 07d6 2D22     		movs	r2, #45
 1637 07d8 0A21     		movs	r1, #10
 1638 07da 2046     		mov	r0, r4
 1639 07dc FFF7FEFF 		bl	u8g2_DrawStr
 1640              	.LVL170:
 711:Src/main.c    ****       }
 1641              		.loc 1 711 0
 1642 07e0 2046     		mov	r0, r4
 1643 07e2 FFF7FEFF 		bl	u8g2_SendBuffer
 1644              	.LVL171:
 1645 07e6 8AE6     		b	.L61
 1646              	.L67:
 702:Src/main.c    ****         }
 1647              		.loc 1 702 0
 1648 07e8 144B     		ldr	r3, .L91+56
 1649 07ea 1E22     		movs	r2, #30
 1650 07ec 0221     		movs	r1, #2
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 47


 1651 07ee 0B48     		ldr	r0, .L91+24
 1652 07f0 FFF7FEFF 		bl	u8g2_DrawStr
 1653              	.LVL172:
 1654 07f4 DDE7     		b	.L68
 1655              	.L86:
 706:Src/main.c    ****         }else{
 1656              		.loc 1 706 0
 1657 07f6 0F4B     		ldr	r3, .L91+48
 1658 07f8 2D22     		movs	r2, #45
 1659 07fa 0221     		movs	r1, #2
 1660 07fc 0748     		ldr	r0, .L91+24
 1661 07fe FFF7FEFF 		bl	u8g2_DrawStr
 1662              	.LVL173:
 1663 0802 E6E7     		b	.L70
 1664              	.L92:
 1665              		.align	2
 1666              	.L91:
 1667 0804 ABAAAAAA 		.word	-1431655765
 1668 0808 00000000 		.word	.LANCHOR3
 1669 080c 00000000 		.word	.LANCHOR9
 1670 0810 00000000 		.word	.LANCHOR10
 1671 0814 00000000 		.word	.LANCHOR11
 1672 0818 00000000 		.word	.LANCHOR8
 1673 081c 00000000 		.word	u8g2
 1674 0820 64000000 		.word	.LC12
 1675 0824 5C000000 		.word	.LC10
 1676 0828 00000000 		.word	u8g2_font_7x14B_tf
 1677 082c 68000000 		.word	.LC13
 1678 0830 00000000 		.word	.LANCHOR12
 1679 0834 78000000 		.word	.LC14
 1680 0838 80000000 		.word	.LC16
 1681 083c 7C000000 		.word	.LC15
 1682 0840 8C000000 		.word	.LC17
 1683              	.LBE2:
 1684              		.cfi_endproc
 1685              	.LFE130:
 1687              		.section	.text.assert_failed,"ax",%progbits
 1688              		.align	1
 1689              		.global	assert_failed
 1690              		.syntax unified
 1691              		.thumb
 1692              		.thumb_func
 1693              		.fpu fpv4-sp-d16
 1695              	assert_failed:
 1696              	.LFB133:
 795:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 796:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 797:Src/main.c    ****   while(1) 
 798:Src/main.c    ****   {
 799:Src/main.c    ****   }
 800:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */ 
 801:Src/main.c    **** }
 802:Src/main.c    **** 
 803:Src/main.c    **** #ifdef USE_FULL_ASSERT
 804:Src/main.c    **** 
 805:Src/main.c    **** /**
 806:Src/main.c    ****    * @brief Reports the name of the source file and the source line number
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 48


 807:Src/main.c    ****    * where the assert_param error has occurred.
 808:Src/main.c    ****    * @param file: pointer to the source file name
 809:Src/main.c    ****    * @param line: assert_param error line source number
 810:Src/main.c    ****    * @retval None
 811:Src/main.c    ****    */
 812:Src/main.c    **** void assert_failed(uint8_t* file, uint32_t line)
 813:Src/main.c    **** {
 1697              		.loc 1 813 0
 1698              		.cfi_startproc
 1699              		@ args = 0, pretend = 0, frame = 0
 1700              		@ frame_needed = 0, uses_anonymous_args = 0
 1701              		@ link register save eliminated.
 1702              	.LVL174:
 814:Src/main.c    ****   /* USER CODE BEGIN 6 */
 815:Src/main.c    ****   /* User can add his own implementation to report the file name and line number,
 816:Src/main.c    ****     ex: printf("Wrong parameters value: file %s on line %d¥r¥n", file, line) */
 817:Src/main.c    ****   /* USER CODE END 6 */
 818:Src/main.c    **** 
 819:Src/main.c    **** }
 1703              		.loc 1 819 0
 1704 0000 7047     		bx	lr
 1705              		.cfi_endproc
 1706              	.LFE133:
 1708              		.comm	Gsens_Z,2,2
 1709              		.comm	Gsens_Z0,1,1
 1710              		.comm	Gsens_Z1,1,1
 1711              		.comm	Gsens_Y,2,2
 1712              		.comm	Gsens_Y0,1,1
 1713              		.comm	Gsens_Y1,1,1
 1714              		.comm	Gsens_X,2,2
 1715              		.comm	Gsens_X0,1,1
 1716              		.comm	Gsens_X1,1,1
 1717              		.global	FP_duty
 1718              		.global	FP_volt
 1719              		.global	O2_volt
 1720              		.global	meas_value
 1721              		.global	meas_sign
 1722              		.global	meas_frac
 1723              		.global	meas_digit
 1724              		.global	meas_unit
 1725              		.global	meas_name
 1726              		.global	idct_status
 1727              		.global	idct_name
 1728              		.global	cursor
 1729              		.comm	setting,1,1
 1730              		.comm	mode,1,1
 1731              		.global	MT
 1732              		.global	gear
 1733              		.global	speed
 1734              		.global	logo_bits
 1735              		.global	update_display
 1736              		.comm	u8g2,128,4
 1737              		.section	.bss.cursor,"aw",%nobits
 1738              		.set	.LANCHOR12,. + 0
 1741              	cursor:
 1742 0000 00       		.space	1
 1743              		.section	.bss.gear,"aw",%nobits
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 49


 1746              	gear:
 1747 0000 00       		.space	1
 1748              		.section	.bss.update_display,"aw",%nobits
 1751              	update_display:
 1752 0000 00       		.space	1
 1753              		.section	.data.FP_duty,"aw",%progbits
 1754              		.align	1
 1755              		.set	.LANCHOR5,. + 0
 1758              	FP_duty:
 1759 0000 6400     		.short	100
 1760              		.section	.data.FP_volt,"aw",%progbits
 1761              		.align	1
 1762              		.set	.LANCHOR7,. + 0
 1765              	FP_volt:
 1766 0000 4A01     		.short	330
 1767              		.section	.data.MT,"aw",%progbits
 1768              		.align	3
 1771              	MT:
 1772 0000 77BE9F1A 		.word	446676599
 1773 0004 2FDD0B40 		.word	1074519343
 1774 0008 1F85EB51 		.word	1374389535
 1775 000c B81E0040 		.word	1073749688
 1776 0010 A8C64B37 		.word	927712936
 1777 0014 8941F63F 		.word	1073103241
 1778 0018 00000000 		.word	0
 1779 001c 0000F03F 		.word	1072693248
 1780 0020 986E1283 		.word	2199023256
 1781 0024 C0CAE93F 		.word	1072286400
 1782              		.section	.data.O2_volt,"aw",%progbits
 1783              		.align	1
 1784              		.set	.LANCHOR6,. + 0
 1787              	O2_volt:
 1788 0000 4A01     		.short	330
 1789              		.section	.data.meas_value,"aw",%progbits
 1790              		.align	2
 1791              		.set	.LANCHOR8,. + 0
 1794              	meas_value:
 1795 0000 6900     		.short	105
 1796 0002 EB00     		.short	235
 1797 0004 8502     		.short	645
 1798 0006 5900     		.short	89
 1799 0008 4900     		.short	73
 1800 000a 8F00     		.short	143
 1801              		.section	.data.speed,"aw",%progbits
 1802              		.align	1
 1805              	speed:
 1806 0000 F000     		.short	240
 1807              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 1808              		.align	2
 1809              	.LC2:
 1810 0000 5372632F 		.ascii	"Src/main.c\000"
 1810      6D61696E 
 1810      2E6300
 1811              		.section	.rodata.draw_MeasLabels.str1.4,"aMS",%progbits,1
 1812              		.align	2
 1813              	.LC0:
 1814 0000 25202000 		.ascii	"%  \000"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 50


 1815              	.LC1:
 1816 0004 44555459 		.ascii	"DUTY\000"
 1816      00
 1817              		.section	.rodata.idct_name,"a",%progbits
 1818              		.align	2
 1819              		.set	.LANCHOR0,. + 0
 1822              	idct_name:
 1823 0000 43414E00 		.ascii	"CAN\000"
 1824 0004 00       		.space	1
 1825 0005 4F324642 		.ascii	"O2FB\000"
 1825      00
 1826              		.section	.rodata.idct_status,"a",%progbits
 1827              		.align	2
 1828              		.set	.LANCHOR1,. + 0
 1831              	idct_status:
 1832 0000 01       		.byte	1
 1833 0001 01       		.byte	1
 1834              		.section	.rodata.logo_bits,"a",%progbits
 1835              		.align	2
 1836              		.set	.LANCHOR4,. + 0
 1839              	logo_bits:
 1840 0000 00       		.byte	0
 1841 0001 00       		.byte	0
 1842 0002 00       		.byte	0
 1843 0003 00       		.byte	0
 1844 0004 00       		.byte	0
 1845 0005 00       		.byte	0
 1846 0006 00       		.byte	0
 1847 0007 00       		.byte	0
 1848 0008 00       		.byte	0
 1849 0009 00       		.byte	0
 1850 000a 00       		.byte	0
 1851 000b 00       		.byte	0
 1852 000c 00       		.byte	0
 1853 000d 00       		.byte	0
 1854 000e 00       		.byte	0
 1855 000f 00       		.byte	0
 1856 0010 00       		.byte	0
 1857 0011 00       		.byte	0
 1858 0012 00       		.byte	0
 1859 0013 00       		.byte	0
 1860 0014 00       		.byte	0
 1861 0015 00       		.byte	0
 1862 0016 00       		.byte	0
 1863 0017 00       		.byte	0
 1864 0018 00       		.byte	0
 1865 0019 00       		.byte	0
 1866 001a F0       		.byte	-16
 1867 001b 0F       		.byte	15
 1868 001c 00       		.byte	0
 1869 001d 00       		.byte	0
 1870 001e 00       		.byte	0
 1871 001f FC       		.byte	-4
 1872 0020 FF       		.byte	-1
 1873 0021 FF       		.byte	-1
 1874 0022 3F       		.byte	63
 1875 0023 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 51


 1876 0024 80       		.byte	-128
 1877 0025 FF       		.byte	-1
 1878 0026 FF       		.byte	-1
 1879 0027 FF       		.byte	-1
 1880 0028 FF       		.byte	-1
 1881 0029 01       		.byte	1
 1882 002a E0       		.byte	-32
 1883 002b 1F       		.byte	31
 1884 002c 00       		.byte	0
 1885 002d 80       		.byte	-128
 1886 002e FF       		.byte	-1
 1887 002f 07       		.byte	7
 1888 0030 E0       		.byte	-32
 1889 0031 01       		.byte	1
 1890 0032 00       		.byte	0
 1891 0033 80       		.byte	-128
 1892 0034 81       		.byte	-127
 1893 0035 07       		.byte	7
 1894 0036 E0       		.byte	-32
 1895 0037 01       		.byte	1
 1896 0038 00       		.byte	0
 1897 0039 80       		.byte	-128
 1898 003a 81       		.byte	-127
 1899 003b 07       		.byte	7
 1900 003c C0       		.byte	-64
 1901 003d E1       		.byte	-31
 1902 003e 07       		.byte	7
 1903 003f C0       		.byte	-64
 1904 0040 80       		.byte	-128
 1905 0041 03       		.byte	3
 1906 0042 00       		.byte	0
 1907 0043 FC       		.byte	-4
 1908 0044 1F       		.byte	31
 1909 0045 E0       		.byte	-32
 1910 0046 80       		.byte	-128
 1911 0047 03       		.byte	3
 1912 0048 00       		.byte	0
 1913 0049 FE       		.byte	-2
 1914 004a 7F       		.byte	127
 1915 004b 70       		.byte	112
 1916 004c C0       		.byte	-64
 1917 004d 01       		.byte	1
 1918 004e 00       		.byte	0
 1919 004f 0F       		.byte	15
 1920 0050 FE       		.byte	-2
 1921 0051 39       		.byte	57
 1922 0052 E0       		.byte	-32
 1923 0053 00       		.byte	0
 1924 0054 00       		.byte	0
 1925 0055 07       		.byte	7
 1926 0056 F8       		.byte	-8
 1927 0057 1F       		.byte	31
 1928 0058 F0       		.byte	-16
 1929 0059 00       		.byte	0
 1930 005a 00       		.byte	0
 1931 005b 0E       		.byte	14
 1932 005c E0       		.byte	-32
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 52


 1933 005d 1F       		.byte	31
 1934 005e 78       		.byte	120
 1935 005f 00       		.byte	0
 1936 0060 00       		.byte	0
 1937 0061 0C       		.byte	12
 1938 0062 C0       		.byte	-64
 1939 0063 FF       		.byte	-1
 1940 0064 3F       		.byte	63
 1941 0065 00       		.byte	0
 1942 0066 00       		.byte	0
 1943 0067 18       		.byte	24
 1944 0068 00       		.byte	0
 1945 0069 FF       		.byte	-1
 1946 006a 1F       		.byte	31
 1947 006b 00       		.byte	0
 1948 006c 00       		.byte	0
 1949 006d 38       		.byte	56
 1950 006e C0       		.byte	-64
 1951 006f FF       		.byte	-1
 1952 0070 0F       		.byte	15
 1953 0071 00       		.byte	0
 1954 0072 00       		.byte	0
 1955 0073 70       		.byte	112
 1956 0074 E0       		.byte	-32
 1957 0075 F1       		.byte	-15
 1958 0076 03       		.byte	3
 1959 0077 00       		.byte	0
 1960 0078 00       		.byte	0
 1961 0079 E0       		.byte	-32
 1962 007a 78       		.byte	120
 1963 007b 00       		.byte	0
 1964 007c 00       		.byte	0
 1965 007d 00       		.byte	0
 1966 007e 00       		.byte	0
 1967 007f C0       		.byte	-64
 1968 0080 3F       		.byte	63
 1969 0081 E0       		.byte	-32
 1970 0082 01       		.byte	1
 1971 0083 00       		.byte	0
 1972 0084 00       		.byte	0
 1973 0085 80       		.byte	-128
 1974 0086 1F       		.byte	31
 1975 0087 F0       		.byte	-16
 1976 0088 01       		.byte	1
 1977 0089 00       		.byte	0
 1978 008a 00       		.byte	0
 1979 008b 00       		.byte	0
 1980 008c 07       		.byte	7
 1981 008d F8       		.byte	-8
 1982 008e 00       		.byte	0
 1983 008f 00       		.byte	0
 1984 0090 00       		.byte	0
 1985 0091 00       		.byte	0
 1986 0092 1E       		.byte	30
 1987 0093 7C       		.byte	124
 1988 0094 00       		.byte	0
 1989 0095 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 53


 1990 0096 00       		.byte	0
 1991 0097 00       		.byte	0
 1992 0098 F8       		.byte	-8
 1993 0099 1F       		.byte	31
 1994 009a 00       		.byte	0
 1995 009b 00       		.byte	0
 1996 009c 00       		.byte	0
 1997 009d 00       		.byte	0
 1998 009e F0       		.byte	-16
 1999 009f 0F       		.byte	15
 2000 00a0 00       		.byte	0
 2001 00a1 00       		.byte	0
 2002 00a2 00       		.byte	0
 2003 00a3 00       		.byte	0
 2004 00a4 80       		.byte	-128
 2005 00a5 01       		.byte	1
 2006 00a6 00       		.byte	0
 2007 00a7 00       		.byte	0
 2008 00a8 00       		.byte	0
 2009 00a9 00       		.byte	0
 2010 00aa 00       		.byte	0
 2011 00ab 00       		.byte	0
 2012 00ac 00       		.byte	0
 2013 00ad 00       		.byte	0
 2014 00ae 00       		.byte	0
 2015 00af 00       		.byte	0
 2016 00b0 00       		.byte	0
 2017 00b1 00       		.byte	0
 2018 00b2 00       		.byte	0
 2019 00b3 00       		.byte	0
 2020 00b4 00       		.byte	0
 2021 00b5 00       		.byte	0
 2022 00b6 00       		.byte	0
 2023 00b7 00       		.byte	0
 2024 00b8 00       		.byte	0
 2025 00b9 00       		.byte	0
 2026 00ba 00       		.byte	0
 2027 00bb 00       		.byte	0
 2028 00bc 00       		.byte	0
 2029 00bd 00       		.byte	0
 2030 00be 00       		.byte	0
 2031 00bf 00       		.byte	0
 2032 00c0 00       		.byte	0
 2033 00c1 00       		.byte	0
 2034 00c2 00       		.byte	0
 2035 00c3 00       		.byte	0
 2036 00c4 00       		.byte	0
 2037 00c5 00       		.byte	0
 2038 00c6 00       		.byte	0
 2039 00c7 4C       		.byte	76
 2040 00c8 1C       		.byte	28
 2041 00c9 00       		.byte	0
 2042 00ca 00       		.byte	0
 2043 00cb 00       		.byte	0
 2044 00cc 00       		.byte	0
 2045 00cd 32       		.byte	50
 2046 00ce 0E       		.byte	14
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 54


 2047 00cf 00       		.byte	0
 2048 00d0 00       		.byte	0
 2049 00d1 00       		.byte	0
 2050 00d2 00       		.byte	0
 2051 00d3 00       		.byte	0
 2052 00d4 C6       		.byte	-58
 2053 00d5 00       		.byte	0
 2054 00d6 18       		.byte	24
 2055 00d7 00       		.byte	0
 2056 00d8 00       		.byte	0
 2057 00d9 7C       		.byte	124
 2058 00da EF       		.byte	-17
 2059 00db FC       		.byte	-4
 2060 00dc 39       		.byte	57
 2061 00dd 00       		.byte	0
 2062 00de 00       		.byte	0
 2063 00df 4E       		.byte	78
 2064 00e0 C6       		.byte	-58
 2065 00e1 B8       		.byte	-72
 2066 00e2 31       		.byte	49
 2067 00e3 00       		.byte	0
 2068 00e4 00       		.byte	0
 2069 00e5 3E       		.byte	62
 2070 00e6 C6       		.byte	-58
 2071 00e7 98       		.byte	-104
 2072 00e8 31       		.byte	49
 2073 00e9 00       		.byte	0
 2074 00ea 00       		.byte	0
 2075 00eb 3C       		.byte	60
 2076 00ec C6       		.byte	-58
 2077 00ed 98       		.byte	-104
 2078 00ee 31       		.byte	49
 2079 00ef 00       		.byte	0
 2080 00f0 00       		.byte	0
 2081 00f1 0E       		.byte	14
 2082 00f2 C6       		.byte	-58
 2083 00f3 98       		.byte	-104
 2084 00f4 31       		.byte	49
 2085 00f5 00       		.byte	0
 2086 00f6 00       		.byte	0
 2087 00f7 4E       		.byte	78
 2088 00f8 CE       		.byte	-50
 2089 00f9 99       		.byte	-103
 2090 00fa 31       		.byte	49
 2091 00fb 00       		.byte	0
 2092 00fc 00       		.byte	0
 2093 00fd 7C       		.byte	124
 2094 00fe EF       		.byte	-17
 2095 00ff FD       		.byte	-3
 2096 0100 7B       		.byte	123
 2097 0101 00       		.byte	0
 2098 0102 00       		.byte	0
 2099 0103 00       		.byte	0
 2100 0104 00       		.byte	0
 2101 0105 00       		.byte	0
 2102 0106 00       		.byte	0
 2103 0107 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 55


 2104 0108 00       		.byte	0
 2105 0109 00       		.byte	0
 2106 010a 00       		.byte	0
 2107 010b 00       		.byte	0
 2108 010c 00       		.byte	0
 2109 010d 00       		.byte	0
 2110 010e 00       		.byte	0
 2111 010f 00       		.byte	0
 2112 0110 00       		.byte	0
 2113 0111 00       		.byte	0
 2114 0112 00       		.byte	0
 2115 0113 00       		.byte	0
 2116 0114 00       		.byte	0
 2117 0115 00       		.byte	0
 2118 0116 00       		.byte	0
 2119 0117 00       		.byte	0
 2120 0118 00       		.byte	0
 2121 0119 00       		.byte	0
 2122 011a 00       		.byte	0
 2123 011b 00       		.byte	0
 2124 011c 00       		.byte	0
 2125 011d 00       		.byte	0
 2126 011e 00       		.byte	0
 2127 011f 00       		.byte	0
 2128              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2129              		.align	2
 2130              	.LC3:
 2131 0000 4D756C74 		.ascii	"Multi Function Meter\000"
 2131      69204675 
 2131      6E637469 
 2131      6F6E204D 
 2131      65746572 
 2132 0015 000000   		.space	3
 2133              	.LC4:
 2134 0018 5265762E 		.ascii	"Rev. 0.1a\000"
 2134      20302E31 
 2134      6100
 2135 0022 0000     		.space	2
 2136              	.LC5:
 2137 0024 48656C6C 		.ascii	"Hello. This is MFM.\012\000"
 2137      6F2E2054 
 2137      68697320 
 2137      6973204D 
 2137      464D2E0A 
 2138 0039 000000   		.space	3
 2139              	.LC6:
 2140 003c 2825642C 		.ascii	"(%d,%d,%d)\012\000"
 2140      25642C25 
 2140      64290A00 
 2141              	.LC7:
 2142 0048 55502000 		.ascii	"UP \000"
 2143              	.LC8:
 2144 004c 444F574E 		.ascii	"DOWN \000"
 2144      2000
 2145 0052 0000     		.space	2
 2146              	.LC9:
 2147 0054 454E5445 		.ascii	"ENTER \000"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 56


 2147      522000
 2148 005b 00       		.space	1
 2149              	.LC10:
 2150 005c 6B506100 		.ascii	"kPa\000"
 2151              	.LC11:
 2152 0060 4D415000 		.ascii	"MAP\000"
 2153              	.LC12:
 2154 0064 00       		.ascii	"\000"
 2155 0065 000000   		.space	3
 2156              	.LC13:
 2157 0068 4D6F6465 		.ascii	"Mode Setting\000"
 2157      20536574 
 2157      74696E67 
 2157      00
 2158 0075 000000   		.space	3
 2159              	.LC14:
 2160 0078 3E00     		.ascii	">\000"
 2161 007a 0000     		.space	2
 2162              	.LC15:
 2163 007c 2000     		.ascii	" \000"
 2164 007e 0000     		.space	2
 2165              	.LC16:
 2166 0080 4D756C74 		.ascii	"Multi-Meter\000"
 2166      692D4D65 
 2166      74657200 
 2167              	.LC17:
 2168 008c 53636F70 		.ascii	"Scope\000"
 2168      6500
 2169              		.section	.rodata.meas_digit,"a",%progbits
 2170              		.align	2
 2171              		.set	.LANCHOR11,. + 0
 2174              	meas_digit:
 2175 0000 03       		.byte	3
 2176 0001 03       		.byte	3
 2177 0002 03       		.byte	3
 2178 0003 03       		.byte	3
 2179 0004 03       		.byte	3
 2180 0005 03       		.byte	3
 2181              		.section	.rodata.meas_frac,"a",%progbits
 2182              		.align	2
 2183              		.set	.LANCHOR10,. + 0
 2186              	meas_frac:
 2187 0000 02       		.byte	2
 2188 0001 01       		.byte	1
 2189 0002 01       		.byte	1
 2190 0003 00       		.byte	0
 2191 0004 00       		.byte	0
 2192 0005 02       		.byte	2
 2193              		.section	.rodata.meas_name,"a",%progbits
 2194              		.align	2
 2195              		.set	.LANCHOR2,. + 0
 2198              	meas_name:
 2199 0000 4D415000 		.ascii	"MAP\000"
 2200 0004 000000   		.space	3
 2201 0007 4F494C50 		.ascii	"OILP\000"
 2201      00
 2202 000c 0000     		.space	2
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 57


 2203 000e 46505600 		.ascii	"FPV\000"
 2204 0012 000000   		.space	3
 2205 0015 45435400 		.ascii	"ECT\000"
 2206 0019 000000   		.space	3
 2207 001c 4F494C54 		.ascii	"OILT\000"
 2207      00
 2208 0021 0000     		.space	2
 2209 0023 4F3200   		.ascii	"O2\000"
 2210 0026 00000000 		.space	4
 2211              		.section	.rodata.meas_sign,"a",%progbits
 2212              		.align	2
 2213              		.set	.LANCHOR9,. + 0
 2216              	meas_sign:
 2217 0000 01       		.byte	1
 2218 0001 00       		.byte	0
 2219 0002 00       		.byte	0
 2220 0003 00       		.byte	0
 2221 0004 00       		.byte	0
 2222 0005 00       		.byte	0
 2223              		.section	.rodata.meas_unit,"a",%progbits
 2224              		.align	2
 2225              		.set	.LANCHOR3,. + 0
 2228              	meas_unit:
 2229 0000 6B706100 		.ascii	"kpa\000"
 2230 0004 00       		.space	1
 2231 0005 6B706100 		.ascii	"kpa\000"
 2232 0009 00       		.space	1
 2233 000a 56202000 		.ascii	"V  \000"
 2234 000e 00       		.space	1
 2235 000f B0       		.byte	-80
 2236 0010 43       		.byte	67
 2237 0011 00       		.byte	0
 2238 0012 0000     		.space	2
 2239 0014 B0       		.byte	-80
 2240 0015 43       		.byte	67
 2241 0016 00       		.byte	0
 2242 0017 0000     		.space	2
 2243 0019 5600     		.ascii	"V\000"
 2244 001b 000000   		.space	3
 2245              		.text
 2246              	.Letext0:
 2247              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 2248              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 2249              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2250              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 2251              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 2252              		.file 7 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 2253              		.file 8 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 2254              		.file 9 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 2255              		.file 10 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 2256              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2257              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 2258              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 2259              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 2260              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 2261              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 2262              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 58


 2263              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2c.h"
 2264              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi.h"
 2265              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 2266              		.file 21 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 2267              		.file 22 "Inc/adc.h"
 2268              		.file 23 "Inc/can.h"
 2269              		.file 24 "Inc/i2c.h"
 2270              		.file 25 "Inc/spi.h"
 2271              		.file 26 "Inc/tim.h"
 2272              		.file 27 "Inc/usart.h"
 2273              		.file 28 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/math.h"
 2274              		.file 29 "/Users/imashio/Electronics/ARM/_Library/u8x8.h"
 2275              		.file 30 "/Users/imashio/Electronics/ARM/_Library/u8g2.h"
 2276              		.file 31 "/Users/imashio/Electronics/ARM/_Library/flag.h"
 2277              		.file 32 "Inc/defi_decoder.h"
 2278              		.file 33 "Src/pulse_counter.h"
 2279              		.file 34 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 2280              		.file 35 "/Users/imashio/Electronics/ARM/_Library/draw_Value.h"
 2281              		.file 36 "/Users/imashio/Electronics/ARM/_Library/draw_IndicatorBox.h"
 2282              		.file 37 "/Users/imashio/Electronics/ARM/_Library/usart_transmit_printf.h"
 2283              		.file 38 "/Users/imashio/Electronics/ARM/_Library/draw_BarGraph.h"
 2284              		.file 39 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 2285              		.file 40 "Inc/gpio.h"
 2286              		.file 41 "Inc/dma.h"
 2287              		.file 42 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 2288              		.file 43 "<built-in>"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 59


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:18     .text.ADXL345_RegWrite:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:25     .text.ADXL345_RegWrite:0000000000000000 ADXL345_RegWrite
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:65     .text.ADXL345_RegWrite:0000000000000024 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:70     .text.ADXL345_RegRead_1byte:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:77     .text.ADXL345_RegRead_1byte:0000000000000000 ADXL345_RegRead_1byte
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:126    .text.ADXL345_RegRead_1byte:0000000000000034 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:131    .text.draw_indicators:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:138    .text.draw_indicators:0000000000000000 draw_indicators
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:196    .text.draw_indicators:0000000000000040 $d
                            *COM*:0000000000000080 u8g2
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:203    .text.draw_MeasLabels:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:210    .text.draw_MeasLabels:0000000000000000 draw_MeasLabels
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:353    .text.draw_MeasLabels:00000000000000d4 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:363    .text._Error_Handler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:370    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:385    .text.SystemClock_Config:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:392    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:517    .text.SystemClock_Config:00000000000000ac $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:527    .text.main:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:534    .text.main:0000000000000000 main
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:921    .text.main:000000000000025c $d
                            *COM*:0000000000000001 Gsens_X1
                            *COM*:0000000000000001 Gsens_X0
                            *COM*:0000000000000002 Gsens_X
                            *COM*:0000000000000001 Gsens_Y1
                            *COM*:0000000000000001 Gsens_Y0
                            *COM*:0000000000000002 Gsens_Y
                            *COM*:0000000000000001 Gsens_Z1
                            *COM*:0000000000000001 Gsens_Z0
                            *COM*:0000000000000002 Gsens_Z
                            *COM*:0000000000000001 mode
                            *COM*:0000000000000001 setting
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:962    .text.main:00000000000002f8 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1354   .text.main:00000000000005b0 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1391   .text.main:0000000000000638 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1667   .text.main:0000000000000804 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1688   .text.assert_failed:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1695   .text.assert_failed:0000000000000000 assert_failed
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1758   .data.FP_duty:0000000000000000 FP_duty
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1765   .data.FP_volt:0000000000000000 FP_volt
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1787   .data.O2_volt:0000000000000000 O2_volt
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1794   .data.meas_value:0000000000000000 meas_value
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:2216   .rodata.meas_sign:0000000000000000 meas_sign
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:2186   .rodata.meas_frac:0000000000000000 meas_frac
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:2174   .rodata.meas_digit:0000000000000000 meas_digit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:2228   .rodata.meas_unit:0000000000000000 meas_unit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:2198   .rodata.meas_name:0000000000000000 meas_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1831   .rodata.idct_status:0000000000000000 idct_status
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1822   .rodata.idct_name:0000000000000000 idct_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1741   .bss.cursor:0000000000000000 cursor
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1771   .data.MT:0000000000000000 MT
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1746   .bss.gear:0000000000000000 gear
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1805   .data.speed:0000000000000000 speed
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1839   .rodata.logo_bits:0000000000000000 logo_bits
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1751   .bss.update_display:0000000000000000 update_display
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 60


/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1742   .bss.cursor:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1747   .bss.gear:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1752   .bss.update_display:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1754   .data.FP_duty:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1761   .data.FP_volt:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1768   .data.MT:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1783   .data.O2_volt:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1790   .data.meas_value:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1802   .data.speed:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1808   .rodata.SystemClock_Config.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1812   .rodata.draw_MeasLabels.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1818   .rodata.idct_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1827   .rodata.idct_status:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:1835   .rodata.logo_bits:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:2129   .rodata.main.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:2170   .rodata.meas_digit:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:2182   .rodata.meas_frac:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:2194   .rodata.meas_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:2212   .rodata.meas_sign:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s:2224   .rodata.meas_unit:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_I2C_Master_Transmit
hi2c1
HAL_I2C_Master_Receive
draw_IndicatorBox
draw_MeasLabelUnit
draw_Value
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_d2iz
HAL_Init
memset
MX_GPIO_Init
MX_DMA_Init
MX_USART2_UART_Init
MX_TIM1_Init
MX_USART1_UART_Init
MX_SPI1_Init
MX_ADC1_Init
MX_TIM2_Init
MX_CAN_Init
MX_TIM6_Init
MX_I2C1_Init
MX_TIM3_Init
HAL_TIM_PWM_Start
HAL_TIM_Base_Start_IT
HAL_UART_Receive_IT
HAL_ADC_Start_DMA
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccqQ3oOT.s 			page 61


u8g2_Setup_ssd1309_128x64_noname2_f
HAL_GPIO_WritePin
HAL_Delay
u8x8_InitDisplay
u8x8_SetPowerSave
u8x8_SetContrast
u8g2_ClearDisplay
u8g2_DrawXBMP
u8g2_SetFont
u8g2_DrawStr
u8g2_SendBuffer
u8g2_ClearBuffer
HAL_UART_Transmit_printf
HAL_NVIC_DisableIRQ
htim1
htim2
htim3
htim6
UART1_Data
huart1
hadc1
u8x8_gpio_and_delay_STM32F303
u8x8_byte_4wire_hw_spi
u8g2_cb_r0
u8g2_font_5x7_tf
huart2
DEFI_value
flag_meas
defi_decoder
draw_CircularMeter_Init
draw_CircularMeter
draw_Wave_axis
draw_BarGraph
flag_sw
flag_disp
UART1_RxData
rpm
draw_MeasUnit
draw_Wave
u8g2_font_7x14B_tf
