ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.draw_indicators,"ax",%progbits
  18              		.align	1
  19              		.global	draw_indicators
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	draw_indicators:
  26              	.LFB126:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 2


  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  39:Src/main.c    **** #include "main.h"
  40:Src/main.c    **** #include "stm32f3xx_hal.h"
  41:Src/main.c    **** #include "adc.h"
  42:Src/main.c    **** #include "can.h"
  43:Src/main.c    **** #include "dma.h"
  44:Src/main.c    **** #include "i2c.h"
  45:Src/main.c    **** #include "spi.h"
  46:Src/main.c    **** #include "tim.h"
  47:Src/main.c    **** #include "usart.h"
  48:Src/main.c    **** #include "gpio.h"
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN Includes */
  51:Src/main.c    **** #include <stdio.h>
  52:Src/main.c    **** #include <math.h>
  53:Src/main.c    **** 
  54:Src/main.c    **** // #include "basic.h"  // original library
  55:Src/main.c    **** #include "usart_transmit_printf.h"
  56:Src/main.c    **** #include "u8g2.h"		// graphic display library
  57:Src/main.c    **** #include "u8x8_gpio_STM32F303.h"
  58:Src/main.c    **** #include "u8x8_byte_4wire_hw_spi.h"
  59:Src/main.c    **** #include "draw_Value.h"
  60:Src/main.c    **** #include "draw_BarGraph.h"
  61:Src/main.c    **** #include "draw_IndicatorBox.h"
  62:Src/main.c    **** 
  63:Src/main.c    **** #include "flag.h"
  64:Src/main.c    **** #include "defi_decoder.h"
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END Includes */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE BEGIN PV */
  71:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  72:Src/main.c    **** u8g2_t u8g2; // a structure which will contain all the data for one display
  73:Src/main.c    **** 
  74:Src/main.c    **** // mode definition
  75:Src/main.c    **** #define N_mode        2
  76:Src/main.c    **** 
  77:Src/main.c    **** // RPM bar graph parameter definition
  78:Src/main.c    **** #define	rpmbar_x		  0
  79:Src/main.c    **** #define	rpmbar_y		  0
  80:Src/main.c    **** #define	rpmbar_width	128
  81:Src/main.c    **** #define	rpmbar_height	14
  82:Src/main.c    **** #define	rpm_min			  0
  83:Src/main.c    **** #define	rpm_max			  9000
  84:Src/main.c    **** 
  85:Src/main.c    **** // measurements display parameter definition
  86:Src/main.c    **** #define	N_meas			  6
  87:Src/main.c    **** #define	meas_x			  0
  88:Src/main.c    **** #define	meas_y			  16
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 3


  89:Src/main.c    **** #define	meas_x_offset	2
  90:Src/main.c    **** #define	meas_width1		70
  91:Src/main.c    **** #define	meas_width2		56
  92:Src/main.c    **** #define	meas_height		12
  93:Src/main.c    **** 
  94:Src/main.c    **** // indicators parameter definition
  95:Src/main.c    **** #define	N_idct			  2
  96:Src/main.c    **** #define	idct_x			  72
  97:Src/main.c    **** #define	idct_y			  53
  98:Src/main.c    **** #define	idct_width		27
  99:Src/main.c    **** #define	idct_height		9
 100:Src/main.c    **** 
 101:Src/main.c    **** //  Fuel Pump Voltage dosplay parameter definition
 102:Src/main.c    **** #define	FP_x		    	0
 103:Src/main.c    **** #define	FP_y          52
 104:Src/main.c    **** #define	FP_height	    12
 105:Src/main.c    **** #define	FP_volt_width	45
 106:Src/main.c    **** #define	FP_duty_width	70
 107:Src/main.c    **** 
 108:Src/main.c    **** // wave display parameter definition
 109:Src/main.c    **** #define	wave_x			  0
 110:Src/main.c    **** #define	wave_y			  13
 111:Src/main.c    **** #define	wave_width		128
 112:Src/main.c    **** #define	wave_height		52
 113:Src/main.c    **** #define	wave_value_min	-6
 114:Src/main.c    **** #define	wave_value_max	+12
 115:Src/main.c    **** 
 116:Src/main.c    **** // logo parameter definition (small 'enfini' logo)
 117:Src/main.c    **** #define logo_width    48
 118:Src/main.c    **** #define logo_height   48
 119:Src/main.c    **** 
 120:Src/main.c    **** uint8_t   update_display = 0;
 121:Src/main.c    **** 
 122:Src/main.c    **** const unsigned char logo_bits[] = {
 123:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 124:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 125:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0x3F, 0x00,
 126:Src/main.c    ****   0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x1F, 0x00, 0x80, 0xFF, 0x07,
 127:Src/main.c    ****   0xE0, 0x01, 0x00, 0x80, 0x81, 0x07, 0xE0, 0x01, 0x00, 0x80, 0x81, 0x07,
 128:Src/main.c    ****   0xC0, 0xE1, 0x07, 0xC0, 0x80, 0x03, 0x00, 0xFC, 0x1F, 0xE0, 0x80, 0x03,
 129:Src/main.c    ****   0x00, 0xFE, 0x7F, 0x70, 0xC0, 0x01, 0x00, 0x0F, 0xFE, 0x39, 0xE0, 0x00,
 130:Src/main.c    ****   0x00, 0x07, 0xF8, 0x1F, 0xF0, 0x00, 0x00, 0x0E, 0xE0, 0x1F, 0x78, 0x00,
 131:Src/main.c    ****   0x00, 0x0C, 0xC0, 0xFF, 0x3F, 0x00, 0x00, 0x18, 0x00, 0xFF, 0x1F, 0x00,
 132:Src/main.c    ****   0x00, 0x38, 0xC0, 0xFF, 0x0F, 0x00, 0x00, 0x70, 0xE0, 0xF1, 0x03, 0x00,
 133:Src/main.c    ****   0x00, 0xE0, 0x78, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3F, 0xE0, 0x01, 0x00,
 134:Src/main.c    ****   0x00, 0x80, 0x1F, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00,
 135:Src/main.c    ****   0x00, 0x00, 0x1E, 0x7C, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00,
 136:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00,
 137:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 138:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 139:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4C, 0x1C, 0x00, 0x00, 0x00,
 140:Src/main.c    ****   0x00, 0x32, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x00, 0x18, 0x00,
 141:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFC, 0x39, 0x00, 0x00, 0x4E, 0xC6, 0xB8, 0x31, 0x00,
 142:Src/main.c    ****   0x00, 0x3E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x3C, 0xC6, 0x98, 0x31, 0x00,
 143:Src/main.c    ****   0x00, 0x0E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x4E, 0xCE, 0x99, 0x31, 0x00,
 144:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFD, 0x7B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 145:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 4


 146:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 147:Src/main.c    ****   };
 148:Src/main.c    **** 
 149:Src/main.c    **** /*
 150:Src/main.c    **** // logo parameter definition (meidium 'enfini' logo)
 151:Src/main.c    **** #define logo_width 54
 152:Src/main.c    **** #define logo_height 48
 153:Src/main.c    **** 
 154:Src/main.c    **** static unsigned char logo_bits[] = {
 155:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0x0F,
 156:Src/main.c    ****   0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0xE0, 0xFF, 0xFF,
 157:Src/main.c    ****   0xFF, 0xFF, 0xFF, 0x01, 0xF8, 0x3F, 0x00, 0x00, 0xF0, 0xFF, 0x07, 0xF8,
 158:Src/main.c    ****   0x01, 0x00, 0x00, 0x70, 0xE0, 0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x80,
 159:Src/main.c    ****   0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00,
 160:Src/main.c    ****   0x38, 0x80, 0x07, 0x00, 0xF8, 0x3F, 0x00, 0x38, 0x80, 0x07, 0x00, 0xFE,
 161:Src/main.c    ****   0xFF, 0x00, 0x1C, 0xC0, 0x03, 0x80, 0xFF, 0xFF, 0x01, 0x0E, 0xC0, 0x01,
 162:Src/main.c    ****   0xC0, 0x07, 0xFC, 0x07, 0x07, 0xE0, 0x01, 0x80, 0x03, 0xF0, 0x9F, 0x03,
 163:Src/main.c    ****   0xF0, 0x00, 0x80, 0x03, 0xC0, 0xFF, 0x03, 0x78, 0x00, 0x00, 0x07, 0x80,
 164:Src/main.c    ****   0xFF, 0x01, 0x3C, 0x00, 0x00, 0x06, 0x00, 0xFE, 0x87, 0x3F, 0x00, 0x00,
 165:Src/main.c    ****   0x0E, 0x00, 0xF8, 0xFF, 0x1F, 0x00, 0x00, 0x1C, 0x00, 0xF8, 0xFF, 0x07,
 166:Src/main.c    ****   0x00, 0x00, 0x38, 0x00, 0xDE, 0xFF, 0x03, 0x00, 0x00, 0x70, 0x00, 0x0F,
 167:Src/main.c    ****   0x7E, 0x00, 0x00, 0x00, 0xE0, 0xC0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xC0,
 168:Src/main.c    ****   0xF1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x00, 0x7C, 0x00, 0x00,
 169:Src/main.c    ****   0x00, 0x00, 0x3F, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x1F,
 170:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x3C, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x78,
 171:Src/main.c    ****   0xE0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0x03, 0x00, 0x00, 0x00,
 172:Src/main.c    ****   0x00, 0xC0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00,
 173:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00,
 174:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x4E, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39,
 175:Src/main.c    ****   0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00,
 176:Src/main.c    ****   0x00, 0x7E, 0x3E, 0xC7, 0x3D, 0x1C, 0x00, 0x00, 0x6F, 0x3E, 0xC7, 0x7F,
 177:Src/main.c    ****   0x1C, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x73, 0x18, 0x00, 0x00, 0x07, 0x1C,
 178:Src/main.c    ****   0x86, 0x71, 0x18, 0x00, 0x00, 0x3E, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00,
 179:Src/main.c    ****   0x1F, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x71, 0x18,
 180:Src/main.c    ****   0x00, 0x00, 0x47, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x7F, 0x3E, 0xCF,
 181:Src/main.c    ****   0xFB, 0x3C, 0x00, 0x00, 0x3C, 0x3E, 0xCF, 0xFB, 0x3C, 0x00, 0x00, 0x00,
 182:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 183:Src/main.c    ****   };
 184:Src/main.c    **** */
 185:Src/main.c    **** 
 186:Src/main.c    **** uint16_t	rpm = 0;
 187:Src/main.c    **** uint16_t	speed = 240;
 188:Src/main.c    **** uint8_t		gear = 0;
 189:Src/main.c    **** double		MT[5] = {3.483, 2.015, 1.391, 1.000, 0.806};
 190:Src/main.c    **** 
 191:Src/main.c    **** // UI
 192:Src/main.c    **** uint8_t mode;
 193:Src/main.c    **** uint8_t setting;
 194:Src/main.c    **** uint8_t cursor = 0;
 195:Src/main.c    **** 
 196:Src/main.c    **** 
 197:Src/main.c    **** /*
 198:Src/main.c    **** typedef struct {
 199:Src/main.c    **** 	unsigned char	name;
 200:Src/main.c    **** 	uint8_t			status;
 201:Src/main.c    **** } idct;
 202:Src/main.c    **** */
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 5


 203:Src/main.c    **** 
 204:Src/main.c    **** // variables for indicators
 205:Src/main.c    **** const unsigned char idct_name[N_idct][5] = { // length must be (text length + 1)
 206:Src/main.c    **** 		"CAN"	,
 207:Src/main.c    **** 		"O2FB"
 208:Src/main.c    **** };
 209:Src/main.c    **** 
 210:Src/main.c    **** const uint8_t	idct_status[N_idct] = {
 211:Src/main.c    **** 		1	,
 212:Src/main.c    **** 		1
 213:Src/main.c    **** };
 214:Src/main.c    **** 
 215:Src/main.c    **** // variables for measurement
 216:Src/main.c    **** const unsigned char meas_name[N_meas][7] = { // length must be (text length + 1)
 217:Src/main.c    **** 		"MAP"	,
 218:Src/main.c    **** 		"OILP"	,
 219:Src/main.c    **** 		"FPVOLT"	,
 220:Src/main.c    **** 		"ECT"	,
 221:Src/main.c    **** 		"OILT"	,
 222:Src/main.c    **** 		"O2"
 223:Src/main.c    **** };
 224:Src/main.c    **** 
 225:Src/main.c    **** const unsigned char meas_unit[N_meas][5] = {
 226:Src/main.c    **** 		"kpa"			,	// MAP
 227:Src/main.c    **** 		"kpa"			,	// OILP
 228:Src/main.c    **** 		"V  "     ,	// FuelPump Voltage
 229:Src/main.c    **** 		{176, 67, 0}	,	// ECT  degC...{176, 67, 0}
 230:Src/main.c    **** 		{176, 67, 0}	,	// OILT  degC...{176, 67, 0}
 231:Src/main.c    **** 		"V"					// O2
 232:Src/main.c    **** };
 233:Src/main.c    **** 
 234:Src/main.c    **** const uint8_t	meas_digit[N_meas] = {
 235:Src/main.c    **** 		3	,	// MAP
 236:Src/main.c    **** 		3	,	// OILP
 237:Src/main.c    **** 		3	,	// FuelPump Voltage
 238:Src/main.c    **** 		3	,	// ECT
 239:Src/main.c    **** 		3	,	// OILT
 240:Src/main.c    **** 		3		// O2
 241:Src/main.c    **** };
 242:Src/main.c    **** 
 243:Src/main.c    **** const uint8_t	meas_frac[N_meas] = {
 244:Src/main.c    **** 		2	,	// MAP
 245:Src/main.c    **** 		2	,	// OILP
 246:Src/main.c    **** 		1	,	// FuelPump Voltage
 247:Src/main.c    **** 		0	,	// ECT
 248:Src/main.c    **** 		0	,	// OILT
 249:Src/main.c    **** 		2		// O2
 250:Src/main.c    **** };
 251:Src/main.c    **** 
 252:Src/main.c    **** const uint8_t	meas_sign[N_meas] = {
 253:Src/main.c    **** 		1	,	// MAP
 254:Src/main.c    **** 		0	,	// OILP
 255:Src/main.c    **** 		0	,	// FuelPump Voltage
 256:Src/main.c    **** 		0	,	// ECT
 257:Src/main.c    **** 		0	,	// OILT
 258:Src/main.c    **** 		0		// O2
 259:Src/main.c    **** };
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 6


 260:Src/main.c    **** 
 261:Src/main.c    **** int16_t	meas_value[N_meas] = {
 262:Src/main.c    **** 		105	,	// MAP
 263:Src/main.c    **** 		235	,	// OILP
 264:Src/main.c    **** 		645	,	// FuelPump Voltage
 265:Src/main.c    **** 		89	,	// ECT
 266:Src/main.c    **** 		73	,	// OILT
 267:Src/main.c    **** 		143		// O2
 268:Src/main.c    **** };
 269:Src/main.c    **** 
 270:Src/main.c    **** // Fuel Pump Voltage
 271:Src/main.c    **** int16_t FP_volt = 330;
 272:Src/main.c    **** int16_t FP_duty = 100;
 273:Src/main.c    **** 
 274:Src/main.c    **** /* USER CODE END PV */
 275:Src/main.c    **** 
 276:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 277:Src/main.c    **** void SystemClock_Config(void);
 278:Src/main.c    **** 
 279:Src/main.c    **** /* USER CODE BEGIN PFP */
 280:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 281:Src/main.c    **** 
 282:Src/main.c    **** /* USER CODE END PFP */
 283:Src/main.c    **** 
 284:Src/main.c    **** /* USER CODE BEGIN 0 */
 285:Src/main.c    **** void draw_indicators(){
  28              		.loc 1 285 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 84B0     		sub	sp, sp, #16
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  40              	.LVL0:
 286:Src/main.c    ****   uint8_t n;
 287:Src/main.c    ****   uint8_t x, y;
 288:Src/main.c    ****   // draw indicators
 289:Src/main.c    ****   for( n=0; n<N_idct; n++ ){
  41              		.loc 1 289 0
  42 0004 0024     		movs	r4, #0
  43 0006 16E0     		b	.L2
  44              	.LVL1:
  45              	.L3:
 290:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
  46              		.loc 1 290 0 discriminator 3
  47 0008 04EB8402 		add	r2, r4, r4, lsl #2
  48 000c 0C4B     		ldr	r3, .L5
  49 000e 1344     		add	r3, r3, r2
  50 0010 C4EBC401 		rsb	r1, r4, r4, lsl #3
  51 0014 04EB8101 		add	r1, r4, r1, lsl #2
  52 0018 4831     		adds	r1, r1, #72
  53 001a 0293     		str	r3, [sp, #8]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 7


  54 001c 094B     		ldr	r3, .L5+4
  55 001e 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
  56 0020 0193     		str	r3, [sp, #4]
  57 0022 0923     		movs	r3, #9
  58 0024 0093     		str	r3, [sp]
  59 0026 1B23     		movs	r3, #27
  60 0028 3522     		movs	r2, #53
  61 002a C9B2     		uxtb	r1, r1
  62 002c 0648     		ldr	r0, .L5+8
  63 002e FFF7FEFF 		bl	draw_IndicatorBox
  64              	.LVL2:
 289:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
  65              		.loc 1 289 0 discriminator 3
  66 0032 0134     		adds	r4, r4, #1
  67              	.LVL3:
  68 0034 E4B2     		uxtb	r4, r4
  69              	.LVL4:
  70              	.L2:
 289:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
  71              		.loc 1 289 0 is_stmt 0 discriminator 1
  72 0036 012C     		cmp	r4, #1
  73 0038 E6D9     		bls	.L3
 291:Src/main.c    ****   }
 292:Src/main.c    **** }
  74              		.loc 1 292 0 is_stmt 1
  75 003a 04B0     		add	sp, sp, #16
  76              	.LCFI2:
  77              		.cfi_def_cfa_offset 8
  78              		@ sp needed
  79 003c 10BD     		pop	{r4, pc}
  80              	.LVL5:
  81              	.L6:
  82 003e 00BF     		.align	2
  83              	.L5:
  84 0040 00000000 		.word	.LANCHOR0
  85 0044 00000000 		.word	.LANCHOR1
  86 0048 00000000 		.word	u8g2
  87              		.cfi_endproc
  88              	.LFE126:
  90              		.section	.text.draw_MeasLabels,"ax",%progbits
  91              		.align	1
  92              		.global	draw_MeasLabels
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  96              		.fpu fpv4-sp-d16
  98              	draw_MeasLabels:
  99              	.LFB127:
 293:Src/main.c    **** 
 294:Src/main.c    **** void draw_MeasLabels(){
 100              		.loc 1 294 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104 0000 70B5     		push	{r4, r5, r6, lr}
 105              	.LCFI3:
 106              		.cfi_def_cfa_offset 16
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 8


 107              		.cfi_offset 4, -16
 108              		.cfi_offset 5, -12
 109              		.cfi_offset 6, -8
 110              		.cfi_offset 14, -4
 111 0002 86B0     		sub	sp, sp, #24
 112              	.LCFI4:
 113              		.cfi_def_cfa_offset 40
 114              	.LVL6:
 295:Src/main.c    ****   uint8_t n;
 296:Src/main.c    ****   uint8_t x, y;
 297:Src/main.c    ****   // draw measurements label & unit
 298:Src/main.c    ****   for( n=0; n<3; n++ ){
 115              		.loc 1 298 0
 116 0004 0024     		movs	r4, #0
 117 0006 20E0     		b	.L8
 118              	.LVL7:
 119              	.L9:
 299:Src/main.c    **** 	  x = meas_x;
 300:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 120              		.loc 1 300 0 discriminator 3
 121 0008 324B     		ldr	r3, .L13
 122 000a A3FB0423 		umull	r2, r3, r3, r4
 123 000e 5B08     		lsrs	r3, r3, #1
 124 0010 03EB4303 		add	r3, r3, r3, lsl #1
 125 0014 E31A     		subs	r3, r4, r3
 126 0016 03EB4303 		add	r3, r3, r3, lsl #1
 127 001a 9A00     		lsls	r2, r3, #2
 128 001c D2B2     		uxtb	r2, r2
 129 001e 1032     		adds	r2, r2, #16
 130              	.LVL8:
 301:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width1, meas_height, meas_name[n], meas_unit[n]);
 131              		.loc 1 301 0 discriminator 3
 132 0020 C4EBC401 		rsb	r1, r4, r4, lsl #3
 133 0024 2C4B     		ldr	r3, .L13+4
 134 0026 0B44     		add	r3, r3, r1
 135 0028 04EB8400 		add	r0, r4, r4, lsl #2
 136 002c 2B49     		ldr	r1, .L13+8
 137 002e 0144     		add	r1, r1, r0
 138 0030 0291     		str	r1, [sp, #8]
 139 0032 0193     		str	r3, [sp, #4]
 140 0034 0C23     		movs	r3, #12
 141 0036 0093     		str	r3, [sp]
 142 0038 4623     		movs	r3, #70
 143 003a 02F0FC02 		and	r2, r2, #252
 144              	.LVL9:
 145 003e 0021     		movs	r1, #0
 146 0040 2748     		ldr	r0, .L13+12
 147 0042 FFF7FEFF 		bl	draw_MeasLabelUnit
 148              	.LVL10:
 298:Src/main.c    **** 	  x = meas_x;
 149              		.loc 1 298 0 discriminator 3
 150 0046 0134     		adds	r4, r4, #1
 151              	.LVL11:
 152 0048 E4B2     		uxtb	r4, r4
 153              	.LVL12:
 154              	.L8:
 298:Src/main.c    **** 	  x = meas_x;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 9


 155              		.loc 1 298 0 is_stmt 0 discriminator 1
 156 004a 022C     		cmp	r4, #2
 157 004c DCD9     		bls	.L9
 302:Src/main.c    ****   }
 303:Src/main.c    ****   for( n=3; n<N_meas; n++ ){
 158              		.loc 1 303 0 is_stmt 1
 159 004e 0324     		movs	r4, #3
 160              	.LVL13:
 161 0050 20E0     		b	.L10
 162              	.LVL14:
 163              	.L11:
 304:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 305:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 164              		.loc 1 305 0 discriminator 3
 165 0052 204B     		ldr	r3, .L13
 166 0054 A3FB0423 		umull	r2, r3, r3, r4
 167 0058 5B08     		lsrs	r3, r3, #1
 168 005a 03EB4303 		add	r3, r3, r3, lsl #1
 169 005e E31A     		subs	r3, r4, r3
 170 0060 03EB4303 		add	r3, r3, r3, lsl #1
 171 0064 9A00     		lsls	r2, r3, #2
 172 0066 D2B2     		uxtb	r2, r2
 173 0068 1032     		adds	r2, r2, #16
 174              	.LVL15:
 306:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width2, meas_height, meas_name[n], meas_unit[n]);
 175              		.loc 1 306 0 discriminator 3
 176 006a C4EBC401 		rsb	r1, r4, r4, lsl #3
 177 006e 1A4B     		ldr	r3, .L13+4
 178 0070 0B44     		add	r3, r3, r1
 179 0072 04EB8400 		add	r0, r4, r4, lsl #2
 180 0076 1949     		ldr	r1, .L13+8
 181 0078 0144     		add	r1, r1, r0
 182 007a 0291     		str	r1, [sp, #8]
 183 007c 0193     		str	r3, [sp, #4]
 184 007e 0C23     		movs	r3, #12
 185 0080 0093     		str	r3, [sp]
 186 0082 3823     		movs	r3, #56
 187 0084 02F0FC02 		and	r2, r2, #252
 188              	.LVL16:
 189 0088 4821     		movs	r1, #72
 190 008a 1548     		ldr	r0, .L13+12
 191 008c FFF7FEFF 		bl	draw_MeasLabelUnit
 192              	.LVL17:
 303:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 193              		.loc 1 303 0 discriminator 3
 194 0090 0134     		adds	r4, r4, #1
 195              	.LVL18:
 196 0092 E4B2     		uxtb	r4, r4
 197              	.LVL19:
 198              	.L10:
 303:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 199              		.loc 1 303 0 is_stmt 0 discriminator 1
 200 0094 052C     		cmp	r4, #5
 201 0096 DCD9     		bls	.L11
 307:Src/main.c    ****   }
 308:Src/main.c    **** 
 309:Src/main.c    ****   // Fuel Pump voltage & duty
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 10


 310:Src/main.c    ****   draw_MeasLabelUnit(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, "DUTY", "%  ");
 202              		.loc 1 310 0 is_stmt 1
 203 0098 114C     		ldr	r4, .L13+12
 204              	.LVL20:
 205 009a 124E     		ldr	r6, .L13+16
 206 009c 0296     		str	r6, [sp, #8]
 207 009e 124B     		ldr	r3, .L13+20
 208 00a0 0193     		str	r3, [sp, #4]
 209 00a2 0C25     		movs	r5, #12
 210 00a4 0095     		str	r5, [sp]
 211 00a6 4623     		movs	r3, #70
 212 00a8 3422     		movs	r2, #52
 213 00aa 0021     		movs	r1, #0
 214 00ac 2046     		mov	r0, r4
 215 00ae FFF7FEFF 		bl	draw_MeasLabelUnit
 216              	.LVL21:
 311:Src/main.c    ****   draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, 100, 3, 0, 0, "%  ");
 217              		.loc 1 311 0
 218 00b2 0596     		str	r6, [sp, #20]
 219 00b4 0021     		movs	r1, #0
 220 00b6 0491     		str	r1, [sp, #16]
 221 00b8 0391     		str	r1, [sp, #12]
 222 00ba 0323     		movs	r3, #3
 223 00bc 0293     		str	r3, [sp, #8]
 224 00be 6423     		movs	r3, #100
 225 00c0 0193     		str	r3, [sp, #4]
 226 00c2 0095     		str	r5, [sp]
 227 00c4 4623     		movs	r3, #70
 228 00c6 3422     		movs	r2, #52
 229 00c8 2046     		mov	r0, r4
 230 00ca FFF7FEFF 		bl	draw_Value
 231              	.LVL22:
 312:Src/main.c    **** }
 232              		.loc 1 312 0
 233 00ce 06B0     		add	sp, sp, #24
 234              	.LCFI5:
 235              		.cfi_def_cfa_offset 16
 236              		@ sp needed
 237 00d0 70BD     		pop	{r4, r5, r6, pc}
 238              	.L14:
 239 00d2 00BF     		.align	2
 240              	.L13:
 241 00d4 ABAAAAAA 		.word	-1431655765
 242 00d8 00000000 		.word	.LANCHOR2
 243 00dc 00000000 		.word	.LANCHOR3
 244 00e0 00000000 		.word	u8g2
 245 00e4 00000000 		.word	.LC0
 246 00e8 04000000 		.word	.LC1
 247              		.cfi_endproc
 248              	.LFE127:
 250              		.section	.text._Error_Handler,"ax",%progbits
 251              		.align	1
 252              		.global	_Error_Handler
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 256              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 11


 258              	_Error_Handler:
 259              	.LFB130:
 313:Src/main.c    **** 
 314:Src/main.c    **** /* USER CODE END 0 */
 315:Src/main.c    **** 
 316:Src/main.c    **** int main(void)
 317:Src/main.c    **** {
 318:Src/main.c    **** 
 319:Src/main.c    ****   /* USER CODE BEGIN 1 */
 320:Src/main.c    **** 
 321:Src/main.c    ****   /* USER CODE END 1 */
 322:Src/main.c    **** 
 323:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 324:Src/main.c    **** 
 325:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 326:Src/main.c    ****   HAL_Init();
 327:Src/main.c    **** 
 328:Src/main.c    ****   /* USER CODE BEGIN Init */
 329:Src/main.c    ****   uint8_t n;
 330:Src/main.c    ****   uint8_t x, y;
 331:Src/main.c    **** 
 332:Src/main.c    ****   uint16_t a = 0; // for dummy data
 333:Src/main.c    ****   uint16_t b = 0; // for dummy data
 334:Src/main.c    **** 
 335:Src/main.c    ****   // circular buffer for ADC data
 336:Src/main.c    ****   uint16_t circular_buffer_index = 0;
 337:Src/main.c    ****   int16_t circular_buffer[128]={};
 338:Src/main.c    **** 
 339:Src/main.c    ****   /* USER CODE END Init */
 340:Src/main.c    **** 
 341:Src/main.c    ****   /* Configure the system clock */
 342:Src/main.c    ****   SystemClock_Config();
 343:Src/main.c    **** 
 344:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 345:Src/main.c    **** 
 346:Src/main.c    ****   /* USER CODE END SysInit */
 347:Src/main.c    **** 
 348:Src/main.c    ****   /* Initialize all configured peripherals */
 349:Src/main.c    ****   MX_GPIO_Init();
 350:Src/main.c    ****   MX_DMA_Init();
 351:Src/main.c    ****   MX_USART2_UART_Init();
 352:Src/main.c    ****   MX_TIM1_Init();
 353:Src/main.c    ****   MX_USART1_UART_Init();
 354:Src/main.c    ****   MX_SPI1_Init();
 355:Src/main.c    ****   MX_ADC1_Init();
 356:Src/main.c    ****   MX_TIM2_Init();
 357:Src/main.c    ****   MX_CAN_Init();
 358:Src/main.c    ****   MX_TIM6_Init();
 359:Src/main.c    ****   MX_I2C1_Init();
 360:Src/main.c    **** 
 361:Src/main.c    ****   /* USER CODE BEGIN 2 */
 362:Src/main.c    **** 
 363:Src/main.c    ****   ///// Timer /////
 364:Src/main.c    ****   // PWM for Fuel Pump Driver ()
 365:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim1) != HAL_OK)
 366:Src/main.c    ****   {
 367:Src/main.c    ****     Error_Handler();
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 12


 368:Src/main.c    ****   }
 369:Src/main.c    **** 
 370:Src/main.c    ****   // display (20ms)
 371:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim2) != HAL_OK)
 372:Src/main.c    ****   {
 373:Src/main.c    ****     Error_Handler();
 374:Src/main.c    ****   }
 375:Src/main.c    **** 
 376:Src/main.c    ****   // interrupt control (100ms)
 377:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim6) != HAL_OK)
 378:Src/main.c    ****   {
 379:Src/main.c    ****     Error_Handler();
 380:Src/main.c    ****   }
 381:Src/main.c    **** 
 382:Src/main.c    ****   // UART1 interrupt setup for DEFI decoder
 383:Src/main.c    ****   HAL_UART_Receive_IT(&huart1, &UART1_Data, 1);
 384:Src/main.c    ****   // variables is defined in 'defi.h'
 385:Src/main.c    **** 
 386:Src/main.c    **** 
 387:Src/main.c    ****   // ADC (for PA0) buffer definition
 388:Src/main.c    ****   enum{ ADC_BUFFER_LENGTH = 1024 };
 389:Src/main.c    ****   uint16_t g_ADCBuffer[ADC_BUFFER_LENGTH];
 390:Src/main.c    ****   memset(g_ADCBuffer, 0, sizeof(g_ADCBuffer));
 391:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, g_ADCBuffer, ADC_BUFFER_LENGTH);
 392:Src/main.c    **** 
 393:Src/main.c    **** 
 394:Src/main.c    ****   // OLED diaplay initialization
 395:Src/main.c    ****   u8g2_Setup_ssd1309_128x64_noname2_f(&u8g2, U8G2_R0, u8x8_byte_4wire_hw_spi, u8x8_gpio_and_delay_S
 396:Src/main.c    **** 
 397:Src/main.c    ****   // OLED display Reset (must be more than 3us!!)
 398:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 0); // Set RES=L (OLED Reset)
 399:Src/main.c    ****   HAL_Delay(5);
 400:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 401:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 402:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 403:Src/main.c    ****   u8g2_SetContrast(&u8g2, 255); // set contrast
 404:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 405:Src/main.c    **** 
 406:Src/main.c    ****   // draw opening
 407:Src/main.c    ****   u8g2_DrawXBMP(&u8g2, 40, 0, logo_width, logo_height, logo_bits );
 408:Src/main.c    **** 
 409:Src/main.c    ****   u8g2_SetFont(&u8g2, u8g2_font_5x7_tf);
 410:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 411:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.1a");
 412:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 413:Src/main.c    **** 
 414:Src/main.c    **** //  HAL_Delay(2000);
 415:Src/main.c    **** 
 416:Src/main.c    ****   u8g2_ClearBuffer(&u8g2);
 417:Src/main.c    **** 
 418:Src/main.c    ****   HAL_UART_Transmit_printf(&huart2, "Hello. This is MFM.\n");
 419:Src/main.c    **** 
 420:Src/main.c    ****   /* USER CODE END 2 */
 421:Src/main.c    **** 
 422:Src/main.c    ****   /* Infinite loop */
 423:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 424:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 13


 425:Src/main.c    ****   draw_MeasLabels();
 426:Src/main.c    ****   draw_indicators();
 427:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 428:Src/main.c    **** 
 429:Src/main.c    ****   while (1) 
 430:Src/main.c    ****   {
 431:Src/main.c    ****   /* USER CODE END WHILE */
 432:Src/main.c    **** 
 433:Src/main.c    ****   /* USER CODE BEGIN 3 */
 434:Src/main.c    **** 
 435:Src/main.c    ****     if( flag_meas == 1 ){
 436:Src/main.c    **** //    if( 1 ){ // debug
 437:Src/main.c    **** 
 438:Src/main.c    ****   	  // create dummy data for debug
 439:Src/main.c    ****       if( rpm <= 8200 ){
 440:Src/main.c    ****           rpm = rpm + (int)(20*MT[gear]);
 441:Src/main.c    ****           //rpm=rpm+10;
 442:Src/main.c    ****       }else{
 443:Src/main.c    ****         if( gear < 4 ){
 444:Src/main.c    ****           gear++;
 445:Src/main.c    ****           rpm = (double)speed / (0.002*60.0) * (MT[gear]*4.1);
 446:Src/main.c    ****         }else{
 447:Src/main.c    ****           gear = 0;
 448:Src/main.c    ****           rpm = 1000;
 449:Src/main.c    ****         }
 450:Src/main.c    ****       }
 451:Src/main.c    ****       speed = (double)rpm*0.002*60.0/MT[gear]/4.1;
 452:Src/main.c    **** 
 453:Src/main.c    ****       if( a >= 150){
 454:Src/main.c    ****         a = 0;
 455:Src/main.c    ****       }else{
 456:Src/main.c    ****         a++;
 457:Src/main.c    ****       }
 458:Src/main.c    **** 
 459:Src/main.c    ****       for( n=0; n<=5; n++){
 460:Src/main.c    ****         if( n==0 ){
 461:Src/main.c    ****           meas_value[n] = defi_decode_value(UART1_RxData); // DEFI decoder
 462:Src/main.c    **** /*
 463:Src/main.c    ****           if( meas_value[n] != ~0 ){
 464:Src/main.c    ****             HAL_UART_Transmit_printf(&huart2, " - "); // debug
 465:Src/main.c    ****             HAL_UART_Transmit_printf(&huart2, "[%d]", meas_value[n]);
 466:Src/main.c    ****             HAL_UART_Transmit_printf(&huart2, "\n"); // debug
 467:Src/main.c    ****           }
 468:Src/main.c    **** */
 469:Src/main.c    ****         }else{
 470:Src/main.c    ****           meas_value[n] = a;
 471:Src/main.c    ****         }
 472:Src/main.c    ****       }
 473:Src/main.c    **** 
 474:Src/main.c    ****       flag_meas = 0; // enable again by TIM2 interrupt
 475:Src/main.c    ****     }
 476:Src/main.c    **** 
 477:Src/main.c    **** 
 478:Src/main.c    ****     ///// ADC /////
 479:Src/main.c    **** 		// read O2 sensor ADC output
 480:Src/main.c    **** 		meas_value[5] = (int16_t)(330 * (float)g_ADCBuffer[0]/255);
 481:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 14


 482:Src/main.c    **** 		// read Fuel Pump Voltage ADC output
 483:Src/main.c    **** 		FP_volt = (int16_t)(330*(float)g_ADCBuffer[0]/255);
 484:Src/main.c    ****     FP_duty = (int16_t)(FP_volt/(14.4)*10);
 485:Src/main.c    **** 		meas_value[2] = FP_volt;
 486:Src/main.c    **** 
 487:Src/main.c    ****     ///// Switch /////
 488:Src/main.c    ****     if( flag_sw != 0 ){
 489:Src/main.c    ****       switch( flag_sw ){
 490:Src/main.c    ****         case 1:
 491:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "UP ");
 492:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 493:Src/main.c    ****           // SW "UP"
 494:Src/main.c    ****           if( setting == 0 ){
 495:Src/main.c    ****             if( mode == N_mode-1 ){
 496:Src/main.c    ****               mode = 0;
 497:Src/main.c    ****             }else{
 498:Src/main.c    ****               mode++;
 499:Src/main.c    ****             }
 500:Src/main.c    ****           }
 501:Src/main.c    ****           break;
 502:Src/main.c    ****         case 2:
 503:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "DOWN ");
 504:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 505:Src/main.c    ****           // SW "DOWN"
 506:Src/main.c    ****           if( setting == 0 ){
 507:Src/main.c    ****             if( mode == 0 ){
 508:Src/main.c    ****               mode = N_mode-1;
 509:Src/main.c    ****             }else{
 510:Src/main.c    ****               mode--;
 511:Src/main.c    ****             }
 512:Src/main.c    ****           }
 513:Src/main.c    ****           break;
 514:Src/main.c    ****         case 3:
 515:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "ENTER ");
 516:Src/main.c    ****           HAL_NVIC_DisableIRQ (EXTI1_IRQn);
 517:Src/main.c    ****           // SW "ENTER"
 518:Src/main.c    **** 
 519:Src/main.c    ****           // if( setting == 0 ){
 520:Src/main.c    ****           //   mode = cursor;
 521:Src/main.c    ****           //   u8g2_ClearBuffer(&u8g2);
 522:Src/main.c    ****           // }else{
 523:Src/main.c    ****           //   mode = 10;
 524:Src/main.c    ****           // }
 525:Src/main.c    ****           // break;
 526:Src/main.c    **** 
 527:Src/main.c    ****         default:
 528:Src/main.c    ****           break;
 529:Src/main.c    ****       }
 530:Src/main.c    ****       u8g2_ClearBuffer(&u8g2);
 531:Src/main.c    ****       if( mode == 0 ){
 532:Src/main.c    ****         draw_MeasLabels();
 533:Src/main.c    ****         draw_indicators();
 534:Src/main.c    ****       }else if( mode == 1 ){
 535:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_m
 536:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "MAP", "kPa");
 537:Src/main.c    ****       }
 538:Src/main.c    ****       u8g2_SendBuffer(&u8g2);
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 15


 539:Src/main.c    ****       TIM6->CNT = 0;
 540:Src/main.c    ****       flag_sw = 0;
 541:Src/main.c    ****     }
 542:Src/main.c    **** 
 543:Src/main.c    ****     ///// Display sequence /////
 544:Src/main.c    ****     if( flag_disp == 1 ){
 545:Src/main.c    ****       ///// multi meter /////
 546:Src/main.c    ****       if( mode == 0 ){
 547:Src/main.c    ****         // update Fuel Pump Voltage
 548:Src/main.c    ****         draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, FP_duty, 3, 0, 0, "%  ");
 549:Src/main.c    **** 
 550:Src/main.c    ****         // draw bar graph
 551:Src/main.c    ****         draw_BarGraph(&u8g2, rpmbar_x, rpmbar_y, rpmbar_width, rpmbar_height, rpm, rpm_min, rpm_max
 552:Src/main.c    **** 
 553:Src/main.c    ****         // draw measurement data
 554:Src/main.c    ****         for( n=0; n<3; n++ ){
 555:Src/main.c    ****           x = meas_x;
 556:Src/main.c    ****           y = (n % 3) * meas_height	+ meas_y;
 557:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac
 558:Src/main.c    ****         }
 559:Src/main.c    ****         for( n=3; n<N_meas; n++ ){
 560:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 561:Src/main.c    ****           y = (n % 3) * meas_height	+ meas_y;
 562:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 563:Src/main.c    ****         }
 564:Src/main.c    ****         
 565:Src/main.c    ****       ///// Scope /////
 566:Src/main.c    ****       }else if( mode == 1 ){
 567:Src/main.c    **** 
 568:Src/main.c    ****         if( circular_buffer_index > 0 ){
 569:Src/main.c    ****           circular_buffer_index--;
 570:Src/main.c    ****         }else{
 571:Src/main.c    ****           circular_buffer_index = 128;
 572:Src/main.c    ****         }
 573:Src/main.c    ****         circular_buffer[circular_buffer_index] = (int16_t)(18 * (float)g_ADCBuffer[0]/255 - 6); // 
 574:Src/main.c    **** 
 575:Src/main.c    ****         // draw wave
 576:Src/main.c    ****         draw_Wave(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_max, c
 577:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 1, 1, "kPa");
 578:Src/main.c    **** 
 579:Src/main.c    ****       // mode setting
 580:Src/main.c    ****       }else if( setting == 1 ){
 581:Src/main.c    ****         u8g2_ClearBuffer(&u8g2);
 582:Src/main.c    ****         u8g2_SetFont(&u8g2, u8g2_font_7x14B_tf);
 583:Src/main.c    ****         u8g2_DrawStr(&u8g2, 2, 15, "Mode Setting" );
 584:Src/main.c    ****         if( cursor == 0 ){
 585:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, ">" );
 586:Src/main.c    ****         }else{
 587:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, " " );
 588:Src/main.c    ****         }
 589:Src/main.c    ****         u8g2_DrawStr(&u8g2,10, 30, "Multi-Meter" );
 590:Src/main.c    ****         if( cursor == 1 ){
 591:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 592:Src/main.c    ****         }else{
 593:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, " " );
 594:Src/main.c    ****         }
 595:Src/main.c    ****         u8g2_DrawStr(&u8g2,10, 45, "Scope" );
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 16


 596:Src/main.c    ****         u8g2_SendBuffer(&u8g2);
 597:Src/main.c    ****       }
 598:Src/main.c    ****       // send buffer
 599:Src/main.c    ****       u8g2_SendBuffer(&u8g2);
 600:Src/main.c    **** 
 601:Src/main.c    ****       flag_disp = 0; // enable again by TIM2 interrupt
 602:Src/main.c    ****     }
 603:Src/main.c    **** 
 604:Src/main.c    ****   }
 605:Src/main.c    ****   /* USER CODE END 3 */
 606:Src/main.c    **** 
 607:Src/main.c    **** }
 608:Src/main.c    **** 
 609:Src/main.c    **** /** System Clock Configuration
 610:Src/main.c    **** */
 611:Src/main.c    **** void SystemClock_Config(void)
 612:Src/main.c    **** {
 613:Src/main.c    **** 
 614:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 615:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 616:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 617:Src/main.c    **** 
 618:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 619:Src/main.c    ****     */
 620:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 621:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 622:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 623:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 624:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 625:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 626:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 627:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 628:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 629:Src/main.c    ****   {
 630:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 631:Src/main.c    ****   }
 632:Src/main.c    **** 
 633:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 634:Src/main.c    ****     */
 635:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 636:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 637:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 638:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 639:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 640:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 641:Src/main.c    **** 
 642:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 643:Src/main.c    ****   {
 644:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 645:Src/main.c    ****   }
 646:Src/main.c    **** 
 647:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1
 648:Src/main.c    ****                               |RCC_PERIPHCLK_TIM1;
 649:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 650:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 651:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 652:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 17


 653:Src/main.c    ****   {
 654:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 655:Src/main.c    ****   }
 656:Src/main.c    **** 
 657:Src/main.c    ****     /**Configure the Systick interrupt time 
 658:Src/main.c    ****     */
 659:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 660:Src/main.c    **** 
 661:Src/main.c    ****     /**Configure the Systick 
 662:Src/main.c    ****     */
 663:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 664:Src/main.c    **** 
 665:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 666:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 667:Src/main.c    **** }
 668:Src/main.c    **** 
 669:Src/main.c    **** /* USER CODE BEGIN 4 */
 670:Src/main.c    **** 
 671:Src/main.c    **** /* USER CODE END 4 */
 672:Src/main.c    **** 
 673:Src/main.c    **** /**
 674:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 675:Src/main.c    ****   * @param  None
 676:Src/main.c    ****   * @retval None
 677:Src/main.c    ****   */
 678:Src/main.c    **** void _Error_Handler(char * file, int line)
 679:Src/main.c    **** {
 260              		.loc 1 679 0
 261              		.cfi_startproc
 262              		@ Volatile: function does not return.
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 266              	.LVL23:
 267              	.L16:
 268 0000 FEE7     		b	.L16
 269              		.cfi_endproc
 270              	.LFE130:
 272              		.section	.text.SystemClock_Config,"ax",%progbits
 273              		.align	1
 274              		.global	SystemClock_Config
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu fpv4-sp-d16
 280              	SystemClock_Config:
 281              	.LFB129:
 612:Src/main.c    **** 
 282              		.loc 1 612 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 88
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 612:Src/main.c    **** 
 286              		.loc 1 612 0
 287 0000 00B5     		push	{lr}
 288              	.LCFI6:
 289              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 18


 290              		.cfi_offset 14, -4
 291 0002 97B0     		sub	sp, sp, #92
 292              	.LCFI7:
 293              		.cfi_def_cfa_offset 96
 620:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 294              		.loc 1 620 0
 295 0004 0323     		movs	r3, #3
 296 0006 0C93     		str	r3, [sp, #48]
 621:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 297              		.loc 1 621 0
 298 0008 4FF4A023 		mov	r3, #327680
 299 000c 0D93     		str	r3, [sp, #52]
 622:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 300              		.loc 1 622 0
 301 000e 0023     		movs	r3, #0
 302 0010 0E93     		str	r3, [sp, #56]
 623:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 303              		.loc 1 623 0
 304 0012 0123     		movs	r3, #1
 305 0014 1093     		str	r3, [sp, #64]
 624:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 306              		.loc 1 624 0
 307 0016 1023     		movs	r3, #16
 308 0018 1193     		str	r3, [sp, #68]
 625:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 309              		.loc 1 625 0
 310 001a 0223     		movs	r3, #2
 311 001c 1393     		str	r3, [sp, #76]
 626:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 312              		.loc 1 626 0
 313 001e 4FF48033 		mov	r3, #65536
 314 0022 1493     		str	r3, [sp, #80]
 627:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 315              		.loc 1 627 0
 316 0024 4FF4E013 		mov	r3, #1835008
 317 0028 1593     		str	r3, [sp, #84]
 628:Src/main.c    ****   {
 318              		.loc 1 628 0
 319 002a 0CA8     		add	r0, sp, #48
 320 002c FFF7FEFF 		bl	HAL_RCC_OscConfig
 321              	.LVL24:
 322 0030 60BB     		cbnz	r0, .L22
 635:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 323              		.loc 1 635 0
 324 0032 0F23     		movs	r3, #15
 325 0034 0793     		str	r3, [sp, #28]
 637:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 326              		.loc 1 637 0
 327 0036 0221     		movs	r1, #2
 328 0038 0891     		str	r1, [sp, #32]
 638:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 329              		.loc 1 638 0
 330 003a 0023     		movs	r3, #0
 331 003c 0993     		str	r3, [sp, #36]
 639:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 332              		.loc 1 639 0
 333 003e 4FF48062 		mov	r2, #1024
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 19


 334 0042 0A92     		str	r2, [sp, #40]
 640:Src/main.c    **** 
 335              		.loc 1 640 0
 336 0044 0B93     		str	r3, [sp, #44]
 642:Src/main.c    ****   {
 337              		.loc 1 642 0
 338 0046 07A8     		add	r0, sp, #28
 339 0048 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 340              	.LVL25:
 341 004c 18BB     		cbnz	r0, .L23
 647:Src/main.c    ****                               |RCC_PERIPHCLK_TIM1;
 342              		.loc 1 647 0
 343 004e 41F22103 		movw	r3, #4129
 344 0052 0193     		str	r3, [sp, #4]
 649:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 345              		.loc 1 649 0
 346 0054 0023     		movs	r3, #0
 347 0056 0393     		str	r3, [sp, #12]
 650:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 348              		.loc 1 650 0
 349 0058 0493     		str	r3, [sp, #16]
 651:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 350              		.loc 1 651 0
 351 005a 0693     		str	r3, [sp, #24]
 652:Src/main.c    ****   {
 352              		.loc 1 652 0
 353 005c 01A8     		add	r0, sp, #4
 354 005e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 355              	.LVL26:
 356 0062 E8B9     		cbnz	r0, .L24
 659:Src/main.c    **** 
 357              		.loc 1 659 0
 358 0064 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 359              	.LVL27:
 360 0068 104B     		ldr	r3, .L25
 361 006a A3FB0030 		umull	r3, r0, r3, r0
 362 006e 8009     		lsrs	r0, r0, #6
 363 0070 FFF7FEFF 		bl	HAL_SYSTICK_Config
 364              	.LVL28:
 663:Src/main.c    **** 
 365              		.loc 1 663 0
 366 0074 0420     		movs	r0, #4
 367 0076 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 368              	.LVL29:
 666:Src/main.c    **** }
 369              		.loc 1 666 0
 370 007a 0022     		movs	r2, #0
 371 007c 1146     		mov	r1, r2
 372 007e 4FF0FF30 		mov	r0, #-1
 373 0082 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 374              	.LVL30:
 667:Src/main.c    **** 
 375              		.loc 1 667 0
 376 0086 17B0     		add	sp, sp, #92
 377              	.LCFI8:
 378              		.cfi_remember_state
 379              		.cfi_def_cfa_offset 4
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 20


 380              		@ sp needed
 381 0088 5DF804FB 		ldr	pc, [sp], #4
 382              	.L22:
 383              	.LCFI9:
 384              		.cfi_restore_state
 630:Src/main.c    ****   }
 385              		.loc 1 630 0
 386 008c 40F27621 		movw	r1, #630
 387 0090 0748     		ldr	r0, .L25+4
 388 0092 FFF7FEFF 		bl	_Error_Handler
 389              	.LVL31:
 390              	.L23:
 644:Src/main.c    ****   }
 391              		.loc 1 644 0
 392 0096 4FF42171 		mov	r1, #644
 393 009a 0548     		ldr	r0, .L25+4
 394 009c FFF7FEFF 		bl	_Error_Handler
 395              	.LVL32:
 396              	.L24:
 654:Src/main.c    ****   }
 397              		.loc 1 654 0
 398 00a0 40F28E21 		movw	r1, #654
 399 00a4 0248     		ldr	r0, .L25+4
 400 00a6 FFF7FEFF 		bl	_Error_Handler
 401              	.LVL33:
 402              	.L26:
 403 00aa 00BF     		.align	2
 404              	.L25:
 405 00ac D34D6210 		.word	274877907
 406 00b0 00000000 		.word	.LC2
 407              		.cfi_endproc
 408              	.LFE129:
 410              		.global	__aeabi_dmul
 411              		.global	__aeabi_d2iz
 412              		.global	__aeabi_ui2d
 413              		.global	__aeabi_ddiv
 414              		.global	__aeabi_d2uiz
 415              		.global	__aeabi_i2d
 416              		.section	.text.main,"ax",%progbits
 417              		.align	1
 418              		.global	main
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 422              		.fpu fpv4-sp-d16
 424              	main:
 425              	.LFB128:
 317:Src/main.c    **** 
 426              		.loc 1 317 0
 427              		.cfi_startproc
 428              		@ args = 0, pretend = 0, frame = 2304
 429              		@ frame_needed = 0, uses_anonymous_args = 0
 430 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 431              	.LCFI10:
 432              		.cfi_def_cfa_offset 28
 433              		.cfi_offset 4, -28
 434              		.cfi_offset 5, -24
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 21


 435              		.cfi_offset 6, -20
 436              		.cfi_offset 7, -16
 437              		.cfi_offset 8, -12
 438              		.cfi_offset 9, -8
 439              		.cfi_offset 14, -4
 440 0004 ADF61C1D 		subw	sp, sp, #2332
 441              	.LCFI11:
 442              		.cfi_def_cfa_offset 2360
 326:Src/main.c    **** 
 443              		.loc 1 326 0
 444 0008 FFF7FEFF 		bl	HAL_Init
 445              	.LVL34:
 337:Src/main.c    **** 
 446              		.loc 1 337 0
 447 000c 4FF48072 		mov	r2, #256
 448 0010 0021     		movs	r1, #0
 449 0012 0DF61800 		addw	r0, sp, #2072
 450 0016 FFF7FEFF 		bl	memset
 451              	.LVL35:
 342:Src/main.c    **** 
 452              		.loc 1 342 0
 453 001a FFF7FEFF 		bl	SystemClock_Config
 454              	.LVL36:
 349:Src/main.c    ****   MX_DMA_Init();
 455              		.loc 1 349 0
 456 001e FFF7FEFF 		bl	MX_GPIO_Init
 457              	.LVL37:
 350:Src/main.c    ****   MX_USART2_UART_Init();
 458              		.loc 1 350 0
 459 0022 FFF7FEFF 		bl	MX_DMA_Init
 460              	.LVL38:
 351:Src/main.c    ****   MX_TIM1_Init();
 461              		.loc 1 351 0
 462 0026 FFF7FEFF 		bl	MX_USART2_UART_Init
 463              	.LVL39:
 352:Src/main.c    ****   MX_USART1_UART_Init();
 464              		.loc 1 352 0
 465 002a FFF7FEFF 		bl	MX_TIM1_Init
 466              	.LVL40:
 353:Src/main.c    ****   MX_SPI1_Init();
 467              		.loc 1 353 0
 468 002e FFF7FEFF 		bl	MX_USART1_UART_Init
 469              	.LVL41:
 354:Src/main.c    ****   MX_ADC1_Init();
 470              		.loc 1 354 0
 471 0032 FFF7FEFF 		bl	MX_SPI1_Init
 472              	.LVL42:
 355:Src/main.c    ****   MX_TIM2_Init();
 473              		.loc 1 355 0
 474 0036 FFF7FEFF 		bl	MX_ADC1_Init
 475              	.LVL43:
 356:Src/main.c    ****   MX_CAN_Init();
 476              		.loc 1 356 0
 477 003a FFF7FEFF 		bl	MX_TIM2_Init
 478              	.LVL44:
 357:Src/main.c    ****   MX_TIM6_Init();
 479              		.loc 1 357 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 22


 480 003e FFF7FEFF 		bl	MX_CAN_Init
 481              	.LVL45:
 358:Src/main.c    ****   MX_I2C1_Init();
 482              		.loc 1 358 0
 483 0042 FFF7FEFF 		bl	MX_TIM6_Init
 484              	.LVL46:
 359:Src/main.c    **** 
 485              		.loc 1 359 0
 486 0046 FFF7FEFF 		bl	MX_I2C1_Init
 487              	.LVL47:
 365:Src/main.c    ****   {
 488              		.loc 1 365 0
 489 004a 9148     		ldr	r0, .L77+24
 490 004c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 491              	.LVL48:
 492 0050 20B1     		cbz	r0, .L28
 367:Src/main.c    ****   }
 493              		.loc 1 367 0
 494 0052 40F26F11 		movw	r1, #367
 495 0056 8F48     		ldr	r0, .L77+28
 496 0058 FFF7FEFF 		bl	_Error_Handler
 497              	.LVL49:
 498              	.L28:
 371:Src/main.c    ****   {
 499              		.loc 1 371 0
 500 005c 8E48     		ldr	r0, .L77+32
 501 005e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 502              	.LVL50:
 503 0062 20B1     		cbz	r0, .L29
 373:Src/main.c    ****   }
 504              		.loc 1 373 0
 505 0064 40F27511 		movw	r1, #373
 506 0068 8A48     		ldr	r0, .L77+28
 507 006a FFF7FEFF 		bl	_Error_Handler
 508              	.LVL51:
 509              	.L29:
 377:Src/main.c    ****   {
 510              		.loc 1 377 0
 511 006e 8B48     		ldr	r0, .L77+36
 512 0070 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 513              	.LVL52:
 514 0074 20B1     		cbz	r0, .L30
 379:Src/main.c    ****   }
 515              		.loc 1 379 0
 516 0076 40F27B11 		movw	r1, #379
 517 007a 8648     		ldr	r0, .L77+28
 518 007c FFF7FEFF 		bl	_Error_Handler
 519              	.LVL53:
 520              	.L30:
 383:Src/main.c    ****   // variables is defined in 'defi.h'
 521              		.loc 1 383 0
 522 0080 0122     		movs	r2, #1
 523 0082 8749     		ldr	r1, .L77+40
 524 0084 8748     		ldr	r0, .L77+44
 525 0086 FFF7FEFF 		bl	HAL_UART_Receive_IT
 526              	.LVL54:
 390:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, g_ADCBuffer, ADC_BUFFER_LENGTH);
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 23


 527              		.loc 1 390 0
 528 008a 4FF40062 		mov	r2, #2048
 529 008e 0021     		movs	r1, #0
 530 0090 06A8     		add	r0, sp, #24
 531 0092 FFF7FEFF 		bl	memset
 532              	.LVL55:
 391:Src/main.c    **** 
 533              		.loc 1 391 0
 534 0096 4FF48062 		mov	r2, #1024
 535 009a 06A9     		add	r1, sp, #24
 536 009c 8248     		ldr	r0, .L77+48
 537 009e FFF7FEFF 		bl	HAL_ADC_Start_DMA
 538              	.LVL56:
 395:Src/main.c    **** 
 539              		.loc 1 395 0
 540 00a2 824C     		ldr	r4, .L77+52
 541 00a4 824B     		ldr	r3, .L77+56
 542 00a6 834A     		ldr	r2, .L77+60
 543 00a8 8349     		ldr	r1, .L77+64
 544 00aa 2046     		mov	r0, r4
 545 00ac FFF7FEFF 		bl	u8g2_Setup_ssd1309_128x64_noname2_f
 546              	.LVL57:
 398:Src/main.c    ****   HAL_Delay(5);
 547              		.loc 1 398 0
 548 00b0 824D     		ldr	r5, .L77+68
 549 00b2 0022     		movs	r2, #0
 550 00b4 0821     		movs	r1, #8
 551 00b6 2846     		mov	r0, r5
 552 00b8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 553              	.LVL58:
 399:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 554              		.loc 1 399 0
 555 00bc 0520     		movs	r0, #5
 556 00be FFF7FEFF 		bl	HAL_Delay
 557              	.LVL59:
 400:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 558              		.loc 1 400 0
 559 00c2 0122     		movs	r2, #1
 560 00c4 0821     		movs	r1, #8
 561 00c6 2846     		mov	r0, r5
 562 00c8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 563              	.LVL60:
 401:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 564              		.loc 1 401 0
 565 00cc 2046     		mov	r0, r4
 566 00ce FFF7FEFF 		bl	u8x8_InitDisplay
 567              	.LVL61:
 402:Src/main.c    ****   u8g2_SetContrast(&u8g2, 255); // set contrast
 568              		.loc 1 402 0
 569 00d2 0021     		movs	r1, #0
 570 00d4 2046     		mov	r0, r4
 571 00d6 FFF7FEFF 		bl	u8x8_SetPowerSave
 572              	.LVL62:
 403:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 573              		.loc 1 403 0
 574 00da FF21     		movs	r1, #255
 575 00dc 2046     		mov	r0, r4
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 24


 576 00de FFF7FEFF 		bl	u8x8_SetContrast
 577              	.LVL63:
 404:Src/main.c    **** 
 578              		.loc 1 404 0
 579 00e2 2046     		mov	r0, r4
 580 00e4 FFF7FEFF 		bl	u8g2_ClearDisplay
 581              	.LVL64:
 407:Src/main.c    **** 
 582              		.loc 1 407 0
 583 00e8 754B     		ldr	r3, .L77+72
 584 00ea 0193     		str	r3, [sp, #4]
 585 00ec 3023     		movs	r3, #48
 586 00ee 0093     		str	r3, [sp]
 587 00f0 0022     		movs	r2, #0
 588 00f2 2821     		movs	r1, #40
 589 00f4 2046     		mov	r0, r4
 590 00f6 FFF7FEFF 		bl	u8g2_DrawXBMP
 591              	.LVL65:
 409:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 592              		.loc 1 409 0
 593 00fa 7249     		ldr	r1, .L77+76
 594 00fc 2046     		mov	r0, r4
 595 00fe FFF7FEFF 		bl	u8g2_SetFont
 596              	.LVL66:
 410:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.1a");
 597              		.loc 1 410 0
 598 0102 714B     		ldr	r3, .L77+80
 599 0104 3722     		movs	r2, #55
 600 0106 1021     		movs	r1, #16
 601 0108 2046     		mov	r0, r4
 602 010a FFF7FEFF 		bl	u8g2_DrawStr
 603              	.LVL67:
 411:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 604              		.loc 1 411 0
 605 010e 6F4B     		ldr	r3, .L77+84
 606 0110 4022     		movs	r2, #64
 607 0112 2821     		movs	r1, #40
 608 0114 2046     		mov	r0, r4
 609 0116 FFF7FEFF 		bl	u8g2_DrawStr
 610              	.LVL68:
 412:Src/main.c    **** 
 611              		.loc 1 412 0
 612 011a 2046     		mov	r0, r4
 613 011c FFF7FEFF 		bl	u8g2_SendBuffer
 614              	.LVL69:
 416:Src/main.c    **** 
 615              		.loc 1 416 0
 616 0120 2046     		mov	r0, r4
 617 0122 FFF7FEFF 		bl	u8g2_ClearBuffer
 618              	.LVL70:
 418:Src/main.c    **** 
 619              		.loc 1 418 0
 620 0126 6A49     		ldr	r1, .L77+88
 621 0128 6A48     		ldr	r0, .L77+92
 622 012a FFF7FEFF 		bl	HAL_UART_Transmit_printf
 623              	.LVL71:
 425:Src/main.c    ****   draw_indicators();
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 25


 624              		.loc 1 425 0
 625 012e FFF7FEFF 		bl	draw_MeasLabels
 626              	.LVL72:
 426:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 627              		.loc 1 426 0
 628 0132 FFF7FEFF 		bl	draw_indicators
 629              	.LVL73:
 427:Src/main.c    **** 
 630              		.loc 1 427 0
 631 0136 2046     		mov	r0, r4
 632 0138 FFF7FEFF 		bl	u8g2_SendBuffer
 633              	.LVL74:
 336:Src/main.c    ****   int16_t circular_buffer[128]={};
 634              		.loc 1 336 0
 635 013c 0026     		movs	r6, #0
 332:Src/main.c    ****   uint16_t b = 0; // for dummy data
 636              		.loc 1 332 0
 637 013e 3546     		mov	r5, r6
 638 0140 FEE0     		b	.L31
 639              	.LVL75:
 640              	.L71:
 439:Src/main.c    ****           rpm = rpm + (int)(20*MT[gear]);
 641              		.loc 1 439 0
 642 0142 654B     		ldr	r3, .L77+96
 643 0144 1C88     		ldrh	r4, [r3]
 644 0146 42F20803 		movw	r3, #8200
 645 014a 9C42     		cmp	r4, r3
 646 014c 34D8     		bhi	.L33
 440:Src/main.c    ****           //rpm=rpm+10;
 647              		.loc 1 440 0
 648 014e 634B     		ldr	r3, .L77+100
 649 0150 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 650 0152 6349     		ldr	r1, .L77+104
 651 0154 01EBC301 		add	r1, r1, r3, lsl #3
 652 0158 0022     		movs	r2, #0
 653 015a 624B     		ldr	r3, .L77+108
 654 015c D1E90001 		ldrd	r0, [r1]
 655 0160 FFF7FEFF 		bl	__aeabi_dmul
 656              	.LVL76:
 657 0164 FFF7FEFF 		bl	__aeabi_d2iz
 658              	.LVL77:
 659 0168 2044     		add	r0, r0, r4
 660 016a 5B4B     		ldr	r3, .L77+96
 661 016c 1880     		strh	r0, [r3]	@ movhi
 662              	.L34:
 451:Src/main.c    **** 
 663              		.loc 1 451 0
 664 016e 5A4B     		ldr	r3, .L77+96
 665 0170 1888     		ldrh	r0, [r3]
 666 0172 FFF7FEFF 		bl	__aeabi_ui2d
 667              	.LVL78:
 668 0176 40A3     		adr	r3, .L77
 669 0178 D3E90023 		ldrd	r2, [r3]
 670 017c FFF7FEFF 		bl	__aeabi_dmul
 671              	.LVL79:
 672 0180 0022     		movs	r2, #0
 673 0182 594B     		ldr	r3, .L77+112
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 26


 674 0184 FFF7FEFF 		bl	__aeabi_dmul
 675              	.LVL80:
 676 0188 544B     		ldr	r3, .L77+100
 677 018a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 678 018c 544B     		ldr	r3, .L77+104
 679 018e 03EBC203 		add	r3, r3, r2, lsl #3
 680 0192 D3E90023 		ldrd	r2, [r3]
 681 0196 FFF7FEFF 		bl	__aeabi_ddiv
 682              	.LVL81:
 683 019a 39A3     		adr	r3, .L77+8
 684 019c D3E90023 		ldrd	r2, [r3]
 685 01a0 FFF7FEFF 		bl	__aeabi_ddiv
 686              	.LVL82:
 687 01a4 FFF7FEFF 		bl	__aeabi_d2uiz
 688              	.LVL83:
 689 01a8 504B     		ldr	r3, .L77+116
 690 01aa 1880     		strh	r0, [r3]	@ movhi
 453:Src/main.c    ****         a = 0;
 691              		.loc 1 453 0
 692 01ac 952D     		cmp	r5, #149
 693 01ae 33D8     		bhi	.L63
 456:Src/main.c    ****       }
 694              		.loc 1 456 0
 695 01b0 0135     		adds	r5, r5, #1
 696              	.LVL84:
 697 01b2 ADB2     		uxth	r5, r5
 698              	.LVL85:
 699              	.L36:
 459:Src/main.c    ****         if( n==0 ){
 700              		.loc 1 459 0
 701 01b4 0024     		movs	r4, #0
 702 01b6 39E0     		b	.L37
 703              	.LVL86:
 704              	.L33:
 443:Src/main.c    ****           gear++;
 705              		.loc 1 443 0
 706 01b8 484B     		ldr	r3, .L77+100
 707 01ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 708 01bc 032B     		cmp	r3, #3
 709 01be 23D8     		bhi	.L35
 444:Src/main.c    ****           rpm = (double)speed / (0.002*60.0) * (MT[gear]*4.1);
 710              		.loc 1 444 0
 711 01c0 0133     		adds	r3, r3, #1
 712 01c2 DCB2     		uxtb	r4, r3
 713 01c4 454B     		ldr	r3, .L77+100
 714 01c6 1C70     		strb	r4, [r3]
 445:Src/main.c    ****         }else{
 715              		.loc 1 445 0
 716 01c8 484B     		ldr	r3, .L77+116
 717 01ca 1888     		ldrh	r0, [r3]
 718 01cc FFF7FEFF 		bl	__aeabi_ui2d
 719              	.LVL87:
 720 01d0 2DA3     		adr	r3, .L77+16
 721 01d2 D3E90023 		ldrd	r2, [r3]
 722 01d6 FFF7FEFF 		bl	__aeabi_ddiv
 723              	.LVL88:
 724 01da 8046     		mov	r8, r0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 27


 725 01dc 8946     		mov	r9, r1
 726 01de 404B     		ldr	r3, .L77+104
 727 01e0 03EBC404 		add	r4, r3, r4, lsl #3
 728 01e4 26A3     		adr	r3, .L77+8
 729 01e6 D3E90023 		ldrd	r2, [r3]
 730 01ea D4E90001 		ldrd	r0, [r4]
 731 01ee FFF7FEFF 		bl	__aeabi_dmul
 732              	.LVL89:
 733 01f2 0246     		mov	r2, r0
 734 01f4 0B46     		mov	r3, r1
 735 01f6 4046     		mov	r0, r8
 736 01f8 4946     		mov	r1, r9
 737 01fa FFF7FEFF 		bl	__aeabi_dmul
 738              	.LVL90:
 739 01fe FFF7FEFF 		bl	__aeabi_d2uiz
 740              	.LVL91:
 741 0202 354B     		ldr	r3, .L77+96
 742 0204 1880     		strh	r0, [r3]	@ movhi
 743 0206 B2E7     		b	.L34
 744              	.L35:
 447:Src/main.c    ****           rpm = 1000;
 745              		.loc 1 447 0
 746 0208 344B     		ldr	r3, .L77+100
 747 020a 0022     		movs	r2, #0
 748 020c 1A70     		strb	r2, [r3]
 448:Src/main.c    ****         }
 749              		.loc 1 448 0
 750 020e 324B     		ldr	r3, .L77+96
 751 0210 4FF47A72 		mov	r2, #1000
 752 0214 1A80     		strh	r2, [r3]	@ movhi
 753 0216 AAE7     		b	.L34
 754              	.L63:
 454:Src/main.c    ****       }else{
 755              		.loc 1 454 0
 756 0218 0025     		movs	r5, #0
 757              	.LVL92:
 758 021a CBE7     		b	.L36
 759              	.LVL93:
 760              	.L67:
 461:Src/main.c    **** /*
 761              		.loc 1 461 0
 762 021c 3448     		ldr	r0, .L77+120
 763 021e FFF7FEFF 		bl	defi_decode_value
 764              	.LVL94:
 765 0222 344B     		ldr	r3, .L77+124
 766 0224 23F81400 		strh	r0, [r3, r4, lsl #1]	@ movhi
 767              	.L39:
 459:Src/main.c    ****         if( n==0 ){
 768              		.loc 1 459 0 discriminator 2
 769 0228 0134     		adds	r4, r4, #1
 770              	.LVL95:
 771 022a E4B2     		uxtb	r4, r4
 772              	.LVL96:
 773              	.L37:
 459:Src/main.c    ****         if( n==0 ){
 774              		.loc 1 459 0 is_stmt 0 discriminator 1
 775 022c 052C     		cmp	r4, #5
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 28


 776 022e 05D8     		bhi	.L66
 460:Src/main.c    ****           meas_value[n] = defi_decode_value(UART1_RxData); // DEFI decoder
 777              		.loc 1 460 0 is_stmt 1
 778 0230 002C     		cmp	r4, #0
 779 0232 F3D0     		beq	.L67
 470:Src/main.c    ****         }
 780              		.loc 1 470 0
 781 0234 2F4B     		ldr	r3, .L77+124
 782 0236 23F81450 		strh	r5, [r3, r4, lsl #1]	@ movhi
 783 023a F5E7     		b	.L39
 784              	.L66:
 474:Src/main.c    ****     }
 785              		.loc 1 474 0
 786 023c 2E4B     		ldr	r3, .L77+128
 787 023e 0022     		movs	r2, #0
 788 0240 1A60     		str	r2, [r3]
 789 0242 82E0     		b	.L32
 790              	.LVL97:
 791              	.L72:
 496:Src/main.c    ****             }else{
 792              		.loc 1 496 0
 793 0244 2D4B     		ldr	r3, .L77+132
 794 0246 0022     		movs	r2, #0
 795 0248 1A70     		strb	r2, [r3]
 796 024a 64E0     		b	.L42
 797              	.L43:
 503:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 798              		.loc 1 503 0
 799 024c 2C49     		ldr	r1, .L77+136
 800 024e 2148     		ldr	r0, .L77+92
 801 0250 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 802              	.LVL98:
 504:Src/main.c    ****           // SW "DOWN"
 803              		.loc 1 504 0
 804 0254 1720     		movs	r0, #23
 805 0256 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 806              	.LVL99:
 506:Src/main.c    ****             if( mode == 0 ){
 807              		.loc 1 506 0
 808 025a 2A4B     		ldr	r3, .L77+140
 809 025c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 810 025e 002B     		cmp	r3, #0
 811 0260 59D1     		bne	.L42
 507:Src/main.c    ****               mode = N_mode-1;
 812              		.loc 1 507 0
 813 0262 264B     		ldr	r3, .L77+132
 814 0264 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 815 0266 1BB9     		cbnz	r3, .L47
 508:Src/main.c    ****             }else{
 816              		.loc 1 508 0
 817 0268 244B     		ldr	r3, .L77+132
 818 026a 0122     		movs	r2, #1
 819 026c 1A70     		strb	r2, [r3]
 820 026e 52E0     		b	.L42
 821              	.L47:
 510:Src/main.c    ****             }
 822              		.loc 1 510 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 29


 823 0270 013B     		subs	r3, r3, #1
 824 0272 224A     		ldr	r2, .L77+132
 825 0274 1370     		strb	r3, [r2]
 826 0276 4EE0     		b	.L42
 827              	.L78:
 828              		.align	3
 829              	.L77:
 830 0278 FCA9F1D2 		.word	3539053052
 831 027c 4D62603F 		.word	1063281229
 832 0280 66666666 		.word	1717986918
 833 0284 66661040 		.word	1074816614
 834 0288 B81E85EB 		.word	3951369912
 835 028c 51B8BE3F 		.word	1069463633
 836 0290 00000000 		.word	htim1
 837 0294 00000000 		.word	.LC2
 838 0298 00000000 		.word	htim2
 839 029c 00000000 		.word	htim6
 840 02a0 00000000 		.word	UART1_Data
 841 02a4 00000000 		.word	huart1
 842 02a8 00000000 		.word	hadc1
 843 02ac 00000000 		.word	u8g2
 844 02b0 00000000 		.word	u8x8_gpio_and_delay_STM32F303
 845 02b4 00000000 		.word	u8x8_byte_4wire_hw_spi
 846 02b8 00000000 		.word	u8g2_cb_r0
 847 02bc 00040048 		.word	1207960576
 848 02c0 00000000 		.word	.LANCHOR4
 849 02c4 00000000 		.word	u8g2_font_5x7_tf
 850 02c8 00000000 		.word	.LC3
 851 02cc 18000000 		.word	.LC4
 852 02d0 24000000 		.word	.LC5
 853 02d4 00000000 		.word	huart2
 854 02d8 00000000 		.word	.LANCHOR5
 855 02dc 00000000 		.word	.LANCHOR7
 856 02e0 00000000 		.word	.LANCHOR6
 857 02e4 00003440 		.word	1077149696
 858 02e8 00004E40 		.word	1078853632
 859 02ec 00000000 		.word	.LANCHOR8
 860 02f0 00000000 		.word	UART1_RxData
 861 02f4 00000000 		.word	.LANCHOR9
 862 02f8 00000000 		.word	flag_meas
 863 02fc 00000000 		.word	mode
 864 0300 40000000 		.word	.LC7
 865 0304 00000000 		.word	setting
 866              	.L44:
 515:Src/main.c    ****           HAL_NVIC_DisableIRQ (EXTI1_IRQn);
 867              		.loc 1 515 0
 868 0308 AF49     		ldr	r1, .L79+8
 869 030a B048     		ldr	r0, .L79+12
 870 030c FFF7FEFF 		bl	HAL_UART_Transmit_printf
 871              	.LVL100:
 516:Src/main.c    ****           // SW "ENTER"
 872              		.loc 1 516 0
 873 0310 0720     		movs	r0, #7
 874 0312 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 875              	.LVL101:
 876              	.L42:
 530:Src/main.c    ****       if( mode == 0 ){
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 30


 877              		.loc 1 530 0
 878 0316 AE48     		ldr	r0, .L79+16
 879 0318 FFF7FEFF 		bl	u8g2_ClearBuffer
 880              	.LVL102:
 531:Src/main.c    ****         draw_MeasLabels();
 881              		.loc 1 531 0
 882 031c AD4B     		ldr	r3, .L79+20
 883 031e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 884 0320 002B     		cmp	r3, #0
 885 0322 59D0     		beq	.L68
 534:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_m
 886              		.loc 1 534 0
 887 0324 012B     		cmp	r3, #1
 888 0326 5CD0     		beq	.L69
 889              	.L49:
 538:Src/main.c    ****       TIM6->CNT = 0;
 890              		.loc 1 538 0
 891 0328 A948     		ldr	r0, .L79+16
 892 032a FFF7FEFF 		bl	u8g2_SendBuffer
 893              	.LVL103:
 539:Src/main.c    ****       flag_sw = 0;
 894              		.loc 1 539 0
 895 032e 0023     		movs	r3, #0
 896 0330 A94A     		ldr	r2, .L79+24
 897 0332 5362     		str	r3, [r2, #36]
 540:Src/main.c    ****     }
 898              		.loc 1 540 0
 899 0334 A94A     		ldr	r2, .L79+28
 900 0336 1360     		str	r3, [r2]
 901              	.L41:
 544:Src/main.c    ****       ///// multi meter /////
 902              		.loc 1 544 0
 903 0338 A94B     		ldr	r3, .L79+32
 904 033a 1B68     		ldr	r3, [r3]
 905 033c 012B     		cmp	r3, #1
 906 033e 6BD0     		beq	.L70
 907              	.LVL104:
 908              	.L31:
 435:Src/main.c    **** //    if( 1 ){ // debug
 909              		.loc 1 435 0
 910 0340 A84B     		ldr	r3, .L79+36
 911 0342 1B68     		ldr	r3, [r3]
 912 0344 012B     		cmp	r3, #1
 913 0346 3FF4FCAE 		beq	.L71
 914              	.L32:
 480:Src/main.c    **** 
 915              		.loc 1 480 0
 916 034a BDF81830 		ldrh	r3, [sp, #24]
 917 034e 07EE103A 		vmov	s14, r3	@ int
 918 0352 B8EE477A 		vcvt.f32.u32	s14, s14
 919 0356 DFEDA47A 		vldr.32	s15, .L79+40
 920 035a 27EE277A 		vmul.f32	s14, s14, s15
 921 035e DFEDA36A 		vldr.32	s13, .L79+44
 922 0362 C7EE267A 		vdiv.f32	s15, s14, s13
 923 0366 FDEEE77A 		vcvt.s32.f32	s15, s15
 924 036a 17EE903A 		vmov	r3, s15	@ int
 925 036e 1CB2     		sxth	r4, r3
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 31


 926 0370 9F4F     		ldr	r7, .L79+48
 927 0372 7C81     		strh	r4, [r7, #10]	@ movhi
 483:Src/main.c    ****     FP_duty = (int16_t)(FP_volt/(14.4)*10);
 928              		.loc 1 483 0
 929 0374 9F4B     		ldr	r3, .L79+52
 930 0376 1C80     		strh	r4, [r3]	@ movhi
 484:Src/main.c    **** 		meas_value[2] = FP_volt;
 931              		.loc 1 484 0
 932 0378 2046     		mov	r0, r4
 933 037a FFF7FEFF 		bl	__aeabi_i2d
 934              	.LVL105:
 935 037e 90A3     		adr	r3, .L79
 936 0380 D3E90023 		ldrd	r2, [r3]
 937 0384 FFF7FEFF 		bl	__aeabi_ddiv
 938              	.LVL106:
 939 0388 0022     		movs	r2, #0
 940 038a 9B4B     		ldr	r3, .L79+56
 941 038c FFF7FEFF 		bl	__aeabi_dmul
 942              	.LVL107:
 943 0390 FFF7FEFF 		bl	__aeabi_d2iz
 944              	.LVL108:
 945 0394 994B     		ldr	r3, .L79+60
 946 0396 1880     		strh	r0, [r3]	@ movhi
 485:Src/main.c    **** 
 947              		.loc 1 485 0
 948 0398 BC80     		strh	r4, [r7, #4]	@ movhi
 488:Src/main.c    ****       switch( flag_sw ){
 949              		.loc 1 488 0
 950 039a 904B     		ldr	r3, .L79+28
 951 039c 1B68     		ldr	r3, [r3]
 952 039e 002B     		cmp	r3, #0
 953 03a0 CAD0     		beq	.L41
 489:Src/main.c    ****         case 1:
 954              		.loc 1 489 0
 955 03a2 022B     		cmp	r3, #2
 956 03a4 3FF452AF 		beq	.L43
 957 03a8 032B     		cmp	r3, #3
 958 03aa ADD0     		beq	.L44
 959 03ac 012B     		cmp	r3, #1
 960 03ae B2D1     		bne	.L42
 491:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 961              		.loc 1 491 0
 962 03b0 9349     		ldr	r1, .L79+64
 963 03b2 8648     		ldr	r0, .L79+12
 964 03b4 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 965              	.LVL109:
 492:Src/main.c    ****           // SW "UP"
 966              		.loc 1 492 0
 967 03b8 1720     		movs	r0, #23
 968 03ba FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 969              	.LVL110:
 494:Src/main.c    ****             if( mode == N_mode-1 ){
 970              		.loc 1 494 0
 971 03be 914B     		ldr	r3, .L79+68
 972 03c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 973 03c2 002B     		cmp	r3, #0
 974 03c4 A7D1     		bne	.L42
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 32


 495:Src/main.c    ****               mode = 0;
 975              		.loc 1 495 0
 976 03c6 834B     		ldr	r3, .L79+20
 977 03c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 978 03ca 012B     		cmp	r3, #1
 979 03cc 3FF43AAF 		beq	.L72
 498:Src/main.c    ****             }
 980              		.loc 1 498 0
 981 03d0 0133     		adds	r3, r3, #1
 982 03d2 804A     		ldr	r2, .L79+20
 983 03d4 1370     		strb	r3, [r2]
 984 03d6 9EE7     		b	.L42
 985              	.L68:
 532:Src/main.c    ****         draw_indicators();
 986              		.loc 1 532 0
 987 03d8 FFF7FEFF 		bl	draw_MeasLabels
 988              	.LVL111:
 533:Src/main.c    ****       }else if( mode == 1 ){
 989              		.loc 1 533 0
 990 03dc FFF7FEFF 		bl	draw_indicators
 991              	.LVL112:
 992 03e0 A2E7     		b	.L49
 993              	.L69:
 994              	.LBB2:
 535:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "MAP", "kPa");
 995              		.loc 1 535 0
 996 03e2 7B4C     		ldr	r4, .L79+16
 997 03e4 0C23     		movs	r3, #12
 998 03e6 0293     		str	r3, [sp, #8]
 999 03e8 6FF00503 		mvn	r3, #5
 1000 03ec 0193     		str	r3, [sp, #4]
 1001 03ee 3423     		movs	r3, #52
 1002 03f0 0093     		str	r3, [sp]
 1003 03f2 8023     		movs	r3, #128
 1004 03f4 0D22     		movs	r2, #13
 1005 03f6 0021     		movs	r1, #0
 1006 03f8 2046     		mov	r0, r4
 1007 03fa FFF7FEFF 		bl	draw_Wave_axis
 1008              	.LVL113:
 536:Src/main.c    ****       }
 1009              		.loc 1 536 0
 1010 03fe 824B     		ldr	r3, .L79+72
 1011 0400 0293     		str	r3, [sp, #8]
 1012 0402 824B     		ldr	r3, .L79+76
 1013 0404 0193     		str	r3, [sp, #4]
 1014 0406 0D23     		movs	r3, #13
 1015 0408 0093     		str	r3, [sp]
 1016 040a 4023     		movs	r3, #64
 1017 040c 0022     		movs	r2, #0
 1018 040e 1146     		mov	r1, r2
 1019 0410 2046     		mov	r0, r4
 1020 0412 FFF7FEFF 		bl	draw_MeasLabelUnit
 1021              	.LVL114:
 1022 0416 87E7     		b	.L49
 1023              	.L70:
 1024              	.LBE2:
 546:Src/main.c    ****         // update Fuel Pump Voltage
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 33


 1025              		.loc 1 546 0
 1026 0418 6E4B     		ldr	r3, .L79+20
 1027 041a 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1028 041c 74B1     		cbz	r4, .L73
 566:Src/main.c    **** 
 1029              		.loc 1 566 0
 1030 041e 012C     		cmp	r4, #1
 1031 0420 00F08A80 		beq	.L74
 580:Src/main.c    ****         u8g2_ClearBuffer(&u8g2);
 1032              		.loc 1 580 0
 1033 0424 774B     		ldr	r3, .L79+68
 1034 0426 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1035 0428 012B     		cmp	r3, #1
 1036 042a 00F0FF80 		beq	.L75
 1037              	.L56:
 599:Src/main.c    **** 
 1038              		.loc 1 599 0
 1039 042e 6848     		ldr	r0, .L79+16
 1040 0430 FFF7FEFF 		bl	u8g2_SendBuffer
 1041              	.LVL115:
 601:Src/main.c    ****     }
 1042              		.loc 1 601 0
 1043 0434 6A4B     		ldr	r3, .L79+32
 1044 0436 0022     		movs	r2, #0
 1045 0438 1A60     		str	r2, [r3]
 1046 043a 81E7     		b	.L31
 1047              	.L73:
 548:Src/main.c    **** 
 1048              		.loc 1 548 0
 1049 043c DFF89081 		ldr	r8, .L79+16
 1050 0440 734B     		ldr	r3, .L79+80
 1051 0442 0593     		str	r3, [sp, #20]
 1052 0444 0027     		movs	r7, #0
 1053 0446 0497     		str	r7, [sp, #16]
 1054 0448 0397     		str	r7, [sp, #12]
 1055 044a 0323     		movs	r3, #3
 1056 044c 0293     		str	r3, [sp, #8]
 1057 044e 6B4B     		ldr	r3, .L79+60
 1058 0450 B3F90030 		ldrsh	r3, [r3]
 1059 0454 0193     		str	r3, [sp, #4]
 1060 0456 0C23     		movs	r3, #12
 1061 0458 0093     		str	r3, [sp]
 1062 045a 4623     		movs	r3, #70
 1063 045c 3422     		movs	r2, #52
 1064 045e 3946     		mov	r1, r7
 1065 0460 4046     		mov	r0, r8
 1066 0462 FFF7FEFF 		bl	draw_Value
 1067              	.LVL116:
 551:Src/main.c    **** 
 1068              		.loc 1 551 0
 1069 0466 42F22833 		movw	r3, #9000
 1070 046a 0393     		str	r3, [sp, #12]
 1071 046c 0297     		str	r7, [sp, #8]
 1072 046e 694B     		ldr	r3, .L79+84
 1073 0470 1B88     		ldrh	r3, [r3]
 1074 0472 0193     		str	r3, [sp, #4]
 1075 0474 0E23     		movs	r3, #14
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 34


 1076 0476 0093     		str	r3, [sp]
 1077 0478 8023     		movs	r3, #128
 1078 047a 3A46     		mov	r2, r7
 1079 047c 3946     		mov	r1, r7
 1080 047e 4046     		mov	r0, r8
 1081 0480 FFF7FEFF 		bl	draw_BarGraph
 1082              	.LVL117:
 554:Src/main.c    ****           x = meas_x;
 1083              		.loc 1 554 0
 1084 0484 28E0     		b	.L52
 1085              	.LVL118:
 1086              	.L53:
 556:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac
 1087              		.loc 1 556 0 discriminator 3
 1088 0486 644B     		ldr	r3, .L79+88
 1089 0488 A3FB0423 		umull	r2, r3, r3, r4
 1090 048c 5B08     		lsrs	r3, r3, #1
 1091 048e 03EB4303 		add	r3, r3, r3, lsl #1
 1092 0492 E31A     		subs	r3, r4, r3
 1093 0494 03EB4303 		add	r3, r3, r3, lsl #1
 1094 0498 9A00     		lsls	r2, r3, #2
 1095 049a D2B2     		uxtb	r2, r2
 1096 049c 1032     		adds	r2, r2, #16
 1097              	.LVL119:
 557:Src/main.c    ****         }
 1098              		.loc 1 557 0 discriminator 3
 1099 049e 04EB8401 		add	r1, r4, r4, lsl #2
 1100 04a2 5E4B     		ldr	r3, .L79+92
 1101 04a4 0B44     		add	r3, r3, r1
 1102 04a6 0593     		str	r3, [sp, #20]
 1103 04a8 5D4B     		ldr	r3, .L79+96
 1104 04aa 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1105 04ac 0493     		str	r3, [sp, #16]
 1106 04ae 5D4B     		ldr	r3, .L79+100
 1107 04b0 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1108 04b2 0393     		str	r3, [sp, #12]
 1109 04b4 5C4B     		ldr	r3, .L79+104
 1110 04b6 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1111 04b8 0293     		str	r3, [sp, #8]
 1112 04ba 4D4B     		ldr	r3, .L79+48
 1113 04bc 33F91430 		ldrsh	r3, [r3, r4, lsl #1]
 1114 04c0 0193     		str	r3, [sp, #4]
 1115 04c2 0C23     		movs	r3, #12
 1116 04c4 0093     		str	r3, [sp]
 1117 04c6 4623     		movs	r3, #70
 1118 04c8 02F0FC02 		and	r2, r2, #252
 1119              	.LVL120:
 1120 04cc 0021     		movs	r1, #0
 1121 04ce 4048     		ldr	r0, .L79+16
 1122 04d0 FFF7FEFF 		bl	draw_Value
 1123              	.LVL121:
 554:Src/main.c    ****           x = meas_x;
 1124              		.loc 1 554 0 discriminator 3
 1125 04d4 0134     		adds	r4, r4, #1
 1126              	.LVL122:
 1127 04d6 E4B2     		uxtb	r4, r4
 1128              	.LVL123:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 35


 1129              	.L52:
 554:Src/main.c    ****           x = meas_x;
 1130              		.loc 1 554 0 is_stmt 0 discriminator 1
 1131 04d8 022C     		cmp	r4, #2
 1132 04da D4D9     		bls	.L53
 559:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 1133              		.loc 1 559 0 is_stmt 1
 1134 04dc 0324     		movs	r4, #3
 1135              	.LVL124:
 1136 04de 28E0     		b	.L54
 1137              	.LVL125:
 1138              	.L55:
 561:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 1139              		.loc 1 561 0 discriminator 3
 1140 04e0 4D4B     		ldr	r3, .L79+88
 1141 04e2 A3FB0423 		umull	r2, r3, r3, r4
 1142 04e6 5B08     		lsrs	r3, r3, #1
 1143 04e8 03EB4303 		add	r3, r3, r3, lsl #1
 1144 04ec E31A     		subs	r3, r4, r3
 1145 04ee 03EB4303 		add	r3, r3, r3, lsl #1
 1146 04f2 9A00     		lsls	r2, r3, #2
 1147 04f4 D2B2     		uxtb	r2, r2
 1148 04f6 1032     		adds	r2, r2, #16
 1149              	.LVL126:
 562:Src/main.c    ****         }
 1150              		.loc 1 562 0 discriminator 3
 1151 04f8 04EB8401 		add	r1, r4, r4, lsl #2
 1152 04fc 474B     		ldr	r3, .L79+92
 1153 04fe 0B44     		add	r3, r3, r1
 1154 0500 0593     		str	r3, [sp, #20]
 1155 0502 474B     		ldr	r3, .L79+96
 1156 0504 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1157 0506 0493     		str	r3, [sp, #16]
 1158 0508 464B     		ldr	r3, .L79+100
 1159 050a 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1160 050c 0393     		str	r3, [sp, #12]
 1161 050e 464B     		ldr	r3, .L79+104
 1162 0510 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1163 0512 0293     		str	r3, [sp, #8]
 1164 0514 364B     		ldr	r3, .L79+48
 1165 0516 33F91430 		ldrsh	r3, [r3, r4, lsl #1]
 1166 051a 0193     		str	r3, [sp, #4]
 1167 051c 0C23     		movs	r3, #12
 1168 051e 0093     		str	r3, [sp]
 1169 0520 3823     		movs	r3, #56
 1170 0522 02F0FC02 		and	r2, r2, #252
 1171              	.LVL127:
 1172 0526 4821     		movs	r1, #72
 1173 0528 2948     		ldr	r0, .L79+16
 1174 052a FFF7FEFF 		bl	draw_Value
 1175              	.LVL128:
 559:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 1176              		.loc 1 559 0 discriminator 3
 1177 052e 0134     		adds	r4, r4, #1
 1178              	.LVL129:
 1179 0530 E4B2     		uxtb	r4, r4
 1180              	.LVL130:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 36


 1181              	.L54:
 559:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 1182              		.loc 1 559 0 is_stmt 0 discriminator 1
 1183 0532 052C     		cmp	r4, #5
 1184 0534 D4D9     		bls	.L55
 1185 0536 7AE7     		b	.L56
 1186              	.LVL131:
 1187              	.L74:
 1188              	.LBB3:
 568:Src/main.c    ****           circular_buffer_index--;
 1189              		.loc 1 568 0 is_stmt 1
 1190 0538 002E     		cmp	r6, #0
 1191 053a 3ED0     		beq	.L64
 569:Src/main.c    ****         }else{
 1192              		.loc 1 569 0
 1193 053c 013E     		subs	r6, r6, #1
 1194              	.LVL132:
 1195 053e B6B2     		uxth	r6, r6
 1196              	.LVL133:
 1197              	.L58:
 573:Src/main.c    **** 
 1198              		.loc 1 573 0
 1199 0540 BDF81830 		ldrh	r3, [sp, #24]
 1200 0544 07EE103A 		vmov	s14, r3	@ int
 1201 0548 B8EE477A 		vcvt.f32.u32	s14, s14
 1202 054c F3EE027A 		vmov.f32	s15, #1.8e+1
 1203 0550 27EE277A 		vmul.f32	s14, s14, s15
 1204 0554 DFED256A 		vldr.32	s13, .L79+44
 1205 0558 C7EE267A 		vdiv.f32	s15, s14, s13
 1206 055c B1EE087A 		vmov.f32	s14, #6.0e+0
 1207 0560 77EEC77A 		vsub.f32	s15, s15, s14
 1208 0564 FDEEE77A 		vcvt.s32.f32	s15, s15
 1209 0568 0DF61804 		addw	r4, sp, #2072
 1210 056c 17EE903A 		vmov	r3, s15	@ int
 1211 0570 24F81630 		strh	r3, [r4, r6, lsl #1]	@ movhi
 576:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 1, 1, "kPa");
 1212              		.loc 1 576 0
 1213 0574 164F     		ldr	r7, .L79+16
 1214 0576 0496     		str	r6, [sp, #16]
 1215 0578 0394     		str	r4, [sp, #12]
 1216 057a 0C23     		movs	r3, #12
 1217 057c 0293     		str	r3, [sp, #8]
 1218 057e 6FF00503 		mvn	r3, #5
 1219 0582 0193     		str	r3, [sp, #4]
 1220 0584 3423     		movs	r3, #52
 1221 0586 0093     		str	r3, [sp]
 1222 0588 8023     		movs	r3, #128
 1223 058a 0D22     		movs	r2, #13
 1224 058c 0021     		movs	r1, #0
 1225 058e 3846     		mov	r0, r7
 1226 0590 FFF7FEFF 		bl	draw_Wave
 1227              	.LVL134:
 577:Src/main.c    **** 
 1228              		.loc 1 577 0
 1229 0594 1C4B     		ldr	r3, .L79+72
 1230 0596 0593     		str	r3, [sp, #20]
 1231 0598 0123     		movs	r3, #1
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 37


 1232 059a 0493     		str	r3, [sp, #16]
 1233 059c 0393     		str	r3, [sp, #12]
 1234 059e 0323     		movs	r3, #3
 1235 05a0 0293     		str	r3, [sp, #8]
 1236 05a2 34F91630 		ldrsh	r3, [r4, r6, lsl #1]
 1237 05a6 0193     		str	r3, [sp, #4]
 1238 05a8 0D23     		movs	r3, #13
 1239 05aa 0093     		str	r3, [sp]
 1240 05ac 4023     		movs	r3, #64
 1241 05ae 0022     		movs	r2, #0
 1242 05b0 1146     		mov	r1, r2
 1243 05b2 3846     		mov	r0, r7
 1244 05b4 FFF7FEFF 		bl	draw_Value
 1245              	.LVL135:
 1246              	.LBE3:
 1247 05b8 39E7     		b	.L56
 1248              	.L64:
 1249              	.LBB4:
 571:Src/main.c    ****         }
 1250              		.loc 1 571 0
 1251 05ba 8026     		movs	r6, #128
 1252              	.LVL136:
 1253 05bc C0E7     		b	.L58
 1254              	.L80:
 1255 05be 00BF     		.align	3
 1256              	.L79:
 1257 05c0 CDCCCCCC 		.word	3435973837
 1258 05c4 CCCC2C40 		.word	1076677836
 1259 05c8 48000000 		.word	.LC8
 1260 05cc 00000000 		.word	huart2
 1261 05d0 00000000 		.word	u8g2
 1262 05d4 00000000 		.word	mode
 1263 05d8 00100040 		.word	1073745920
 1264 05dc 00000000 		.word	flag_sw
 1265 05e0 00000000 		.word	flag_disp
 1266 05e4 00000000 		.word	flag_meas
 1267 05e8 0000A543 		.word	1134886912
 1268 05ec 00007F43 		.word	1132396544
 1269 05f0 00000000 		.word	.LANCHOR9
 1270 05f4 00000000 		.word	.LANCHOR10
 1271 05f8 00002440 		.word	1076101120
 1272 05fc 00000000 		.word	.LANCHOR11
 1273 0600 3C000000 		.word	.LC6
 1274 0604 00000000 		.word	setting
 1275 0608 50000000 		.word	.LC9
 1276 060c 54000000 		.word	.LC10
 1277 0610 00000000 		.word	.LC0
 1278 0614 00000000 		.word	.LANCHOR5
 1279 0618 ABAAAAAA 		.word	-1431655765
 1280 061c 00000000 		.word	.LANCHOR3
 1281 0620 00000000 		.word	.LANCHOR12
 1282 0624 00000000 		.word	.LANCHOR13
 1283 0628 00000000 		.word	.LANCHOR14
 1284              	.LVL137:
 1285              	.L75:
 1286              	.LBE4:
 581:Src/main.c    ****         u8g2_SetFont(&u8g2, u8g2_font_7x14B_tf);
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 38


 1287              		.loc 1 581 0
 1288 062c 1F4C     		ldr	r4, .L81
 1289 062e 2046     		mov	r0, r4
 1290 0630 FFF7FEFF 		bl	u8g2_ClearBuffer
 1291              	.LVL138:
 582:Src/main.c    ****         u8g2_DrawStr(&u8g2, 2, 15, "Mode Setting" );
 1292              		.loc 1 582 0
 1293 0634 1E49     		ldr	r1, .L81+4
 1294 0636 2046     		mov	r0, r4
 1295 0638 FFF7FEFF 		bl	u8g2_SetFont
 1296              	.LVL139:
 583:Src/main.c    ****         if( cursor == 0 ){
 1297              		.loc 1 583 0
 1298 063c 1D4B     		ldr	r3, .L81+8
 1299 063e 0F22     		movs	r2, #15
 1300 0640 0221     		movs	r1, #2
 1301 0642 2046     		mov	r0, r4
 1302 0644 FFF7FEFF 		bl	u8g2_DrawStr
 1303              	.LVL140:
 584:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, ">" );
 1304              		.loc 1 584 0
 1305 0648 1B4B     		ldr	r3, .L81+12
 1306 064a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1307 064c 03BB     		cbnz	r3, .L59
 585:Src/main.c    ****         }else{
 1308              		.loc 1 585 0
 1309 064e 1B4B     		ldr	r3, .L81+16
 1310 0650 1E22     		movs	r2, #30
 1311 0652 0221     		movs	r1, #2
 1312 0654 2046     		mov	r0, r4
 1313 0656 FFF7FEFF 		bl	u8g2_DrawStr
 1314              	.LVL141:
 1315              	.L60:
 589:Src/main.c    ****         if( cursor == 1 ){
 1316              		.loc 1 589 0
 1317 065a 194B     		ldr	r3, .L81+20
 1318 065c 1E22     		movs	r2, #30
 1319 065e 0A21     		movs	r1, #10
 1320 0660 1248     		ldr	r0, .L81
 1321 0662 FFF7FEFF 		bl	u8g2_DrawStr
 1322              	.LVL142:
 590:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 1323              		.loc 1 590 0
 1324 0666 144B     		ldr	r3, .L81+12
 1325 0668 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1326 066a 012B     		cmp	r3, #1
 1327 066c 17D0     		beq	.L76
 593:Src/main.c    ****         }
 1328              		.loc 1 593 0
 1329 066e 154B     		ldr	r3, .L81+24
 1330 0670 2D22     		movs	r2, #45
 1331 0672 0221     		movs	r1, #2
 1332 0674 0D48     		ldr	r0, .L81
 1333 0676 FFF7FEFF 		bl	u8g2_DrawStr
 1334              	.LVL143:
 1335              	.L62:
 595:Src/main.c    ****         u8g2_SendBuffer(&u8g2);
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 39


 1336              		.loc 1 595 0
 1337 067a 0C4C     		ldr	r4, .L81
 1338 067c 124B     		ldr	r3, .L81+28
 1339 067e 2D22     		movs	r2, #45
 1340 0680 0A21     		movs	r1, #10
 1341 0682 2046     		mov	r0, r4
 1342 0684 FFF7FEFF 		bl	u8g2_DrawStr
 1343              	.LVL144:
 596:Src/main.c    ****       }
 1344              		.loc 1 596 0
 1345 0688 2046     		mov	r0, r4
 1346 068a FFF7FEFF 		bl	u8g2_SendBuffer
 1347              	.LVL145:
 1348 068e CEE6     		b	.L56
 1349              	.L59:
 587:Src/main.c    ****         }
 1350              		.loc 1 587 0
 1351 0690 0C4B     		ldr	r3, .L81+24
 1352 0692 1E22     		movs	r2, #30
 1353 0694 0221     		movs	r1, #2
 1354 0696 0548     		ldr	r0, .L81
 1355 0698 FFF7FEFF 		bl	u8g2_DrawStr
 1356              	.LVL146:
 1357 069c DDE7     		b	.L60
 1358              	.L76:
 591:Src/main.c    ****         }else{
 1359              		.loc 1 591 0
 1360 069e 074B     		ldr	r3, .L81+16
 1361 06a0 2D22     		movs	r2, #45
 1362 06a2 0221     		movs	r1, #2
 1363 06a4 0148     		ldr	r0, .L81
 1364 06a6 FFF7FEFF 		bl	u8g2_DrawStr
 1365              	.LVL147:
 1366 06aa E6E7     		b	.L62
 1367              	.L82:
 1368              		.align	2
 1369              	.L81:
 1370 06ac 00000000 		.word	u8g2
 1371 06b0 00000000 		.word	u8g2_font_7x14B_tf
 1372 06b4 58000000 		.word	.LC11
 1373 06b8 00000000 		.word	.LANCHOR15
 1374 06bc 68000000 		.word	.LC12
 1375 06c0 70000000 		.word	.LC14
 1376 06c4 6C000000 		.word	.LC13
 1377 06c8 7C000000 		.word	.LC15
 1378              		.cfi_endproc
 1379              	.LFE128:
 1381              		.section	.text.assert_failed,"ax",%progbits
 1382              		.align	1
 1383              		.global	assert_failed
 1384              		.syntax unified
 1385              		.thumb
 1386              		.thumb_func
 1387              		.fpu fpv4-sp-d16
 1389              	assert_failed:
 1390              	.LFB131:
 680:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 40


 681:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 682:Src/main.c    ****   while(1) 
 683:Src/main.c    ****   {
 684:Src/main.c    ****   }
 685:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */ 
 686:Src/main.c    **** }
 687:Src/main.c    **** 
 688:Src/main.c    **** #ifdef USE_FULL_ASSERT
 689:Src/main.c    **** 
 690:Src/main.c    **** /**
 691:Src/main.c    ****    * @brief Reports the name of the source file and the source line number
 692:Src/main.c    ****    * where the assert_param error has occurred.
 693:Src/main.c    ****    * @param file: pointer to the source file name
 694:Src/main.c    ****    * @param line: assert_param error line source number
 695:Src/main.c    ****    * @retval None
 696:Src/main.c    ****    */
 697:Src/main.c    **** void assert_failed(uint8_t* file, uint32_t line)
 698:Src/main.c    **** {
 1391              		.loc 1 698 0
 1392              		.cfi_startproc
 1393              		@ args = 0, pretend = 0, frame = 0
 1394              		@ frame_needed = 0, uses_anonymous_args = 0
 1395              		@ link register save eliminated.
 1396              	.LVL148:
 699:Src/main.c    ****   /* USER CODE BEGIN 6 */
 700:Src/main.c    ****   /* User can add his own implementation to report the file name and line number,
 701:Src/main.c    ****     ex: printf("Wrong parameters value: file %s on line %d¥r¥n", file, line) */
 702:Src/main.c    ****   /* USER CODE END 6 */
 703:Src/main.c    **** 
 704:Src/main.c    **** }
 1397              		.loc 1 704 0
 1398 0000 7047     		bx	lr
 1399              		.cfi_endproc
 1400              	.LFE131:
 1402              		.global	FP_duty
 1403              		.global	FP_volt
 1404              		.global	meas_value
 1405              		.global	meas_sign
 1406              		.global	meas_frac
 1407              		.global	meas_digit
 1408              		.global	meas_unit
 1409              		.global	meas_name
 1410              		.global	idct_status
 1411              		.global	idct_name
 1412              		.global	cursor
 1413              		.comm	setting,1,1
 1414              		.comm	mode,1,1
 1415              		.global	MT
 1416              		.global	gear
 1417              		.global	speed
 1418              		.global	rpm
 1419              		.global	logo_bits
 1420              		.global	update_display
 1421              		.comm	u8g2,128,4
 1422              		.section	.bss.cursor,"aw",%nobits
 1423              		.set	.LANCHOR15,. + 0
 1426              	cursor:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 41


 1427 0000 00       		.space	1
 1428              		.section	.bss.gear,"aw",%nobits
 1429              		.set	.LANCHOR7,. + 0
 1432              	gear:
 1433 0000 00       		.space	1
 1434              		.section	.bss.rpm,"aw",%nobits
 1435              		.align	1
 1436              		.set	.LANCHOR5,. + 0
 1439              	rpm:
 1440 0000 0000     		.space	2
 1441              		.section	.bss.update_display,"aw",%nobits
 1444              	update_display:
 1445 0000 00       		.space	1
 1446              		.section	.data.FP_duty,"aw",%progbits
 1447              		.align	1
 1448              		.set	.LANCHOR11,. + 0
 1451              	FP_duty:
 1452 0000 6400     		.short	100
 1453              		.section	.data.FP_volt,"aw",%progbits
 1454              		.align	1
 1455              		.set	.LANCHOR10,. + 0
 1458              	FP_volt:
 1459 0000 4A01     		.short	330
 1460              		.section	.data.MT,"aw",%progbits
 1461              		.align	3
 1462              		.set	.LANCHOR6,. + 0
 1465              	MT:
 1466 0000 77BE9F1A 		.word	446676599
 1467 0004 2FDD0B40 		.word	1074519343
 1468 0008 1F85EB51 		.word	1374389535
 1469 000c B81E0040 		.word	1073749688
 1470 0010 A8C64B37 		.word	927712936
 1471 0014 8941F63F 		.word	1073103241
 1472 0018 00000000 		.word	0
 1473 001c 0000F03F 		.word	1072693248
 1474 0020 986E1283 		.word	2199023256
 1475 0024 C0CAE93F 		.word	1072286400
 1476              		.section	.data.meas_value,"aw",%progbits
 1477              		.align	2
 1478              		.set	.LANCHOR9,. + 0
 1481              	meas_value:
 1482 0000 6900     		.short	105
 1483 0002 EB00     		.short	235
 1484 0004 8502     		.short	645
 1485 0006 5900     		.short	89
 1486 0008 4900     		.short	73
 1487 000a 8F00     		.short	143
 1488              		.section	.data.speed,"aw",%progbits
 1489              		.align	1
 1490              		.set	.LANCHOR8,. + 0
 1493              	speed:
 1494 0000 F000     		.short	240
 1495              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 1496              		.align	2
 1497              	.LC2:
 1498 0000 5372632F 		.ascii	"Src/main.c\000"
 1498      6D61696E 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 42


 1498      2E6300
 1499              		.section	.rodata.draw_MeasLabels.str1.4,"aMS",%progbits,1
 1500              		.align	2
 1501              	.LC0:
 1502 0000 25202000 		.ascii	"%  \000"
 1503              	.LC1:
 1504 0004 44555459 		.ascii	"DUTY\000"
 1504      00
 1505              		.section	.rodata.idct_name,"a",%progbits
 1506              		.align	2
 1507              		.set	.LANCHOR0,. + 0
 1510              	idct_name:
 1511 0000 43414E00 		.ascii	"CAN\000"
 1512 0004 00       		.space	1
 1513 0005 4F324642 		.ascii	"O2FB\000"
 1513      00
 1514              		.section	.rodata.idct_status,"a",%progbits
 1515              		.align	2
 1516              		.set	.LANCHOR1,. + 0
 1519              	idct_status:
 1520 0000 01       		.byte	1
 1521 0001 01       		.byte	1
 1522              		.section	.rodata.logo_bits,"a",%progbits
 1523              		.align	2
 1524              		.set	.LANCHOR4,. + 0
 1527              	logo_bits:
 1528 0000 00       		.byte	0
 1529 0001 00       		.byte	0
 1530 0002 00       		.byte	0
 1531 0003 00       		.byte	0
 1532 0004 00       		.byte	0
 1533 0005 00       		.byte	0
 1534 0006 00       		.byte	0
 1535 0007 00       		.byte	0
 1536 0008 00       		.byte	0
 1537 0009 00       		.byte	0
 1538 000a 00       		.byte	0
 1539 000b 00       		.byte	0
 1540 000c 00       		.byte	0
 1541 000d 00       		.byte	0
 1542 000e 00       		.byte	0
 1543 000f 00       		.byte	0
 1544 0010 00       		.byte	0
 1545 0011 00       		.byte	0
 1546 0012 00       		.byte	0
 1547 0013 00       		.byte	0
 1548 0014 00       		.byte	0
 1549 0015 00       		.byte	0
 1550 0016 00       		.byte	0
 1551 0017 00       		.byte	0
 1552 0018 00       		.byte	0
 1553 0019 00       		.byte	0
 1554 001a F0       		.byte	-16
 1555 001b 0F       		.byte	15
 1556 001c 00       		.byte	0
 1557 001d 00       		.byte	0
 1558 001e 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 43


 1559 001f FC       		.byte	-4
 1560 0020 FF       		.byte	-1
 1561 0021 FF       		.byte	-1
 1562 0022 3F       		.byte	63
 1563 0023 00       		.byte	0
 1564 0024 80       		.byte	-128
 1565 0025 FF       		.byte	-1
 1566 0026 FF       		.byte	-1
 1567 0027 FF       		.byte	-1
 1568 0028 FF       		.byte	-1
 1569 0029 01       		.byte	1
 1570 002a E0       		.byte	-32
 1571 002b 1F       		.byte	31
 1572 002c 00       		.byte	0
 1573 002d 80       		.byte	-128
 1574 002e FF       		.byte	-1
 1575 002f 07       		.byte	7
 1576 0030 E0       		.byte	-32
 1577 0031 01       		.byte	1
 1578 0032 00       		.byte	0
 1579 0033 80       		.byte	-128
 1580 0034 81       		.byte	-127
 1581 0035 07       		.byte	7
 1582 0036 E0       		.byte	-32
 1583 0037 01       		.byte	1
 1584 0038 00       		.byte	0
 1585 0039 80       		.byte	-128
 1586 003a 81       		.byte	-127
 1587 003b 07       		.byte	7
 1588 003c C0       		.byte	-64
 1589 003d E1       		.byte	-31
 1590 003e 07       		.byte	7
 1591 003f C0       		.byte	-64
 1592 0040 80       		.byte	-128
 1593 0041 03       		.byte	3
 1594 0042 00       		.byte	0
 1595 0043 FC       		.byte	-4
 1596 0044 1F       		.byte	31
 1597 0045 E0       		.byte	-32
 1598 0046 80       		.byte	-128
 1599 0047 03       		.byte	3
 1600 0048 00       		.byte	0
 1601 0049 FE       		.byte	-2
 1602 004a 7F       		.byte	127
 1603 004b 70       		.byte	112
 1604 004c C0       		.byte	-64
 1605 004d 01       		.byte	1
 1606 004e 00       		.byte	0
 1607 004f 0F       		.byte	15
 1608 0050 FE       		.byte	-2
 1609 0051 39       		.byte	57
 1610 0052 E0       		.byte	-32
 1611 0053 00       		.byte	0
 1612 0054 00       		.byte	0
 1613 0055 07       		.byte	7
 1614 0056 F8       		.byte	-8
 1615 0057 1F       		.byte	31
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 44


 1616 0058 F0       		.byte	-16
 1617 0059 00       		.byte	0
 1618 005a 00       		.byte	0
 1619 005b 0E       		.byte	14
 1620 005c E0       		.byte	-32
 1621 005d 1F       		.byte	31
 1622 005e 78       		.byte	120
 1623 005f 00       		.byte	0
 1624 0060 00       		.byte	0
 1625 0061 0C       		.byte	12
 1626 0062 C0       		.byte	-64
 1627 0063 FF       		.byte	-1
 1628 0064 3F       		.byte	63
 1629 0065 00       		.byte	0
 1630 0066 00       		.byte	0
 1631 0067 18       		.byte	24
 1632 0068 00       		.byte	0
 1633 0069 FF       		.byte	-1
 1634 006a 1F       		.byte	31
 1635 006b 00       		.byte	0
 1636 006c 00       		.byte	0
 1637 006d 38       		.byte	56
 1638 006e C0       		.byte	-64
 1639 006f FF       		.byte	-1
 1640 0070 0F       		.byte	15
 1641 0071 00       		.byte	0
 1642 0072 00       		.byte	0
 1643 0073 70       		.byte	112
 1644 0074 E0       		.byte	-32
 1645 0075 F1       		.byte	-15
 1646 0076 03       		.byte	3
 1647 0077 00       		.byte	0
 1648 0078 00       		.byte	0
 1649 0079 E0       		.byte	-32
 1650 007a 78       		.byte	120
 1651 007b 00       		.byte	0
 1652 007c 00       		.byte	0
 1653 007d 00       		.byte	0
 1654 007e 00       		.byte	0
 1655 007f C0       		.byte	-64
 1656 0080 3F       		.byte	63
 1657 0081 E0       		.byte	-32
 1658 0082 01       		.byte	1
 1659 0083 00       		.byte	0
 1660 0084 00       		.byte	0
 1661 0085 80       		.byte	-128
 1662 0086 1F       		.byte	31
 1663 0087 F0       		.byte	-16
 1664 0088 01       		.byte	1
 1665 0089 00       		.byte	0
 1666 008a 00       		.byte	0
 1667 008b 00       		.byte	0
 1668 008c 07       		.byte	7
 1669 008d F8       		.byte	-8
 1670 008e 00       		.byte	0
 1671 008f 00       		.byte	0
 1672 0090 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 45


 1673 0091 00       		.byte	0
 1674 0092 1E       		.byte	30
 1675 0093 7C       		.byte	124
 1676 0094 00       		.byte	0
 1677 0095 00       		.byte	0
 1678 0096 00       		.byte	0
 1679 0097 00       		.byte	0
 1680 0098 F8       		.byte	-8
 1681 0099 1F       		.byte	31
 1682 009a 00       		.byte	0
 1683 009b 00       		.byte	0
 1684 009c 00       		.byte	0
 1685 009d 00       		.byte	0
 1686 009e F0       		.byte	-16
 1687 009f 0F       		.byte	15
 1688 00a0 00       		.byte	0
 1689 00a1 00       		.byte	0
 1690 00a2 00       		.byte	0
 1691 00a3 00       		.byte	0
 1692 00a4 80       		.byte	-128
 1693 00a5 01       		.byte	1
 1694 00a6 00       		.byte	0
 1695 00a7 00       		.byte	0
 1696 00a8 00       		.byte	0
 1697 00a9 00       		.byte	0
 1698 00aa 00       		.byte	0
 1699 00ab 00       		.byte	0
 1700 00ac 00       		.byte	0
 1701 00ad 00       		.byte	0
 1702 00ae 00       		.byte	0
 1703 00af 00       		.byte	0
 1704 00b0 00       		.byte	0
 1705 00b1 00       		.byte	0
 1706 00b2 00       		.byte	0
 1707 00b3 00       		.byte	0
 1708 00b4 00       		.byte	0
 1709 00b5 00       		.byte	0
 1710 00b6 00       		.byte	0
 1711 00b7 00       		.byte	0
 1712 00b8 00       		.byte	0
 1713 00b9 00       		.byte	0
 1714 00ba 00       		.byte	0
 1715 00bb 00       		.byte	0
 1716 00bc 00       		.byte	0
 1717 00bd 00       		.byte	0
 1718 00be 00       		.byte	0
 1719 00bf 00       		.byte	0
 1720 00c0 00       		.byte	0
 1721 00c1 00       		.byte	0
 1722 00c2 00       		.byte	0
 1723 00c3 00       		.byte	0
 1724 00c4 00       		.byte	0
 1725 00c5 00       		.byte	0
 1726 00c6 00       		.byte	0
 1727 00c7 4C       		.byte	76
 1728 00c8 1C       		.byte	28
 1729 00c9 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 46


 1730 00ca 00       		.byte	0
 1731 00cb 00       		.byte	0
 1732 00cc 00       		.byte	0
 1733 00cd 32       		.byte	50
 1734 00ce 0E       		.byte	14
 1735 00cf 00       		.byte	0
 1736 00d0 00       		.byte	0
 1737 00d1 00       		.byte	0
 1738 00d2 00       		.byte	0
 1739 00d3 00       		.byte	0
 1740 00d4 C6       		.byte	-58
 1741 00d5 00       		.byte	0
 1742 00d6 18       		.byte	24
 1743 00d7 00       		.byte	0
 1744 00d8 00       		.byte	0
 1745 00d9 7C       		.byte	124
 1746 00da EF       		.byte	-17
 1747 00db FC       		.byte	-4
 1748 00dc 39       		.byte	57
 1749 00dd 00       		.byte	0
 1750 00de 00       		.byte	0
 1751 00df 4E       		.byte	78
 1752 00e0 C6       		.byte	-58
 1753 00e1 B8       		.byte	-72
 1754 00e2 31       		.byte	49
 1755 00e3 00       		.byte	0
 1756 00e4 00       		.byte	0
 1757 00e5 3E       		.byte	62
 1758 00e6 C6       		.byte	-58
 1759 00e7 98       		.byte	-104
 1760 00e8 31       		.byte	49
 1761 00e9 00       		.byte	0
 1762 00ea 00       		.byte	0
 1763 00eb 3C       		.byte	60
 1764 00ec C6       		.byte	-58
 1765 00ed 98       		.byte	-104
 1766 00ee 31       		.byte	49
 1767 00ef 00       		.byte	0
 1768 00f0 00       		.byte	0
 1769 00f1 0E       		.byte	14
 1770 00f2 C6       		.byte	-58
 1771 00f3 98       		.byte	-104
 1772 00f4 31       		.byte	49
 1773 00f5 00       		.byte	0
 1774 00f6 00       		.byte	0
 1775 00f7 4E       		.byte	78
 1776 00f8 CE       		.byte	-50
 1777 00f9 99       		.byte	-103
 1778 00fa 31       		.byte	49
 1779 00fb 00       		.byte	0
 1780 00fc 00       		.byte	0
 1781 00fd 7C       		.byte	124
 1782 00fe EF       		.byte	-17
 1783 00ff FD       		.byte	-3
 1784 0100 7B       		.byte	123
 1785 0101 00       		.byte	0
 1786 0102 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 47


 1787 0103 00       		.byte	0
 1788 0104 00       		.byte	0
 1789 0105 00       		.byte	0
 1790 0106 00       		.byte	0
 1791 0107 00       		.byte	0
 1792 0108 00       		.byte	0
 1793 0109 00       		.byte	0
 1794 010a 00       		.byte	0
 1795 010b 00       		.byte	0
 1796 010c 00       		.byte	0
 1797 010d 00       		.byte	0
 1798 010e 00       		.byte	0
 1799 010f 00       		.byte	0
 1800 0110 00       		.byte	0
 1801 0111 00       		.byte	0
 1802 0112 00       		.byte	0
 1803 0113 00       		.byte	0
 1804 0114 00       		.byte	0
 1805 0115 00       		.byte	0
 1806 0116 00       		.byte	0
 1807 0117 00       		.byte	0
 1808 0118 00       		.byte	0
 1809 0119 00       		.byte	0
 1810 011a 00       		.byte	0
 1811 011b 00       		.byte	0
 1812 011c 00       		.byte	0
 1813 011d 00       		.byte	0
 1814 011e 00       		.byte	0
 1815 011f 00       		.byte	0
 1816              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1817              		.align	2
 1818              	.LC3:
 1819 0000 4D756C74 		.ascii	"Multi Function Meter\000"
 1819      69204675 
 1819      6E637469 
 1819      6F6E204D 
 1819      65746572 
 1820 0015 000000   		.space	3
 1821              	.LC4:
 1822 0018 5265762E 		.ascii	"Rev. 0.1a\000"
 1822      20302E31 
 1822      6100
 1823 0022 0000     		.space	2
 1824              	.LC5:
 1825 0024 48656C6C 		.ascii	"Hello. This is MFM.\012\000"
 1825      6F2E2054 
 1825      68697320 
 1825      6973204D 
 1825      464D2E0A 
 1826 0039 000000   		.space	3
 1827              	.LC6:
 1828 003c 55502000 		.ascii	"UP \000"
 1829              	.LC7:
 1830 0040 444F574E 		.ascii	"DOWN \000"
 1830      2000
 1831 0046 0000     		.space	2
 1832              	.LC8:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 48


 1833 0048 454E5445 		.ascii	"ENTER \000"
 1833      522000
 1834 004f 00       		.space	1
 1835              	.LC9:
 1836 0050 6B506100 		.ascii	"kPa\000"
 1837              	.LC10:
 1838 0054 4D415000 		.ascii	"MAP\000"
 1839              	.LC11:
 1840 0058 4D6F6465 		.ascii	"Mode Setting\000"
 1840      20536574 
 1840      74696E67 
 1840      00
 1841 0065 000000   		.space	3
 1842              	.LC12:
 1843 0068 3E00     		.ascii	">\000"
 1844 006a 0000     		.space	2
 1845              	.LC13:
 1846 006c 2000     		.ascii	" \000"
 1847 006e 0000     		.space	2
 1848              	.LC14:
 1849 0070 4D756C74 		.ascii	"Multi-Meter\000"
 1849      692D4D65 
 1849      74657200 
 1850              	.LC15:
 1851 007c 53636F70 		.ascii	"Scope\000"
 1851      6500
 1852              		.section	.rodata.meas_digit,"a",%progbits
 1853              		.align	2
 1854              		.set	.LANCHOR14,. + 0
 1857              	meas_digit:
 1858 0000 03       		.byte	3
 1859 0001 03       		.byte	3
 1860 0002 03       		.byte	3
 1861 0003 03       		.byte	3
 1862 0004 03       		.byte	3
 1863 0005 03       		.byte	3
 1864              		.section	.rodata.meas_frac,"a",%progbits
 1865              		.align	2
 1866              		.set	.LANCHOR13,. + 0
 1869              	meas_frac:
 1870 0000 02       		.byte	2
 1871 0001 02       		.byte	2
 1872 0002 01       		.byte	1
 1873 0003 00       		.byte	0
 1874 0004 00       		.byte	0
 1875 0005 02       		.byte	2
 1876              		.section	.rodata.meas_name,"a",%progbits
 1877              		.align	2
 1878              		.set	.LANCHOR2,. + 0
 1881              	meas_name:
 1882 0000 4D415000 		.ascii	"MAP\000"
 1883 0004 000000   		.space	3
 1884 0007 4F494C50 		.ascii	"OILP\000"
 1884      00
 1885 000c 0000     		.space	2
 1886 000e 4650564F 		.ascii	"FPVOLT\000"
 1886      4C5400
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 49


 1887 0015 45435400 		.ascii	"ECT\000"
 1888 0019 000000   		.space	3
 1889 001c 4F494C54 		.ascii	"OILT\000"
 1889      00
 1890 0021 0000     		.space	2
 1891 0023 4F3200   		.ascii	"O2\000"
 1892 0026 00000000 		.space	4
 1893              		.section	.rodata.meas_sign,"a",%progbits
 1894              		.align	2
 1895              		.set	.LANCHOR12,. + 0
 1898              	meas_sign:
 1899 0000 01       		.byte	1
 1900 0001 00       		.byte	0
 1901 0002 00       		.byte	0
 1902 0003 00       		.byte	0
 1903 0004 00       		.byte	0
 1904 0005 00       		.byte	0
 1905              		.section	.rodata.meas_unit,"a",%progbits
 1906              		.align	2
 1907              		.set	.LANCHOR3,. + 0
 1910              	meas_unit:
 1911 0000 6B706100 		.ascii	"kpa\000"
 1912 0004 00       		.space	1
 1913 0005 6B706100 		.ascii	"kpa\000"
 1914 0009 00       		.space	1
 1915 000a 56202000 		.ascii	"V  \000"
 1916 000e 00       		.space	1
 1917 000f B0       		.byte	-80
 1918 0010 43       		.byte	67
 1919 0011 00       		.byte	0
 1920 0012 0000     		.space	2
 1921 0014 B0       		.byte	-80
 1922 0015 43       		.byte	67
 1923 0016 00       		.byte	0
 1924 0017 0000     		.space	2
 1925 0019 5600     		.ascii	"V\000"
 1926 001b 000000   		.space	3
 1927              		.text
 1928              	.Letext0:
 1929              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 1930              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 1931              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1932              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 1933              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 1934              		.file 7 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 1935              		.file 8 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 1936              		.file 9 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 1937              		.file 10 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 1938              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1939              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 1940              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 1941              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1942              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 1943              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 1944              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 1945              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2c.h"
 1946              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 50


 1947              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1948              		.file 21 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 1949              		.file 22 "Inc/adc.h"
 1950              		.file 23 "Inc/can.h"
 1951              		.file 24 "Inc/i2c.h"
 1952              		.file 25 "Inc/spi.h"
 1953              		.file 26 "Inc/tim.h"
 1954              		.file 27 "Inc/usart.h"
 1955              		.file 28 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/math.h"
 1956              		.file 29 "/Users/imashio/Electronics/ARM/_Library/u8x8.h"
 1957              		.file 30 "/Users/imashio/Electronics/ARM/_Library/u8g2.h"
 1958              		.file 31 "/Users/imashio/Electronics/ARM/_Library/flag.h"
 1959              		.file 32 "Inc/defi_decoder.h"
 1960              		.file 33 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 1961              		.file 34 "/Users/imashio/Electronics/ARM/_Library/draw_Value.h"
 1962              		.file 35 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 1963              		.file 36 "Inc/gpio.h"
 1964              		.file 37 "Inc/dma.h"
 1965              		.file 38 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1966              		.file 39 "/Users/imashio/Electronics/ARM/_Library/usart_transmit_printf.h"
 1967              		.file 40 "/Users/imashio/Electronics/ARM/_Library/draw_BarGraph.h"
 1968              		.file 41 "/Users/imashio/Electronics/ARM/_Library/draw_IndicatorBox.h"
 1969              		.file 42 "<built-in>"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 51


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:18     .text.draw_indicators:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:25     .text.draw_indicators:0000000000000000 draw_indicators
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:84     .text.draw_indicators:0000000000000040 $d
                            *COM*:0000000000000080 u8g2
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:91     .text.draw_MeasLabels:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:98     .text.draw_MeasLabels:0000000000000000 draw_MeasLabels
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:241    .text.draw_MeasLabels:00000000000000d4 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:251    .text._Error_Handler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:258    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:273    .text.SystemClock_Config:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:280    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:405    .text.SystemClock_Config:00000000000000ac $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:417    .text.main:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:424    .text.main:0000000000000000 main
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:830    .text.main:0000000000000278 $d
                            *COM*:0000000000000001 mode
                            *COM*:0000000000000001 setting
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:868    .text.main:0000000000000308 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1257   .text.main:00000000000005c0 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1288   .text.main:000000000000062c $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1370   .text.main:00000000000006ac $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1382   .text.assert_failed:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1389   .text.assert_failed:0000000000000000 assert_failed
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1451   .data.FP_duty:0000000000000000 FP_duty
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1458   .data.FP_volt:0000000000000000 FP_volt
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1481   .data.meas_value:0000000000000000 meas_value
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1898   .rodata.meas_sign:0000000000000000 meas_sign
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1869   .rodata.meas_frac:0000000000000000 meas_frac
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1857   .rodata.meas_digit:0000000000000000 meas_digit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1910   .rodata.meas_unit:0000000000000000 meas_unit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1881   .rodata.meas_name:0000000000000000 meas_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1519   .rodata.idct_status:0000000000000000 idct_status
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1510   .rodata.idct_name:0000000000000000 idct_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1426   .bss.cursor:0000000000000000 cursor
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1465   .data.MT:0000000000000000 MT
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1432   .bss.gear:0000000000000000 gear
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1493   .data.speed:0000000000000000 speed
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1439   .bss.rpm:0000000000000000 rpm
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1527   .rodata.logo_bits:0000000000000000 logo_bits
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1444   .bss.update_display:0000000000000000 update_display
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1427   .bss.cursor:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1433   .bss.gear:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1435   .bss.rpm:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1445   .bss.update_display:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1447   .data.FP_duty:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1454   .data.FP_volt:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1461   .data.MT:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1477   .data.meas_value:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1489   .data.speed:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1496   .rodata.SystemClock_Config.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1500   .rodata.draw_MeasLabels.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1506   .rodata.idct_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1515   .rodata.idct_status:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1523   .rodata.logo_bits:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1817   .rodata.main.str1.4:0000000000000000 $d
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 52


/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1853   .rodata.meas_digit:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1865   .rodata.meas_frac:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1877   .rodata.meas_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1894   .rodata.meas_sign:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s:1906   .rodata.meas_unit:0000000000000000 $d

UNDEFINED SYMBOLS
draw_IndicatorBox
draw_MeasLabelUnit
draw_Value
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
__aeabi_dmul
__aeabi_d2iz
__aeabi_ui2d
__aeabi_ddiv
__aeabi_d2uiz
__aeabi_i2d
HAL_Init
memset
MX_GPIO_Init
MX_DMA_Init
MX_USART2_UART_Init
MX_TIM1_Init
MX_USART1_UART_Init
MX_SPI1_Init
MX_ADC1_Init
MX_TIM2_Init
MX_CAN_Init
MX_TIM6_Init
MX_I2C1_Init
HAL_TIM_Base_Start_IT
HAL_UART_Receive_IT
HAL_ADC_Start_DMA
u8g2_Setup_ssd1309_128x64_noname2_f
HAL_GPIO_WritePin
HAL_Delay
u8x8_InitDisplay
u8x8_SetPowerSave
u8x8_SetContrast
u8g2_ClearDisplay
u8g2_DrawXBMP
u8g2_SetFont
u8g2_DrawStr
u8g2_SendBuffer
u8g2_ClearBuffer
HAL_UART_Transmit_printf
defi_decode_value
HAL_NVIC_DisableIRQ
htim1
htim2
htim6
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccnDKfR1.s 			page 53


UART1_Data
huart1
hadc1
u8x8_gpio_and_delay_STM32F303
u8x8_byte_4wire_hw_spi
u8g2_cb_r0
u8g2_font_5x7_tf
huart2
UART1_RxData
flag_meas
draw_Wave_axis
draw_BarGraph
draw_Wave
flag_sw
flag_disp
u8g2_font_7x14B_tf
