ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADXL345_RegWrite,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	ADXL345_RegWrite
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	ADXL345_RegWrite:
  27              	.LFB126:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 2


  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  39:Src/main.c    **** #include "main.h"
  40:Src/main.c    **** #include "stm32f3xx_hal.h"
  41:Src/main.c    **** #include "adc.h"
  42:Src/main.c    **** #include "can.h"
  43:Src/main.c    **** #include "dma.h"
  44:Src/main.c    **** #include "i2c.h"
  45:Src/main.c    **** #include "spi.h"
  46:Src/main.c    **** #include "tim.h"
  47:Src/main.c    **** #include "usart.h"
  48:Src/main.c    **** #include "gpio.h"
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN Includes */
  51:Src/main.c    **** #include <stdio.h>
  52:Src/main.c    **** #include <math.h>
  53:Src/main.c    **** 
  54:Src/main.c    **** // #include "basic.h"  // original library
  55:Src/main.c    **** #include "usart_transmit_printf.h"
  56:Src/main.c    **** #include "u8g2.h"		// graphic display library
  57:Src/main.c    **** #include "u8x8_gpio_STM32F303.h"
  58:Src/main.c    **** #include "u8x8_byte_4wire_hw_spi.h"
  59:Src/main.c    **** #include "draw_Value.h"
  60:Src/main.c    **** #include "draw_BarGraph.h"
  61:Src/main.c    **** #include "draw_IndicatorBox.h"
  62:Src/main.c    **** 
  63:Src/main.c    **** #include "flag.h"
  64:Src/main.c    **** #include "defi_decoder.h"
  65:Src/main.c    **** #include "pulse_counter.h"
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END Includes */
  68:Src/main.c    **** 
  69:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  70:Src/main.c    **** 
  71:Src/main.c    **** /* USER CODE BEGIN PV */
  72:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  73:Src/main.c    **** 
  74:Src/main.c    **** // mode definition
  75:Src/main.c    **** #define N_mode                4
  76:Src/main.c    **** 
  77:Src/main.c    **** #define MODE_BAR_METER        0
  78:Src/main.c    **** #define MODE_CIRCULAR_METER   1
  79:Src/main.c    **** #define MODE_SCOPE_MAP        2
  80:Src/main.c    **** #define MODE_SCOPE_Gsens      3
  81:Src/main.c    **** #define MODE_SETTING          4
  82:Src/main.c    **** 
  83:Src/main.c    **** // RPM bar graph parameter definition
  84:Src/main.c    **** #define	rpmbar_x		  0
  85:Src/main.c    **** #define	rpmbar_y		  0
  86:Src/main.c    **** #define	rpmbar_width	128
  87:Src/main.c    **** #define	rpmbar_height	14
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 3


  88:Src/main.c    **** #define	rpm_min			  0
  89:Src/main.c    **** #define	rpm_max			  9000
  90:Src/main.c    **** 
  91:Src/main.c    **** // measurements display parameter definition
  92:Src/main.c    **** // Bar graph
  93:Src/main.c    **** #define	N_meas			  6
  94:Src/main.c    **** #define	meas_x			  0
  95:Src/main.c    **** #define	meas_y			  16
  96:Src/main.c    **** #define	meas_x_offset	2
  97:Src/main.c    **** #define	meas_width1		70
  98:Src/main.c    **** #define	meas_width2		56
  99:Src/main.c    **** #define	meas_height		12
 100:Src/main.c    **** // Circular Meter
 101:Src/main.c    **** #define	N_meas_C			4
 102:Src/main.c    **** #define	meas_C_x			68
 103:Src/main.c    **** #define	meas_C_y			2
 104:Src/main.c    **** #define	meas_C_x_offset		2
 105:Src/main.c    **** #define	meas_C_width		60
 106:Src/main.c    **** #define	meas_C_height		13
 107:Src/main.c    **** 
 108:Src/main.c    **** // indicators parameter definition
 109:Src/main.c    **** #define	N_idct			  2
 110:Src/main.c    **** #define	idct_x			  72
 111:Src/main.c    **** #define	idct_y			  53
 112:Src/main.c    **** #define	idct_width		27
 113:Src/main.c    **** #define	idct_height		9
 114:Src/main.c    **** 
 115:Src/main.c    **** //  Fuel Pump Voltage dosplay parameter definition
 116:Src/main.c    **** #define	FP_x		    	0
 117:Src/main.c    **** #define	FP_y          52
 118:Src/main.c    **** #define	FP_height	    12
 119:Src/main.c    **** #define	FP_volt_width	45
 120:Src/main.c    **** #define	FP_duty_width	70
 121:Src/main.c    **** 
 122:Src/main.c    **** // wave display parameter definition
 123:Src/main.c    **** #define	wave_x			  0
 124:Src/main.c    **** #define	wave_y			  13
 125:Src/main.c    **** #define	wave_width		128
 126:Src/main.c    **** #define	wave_height		52
 127:Src/main.c    **** #define	wave_value_min	-100
 128:Src/main.c    **** #define	wave_value_max	+200
 129:Src/main.c    **** 
 130:Src/main.c    **** // logo parameter definition (small 'enfini' logo)
 131:Src/main.c    **** #define logo_width    48
 132:Src/main.c    **** #define logo_height   48
 133:Src/main.c    **** 
 134:Src/main.c    **** const unsigned char logo_bits[] = {
 135:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 136:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 137:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0x3F, 0x00,
 138:Src/main.c    ****   0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x1F, 0x00, 0x80, 0xFF, 0x07,
 139:Src/main.c    ****   0xE0, 0x01, 0x00, 0x80, 0x81, 0x07, 0xE0, 0x01, 0x00, 0x80, 0x81, 0x07,
 140:Src/main.c    ****   0xC0, 0xE1, 0x07, 0xC0, 0x80, 0x03, 0x00, 0xFC, 0x1F, 0xE0, 0x80, 0x03,
 141:Src/main.c    ****   0x00, 0xFE, 0x7F, 0x70, 0xC0, 0x01, 0x00, 0x0F, 0xFE, 0x39, 0xE0, 0x00,
 142:Src/main.c    ****   0x00, 0x07, 0xF8, 0x1F, 0xF0, 0x00, 0x00, 0x0E, 0xE0, 0x1F, 0x78, 0x00,
 143:Src/main.c    ****   0x00, 0x0C, 0xC0, 0xFF, 0x3F, 0x00, 0x00, 0x18, 0x00, 0xFF, 0x1F, 0x00,
 144:Src/main.c    ****   0x00, 0x38, 0xC0, 0xFF, 0x0F, 0x00, 0x00, 0x70, 0xE0, 0xF1, 0x03, 0x00,
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 4


 145:Src/main.c    ****   0x00, 0xE0, 0x78, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3F, 0xE0, 0x01, 0x00,
 146:Src/main.c    ****   0x00, 0x80, 0x1F, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00,
 147:Src/main.c    ****   0x00, 0x00, 0x1E, 0x7C, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00,
 148:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00,
 149:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 150:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 151:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4C, 0x1C, 0x00, 0x00, 0x00,
 152:Src/main.c    ****   0x00, 0x32, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x00, 0x18, 0x00,
 153:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFC, 0x39, 0x00, 0x00, 0x4E, 0xC6, 0xB8, 0x31, 0x00,
 154:Src/main.c    ****   0x00, 0x3E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x3C, 0xC6, 0x98, 0x31, 0x00,
 155:Src/main.c    ****   0x00, 0x0E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x4E, 0xCE, 0x99, 0x31, 0x00,
 156:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFD, 0x7B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 157:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 158:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 159:Src/main.c    ****   };
 160:Src/main.c    **** 
 161:Src/main.c    **** /*
 162:Src/main.c    **** // logo parameter definition (meidium 'enfini' logo)
 163:Src/main.c    **** #define logo_width 54
 164:Src/main.c    **** #define logo_height 48
 165:Src/main.c    **** 
 166:Src/main.c    **** static unsigned char logo_bits[] = {
 167:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0x0F,
 168:Src/main.c    ****   0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0xE0, 0xFF, 0xFF,
 169:Src/main.c    ****   0xFF, 0xFF, 0xFF, 0x01, 0xF8, 0x3F, 0x00, 0x00, 0xF0, 0xFF, 0x07, 0xF8,
 170:Src/main.c    ****   0x01, 0x00, 0x00, 0x70, 0xE0, 0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x80,
 171:Src/main.c    ****   0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00,
 172:Src/main.c    ****   0x38, 0x80, 0x07, 0x00, 0xF8, 0x3F, 0x00, 0x38, 0x80, 0x07, 0x00, 0xFE,
 173:Src/main.c    ****   0xFF, 0x00, 0x1C, 0xC0, 0x03, 0x80, 0xFF, 0xFF, 0x01, 0x0E, 0xC0, 0x01,
 174:Src/main.c    ****   0xC0, 0x07, 0xFC, 0x07, 0x07, 0xE0, 0x01, 0x80, 0x03, 0xF0, 0x9F, 0x03,
 175:Src/main.c    ****   0xF0, 0x00, 0x80, 0x03, 0xC0, 0xFF, 0x03, 0x78, 0x00, 0x00, 0x07, 0x80,
 176:Src/main.c    ****   0xFF, 0x01, 0x3C, 0x00, 0x00, 0x06, 0x00, 0xFE, 0x87, 0x3F, 0x00, 0x00,
 177:Src/main.c    ****   0x0E, 0x00, 0xF8, 0xFF, 0x1F, 0x00, 0x00, 0x1C, 0x00, 0xF8, 0xFF, 0x07,
 178:Src/main.c    ****   0x00, 0x00, 0x38, 0x00, 0xDE, 0xFF, 0x03, 0x00, 0x00, 0x70, 0x00, 0x0F,
 179:Src/main.c    ****   0x7E, 0x00, 0x00, 0x00, 0xE0, 0xC0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xC0,
 180:Src/main.c    ****   0xF1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x00, 0x7C, 0x00, 0x00,
 181:Src/main.c    ****   0x00, 0x00, 0x3F, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x1F,
 182:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x3C, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x78,
 183:Src/main.c    ****   0xE0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0x03, 0x00, 0x00, 0x00,
 184:Src/main.c    ****   0x00, 0xC0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00,
 185:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00,
 186:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x4E, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39,
 187:Src/main.c    ****   0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00,
 188:Src/main.c    ****   0x00, 0x7E, 0x3E, 0xC7, 0x3D, 0x1C, 0x00, 0x00, 0x6F, 0x3E, 0xC7, 0x7F,
 189:Src/main.c    ****   0x1C, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x73, 0x18, 0x00, 0x00, 0x07, 0x1C,
 190:Src/main.c    ****   0x86, 0x71, 0x18, 0x00, 0x00, 0x3E, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00,
 191:Src/main.c    ****   0x1F, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x71, 0x18,
 192:Src/main.c    ****   0x00, 0x00, 0x47, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x7F, 0x3E, 0xCF,
 193:Src/main.c    ****   0xFB, 0x3C, 0x00, 0x00, 0x3C, 0x3E, 0xCF, 0xFB, 0x3C, 0x00, 0x00, 0x00,
 194:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 195:Src/main.c    ****   };
 196:Src/main.c    **** */
 197:Src/main.c    **** 
 198:Src/main.c    **** u8g2_t    u8g2; // a structure which will contain all the data for one display
 199:Src/main.c    **** 
 200:Src/main.c    **** uint8_t   update_display = 0;
 201:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 5


 202:Src/main.c    **** // uint16_t	rpm = 0;
 203:Src/main.c    **** uint16_t	speed = 240;
 204:Src/main.c    **** uint8_t		gear = 0;
 205:Src/main.c    **** double		MT[5] = {3.483, 2.015, 1.391, 1.000, 0.806};
 206:Src/main.c    **** 
 207:Src/main.c    **** // UI
 208:Src/main.c    **** uint8_t   mode;
 209:Src/main.c    **** uint8_t   setting;
 210:Src/main.c    **** uint8_t   cursor = 0;
 211:Src/main.c    **** 
 212:Src/main.c    **** /*
 213:Src/main.c    **** typedef struct {
 214:Src/main.c    **** 	unsigned char	name;
 215:Src/main.c    **** 	uint8_t			status;
 216:Src/main.c    **** } idct;
 217:Src/main.c    **** */
 218:Src/main.c    **** 
 219:Src/main.c    **** // variables for indicators
 220:Src/main.c    **** const unsigned char idct_name[N_idct][5] = { // length must be (text length + 1)
 221:Src/main.c    **** 		"CAN"	,
 222:Src/main.c    **** 		"O2FB"
 223:Src/main.c    **** };
 224:Src/main.c    **** 
 225:Src/main.c    **** const uint8_t	idct_status[N_idct] = {
 226:Src/main.c    **** 		1	,
 227:Src/main.c    **** 		1
 228:Src/main.c    **** };
 229:Src/main.c    **** 
 230:Src/main.c    **** // variables for measurement
 231:Src/main.c    **** const unsigned char meas_name[N_meas][7] = { // length must be (text length + 1)
 232:Src/main.c    **** 		"MAP"         ,
 233:Src/main.c    **** 		"OILP"        ,
 234:Src/main.c    **** 		"FPV"         ,
 235:Src/main.c    **** 		"ECT"         ,
 236:Src/main.c    **** 		"OILT"        ,
 237:Src/main.c    **** 		"O2"          
 238:Src/main.c    **** };
 239:Src/main.c    **** 
 240:Src/main.c    **** const unsigned char meas_unit[N_meas][5] = {
 241:Src/main.c    **** 		"kpa"			    ,	// MAP
 242:Src/main.c    **** 		"kpa"			    ,	// OILP
 243:Src/main.c    **** 		"V  "         ,	// FuelPump Voltage
 244:Src/main.c    **** 		{176, 67, 0}  ,	// ECT  degC...{176, 67, 0}
 245:Src/main.c    **** 		{176, 67, 0}	,	// OILT  degC...{176, 67, 0}
 246:Src/main.c    **** 		"V"					    // O2
 247:Src/main.c    **** };
 248:Src/main.c    **** 
 249:Src/main.c    **** const uint8_t	meas_digit[N_meas] = {
 250:Src/main.c    **** 		3	,	// MAP
 251:Src/main.c    **** 		3	,	// OILP
 252:Src/main.c    **** 		3	,	// FuelPump Voltage
 253:Src/main.c    **** 		3	,	// ECT
 254:Src/main.c    **** 		3	,	// OILT
 255:Src/main.c    **** 		3		// O2
 256:Src/main.c    **** };
 257:Src/main.c    **** 
 258:Src/main.c    **** const uint8_t	meas_frac[N_meas] = {
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 6


 259:Src/main.c    **** 		2	,	// MAP
 260:Src/main.c    **** 		1	,	// OILP
 261:Src/main.c    **** 		1	,	// FuelPump Voltage
 262:Src/main.c    **** 		0	,	// ECT
 263:Src/main.c    **** 		0	,	// OILT
 264:Src/main.c    **** 		2		// O2
 265:Src/main.c    **** };
 266:Src/main.c    **** 
 267:Src/main.c    **** const uint8_t	meas_sign[N_meas] = {
 268:Src/main.c    **** 		1	,	// MAP
 269:Src/main.c    **** 		0	,	// OILP
 270:Src/main.c    **** 		0	,	// FuelPump Voltage
 271:Src/main.c    **** 		0	,	// ECT
 272:Src/main.c    **** 		0	,	// OILT
 273:Src/main.c    **** 		0		// O2
 274:Src/main.c    **** };
 275:Src/main.c    **** 
 276:Src/main.c    **** int16_t	meas_value[N_meas] = {
 277:Src/main.c    **** 		105	,	// MAP
 278:Src/main.c    **** 		235	,	// OILP
 279:Src/main.c    **** 		645	,	// FuelPump Voltage
 280:Src/main.c    **** 		89	,	// ECT
 281:Src/main.c    **** 		73	,	// OILT
 282:Src/main.c    **** 		143		// O2
 283:Src/main.c    **** };
 284:Src/main.c    **** 
 285:Src/main.c    **** // O2 senser Voltage
 286:Src/main.c    **** int16_t   O2_volt = 330;
 287:Src/main.c    **** 
 288:Src/main.c    **** // Fuel Pump Voltage
 289:Src/main.c    **** int16_t   FP_volt = 330;
 290:Src/main.c    **** int16_t   FP_duty = 100;
 291:Src/main.c    **** 
 292:Src/main.c    **** // ADXL345 3-axis acceration sensor --------------------------------
 293:Src/main.c    **** uint8_t   Gsens_EN;
 294:Src/main.c    **** uint8_t   Gsens_X1;
 295:Src/main.c    **** uint8_t   Gsens_X0;
 296:Src/main.c    **** int16_t   Gsens_X;
 297:Src/main.c    **** uint8_t   Gsens_Y1;
 298:Src/main.c    **** uint8_t   Gsens_Y0;
 299:Src/main.c    **** int16_t   Gsens_Y;
 300:Src/main.c    **** uint8_t   Gsens_Z1;
 301:Src/main.c    **** uint8_t   Gsens_Z0;
 302:Src/main.c    **** int16_t   Gsens_Z;
 303:Src/main.c    **** 
 304:Src/main.c    **** #define ADXL0_ADDR 0x1D
 305:Src/main.c    **** // ADXL345     I2C
 306:Src/main.c    **** // SDO/ALT   Address
 307:Src/main.c    **** //    H        0x1D
 308:Src/main.c    **** //    L        0x53
 309:Src/main.c    **** 
 310:Src/main.c    **** void ADXL345_RegWrite(uint8_t slv_addr, uint8_t addr, uint8_t data){
  29              		.loc 1 310 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 7


  34 0000 00B5     		push	{lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 14, -4
  38 0002 85B0     		sub	sp, sp, #20
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 24
 311:Src/main.c    ****   uint8_t i2c_buf[2];
 312:Src/main.c    ****   i2c_buf[0] = addr;
 313:Src/main.c    ****   i2c_buf[1] = data;  
 314:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1, slv_addr << 1, &i2c_buf, 2, 10);
  41              		.loc 1 314 0
  42 0004 0A23     		movs	r3, #10
 312:Src/main.c    ****   i2c_buf[1] = data;  
  43              		.loc 1 312 0
  44 0006 8DF80C10 		strb	r1, [sp, #12]
 313:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1, slv_addr << 1, &i2c_buf, 2, 10);
  45              		.loc 1 313 0
  46 000a 8DF80D20 		strb	r2, [sp, #13]
  47              		.loc 1 314 0
  48 000e 4100     		lsls	r1, r0, #1
  49              	.LVL1:
  50 0010 0093     		str	r3, [sp]
  51 0012 03AA     		add	r2, sp, #12
  52              	.LVL2:
  53 0014 0223     		movs	r3, #2
  54 0016 0348     		ldr	r0, .L4
  55              	.LVL3:
  56 0018 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
  57              	.LVL4:
 315:Src/main.c    **** }
  58              		.loc 1 315 0
  59 001c 05B0     		add	sp, sp, #20
  60              	.LCFI2:
  61              		.cfi_def_cfa_offset 4
  62              		@ sp needed
  63 001e 5DF804FB 		ldr	pc, [sp], #4
  64              	.L5:
  65 0022 00BF     		.align	2
  66              	.L4:
  67 0024 00000000 		.word	hi2c1
  68              		.cfi_endproc
  69              	.LFE126:
  71              		.section	.text.ADXL345_RegRead_1byte,"ax",%progbits
  72              		.align	1
  73              		.p2align 2,,3
  74              		.global	ADXL345_RegRead_1byte
  75              		.syntax unified
  76              		.thumb
  77              		.thumb_func
  78              		.fpu fpv4-sp-d16
  80              	ADXL345_RegRead_1byte:
  81              	.LFB127:
 316:Src/main.c    **** 
 317:Src/main.c    **** int8_t ADXL345_RegRead_1byte(uint8_t slv_addr, uint8_t addr){
  82              		.loc 1 317 0
  83              		.cfi_startproc
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 8


  84              		@ args = 0, pretend = 0, frame = 16
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              	.LVL5:
  87 0000 70B5     		push	{r4, r5, r6, lr}
  88              	.LCFI3:
  89              		.cfi_def_cfa_offset 16
  90              		.cfi_offset 4, -16
  91              		.cfi_offset 5, -12
  92              		.cfi_offset 6, -8
  93              		.cfi_offset 14, -4
  94 0002 86B0     		sub	sp, sp, #24
  95              	.LCFI4:
  96              		.cfi_def_cfa_offset 40
  97              		.loc 1 317 0
  98 0004 06AA     		add	r2, sp, #24
 318:Src/main.c    ****   uint8_t data;
 319:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1, slv_addr << 1, &addr, 1, 10);
  99              		.loc 1 319 0
 100 0006 0B4C     		ldr	r4, .L8
 317:Src/main.c    ****   uint8_t data;
 101              		.loc 1 317 0
 102 0008 02F8091D 		strb	r1, [r2, #-9]!
 103              		.loc 1 319 0
 104 000c 4500     		lsls	r5, r0, #1
 105 000e 0A26     		movs	r6, #10
 106 0010 2946     		mov	r1, r5
 107              	.LVL6:
 108 0012 2046     		mov	r0, r4
 109              	.LVL7:
 110 0014 0096     		str	r6, [sp]
 111 0016 0123     		movs	r3, #1
 112 0018 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 113              	.LVL8:
 320:Src/main.c    ****   HAL_I2C_Master_Receive(&hi2c1, slv_addr << 1, &data, 1, 10);
 114              		.loc 1 320 0
 115 001c 0096     		str	r6, [sp]
 116 001e 2946     		mov	r1, r5
 117 0020 2046     		mov	r0, r4
 118 0022 0123     		movs	r3, #1
 119 0024 0DF11702 		add	r2, sp, #23
 120 0028 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 121              	.LVL9:
 321:Src/main.c    ****   return data;
 322:Src/main.c    **** }
 122              		.loc 1 322 0
 123 002c 9DF91700 		ldrsb	r0, [sp, #23]
 124 0030 06B0     		add	sp, sp, #24
 125              	.LCFI5:
 126              		.cfi_def_cfa_offset 16
 127              		@ sp needed
 128 0032 70BD     		pop	{r4, r5, r6, pc}
 129              	.L9:
 130              		.align	2
 131              	.L8:
 132 0034 00000000 		.word	hi2c1
 133              		.cfi_endproc
 134              	.LFE127:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 9


 136              		.section	.text.draw_indicators,"ax",%progbits
 137              		.align	1
 138              		.p2align 2,,3
 139              		.global	draw_indicators
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu fpv4-sp-d16
 145              	draw_indicators:
 146              	.LFB128:
 323:Src/main.c    **** 
 324:Src/main.c    **** 
 325:Src/main.c    **** /* USER CODE END PV */
 326:Src/main.c    **** 
 327:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 328:Src/main.c    **** void SystemClock_Config(void);
 329:Src/main.c    **** 
 330:Src/main.c    **** /* USER CODE BEGIN PFP */
 331:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 332:Src/main.c    **** 
 333:Src/main.c    **** /* USER CODE END PFP */
 334:Src/main.c    **** 
 335:Src/main.c    **** /* USER CODE BEGIN 0 */
 336:Src/main.c    **** void draw_indicators(){
 147              		.loc 1 336 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              	.LVL10:
 152 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 153              	.LCFI6:
 154              		.cfi_def_cfa_offset 20
 155              		.cfi_offset 4, -20
 156              		.cfi_offset 5, -16
 157              		.cfi_offset 6, -12
 158              		.cfi_offset 7, -8
 159              		.cfi_offset 14, -4
 337:Src/main.c    ****   uint8_t n;
 338:Src/main.c    ****   uint8_t x, y;
 339:Src/main.c    ****   // draw indicators
 340:Src/main.c    ****   for( n=0; n<N_idct; n++ ){
 341:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
 160              		.loc 1 341 0
 161 0002 0D4D     		ldr	r5, .L12
 162 0004 0D4C     		ldr	r4, .L12+4
 336:Src/main.c    ****   uint8_t n;
 163              		.loc 1 336 0
 164 0006 85B0     		sub	sp, sp, #20
 165              	.LCFI7:
 166              		.cfi_def_cfa_offset 40
 167              		.loc 1 341 0
 168 0008 0127     		movs	r7, #1
 169 000a 0926     		movs	r6, #9
 170 000c 0294     		str	r4, [sp, #8]
 171 000e 2846     		mov	r0, r5
 172 0010 CDE90067 		strd	r6, r7, [sp]
 173 0014 1B23     		movs	r3, #27
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 10


 174 0016 3522     		movs	r2, #53
 175 0018 4821     		movs	r1, #72
 176 001a 0534     		adds	r4, r4, #5
 177 001c FFF7FEFF 		bl	draw_IndicatorBox
 178              	.LVL11:
 179 0020 CDE90174 		strd	r7, r4, [sp, #4]
 180 0024 0096     		str	r6, [sp]
 181 0026 2846     		mov	r0, r5
 182 0028 1B23     		movs	r3, #27
 183 002a 3522     		movs	r2, #53
 184 002c 6521     		movs	r1, #101
 185 002e FFF7FEFF 		bl	draw_IndicatorBox
 186              	.LVL12:
 342:Src/main.c    ****   }
 343:Src/main.c    **** }
 187              		.loc 1 343 0
 188 0032 05B0     		add	sp, sp, #20
 189              	.LCFI8:
 190              		.cfi_def_cfa_offset 20
 191              		@ sp needed
 192 0034 F0BD     		pop	{r4, r5, r6, r7, pc}
 193              	.L13:
 194 0036 00BF     		.align	2
 195              	.L12:
 196 0038 00000000 		.word	u8g2
 197 003c 00000000 		.word	.LANCHOR0
 198              		.cfi_endproc
 199              	.LFE128:
 201              		.section	.text.draw_MeasLabels,"ax",%progbits
 202              		.align	1
 203              		.p2align 2,,3
 204              		.global	draw_MeasLabels
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu fpv4-sp-d16
 210              	draw_MeasLabels:
 211              	.LFB129:
 344:Src/main.c    **** 
 345:Src/main.c    **** void draw_MeasLabels(){
 212              		.loc 1 345 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              	.LVL13:
 217 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 218              	.LCFI9:
 219              		.cfi_def_cfa_offset 20
 220              		.cfi_offset 4, -20
 221              		.cfi_offset 5, -16
 222              		.cfi_offset 6, -12
 223              		.cfi_offset 7, -8
 224              		.cfi_offset 14, -4
 346:Src/main.c    ****   uint8_t n;
 347:Src/main.c    ****   uint8_t x, y;
 348:Src/main.c    ****   // draw measurements label & unit
 349:Src/main.c    ****   for( n=0; n<3; n++ ){
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 11


 350:Src/main.c    **** 	  x = meas_x;
 351:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 352:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width1, meas_height, meas_name[n], meas_unit[n]);
 225              		.loc 1 352 0
 226 0002 334C     		ldr	r4, .L16
 227 0004 334E     		ldr	r6, .L16+4
 228 0006 344F     		ldr	r7, .L16+8
 345:Src/main.c    ****   uint8_t n;
 229              		.loc 1 345 0
 230 0008 87B0     		sub	sp, sp, #28
 231              	.LCFI10:
 232              		.cfi_def_cfa_offset 48
 233              		.loc 1 352 0
 234 000a 0C25     		movs	r5, #12
 235 000c 0297     		str	r7, [sp, #8]
 236 000e 2046     		mov	r0, r4
 237 0010 CDE90056 		strd	r5, r6, [sp]
 238 0014 4623     		movs	r3, #70
 239 0016 1022     		movs	r2, #16
 240 0018 0021     		movs	r1, #0
 241 001a FFF7FEFF 		bl	draw_MeasLabelUnit
 242              	.LVL14:
 243 001e 7A1D     		adds	r2, r7, #5
 244 0020 F31D     		adds	r3, r6, #7
 245 0022 CDE90132 		strd	r3, r2, [sp, #4]
 246 0026 2046     		mov	r0, r4
 247 0028 0095     		str	r5, [sp]
 248 002a 4623     		movs	r3, #70
 249 002c 1C22     		movs	r2, #28
 250 002e 0021     		movs	r1, #0
 251 0030 FFF7FEFF 		bl	draw_MeasLabelUnit
 252              	.LVL15:
 253 0034 07F10A02 		add	r2, r7, #10
 254 0038 06F10E03 		add	r3, r6, #14
 255 003c CDE90132 		strd	r3, r2, [sp, #4]
 256 0040 2046     		mov	r0, r4
 257 0042 0095     		str	r5, [sp]
 258 0044 4623     		movs	r3, #70
 259 0046 2822     		movs	r2, #40
 260 0048 0021     		movs	r1, #0
 261 004a FFF7FEFF 		bl	draw_MeasLabelUnit
 262              	.LVL16:
 353:Src/main.c    ****   }
 354:Src/main.c    ****   for( n=3; n<N_meas; n++ ){
 355:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 356:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 357:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width2, meas_height, meas_name[n], meas_unit[n]);
 263              		.loc 1 357 0
 264 004e 07F10F02 		add	r2, r7, #15
 265 0052 06F11503 		add	r3, r6, #21
 266 0056 CDE90132 		strd	r3, r2, [sp, #4]
 267 005a 2046     		mov	r0, r4
 268 005c 0095     		str	r5, [sp]
 269 005e 3823     		movs	r3, #56
 270 0060 1022     		movs	r2, #16
 271 0062 4821     		movs	r1, #72
 272 0064 FFF7FEFF 		bl	draw_MeasLabelUnit
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 12


 273              	.LVL17:
 274 0068 07F11402 		add	r2, r7, #20
 275 006c 06F11C03 		add	r3, r6, #28
 276 0070 CDE90132 		strd	r3, r2, [sp, #4]
 277 0074 2046     		mov	r0, r4
 278 0076 0095     		str	r5, [sp]
 279 0078 3823     		movs	r3, #56
 280 007a 1C22     		movs	r2, #28
 281 007c 4821     		movs	r1, #72
 282 007e 1937     		adds	r7, r7, #25
 283 0080 2336     		adds	r6, r6, #35
 284 0082 FFF7FEFF 		bl	draw_MeasLabelUnit
 285              	.LVL18:
 286 0086 CDE90167 		strd	r6, r7, [sp, #4]
 287 008a 2046     		mov	r0, r4
 288 008c 0095     		str	r5, [sp]
 289 008e 3823     		movs	r3, #56
 290 0090 2822     		movs	r2, #40
 291 0092 4821     		movs	r1, #72
 292 0094 FFF7FEFF 		bl	draw_MeasLabelUnit
 293              	.LVL19:
 358:Src/main.c    ****   }
 359:Src/main.c    **** 
 360:Src/main.c    ****   // Fuel Pump voltage & duty
 361:Src/main.c    ****   draw_MeasLabelUnit(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, "DUTY", "%  ");
 294              		.loc 1 361 0
 295 0098 104E     		ldr	r6, .L16+12
 296 009a 114B     		ldr	r3, .L16+16
 297 009c 0095     		str	r5, [sp]
 298 009e 2046     		mov	r0, r4
 299 00a0 CDE90136 		strd	r3, r6, [sp, #4]
 300 00a4 3422     		movs	r2, #52
 301 00a6 4623     		movs	r3, #70
 302 00a8 0021     		movs	r1, #0
 303 00aa FFF7FEFF 		bl	draw_MeasLabelUnit
 304              	.LVL20:
 362:Src/main.c    ****   draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, 100, 3, 0, 0, "%  ");
 305              		.loc 1 362 0
 306 00ae 0021     		movs	r1, #0
 307 00b0 0322     		movs	r2, #3
 308 00b2 6423     		movs	r3, #100
 309 00b4 CDE90132 		strd	r3, r2, [sp, #4]
 310 00b8 0596     		str	r6, [sp, #20]
 311 00ba 0095     		str	r5, [sp]
 312 00bc 2046     		mov	r0, r4
 313 00be CDE90311 		strd	r1, r1, [sp, #12]
 314 00c2 4623     		movs	r3, #70
 315 00c4 3422     		movs	r2, #52
 316 00c6 FFF7FEFF 		bl	draw_Value
 317              	.LVL21:
 363:Src/main.c    **** }
 318              		.loc 1 363 0
 319 00ca 07B0     		add	sp, sp, #28
 320              	.LCFI11:
 321              		.cfi_def_cfa_offset 20
 322              		@ sp needed
 323 00cc F0BD     		pop	{r4, r5, r6, r7, pc}
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 13


 324              	.L17:
 325 00ce 00BF     		.align	2
 326              	.L16:
 327 00d0 00000000 		.word	u8g2
 328 00d4 00000000 		.word	.LANCHOR2
 329 00d8 00000000 		.word	.LANCHOR1
 330 00dc 00000000 		.word	.LC0
 331 00e0 04000000 		.word	.LC1
 332              		.cfi_endproc
 333              	.LFE129:
 335              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 336              		.align	1
 337              		.p2align 2,,3
 338              		.global	HAL_ADC_ConvCpltCallback
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 342              		.fpu fpv4-sp-d16
 344              	HAL_ADC_ConvCpltCallback:
 345              	.LFB130:
 364:Src/main.c    **** 
 365:Src/main.c    **** // ADC buffer definition
 366:Src/main.c    **** enum{ ADC_BUFFER_LENGTH = 10 };
 367:Src/main.c    **** uint16_t g_ADCBuffer[ADC_BUFFER_LENGTH];
 368:Src/main.c    **** uint16_t adc[ADC_BUFFER_LENGTH];  
 369:Src/main.c    **** 
 370:Src/main.c    **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc){
 346              		.loc 1 370 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              		@ link register save eliminated.
 351              	.LVL22:
 352 0000 054B     		ldr	r3, .L21
 353 0002 064A     		ldr	r2, .L21+4
 354 0004 03F11400 		add	r0, r3, #20
 355              	.LVL23:
 356              	.L19:
 357              	.LBB31:
 371:Src/main.c    **** 	for (unsigned int i =0; i<ADC_BUFFER_LENGTH; i++){
 372:Src/main.c    **** 	   adc[i] = g_ADCBuffer[i];  // store the values in adc[]
 358              		.loc 1 372 0 discriminator 3
 359 0008 33F8021B 		ldrh	r1, [r3], #2
 360 000c 22F8021B 		strh	r1, [r2], #2	@ movhi
 371:Src/main.c    **** 	for (unsigned int i =0; i<ADC_BUFFER_LENGTH; i++){
 361              		.loc 1 371 0 discriminator 3
 362 0010 8342     		cmp	r3, r0
 363 0012 F9D1     		bne	.L19
 364              	.LBE31:
 373:Src/main.c    **** 	}
 374:Src/main.c    **** }
 365              		.loc 1 374 0
 366 0014 7047     		bx	lr
 367              	.L22:
 368 0016 00BF     		.align	2
 369              	.L21:
 370 0018 00000000 		.word	g_ADCBuffer
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 14


 371 001c 00000000 		.word	adc
 372              		.cfi_endproc
 373              	.LFE130:
 375              		.section	.text.SystemClock_Config,"ax",%progbits
 376              		.align	1
 377              		.p2align 2,,3
 378              		.global	SystemClock_Config
 379              		.syntax unified
 380              		.thumb
 381              		.thumb_func
 382              		.fpu fpv4-sp-d16
 384              	SystemClock_Config:
 385              	.LFB132:
 375:Src/main.c    **** 
 376:Src/main.c    **** /* USER CODE END 0 */
 377:Src/main.c    **** 
 378:Src/main.c    **** int main(void)
 379:Src/main.c    **** {
 380:Src/main.c    **** 
 381:Src/main.c    ****   /* USER CODE BEGIN 1 */
 382:Src/main.c    **** 
 383:Src/main.c    ****   /* USER CODE END 1 */
 384:Src/main.c    **** 
 385:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 386:Src/main.c    **** 
 387:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 388:Src/main.c    ****   HAL_Init();
 389:Src/main.c    **** 
 390:Src/main.c    ****   /* USER CODE BEGIN Init */
 391:Src/main.c    ****   uint8_t n;
 392:Src/main.c    ****   uint8_t x, y;
 393:Src/main.c    **** 
 394:Src/main.c    ****   uint8_t a = 0; // for dummy data
 395:Src/main.c    ****   uint8_t b = 0; // for dummy data
 396:Src/main.c    **** 
 397:Src/main.c    ****   // circular buffer for ADC data
 398:Src/main.c    ****   uint16_t circular_buffer_index = 0;
 399:Src/main.c    ****   int16_t circular_buffer[128]={};
 400:Src/main.c    **** 
 401:Src/main.c    ****   /* USER CODE END Init */
 402:Src/main.c    **** 
 403:Src/main.c    ****   /* Configure the system clock */
 404:Src/main.c    ****   SystemClock_Config();
 405:Src/main.c    **** 
 406:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 407:Src/main.c    **** 
 408:Src/main.c    ****   /* USER CODE END SysInit */
 409:Src/main.c    **** 
 410:Src/main.c    ****   /* Initialize all configured peripherals */
 411:Src/main.c    ****   MX_GPIO_Init();
 412:Src/main.c    ****   MX_DMA_Init();
 413:Src/main.c    ****   MX_ADC1_Init();
 414:Src/main.c    ****   MX_CAN_Init();
 415:Src/main.c    ****   MX_I2C1_Init();
 416:Src/main.c    ****   MX_SPI1_Init();
 417:Src/main.c    ****   MX_TIM1_Init();
 418:Src/main.c    ****   MX_TIM2_Init();
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 15


 419:Src/main.c    ****   MX_TIM3_Init();
 420:Src/main.c    ****   MX_TIM6_Init();
 421:Src/main.c    ****   MX_USART1_UART_Init();
 422:Src/main.c    ****   MX_USART2_UART_Init();
 423:Src/main.c    **** 
 424:Src/main.c    ****   /* USER CODE BEGIN 2 */
 425:Src/main.c    **** 
 426:Src/main.c    ****   ///// PWM initialize ----------------------------------------------------------------
 427:Src/main.c    **** 
 428:Src/main.c    ****   ///// Timer /////
 429:Src/main.c    ****   // TIM1 - PWM for Fuel Pump Driver (Cycle 100kHz = 1MHz / 100count)
 430:Src/main.c    ****   /*
 431:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim1) != HAL_OK)
 432:Src/main.c    ****   {
 433:Src/main.c    ****     Error_Handler();
 434:Src/main.c    ****   }
 435:Src/main.c    ****   */
 436:Src/main.c    ****   // Start Timer1 / ch1
 437:Src/main.c    ****   if (HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1) != HAL_OK)
 438:Src/main.c    ****   {
 439:Src/main.c    ****     Error_Handler();
 440:Src/main.c    ****   }
 441:Src/main.c    **** 
 442:Src/main.c    ****   // TIM2 - display (Cycle 20ms = 1/100kHz x 2,000count)
 443:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim2) != HAL_OK)
 444:Src/main.c    ****   {
 445:Src/main.c    ****     Error_Handler();
 446:Src/main.c    ****   }
 447:Src/main.c    **** 
 448:Src/main.c    ****   // TIM3 - Pulse counter for Tacho (f 200kHz, count 65535)
 449:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim3) != HAL_OK)
 450:Src/main.c    ****   {
 451:Src/main.c    ****     Error_Handler();
 452:Src/main.c    ****   }
 453:Src/main.c    **** 
 454:Src/main.c    ****   // TIM6 - SW interrupt control (Cycle 100ms = 1/100kHz x 10,000count)
 455:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim6) != HAL_OK)
 456:Src/main.c    ****   {
 457:Src/main.c    ****     Error_Handler();
 458:Src/main.c    ****   }
 459:Src/main.c    **** 
 460:Src/main.c    ****   // ADC
 461:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, g_ADCBuffer, ADC_BUFFER_LENGTH);
 462:Src/main.c    **** 
 463:Src/main.c    ****   // UART1 interrupt setup for DEFI decoder
 464:Src/main.c    ****   HAL_UART_Receive_IT(&huart1, &UART1_Data, 1);
 465:Src/main.c    ****   // variables is defined in 'defi.h'
 466:Src/main.c    **** 
 467:Src/main.c    **** 
 468:Src/main.c    ****   // OLED diaplay initialization
 469:Src/main.c    ****   u8g2_Setup_ssd1309_128x64_noname2_f(&u8g2, U8G2_R0, u8x8_byte_4wire_hw_spi, u8x8_gpio_and_delay_S
 470:Src/main.c    **** 
 471:Src/main.c    ****   // OLED display Reset (must be more than 3us!!)
 472:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 0); // Set RES=L (OLED Reset)
 473:Src/main.c    ****   HAL_Delay(5);
 474:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 475:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 16


 476:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 477:Src/main.c    ****   u8g2_SetContrast(&u8g2, 255); // set contrast
 478:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 479:Src/main.c    **** 
 480:Src/main.c    ****   // draw opening
 481:Src/main.c    ****   u8g2_DrawXBMP(&u8g2, 40, 0, logo_width, logo_height, logo_bits );
 482:Src/main.c    **** 
 483:Src/main.c    ****   u8g2_SetFont(&u8g2, u8g2_font_5x7_tf);
 484:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 485:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.2a");
 486:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 487:Src/main.c    **** 
 488:Src/main.c    ****   HAL_Delay(1000);
 489:Src/main.c    **** 
 490:Src/main.c    ****   u8g2_ClearBuffer(&u8g2);
 491:Src/main.c    **** 
 492:Src/main.c    ****   HAL_UART_Transmit_printf(&huart2, "Hello. This is MFM.\n");
 493:Src/main.c    **** 
 494:Src/main.c    ****   // Set PWM Duty for Timer1 / Output1 (Asymmetric PWM2)
 495:Src/main.c    ****   TIM1->CCR1 = (100 - FP_duty);
 496:Src/main.c    **** 
 497:Src/main.c    ****   /* Infinite loop */
 498:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 499:Src/main.c    **** 
 500:Src/main.c    ****   draw_MeasLabels();
 501:Src/main.c    ****   draw_indicators();
 502:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 503:Src/main.c    **** 
 504:Src/main.c    **** 
 505:Src/main.c    ****   // I2C communication to ADXL345(3-axis G-sensor)
 506:Src/main.c    **** 
 507:Src/main.c    ****   // DEIVID
 508:Src/main.c    ****   a = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x00);
 509:Src/main.c    ****   HAL_UART_Transmit_printf(&huart2, "ADXL324 DEVID %d\n", a); // debug
 510:Src/main.c    ****   if( a == 0xE5 ){
 511:Src/main.c    ****     Gsens_EN = 1;
 512:Src/main.c    ****   }else{
 513:Src/main.c    ****     Gsens_EN = 0;
 514:Src/main.c    ****   }
 515:Src/main.c    **** 
 516:Src/main.c    ****   // POWER_CTL
 517:Src/main.c    ****   ADXL345_RegWrite(ADXL0_ADDR, 0x2D, 0x08);
 518:Src/main.c    ****   // bit 3    Measure   1'b1
 519:Src/main.c    ****   a = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x2D); // Check
 520:Src/main.c    **** 
 521:Src/main.c    ****   // DATA_FORMAT
 522:Src/main.c    ****   ADXL345_RegWrite(ADXL0_ADDR, 0x31, 0x05);
 523:Src/main.c    ****   // bit 2    Justify   1'b1
 524:Src/main.c    ****   // bit 1:0  Range     2'b01
 525:Src/main.c    ****   a = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x31); // Check "POWER_CTL"
 526:Src/main.c    **** 
 527:Src/main.c    ****   /* USER CODE END 2 */
 528:Src/main.c    **** 
 529:Src/main.c    ****   /* Infinite loop */
 530:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 531:Src/main.c    **** 
 532:Src/main.c    ****   draw_MeasLabels();
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 17


 533:Src/main.c    ****   draw_indicators();
 534:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 535:Src/main.c    **** 
 536:Src/main.c    **** 
 537:Src/main.c    ****   // I2C communication to ADXL345(3-axis G-sensor)
 538:Src/main.c    **** 
 539:Src/main.c    ****   // DEIVID
 540:Src/main.c    ****   a = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x00);
 541:Src/main.c    ****   HAL_UART_Transmit_printf(&huart2, "ADXL324 DEVID %d\n", a); // debug
 542:Src/main.c    ****   if( a == 0xE5 ){
 543:Src/main.c    ****     Gsens_EN = 1;
 544:Src/main.c    ****   }else{
 545:Src/main.c    ****     Gsens_EN = 0;
 546:Src/main.c    ****   }
 547:Src/main.c    **** 
 548:Src/main.c    ****   // POWER_CTL
 549:Src/main.c    ****   ADXL345_RegWrite(ADXL0_ADDR, 0x2D, 0x08);
 550:Src/main.c    ****   // bit 3    Measure   1'b1
 551:Src/main.c    ****   a = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x2D); // Check
 552:Src/main.c    **** 
 553:Src/main.c    ****   // DATA_FORMAT
 554:Src/main.c    ****   ADXL345_RegWrite(ADXL0_ADDR, 0x31, 0x05);
 555:Src/main.c    ****   // bit 2    Justify   1'b1
 556:Src/main.c    ****   // bit 1:0  Range     2'b01
 557:Src/main.c    ****   a = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x31); // Check "POWER_CTL"
 558:Src/main.c    **** 
 559:Src/main.c    ****   /* USER CODE END 2 */
 560:Src/main.c    **** 
 561:Src/main.c    ****   while(1)
 562:Src/main.c    ****   {
 563:Src/main.c    ****   /* USER CODE END WHILE */
 564:Src/main.c    **** 
 565:Src/main.c    ****   /* USER CODE BEGIN 3 */
 566:Src/main.c    **** 
 567:Src/main.c    ****     ///// ADC ----------------------------------------------------------------
 568:Src/main.c    **** 
 569:Src/main.c    **** 		// read O2 sensor ADC output
 570:Src/main.c    **** //		O2_volt = (int16_t)(330 * (float)g_ADCBuffer[0]/255);
 571:Src/main.c    **** 		O2_volt = (int16_t)(330 * (float)adc[0]/255);
 572:Src/main.c    **** 
 573:Src/main.c    **** 		// read Fuel Pump Voltage ADC output
 574:Src/main.c    **** //		FP_volt = (int16_t)((165/33)*33*(float)g_ADCBuffer[1]/255);
 575:Src/main.c    **** 		FP_volt = (int16_t)((165/33)*33*(float)adc[1]/255);
 576:Src/main.c    ****     // Ressister attenation ratio '165/33'
 577:Src/main.c    ****     
 578:Src/main.c    ****     ///// Fuel Pump ----------------------------------------------------------------
 579:Src/main.c    ****     // Duty calculation
 580:Src/main.c    ****     if( (rpm >= 3000)|(DEFI_value[0] >= 0) ){
 581:Src/main.c    ****       FP_duty = 100;
 582:Src/main.c    ****     }else{
 583:Src/main.c    ****       FP_duty = (int16_t)(rpm/3000*100);
 584:Src/main.c    ****     }
 585:Src/main.c    ****     // Saturation process
 586:Src/main.c    ****     if( FP_duty > 100 ){
 587:Src/main.c    ****       FP_duty = 100;
 588:Src/main.c    ****     }else if( FP_duty < 60 ){
 589:Src/main.c    ****       FP_duty = 60;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 18


 590:Src/main.c    ****     }
 591:Src/main.c    **** 
 592:Src/main.c    ****     ///// Measure data  ----------------------------------------------------------------
 593:Src/main.c    ****     defi_decoder(UART1_RxData); // DEFI decoder
 594:Src/main.c    **** 
 595:Src/main.c    ****     if( flag_meas == 1 ){
 596:Src/main.c    **** 
 597:Src/main.c    ****       // I2C communication to ADXL345(3-axis G-sensor)
 598:Src/main.c    ****       if( Gsens_EN == 1 ){
 599:Src/main.c    ****         /*
 600:Src/main.c    ****         // Justify = 0
 601:Src/main.c    ****         Gsens_X1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x33); // Check "DATAX1" (MSB side)
 602:Src/main.c    ****         Gsens_X0 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x32); // Check "DATAX0" (LSB side)
 603:Src/main.c    ****         Gsens_X = (Gsens_X1<<8) | Gsens_X0;
 604:Src/main.c    ****         Gsens_Y1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x35); // Check "DATAY1" (MSB side)
 605:Src/main.c    ****         Gsens_Y0 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x34); // Check "DATAY0" (LSB side)
 606:Src/main.c    ****         Gsens_Y = (Gsens_Y1<<8) | Gsens_Y0;
 607:Src/main.c    ****         Gsens_Z1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x37); // Check "DATAZ1" (MSB side)
 608:Src/main.c    ****         Gsens_Z0 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x36); // Check "DATAZ0" (LSB side)
 609:Src/main.c    ****         Gsens_Z = (Gsens_Z1<<8) | Gsens_Z0;
 610:Src/main.c    ****         HAL_UART_Transmit_printf(&huart2, "(%d,%d,%d)\n", Gsens_X, Gsens_Y, Gsens_Z); // debug
 611:Src/main.c    ****         */
 612:Src/main.c    **** 
 613:Src/main.c    ****         // Justify = 1
 614:Src/main.c    ****         Gsens_X1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x33); // Check "DATAX1" (MSB side)
 615:Src/main.c    ****         Gsens_Y1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x35); // Check "DATAY1" (MSB side)
 616:Src/main.c    ****         Gsens_Z1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x37); // Check "DATAZ1" (MSB side)
 617:Src/main.c    ****         // Acceration 1G = 100
 618:Src/main.c    ****         Gsens_X = 400 * (int8_t)Gsens_X1 / 128; // unsigned->signed & scaling
 619:Src/main.c    ****         Gsens_Y = 400 * (int8_t)Gsens_Y1 / 128; // unsigned->signed & scaling
 620:Src/main.c    ****         Gsens_Z = 400 * (int8_t)Gsens_Z1 / 128; // unsigned->signed & scaling
 621:Src/main.c    **** 
 622:Src/main.c    ****         HAL_UART_Transmit_printf(&huart2, "(%d,%d,%d)\n", Gsens_X, Gsens_Y, Gsens_Z); // debug
 623:Src/main.c    ****         
 624:Src/main.c    **** 
 625:Src/main.c    ****         /*
 626:Src/main.c    ****         ADXL345_G_struct ADXL345_G_data = ADXL345_Read_G(ADXL0_ADDR);
 627:Src/main.c    ****         HAL_UART_Transmit_printf(&huart2, "(%d,%d,%d)\n", ADXL345_G_data.X, ADXL345_G_data.Y, ADXL3
 628:Src/main.c    ****         */
 629:Src/main.c    ****       }
 630:Src/main.c    **** 
 631:Src/main.c    **** 
 632:Src/main.c    **** /*
 633:Src/main.c    ****   	  // start of create dummy data for debug
 634:Src/main.c    ****       if( rpm <= 8200 ){
 635:Src/main.c    ****           rpm = rpm + (int)(20*MT[gear]);
 636:Src/main.c    ****           //rpm=rpm+10;
 637:Src/main.c    ****       }else{
 638:Src/main.c    ****         if( gear < 4 ){
 639:Src/main.c    ****           gear++;
 640:Src/main.c    ****           rpm = (double)speed / (0.002*60.0) * (MT[gear]*4.1);
 641:Src/main.c    ****         }else{
 642:Src/main.c    ****           gear = 0;
 643:Src/main.c    ****           rpm = 1000;
 644:Src/main.c    ****         }
 645:Src/main.c    ****       }
 646:Src/main.c    ****       speed = (double)rpm*0.002*60.0/MT[gear]/4.1;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 19


 647:Src/main.c    **** 
 648:Src/main.c    ****       if( a >= 150){
 649:Src/main.c    ****         a = 0;
 650:Src/main.c    ****       }else{
 651:Src/main.c    ****         a++;
 652:Src/main.c    ****       }
 653:Src/main.c    ****   	  // end of create dummy data for debug
 654:Src/main.c    **** */
 655:Src/main.c    ****       meas_value[0] = DEFI_value[0];  // MAP
 656:Src/main.c    **** 		  meas_value[1] = DEFI_value[2];  // OILP
 657:Src/main.c    **** 			meas_value[2] = FP_volt;        // FuelPump Voltage
 658:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 659:Src/main.c    **** 			meas_value[4] = DEFI_value[5];  // OILT
 660:Src/main.c    **** 		  meas_value[5] = O2_volt;        // O2
 661:Src/main.c    **** 
 662:Src/main.c    ****       flag_meas = 0; // enable again by TIM2 interrupt
 663:Src/main.c    ****     }
 664:Src/main.c    **** 
 665:Src/main.c    ****     ///// FP driver ----------------------------------------------------------------
 666:Src/main.c    ****     // Set PWM Duty for Timer1 / Output1 (Asymmetric PWM2)
 667:Src/main.c    ****     TIM1->CCR1 = (100 - FP_duty);
 668:Src/main.c    **** 
 669:Src/main.c    ****     ///// Switch ----------------------------------------------------------------
 670:Src/main.c    ****     if( flag_sw != 0 ){
 671:Src/main.c    ****       switch( flag_sw ){
 672:Src/main.c    ****         case 1:
 673:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "UP ");
 674:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 675:Src/main.c    ****           // SW "UP"
 676:Src/main.c    ****           if( setting == 0 ){
 677:Src/main.c    ****             if( mode == N_mode-1 ){
 678:Src/main.c    ****               mode = 0;
 679:Src/main.c    ****             }else{
 680:Src/main.c    ****               mode++;
 681:Src/main.c    ****             }
 682:Src/main.c    ****           }
 683:Src/main.c    ****           break;
 684:Src/main.c    ****         case 2:
 685:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "DOWN ");
 686:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 687:Src/main.c    ****           // SW "DOWN"
 688:Src/main.c    ****           if( setting == 0 ){
 689:Src/main.c    ****             if( mode == 0 ){
 690:Src/main.c    ****               mode = N_mode-1;
 691:Src/main.c    ****             }else{
 692:Src/main.c    ****               mode--;
 693:Src/main.c    ****             }
 694:Src/main.c    ****           }
 695:Src/main.c    ****           break;
 696:Src/main.c    ****         case 3:
 697:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "ENTER ");
 698:Src/main.c    ****           HAL_NVIC_DisableIRQ (EXTI1_IRQn);
 699:Src/main.c    ****           // SW "ENTER"
 700:Src/main.c    **** 
 701:Src/main.c    ****           // if( setting == 0 ){
 702:Src/main.c    ****           //   mode = cursor;
 703:Src/main.c    ****           //   u8g2_ClearBuffer(&u8g2);
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 20


 704:Src/main.c    ****           // }else{
 705:Src/main.c    ****           //   mode = 10;
 706:Src/main.c    ****           // }
 707:Src/main.c    ****           // break;
 708:Src/main.c    **** 
 709:Src/main.c    ****         default:
 710:Src/main.c    ****           break;
 711:Src/main.c    ****       }
 712:Src/main.c    ****       u8g2_ClearBuffer(&u8g2);
 713:Src/main.c    ****       if( mode == MODE_BAR_METER ){
 714:Src/main.c    ****         draw_MeasLabels();
 715:Src/main.c    ****         draw_indicators();
 716:Src/main.c    **** 
 717:Src/main.c    ****       }else if( mode == MODE_CIRCULAR_METER ){
 718:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 719:Src/main.c    ****           x = meas_C_x;
 720:Src/main.c    ****           y = n * meas_C_height	+ meas_C_y;
 721:Src/main.c    ****           draw_MeasLabelUnit(&u8g2, x, y, meas_C_width, meas_C_height, meas_name[n], meas_unit[n]);
 722:Src/main.c    ****         }
 723:Src/main.c    ****         // draw indicators
 724:Src/main.c    ****         for( n=0; n<4; n++ ){
 725:Src/main.c    ****           draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_s
 726:Src/main.c    ****         }
 727:Src/main.c    ****         draw_CircularMeter_Init(32, 32, 31, 3, -60, 300, 10, 20, -1, -80, 120);
 728:Src/main.c    **** //        draw_CircularMeter_Init(26, 26, 26, 3, -60, 300, 10, 20, -1, -80, 120);
 729:Src/main.c    ****         draw_CircularMeter(&u8g2, 0);
 730:Src/main.c    **** 
 731:Src/main.c    ****       }else if( mode == MODE_SCOPE_MAP ){
 732:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_m
 733:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "MAP", "kPa");
 734:Src/main.c    **** 
 735:Src/main.c    ****       }else if( mode == MODE_SCOPE_Gsens ){
 736:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, -200, 200, 4);
 737:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "LatG", "G");
 738:Src/main.c    **** 
 739:Src/main.c    ****       }
 740:Src/main.c    ****       u8g2_SendBuffer(&u8g2);
 741:Src/main.c    ****       TIM6->CNT = 0;
 742:Src/main.c    ****       flag_sw = 0;
 743:Src/main.c    ****     }
 744:Src/main.c    **** 
 745:Src/main.c    ****     ///// Display sequence ----------------------------------------------------------------
 746:Src/main.c    ****     if( flag_disp ){
 747:Src/main.c    ****       ///// multi meter /////
 748:Src/main.c    ****       if( mode == MODE_BAR_METER ){
 749:Src/main.c    ****         // update Fuel Pump Voltage
 750:Src/main.c    ****         draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, FP_duty, 3, 0, 0, "%  ");
 751:Src/main.c    **** 
 752:Src/main.c    ****         // draw bar graph
 753:Src/main.c    ****         draw_BarGraph(&u8g2, rpmbar_x, rpmbar_y, rpmbar_width, rpmbar_height, rpm, rpm_min, rpm_max
 754:Src/main.c    **** 
 755:Src/main.c    ****         // draw measurement data
 756:Src/main.c    ****         for( n=0; n<3; n++ ){
 757:Src/main.c    ****           x = meas_x;
 758:Src/main.c    ****           y = (n % 3) * meas_height	+ meas_y;
 759:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac
 760:Src/main.c    ****         }
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 21


 761:Src/main.c    ****         for( n=3; n<N_meas; n++ ){
 762:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 763:Src/main.c    ****           y = (n % 3) * meas_height	+ meas_y;
 764:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 765:Src/main.c    ****         }
 766:Src/main.c    ****         
 767:Src/main.c    ****       ///// Circular Meter /////
 768:Src/main.c    ****       }else if( mode == MODE_CIRCULAR_METER ){
 769:Src/main.c    **** 
 770:Src/main.c    ****         draw_CircularMeter(&u8g2, meas_value[0]);
 771:Src/main.c    ****         
 772:Src/main.c    ****         draw_Value(&u8g2, 36, 33, 30, 16, meas_value[0], 3, 2, 1, "");
 773:Src/main.c    ****         draw_MeasUnit(&u8g2, 38, 40, 28, 16, "kPa");
 774:Src/main.c    **** /*        
 775:Src/main.c    ****         draw_Value(&u8g2, 34, 28, 30, 16, meas_value[0], 3, 2, 1, "");
 776:Src/main.c    ****         draw_MeasUnit(&u8g2, 36, 36, 28, 16, "kPa");
 777:Src/main.c    **** */
 778:Src/main.c    **** 
 779:Src/main.c    ****         // draw measurement data
 780:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 781:Src/main.c    ****           x = meas_C_x;
 782:Src/main.c    ****           y = n * meas_C_height	+ meas_C_y;
 783:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_C_width, meas_C_height, meas_value[n], meas_digit[n], meas_f
 784:Src/main.c    ****         }
 785:Src/main.c    **** 
 786:Src/main.c    ****       ///// Scope /////
 787:Src/main.c    ****       }else if( mode == MODE_SCOPE_MAP ){
 788:Src/main.c    **** 
 789:Src/main.c    ****         if( circular_buffer_index > 0 ){
 790:Src/main.c    ****           circular_buffer_index--;
 791:Src/main.c    ****         }else{
 792:Src/main.c    ****           circular_buffer_index = 128;
 793:Src/main.c    ****         }
 794:Src/main.c    ****         circular_buffer[circular_buffer_index] = meas_value[0];
 795:Src/main.c    **** 
 796:Src/main.c    ****         // draw wave
 797:Src/main.c    ****         draw_Wave(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_max, c
 798:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 799:Src/main.c    **** 
 800:Src/main.c    ****       ///// G-Scope /////
 801:Src/main.c    ****       }else if( mode == MODE_SCOPE_Gsens ){
 802:Src/main.c    **** 
 803:Src/main.c    ****         if( circular_buffer_index > 0 ){
 804:Src/main.c    ****           circular_buffer_index--;
 805:Src/main.c    ****         }else{
 806:Src/main.c    ****           circular_buffer_index = 128;
 807:Src/main.c    ****         }
 808:Src/main.c    ****         circular_buffer[circular_buffer_index] = Gsens_Y;
 809:Src/main.c    **** 
 810:Src/main.c    ****         // draw wave
 811:Src/main.c    ****         draw_Wave(&u8g2, wave_x, wave_y, wave_width, wave_height, -200, +200, circular_buffer, circ
 812:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 813:Src/main.c    **** 
 814:Src/main.c    ****       // mode setting
 815:Src/main.c    ****       }else if( mode == MODE_SETTING ){
 816:Src/main.c    **** 
 817:Src/main.c    ****         u8g2_ClearBuffer(&u8g2);
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 22


 818:Src/main.c    ****         u8g2_SetFont(&u8g2, u8g2_font_7x14B_tf);
 819:Src/main.c    ****         u8g2_DrawStr(&u8g2, 2, 15, "Mode Setting" );
 820:Src/main.c    ****         if( cursor == 0 ){
 821:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, ">" );
 822:Src/main.c    ****         }else{
 823:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, " " );
 824:Src/main.c    ****         }
 825:Src/main.c    ****         u8g2_DrawStr(&u8g2,10, 30, "Multi-Meter" );
 826:Src/main.c    ****         if( cursor == 1 ){
 827:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 828:Src/main.c    ****         }else{
 829:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, " " );
 830:Src/main.c    ****         }
 831:Src/main.c    ****         u8g2_DrawStr(&u8g2,10, 45, "Scope" );
 832:Src/main.c    ****         u8g2_SendBuffer(&u8g2);
 833:Src/main.c    ****       }
 834:Src/main.c    ****       // send buffer
 835:Src/main.c    ****       u8g2_SendBuffer(&u8g2);
 836:Src/main.c    **** 
 837:Src/main.c    ****       flag_disp = 0; // enable again by TIM2 interrupt
 838:Src/main.c    ****     }
 839:Src/main.c    **** 
 840:Src/main.c    ****   }
 841:Src/main.c    ****   /* USER CODE END 3 */
 842:Src/main.c    **** 
 843:Src/main.c    **** }
 844:Src/main.c    **** 
 845:Src/main.c    **** /** System Clock Configuration
 846:Src/main.c    **** */
 847:Src/main.c    **** void SystemClock_Config(void)
 848:Src/main.c    **** {
 386              		.loc 1 848 0
 387              		.cfi_startproc
 388              		@ args = 0, pretend = 0, frame = 88
 389              		@ frame_needed = 0, uses_anonymous_args = 0
 390 0000 30B5     		push	{r4, r5, lr}
 391              	.LCFI12:
 392              		.cfi_def_cfa_offset 12
 393              		.cfi_offset 4, -12
 394              		.cfi_offset 5, -8
 395              		.cfi_offset 14, -4
 396 0002 97B0     		sub	sp, sp, #92
 397              	.LCFI13:
 398              		.cfi_def_cfa_offset 104
 849:Src/main.c    **** 
 850:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 851:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 852:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 853:Src/main.c    **** 
 854:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 855:Src/main.c    ****     */
 856:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 399              		.loc 1 856 0
 400 0004 0322     		movs	r2, #3
 857:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 401              		.loc 1 857 0
 402 0006 4FF4A023 		mov	r3, #327680
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 23


 858:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 403              		.loc 1 858 0
 404 000a 0020     		movs	r0, #0
 859:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 405              		.loc 1 859 0
 406 000c 0125     		movs	r5, #1
 860:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 407              		.loc 1 860 0
 408 000e 1021     		movs	r1, #16
 861:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 409              		.loc 1 861 0
 410 0010 0224     		movs	r4, #2
 856:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 411              		.loc 1 856 0
 412 0012 0C92     		str	r2, [sp, #48]
 857:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 413              		.loc 1 857 0
 414 0014 0D93     		str	r3, [sp, #52]
 862:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 415              		.loc 1 862 0
 416 0016 4FF48032 		mov	r2, #65536
 863:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 417              		.loc 1 863 0
 418 001a 4FF4E013 		mov	r3, #1835008
 858:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 419              		.loc 1 858 0
 420 001e 0E90     		str	r0, [sp, #56]
 864:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 421              		.loc 1 864 0
 422 0020 0CA8     		add	r0, sp, #48
 860:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 423              		.loc 1 860 0
 424 0022 CDE91051 		strd	r5, r1, [sp, #64]
 862:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 425              		.loc 1 862 0
 426 0026 CDE91342 		strd	r4, r2, [sp, #76]
 863:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 427              		.loc 1 863 0
 428 002a 1593     		str	r3, [sp, #84]
 429              		.loc 1 864 0
 430 002c FFF7FEFF 		bl	HAL_RCC_OscConfig
 431              	.LVL24:
 432 0030 00B1     		cbz	r0, .L24
 433              	.L25:
 434 0032 FEE7     		b	.L25
 435              	.L24:
 436 0034 0346     		mov	r3, r0
 865:Src/main.c    ****   {
 866:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 867:Src/main.c    ****   }
 868:Src/main.c    **** 
 869:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 870:Src/main.c    ****     */
 871:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 872:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 873:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 874:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 24


 875:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 437              		.loc 1 875 0
 438 0036 4FF48062 		mov	r2, #1024
 876:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 877:Src/main.c    **** 
 878:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 439              		.loc 1 878 0
 440 003a 2146     		mov	r1, r4
 871:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 441              		.loc 1 871 0
 442 003c 0F25     		movs	r5, #15
 443              		.loc 1 878 0
 444 003e 01A8     		add	r0, sp, #4
 874:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 445              		.loc 1 874 0
 446 0040 CDE90243 		strd	r4, r3, [sp, #8]
 876:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 447              		.loc 1 876 0
 448 0044 0593     		str	r3, [sp, #20]
 871:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 449              		.loc 1 871 0
 450 0046 0195     		str	r5, [sp, #4]
 875:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 451              		.loc 1 875 0
 452 0048 0492     		str	r2, [sp, #16]
 453              		.loc 1 878 0
 454 004a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 455              	.LVL25:
 456 004e 0346     		mov	r3, r0
 457 0050 00B1     		cbz	r0, .L26
 458              	.L27:
 459 0052 FEE7     		b	.L27
 460              	.L26:
 879:Src/main.c    ****   {
 880:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 881:Src/main.c    ****   }
 882:Src/main.c    **** 
 883:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1
 461              		.loc 1 883 0
 462 0054 41F22102 		movw	r2, #4129
 884:Src/main.c    ****                               |RCC_PERIPHCLK_TIM1;
 885:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 886:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 887:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 888:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 463              		.loc 1 888 0
 464 0058 06A8     		add	r0, sp, #24
 886:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 465              		.loc 1 886 0
 466 005a CDE90833 		strd	r3, r3, [sp, #32]
 887:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 467              		.loc 1 887 0
 468 005e 0B93     		str	r3, [sp, #44]
 883:Src/main.c    ****                               |RCC_PERIPHCLK_TIM1;
 469              		.loc 1 883 0
 470 0060 0692     		str	r2, [sp, #24]
 471              		.loc 1 888 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 25


 472 0062 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 473              	.LVL26:
 474 0066 0446     		mov	r4, r0
 475 0068 00B1     		cbz	r0, .L28
 476              	.L29:
 477 006a FEE7     		b	.L29
 478              	.L28:
 889:Src/main.c    ****   {
 890:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 891:Src/main.c    ****   }
 892:Src/main.c    **** 
 893:Src/main.c    ****     /**Configure the Systick interrupt time 
 894:Src/main.c    ****     */
 895:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 479              		.loc 1 895 0
 480 006c FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 481              	.LVL27:
 482 0070 4FF47A73 		mov	r3, #1000
 483 0074 B0FBF3F0 		udiv	r0, r0, r3
 484 0078 FFF7FEFF 		bl	HAL_SYSTICK_Config
 485              	.LVL28:
 896:Src/main.c    **** 
 897:Src/main.c    ****     /**Configure the Systick 
 898:Src/main.c    ****     */
 899:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 486              		.loc 1 899 0
 487 007c 0420     		movs	r0, #4
 488 007e FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 489              	.LVL29:
 900:Src/main.c    **** 
 901:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 902:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 490              		.loc 1 902 0
 491 0082 2246     		mov	r2, r4
 492 0084 2146     		mov	r1, r4
 493 0086 4FF0FF30 		mov	r0, #-1
 494 008a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 495              	.LVL30:
 903:Src/main.c    **** }
 496              		.loc 1 903 0
 497 008e 17B0     		add	sp, sp, #92
 498              	.LCFI14:
 499              		.cfi_def_cfa_offset 12
 500              		@ sp needed
 501 0090 30BD     		pop	{r4, r5, pc}
 502              		.cfi_endproc
 503              	.LFE132:
 505 0092 00BF     		.section	.text.startup.main,"ax",%progbits
 506              		.align	1
 507              		.p2align 2,,3
 508              		.global	main
 509              		.syntax unified
 510              		.thumb
 511              		.thumb_func
 512              		.fpu fpv4-sp-d16
 514              	main:
 515              	.LFB131:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 26


 379:Src/main.c    **** 
 516              		.loc 1 379 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 280
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 521              	.LCFI15:
 522              		.cfi_def_cfa_offset 36
 523              		.cfi_offset 4, -36
 524              		.cfi_offset 5, -32
 525              		.cfi_offset 6, -28
 526              		.cfi_offset 7, -24
 527              		.cfi_offset 8, -20
 528              		.cfi_offset 9, -16
 529              		.cfi_offset 10, -12
 530              		.cfi_offset 11, -8
 531              		.cfi_offset 14, -4
 532 0004 2DED048B 		vpush.64	{d8, d9}
 533              	.LCFI16:
 534              		.cfi_def_cfa_offset 52
 535              		.cfi_offset 80, -52
 536              		.cfi_offset 81, -48
 537              		.cfi_offset 82, -44
 538              		.cfi_offset 83, -40
 539 0008 CFB0     		sub	sp, sp, #316
 540              	.LCFI17:
 541              		.cfi_def_cfa_offset 368
 388:Src/main.c    **** 
 542              		.loc 1 388 0
 543 000a FFF7FEFF 		bl	HAL_Init
 544              	.LVL31:
 399:Src/main.c    **** 
 545              		.loc 1 399 0
 546 000e 0021     		movs	r1, #0
 547 0010 4FF48072 		mov	r2, #256
 548 0014 0EA8     		add	r0, sp, #56
 549 0016 FFF7FEFF 		bl	memset
 550              	.LVL32:
 404:Src/main.c    **** 
 551              		.loc 1 404 0
 552 001a FFF7FEFF 		bl	SystemClock_Config
 553              	.LVL33:
 411:Src/main.c    ****   MX_DMA_Init();
 554              		.loc 1 411 0
 555 001e FFF7FEFF 		bl	MX_GPIO_Init
 556              	.LVL34:
 412:Src/main.c    ****   MX_ADC1_Init();
 557              		.loc 1 412 0
 558 0022 FFF7FEFF 		bl	MX_DMA_Init
 559              	.LVL35:
 413:Src/main.c    ****   MX_CAN_Init();
 560              		.loc 1 413 0
 561 0026 FFF7FEFF 		bl	MX_ADC1_Init
 562              	.LVL36:
 414:Src/main.c    ****   MX_I2C1_Init();
 563              		.loc 1 414 0
 564 002a FFF7FEFF 		bl	MX_CAN_Init
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 27


 565              	.LVL37:
 415:Src/main.c    ****   MX_SPI1_Init();
 566              		.loc 1 415 0
 567 002e FFF7FEFF 		bl	MX_I2C1_Init
 568              	.LVL38:
 416:Src/main.c    ****   MX_TIM1_Init();
 569              		.loc 1 416 0
 570 0032 FFF7FEFF 		bl	MX_SPI1_Init
 571              	.LVL39:
 417:Src/main.c    ****   MX_TIM2_Init();
 572              		.loc 1 417 0
 573 0036 FFF7FEFF 		bl	MX_TIM1_Init
 574              	.LVL40:
 418:Src/main.c    ****   MX_TIM3_Init();
 575              		.loc 1 418 0
 576 003a FFF7FEFF 		bl	MX_TIM2_Init
 577              	.LVL41:
 419:Src/main.c    ****   MX_TIM6_Init();
 578              		.loc 1 419 0
 579 003e FFF7FEFF 		bl	MX_TIM3_Init
 580              	.LVL42:
 420:Src/main.c    ****   MX_USART1_UART_Init();
 581              		.loc 1 420 0
 582 0042 FFF7FEFF 		bl	MX_TIM6_Init
 583              	.LVL43:
 421:Src/main.c    ****   MX_USART2_UART_Init();
 584              		.loc 1 421 0
 585 0046 FFF7FEFF 		bl	MX_USART1_UART_Init
 586              	.LVL44:
 422:Src/main.c    **** 
 587              		.loc 1 422 0
 588 004a FFF7FEFF 		bl	MX_USART2_UART_Init
 589              	.LVL45:
 437:Src/main.c    ****   {
 590              		.loc 1 437 0
 591 004e 0021     		movs	r1, #0
 592 0050 7548     		ldr	r0, .L116
 593 0052 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 594              	.LVL46:
 595 0056 00B1     		cbz	r0, .L32
 596              	.L33:
 597 0058 FEE7     		b	.L33
 598              	.L32:
 443:Src/main.c    ****   {
 599              		.loc 1 443 0
 600 005a 7448     		ldr	r0, .L116+4
 601 005c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 602              	.LVL47:
 603 0060 00B1     		cbz	r0, .L34
 604              	.L35:
 605 0062 FEE7     		b	.L35
 606              	.L34:
 449:Src/main.c    ****   {
 607              		.loc 1 449 0
 608 0064 7248     		ldr	r0, .L116+8
 609 0066 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 610              	.LVL48:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 28


 611 006a 00B1     		cbz	r0, .L36
 612              	.L37:
 613 006c FEE7     		b	.L37
 614              	.L36:
 455:Src/main.c    ****   {
 615              		.loc 1 455 0
 616 006e 7148     		ldr	r0, .L116+12
 617 0070 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 618              	.LVL49:
 619 0074 0546     		mov	r5, r0
 620 0076 00B1     		cbz	r0, .L38
 621              	.L39:
 622 0078 FEE7     		b	.L39
 623              	.L38:
 461:Src/main.c    **** 
 624              		.loc 1 461 0
 625 007a 0A22     		movs	r2, #10
 626 007c 6E49     		ldr	r1, .L116+16
 627 007e 6F48     		ldr	r0, .L116+20
 495:Src/main.c    **** 
 628              		.loc 1 495 0
 629 0080 6F4C     		ldr	r4, .L116+24
 461:Src/main.c    **** 
 630              		.loc 1 461 0
 631 0082 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 632              	.LVL50:
 464:Src/main.c    ****   // variables is defined in 'defi.h'
 633              		.loc 1 464 0
 634 0086 0122     		movs	r2, #1
 635 0088 6E49     		ldr	r1, .L116+28
 636 008a 6F48     		ldr	r0, .L116+32
 637 008c FFF7FEFF 		bl	HAL_UART_Receive_IT
 638              	.LVL51:
 469:Src/main.c    **** 
 639              		.loc 1 469 0
 640 0090 6E4B     		ldr	r3, .L116+36
 641 0092 6F4A     		ldr	r2, .L116+40
 642 0094 6F49     		ldr	r1, .L116+44
 643 0096 7048     		ldr	r0, .L116+48
 644 0098 FFF7FEFF 		bl	u8g2_Setup_ssd1309_128x64_noname2_f
 645              	.LVL52:
 472:Src/main.c    ****   HAL_Delay(5);
 646              		.loc 1 472 0
 647 009c 2A46     		mov	r2, r5
 648 009e 0821     		movs	r1, #8
 649 00a0 6E48     		ldr	r0, .L116+52
 650 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 651              	.LVL53:
 473:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 652              		.loc 1 473 0
 653 00a6 0520     		movs	r0, #5
 654 00a8 FFF7FEFF 		bl	HAL_Delay
 655              	.LVL54:
 474:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 656              		.loc 1 474 0
 657 00ac 0122     		movs	r2, #1
 658 00ae 0821     		movs	r1, #8
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 29


 659 00b0 6A48     		ldr	r0, .L116+52
 660 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 661              	.LVL55:
 475:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 662              		.loc 1 475 0
 663 00b6 6848     		ldr	r0, .L116+48
 664 00b8 FFF7FEFF 		bl	u8x8_InitDisplay
 665              	.LVL56:
 476:Src/main.c    ****   u8g2_SetContrast(&u8g2, 255); // set contrast
 666              		.loc 1 476 0
 667 00bc 2946     		mov	r1, r5
 668 00be 6648     		ldr	r0, .L116+48
 669 00c0 FFF7FEFF 		bl	u8x8_SetPowerSave
 670              	.LVL57:
 477:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 671              		.loc 1 477 0
 672 00c4 FF21     		movs	r1, #255
 673 00c6 6448     		ldr	r0, .L116+48
 674 00c8 FFF7FEFF 		bl	u8x8_SetContrast
 675              	.LVL58:
 478:Src/main.c    **** 
 676              		.loc 1 478 0
 677 00cc 6248     		ldr	r0, .L116+48
 678 00ce FFF7FEFF 		bl	u8g2_ClearDisplay
 679              	.LVL59:
 481:Src/main.c    **** 
 680              		.loc 1 481 0
 681 00d2 634B     		ldr	r3, .L116+56
 682 00d4 0193     		str	r3, [sp, #4]
 683 00d6 3023     		movs	r3, #48
 684 00d8 0093     		str	r3, [sp]
 685 00da 2A46     		mov	r2, r5
 686 00dc 2821     		movs	r1, #40
 687 00de 5E48     		ldr	r0, .L116+48
 688 00e0 FFF7FEFF 		bl	u8g2_DrawXBMP
 689              	.LVL60:
 483:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 690              		.loc 1 483 0
 691 00e4 5F49     		ldr	r1, .L116+60
 692 00e6 5C48     		ldr	r0, .L116+48
 693 00e8 FFF7FEFF 		bl	u8g2_SetFont
 694              	.LVL61:
 484:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.2a");
 695              		.loc 1 484 0
 696 00ec 5E4B     		ldr	r3, .L116+64
 697 00ee 5A48     		ldr	r0, .L116+48
 698 00f0 3722     		movs	r2, #55
 699 00f2 1021     		movs	r1, #16
 700 00f4 FFF7FEFF 		bl	u8g2_DrawStr
 701              	.LVL62:
 485:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 702              		.loc 1 485 0
 703 00f8 5C4B     		ldr	r3, .L116+68
 704 00fa 5748     		ldr	r0, .L116+48
 705 00fc 4022     		movs	r2, #64
 706 00fe 2821     		movs	r1, #40
 707 0100 FFF7FEFF 		bl	u8g2_DrawStr
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 30


 708              	.LVL63:
 486:Src/main.c    **** 
 709              		.loc 1 486 0
 710 0104 5448     		ldr	r0, .L116+48
 711 0106 FFF7FEFF 		bl	u8g2_SendBuffer
 712              	.LVL64:
 488:Src/main.c    **** 
 713              		.loc 1 488 0
 714 010a 4FF47A70 		mov	r0, #1000
 715 010e FFF7FEFF 		bl	HAL_Delay
 716              	.LVL65:
 490:Src/main.c    **** 
 717              		.loc 1 490 0
 718 0112 5148     		ldr	r0, .L116+48
 719 0114 FFF7FEFF 		bl	u8g2_ClearBuffer
 720              	.LVL66:
 492:Src/main.c    **** 
 721              		.loc 1 492 0
 722 0118 5549     		ldr	r1, .L116+72
 723 011a 5648     		ldr	r0, .L116+76
 724 011c FFF7FEFF 		bl	HAL_UART_Transmit_printf
 725              	.LVL67:
 495:Src/main.c    **** 
 726              		.loc 1 495 0
 727 0120 B4F90030 		ldrsh	r3, [r4]
 728 0124 544A     		ldr	r2, .L116+80
 729 0126 C3F16403 		rsb	r3, r3, #100
 730 012a 5363     		str	r3, [r2, #52]
 500:Src/main.c    ****   draw_indicators();
 731              		.loc 1 500 0
 732 012c FFF7FEFF 		bl	draw_MeasLabels
 733              	.LVL68:
 501:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 734              		.loc 1 501 0
 735 0130 FFF7FEFF 		bl	draw_indicators
 736              	.LVL69:
 502:Src/main.c    **** 
 737              		.loc 1 502 0
 738 0134 4848     		ldr	r0, .L116+48
 739 0136 FFF7FEFF 		bl	u8g2_SendBuffer
 740              	.LVL70:
 508:Src/main.c    ****   HAL_UART_Transmit_printf(&huart2, "ADXL324 DEVID %d\n", a); // debug
 741              		.loc 1 508 0
 742 013a 2946     		mov	r1, r5
 743 013c 1D20     		movs	r0, #29
 744 013e FFF7FEFF 		bl	ADXL345_RegRead_1byte
 745              	.LVL71:
 746 0142 C6B2     		uxtb	r6, r0
 747              	.LVL72:
 509:Src/main.c    ****   if( a == 0xE5 ){
 748              		.loc 1 509 0
 749 0144 3246     		mov	r2, r6
 750 0146 4D49     		ldr	r1, .L116+84
 751 0148 4A48     		ldr	r0, .L116+76
 752 014a FFF7FEFF 		bl	HAL_UART_Transmit_printf
 753              	.LVL73:
 510:Src/main.c    ****     Gsens_EN = 1;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 31


 754              		.loc 1 510 0
 755 014e E52E     		cmp	r6, #229
 511:Src/main.c    ****   }else{
 756              		.loc 1 511 0
 757 0150 4B4B     		ldr	r3, .L116+88
 510:Src/main.c    ****     Gsens_EN = 1;
 758              		.loc 1 510 0
 759 0152 00F00784 		beq	.L102
 513:Src/main.c    ****   }
 760              		.loc 1 513 0
 761 0156 0993     		str	r3, [sp, #36]
 762 0158 1D70     		strb	r5, [r3]
 763              	.L41:
 764              	.LVL74:
 765              	.LBB32:
 766              	.LBB33:
 314:Src/main.c    **** }
 767              		.loc 1 314 0
 768 015a 0A25     		movs	r5, #10
 769 015c 0DAA     		add	r2, sp, #52
 770 015e 0223     		movs	r3, #2
 312:Src/main.c    ****   i2c_buf[1] = data;  
 771              		.loc 1 312 0
 772 0160 40F62D06 		movw	r6, #2093
 773              	.LVL75:
 314:Src/main.c    **** }
 774              		.loc 1 314 0
 775 0164 0095     		str	r5, [sp]
 776 0166 3A21     		movs	r1, #58
 777 0168 4648     		ldr	r0, .L116+92
 312:Src/main.c    ****   i2c_buf[1] = data;  
 778              		.loc 1 312 0
 779 016a ADF83460 		strh	r6, [sp, #52]	@ movhi
 314:Src/main.c    **** }
 780              		.loc 1 314 0
 781 016e FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 782              	.LVL76:
 783              	.LBE33:
 784              	.LBE32:
 519:Src/main.c    **** 
 785              		.loc 1 519 0
 786 0172 2D21     		movs	r1, #45
 787 0174 1D20     		movs	r0, #29
 788 0176 FFF7FEFF 		bl	ADXL345_RegRead_1byte
 789              	.LVL77:
 790              	.LBB34:
 791              	.LBB35:
 314:Src/main.c    **** }
 792              		.loc 1 314 0
 793 017a 0223     		movs	r3, #2
 794 017c 0DAA     		add	r2, sp, #52
 795 017e 0095     		str	r5, [sp]
 796 0180 3A21     		movs	r1, #58
 312:Src/main.c    ****   i2c_buf[1] = data;  
 797              		.loc 1 312 0
 798 0182 40F23155 		movw	r5, #1329
 314:Src/main.c    **** }
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 32


 799              		.loc 1 314 0
 800 0186 3F48     		ldr	r0, .L116+92
 312:Src/main.c    ****   i2c_buf[1] = data;  
 801              		.loc 1 312 0
 802 0188 ADF83450 		strh	r5, [sp, #52]	@ movhi
 314:Src/main.c    **** }
 803              		.loc 1 314 0
 804 018c FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 805              	.LVL78:
 806              	.LBE35:
 807              	.LBE34:
 525:Src/main.c    **** 
 808              		.loc 1 525 0
 809 0190 3121     		movs	r1, #49
 810 0192 1D20     		movs	r0, #29
 811 0194 FFF7FEFF 		bl	ADXL345_RegRead_1byte
 812              	.LVL79:
 532:Src/main.c    ****   draw_indicators();
 813              		.loc 1 532 0
 814 0198 FFF7FEFF 		bl	draw_MeasLabels
 815              	.LVL80:
 533:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 816              		.loc 1 533 0
 817 019c FFF7FEFF 		bl	draw_indicators
 818              	.LVL81:
 534:Src/main.c    **** 
 819              		.loc 1 534 0
 820 01a0 2D48     		ldr	r0, .L116+48
 821 01a2 DFF8F480 		ldr	r8, .L116+112
 822 01a6 DFF8F4A0 		ldr	r10, .L116+116
 823 01aa DFF8F490 		ldr	r9, .L116+120
 824 01ae DFF8F4B0 		ldr	fp, .L116+124
 825              	.LBB36:
 571:Src/main.c    **** 
 826              		.loc 1 571 0
 827 01b2 9FED359A 		vldr.32	s18, .L116+96
 828 01b6 9FED358A 		vldr.32	s16, .L116+100
 575:Src/main.c    ****     // Ressister attenation ratio '165/33'
 829              		.loc 1 575 0
 830 01ba DFED358A 		vldr.32	s17, .L116+104
 831              	.LBE36:
 534:Src/main.c    **** 
 832              		.loc 1 534 0
 833 01be FFF7FEFF 		bl	u8g2_SendBuffer
 834              	.LVL82:
 540:Src/main.c    ****   HAL_UART_Transmit_printf(&huart2, "ADXL324 DEVID %d\n", a); // debug
 835              		.loc 1 540 0
 836 01c2 0021     		movs	r1, #0
 837 01c4 1D20     		movs	r0, #29
 838 01c6 FFF7FEFF 		bl	ADXL345_RegRead_1byte
 839              	.LVL83:
 840 01ca C5B2     		uxtb	r5, r0
 841              	.LVL84:
 541:Src/main.c    ****   if( a == 0xE5 ){
 842              		.loc 1 541 0
 843 01cc 2A46     		mov	r2, r5
 844 01ce 2B49     		ldr	r1, .L116+84
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 33


 845 01d0 2848     		ldr	r0, .L116+76
 846 01d2 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 847              	.LVL85:
 542:Src/main.c    ****     Gsens_EN = 1;
 848              		.loc 1 542 0
 849 01d6 E52D     		cmp	r5, #229
 545:Src/main.c    ****   }
 850              		.loc 1 545 0
 851 01d8 099A     		ldr	r2, [sp, #36]
 852              	.LBB47:
 853              	.LBB48:
 314:Src/main.c    **** }
 854              		.loc 1 314 0
 855 01da 2A48     		ldr	r0, .L116+92
 856              	.LBE48:
 857              	.LBE47:
 543:Src/main.c    ****   }else{
 858              		.loc 1 543 0
 859 01dc 0CBF     		ite	eq
 860 01de 0123     		moveq	r3, #1
 545:Src/main.c    ****   }
 861              		.loc 1 545 0
 862 01e0 0023     		movne	r3, #0
 863              	.LBB51:
 864              	.LBB49:
 314:Src/main.c    **** }
 865              		.loc 1 314 0
 866 01e2 0A25     		movs	r5, #10
 867              	.LVL86:
 868              	.LBE49:
 869              	.LBE51:
 545:Src/main.c    ****   }
 870              		.loc 1 545 0
 871 01e4 1370     		strb	r3, [r2]
 872              	.LVL87:
 873              	.LBB52:
 874              	.LBB50:
 314:Src/main.c    **** }
 875              		.loc 1 314 0
 876 01e6 3A21     		movs	r1, #58
 877 01e8 0223     		movs	r3, #2
 878 01ea 0DAA     		add	r2, sp, #52
 879 01ec 0095     		str	r5, [sp]
 312:Src/main.c    ****   i2c_buf[1] = data;  
 880              		.loc 1 312 0
 881 01ee 40F62D06 		movw	r6, #2093
 882 01f2 ADF83460 		strh	r6, [sp, #52]	@ movhi
 314:Src/main.c    **** }
 883              		.loc 1 314 0
 884 01f6 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 885              	.LVL88:
 886              	.LBE50:
 887              	.LBE52:
 551:Src/main.c    **** 
 888              		.loc 1 551 0
 889 01fa 2D21     		movs	r1, #45
 890 01fc 1D20     		movs	r0, #29
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 34


 891 01fe FFF7FEFF 		bl	ADXL345_RegRead_1byte
 892              	.LVL89:
 893              	.LBB53:
 894              	.LBB54:
 314:Src/main.c    **** }
 895              		.loc 1 314 0
 896 0202 0223     		movs	r3, #2
 897 0204 0095     		str	r5, [sp]
 898 0206 0DAA     		add	r2, sp, #52
 312:Src/main.c    ****   i2c_buf[1] = data;  
 899              		.loc 1 312 0
 900 0208 40F23155 		movw	r5, #1329
 314:Src/main.c    **** }
 901              		.loc 1 314 0
 902 020c 3A21     		movs	r1, #58
 903 020e 1D48     		ldr	r0, .L116+92
 312:Src/main.c    ****   i2c_buf[1] = data;  
 904              		.loc 1 312 0
 905 0210 ADF83450 		strh	r5, [sp, #52]	@ movhi
 314:Src/main.c    **** }
 906              		.loc 1 314 0
 907 0214 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 908              	.LVL90:
 909              	.LBE54:
 910              	.LBE53:
 557:Src/main.c    **** 
 911              		.loc 1 557 0
 912 0218 3121     		movs	r1, #49
 913 021a 1D20     		movs	r0, #29
 914 021c FFF7FEFF 		bl	ADXL345_RegRead_1byte
 915              	.LVL91:
 398:Src/main.c    ****   int16_t circular_buffer[128]={};
 916              		.loc 1 398 0
 917 0220 0023     		movs	r3, #0
 918 0222 1C4D     		ldr	r5, .L116+108
 919 0224 0A93     		str	r3, [sp, #40]
 920 0226 6DE0     		b	.L69
 921              	.L117:
 922              		.align	2
 923              	.L116:
 924 0228 00000000 		.word	htim1
 925 022c 00000000 		.word	htim2
 926 0230 00000000 		.word	htim3
 927 0234 00000000 		.word	htim6
 928 0238 00000000 		.word	g_ADCBuffer
 929 023c 00000000 		.word	hadc1
 930 0240 00000000 		.word	.LANCHOR4
 931 0244 00000000 		.word	UART1_Data
 932 0248 00000000 		.word	huart1
 933 024c 00000000 		.word	u8x8_gpio_and_delay_STM32F303
 934 0250 00000000 		.word	u8x8_byte_4wire_hw_spi
 935 0254 00000000 		.word	u8g2_cb_r0
 936 0258 00000000 		.word	u8g2
 937 025c 00040048 		.word	1207960576
 938 0260 00000000 		.word	.LANCHOR3
 939 0264 00000000 		.word	u8g2_font_5x7_tf
 940 0268 00000000 		.word	.LC2
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 35


 941 026c 18000000 		.word	.LC3
 942 0270 24000000 		.word	.LC4
 943 0274 00000000 		.word	huart2
 944 0278 002C0140 		.word	1073818624
 945 027c 3C000000 		.word	.LC5
 946 0280 00000000 		.word	Gsens_EN
 947 0284 00000000 		.word	hi2c1
 948 0288 0000A543 		.word	1134886912
 949 028c 00007F43 		.word	1132396544
 950 0290 00002543 		.word	1126498304
 951 0294 00000000 		.word	DEFI_value
 952 0298 00000000 		.word	adc
 953 029c 00000000 		.word	flag_meas
 954 02a0 00000000 		.word	.LANCHOR7
 955 02a4 00000000 		.word	flag_disp
 956              	.LVL92:
 957              	.L48:
 958              	.LBB55:
 667:Src/main.c    **** 
 959              		.loc 1 667 0
 960 02a8 B4F90030 		ldrsh	r3, [r4]
 961 02ac B34A     		ldr	r2, .L118
 962 02ae C3F16403 		rsb	r3, r3, #100
 963 02b2 5363     		str	r3, [r2, #52]
 670:Src/main.c    ****       switch( flag_sw ){
 964              		.loc 1 670 0
 965 02b4 B24B     		ldr	r3, .L118+4
 966 02b6 1B68     		ldr	r3, [r3]
 967 02b8 03B3     		cbz	r3, .L53
 671:Src/main.c    ****         case 1:
 968              		.loc 1 671 0
 969 02ba 022B     		cmp	r3, #2
 970 02bc 00F0C080 		beq	.L55
 971 02c0 032B     		cmp	r3, #3
 972 02c2 00F0A080 		beq	.L56
 973 02c6 012B     		cmp	r3, #1
 974 02c8 00F0A580 		beq	.L103
 975              	.L54:
 712:Src/main.c    ****       if( mode == MODE_BAR_METER ){
 976              		.loc 1 712 0
 977 02cc AD48     		ldr	r0, .L118+8
 978 02ce FFF7FEFF 		bl	u8g2_ClearBuffer
 979              	.LVL93:
 713:Src/main.c    ****         draw_MeasLabels();
 980              		.loc 1 713 0
 981 02d2 AD4B     		ldr	r3, .L118+12
 982 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 983 02d6 002B     		cmp	r3, #0
 984 02d8 78D0     		beq	.L104
 717:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 985              		.loc 1 717 0
 986 02da 012B     		cmp	r3, #1
 987 02dc 00F0C480 		beq	.L105
 731:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_m
 988              		.loc 1 731 0
 989 02e0 022B     		cmp	r3, #2
 990 02e2 00F07F81 		beq	.L106
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 36


 735:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, -200, 200, 4);
 991              		.loc 1 735 0
 992 02e6 032B     		cmp	r3, #3
 993 02e8 00F09A81 		beq	.L107
 994              	.L63:
 740:Src/main.c    ****       TIM6->CNT = 0;
 995              		.loc 1 740 0
 996 02ec A548     		ldr	r0, .L118+8
 997 02ee FFF7FEFF 		bl	u8g2_SendBuffer
 998              	.LVL94:
 741:Src/main.c    ****       flag_sw = 0;
 999              		.loc 1 741 0
 1000 02f2 A64A     		ldr	r2, .L118+16
 1001 02f4 0023     		movs	r3, #0
 1002 02f6 5362     		str	r3, [r2, #36]
 742:Src/main.c    ****     }
 1003              		.loc 1 742 0
 1004 02f8 A14A     		ldr	r2, .L118+4
 1005 02fa 1360     		str	r3, [r2]
 1006              	.L53:
 746:Src/main.c    ****       ///// multi meter /////
 1007              		.loc 1 746 0
 1008 02fc DBF80030 		ldr	r3, [fp]
 1009 0300 002B     		cmp	r3, #0
 1010 0302 68D1     		bne	.L108
 1011              	.L69:
 571:Src/main.c    **** 
 1012              		.loc 1 571 0
 1013 0304 B8F80030 		ldrh	r3, [r8]
 1014 0308 A148     		ldr	r0, .L118+20
 1015 030a 07EE103A 		vmov	s14, r3	@ int
 575:Src/main.c    ****     // Ressister attenation ratio '165/33'
 1016              		.loc 1 575 0
 1017 030e B8F80230 		ldrh	r3, [r8, #2]
 571:Src/main.c    **** 
 1018              		.loc 1 571 0
 1019 0312 B8EE477A 		vcvt.f32.u32	s14, s14
 575:Src/main.c    ****     // Ressister attenation ratio '165/33'
 1020              		.loc 1 575 0
 1021 0316 07EE903A 		vmov	s15, r3	@ int
 571:Src/main.c    **** 
 1022              		.loc 1 571 0
 1023 031a 27EE097A 		vmul.f32	s14, s14, s18
 575:Src/main.c    ****     // Ressister attenation ratio '165/33'
 1024              		.loc 1 575 0
 1025 031e F8EE677A 		vcvt.f32.u32	s15, s15
 571:Src/main.c    **** 
 1026              		.loc 1 571 0
 1027 0322 C7EE086A 		vdiv.f32	s13, s14, s16
 580:Src/main.c    ****       FP_duty = 100;
 1028              		.loc 1 580 0
 1029 0326 9B4B     		ldr	r3, .L118+24
 1030 0328 1B88     		ldrh	r3, [r3]
 1031 032a 2A88     		ldrh	r2, [r5]
 1032 032c 1BB2     		sxth	r3, r3
 1033 032e 40F6B731 		movw	r1, #2999
 1034 0332 8B42     		cmp	r3, r1
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 37


 1035 0334 12B2     		sxth	r2, r2
 575:Src/main.c    ****     // Ressister attenation ratio '165/33'
 1036              		.loc 1 575 0
 1037 0336 67EEA87A 		vmul.f32	s15, s15, s17
 571:Src/main.c    **** 
 1038              		.loc 1 571 0
 1039 033a FDEEE66A 		vcvt.s32.f32	s13, s13
 575:Src/main.c    ****     // Ressister attenation ratio '165/33'
 1040              		.loc 1 575 0
 1041 033e 87EE887A 		vdiv.f32	s14, s15, s16
 571:Src/main.c    **** 
 1042              		.loc 1 571 0
 1043 0342 16EE906A 		vmov	r6, s13	@ int
 575:Src/main.c    ****     // Ressister attenation ratio '165/33'
 1044              		.loc 1 575 0
 1045 0346 BDEEC77A 		vcvt.s32.f32	s14, s14
 571:Src/main.c    **** 
 1046              		.loc 1 571 0
 1047 034a 0680     		strh	r6, [r0]	@ movhi
 575:Src/main.c    ****     // Ressister attenation ratio '165/33'
 1048              		.loc 1 575 0
 1049 034c 9248     		ldr	r0, .L118+28
 1050 034e 17EE106A 		vmov	r6, s14	@ int
 1051 0352 0680     		strh	r6, [r0]	@ movhi
 580:Src/main.c    ****       FP_duty = 100;
 1052              		.loc 1 580 0
 1053 0354 14DC     		bgt	.L47
 1054 0356 002A     		cmp	r2, #0
 1055 0358 12DA     		bge	.L47
 583:Src/main.c    ****     }
 1056              		.loc 1 583 0
 1057 035a 8E4B     		ldr	r3, .L118+24
 1058 035c 8F4A     		ldr	r2, .L118+32
 1059 035e 1B88     		ldrh	r3, [r3]
 1060 0360 1BB2     		sxth	r3, r3
 1061 0362 82FB0312 		smull	r1, r2, r2, r3
 1062 0366 DB17     		asrs	r3, r3, #31
 1063 0368 C3EBA213 		rsb	r3, r3, r2, asr #6
 1064 036c 03EB8303 		add	r3, r3, r3, lsl #2
 1065 0370 03EB8303 		add	r3, r3, r3, lsl #2
 1066 0374 9B00     		lsls	r3, r3, #2
 1067 0376 1BB2     		sxth	r3, r3
 586:Src/main.c    ****       FP_duty = 100;
 1068              		.loc 1 586 0
 1069 0378 642B     		cmp	r3, #100
 583:Src/main.c    ****     }
 1070              		.loc 1 583 0
 1071 037a 2380     		strh	r3, [r4]	@ movhi
 586:Src/main.c    ****       FP_duty = 100;
 1072              		.loc 1 586 0
 1073 037c 40F3F882 		ble	.L109
 1074              	.L47:
 581:Src/main.c    ****     }else{
 1075              		.loc 1 581 0
 1076 0380 6423     		movs	r3, #100
 1077 0382 2380     		strh	r3, [r4]	@ movhi
 1078              	.L46:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 38


 593:Src/main.c    **** 
 1079              		.loc 1 593 0
 1080 0384 8648     		ldr	r0, .L118+36
 1081 0386 FFF7FEFF 		bl	defi_decoder
 1082              	.LVL95:
 595:Src/main.c    **** 
 1083              		.loc 1 595 0
 1084 038a DAF80030 		ldr	r3, [r10]
 1085 038e 012B     		cmp	r3, #1
 1086 0390 8AD1     		bne	.L48
 598:Src/main.c    ****         /*
 1087              		.loc 1 598 0
 1088 0392 099B     		ldr	r3, [sp, #36]
 1089 0394 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1090 0396 012B     		cmp	r3, #1
 1091 0398 00F0B580 		beq	.L110
 1092              	.L49:
 657:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 1093              		.loc 1 657 0
 1094 039c 7E4A     		ldr	r2, .L118+28
 655:Src/main.c    **** 		  meas_value[1] = DEFI_value[2];  // OILP
 1095              		.loc 1 655 0
 1096 039e 2B88     		ldrh	r3, [r5]
 657:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 1097              		.loc 1 657 0
 1098 03a0 1288     		ldrh	r2, [r2]
 655:Src/main.c    **** 		  meas_value[1] = DEFI_value[2];  // OILP
 1099              		.loc 1 655 0
 1100 03a2 A9F80030 		strh	r3, [r9]	@ movhi
 656:Src/main.c    **** 			meas_value[2] = FP_volt;        // FuelPump Voltage
 1101              		.loc 1 656 0
 1102 03a6 AB88     		ldrh	r3, [r5, #4]
 1103 03a8 A9F80230 		strh	r3, [r9, #2]	@ movhi
 657:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 1104              		.loc 1 657 0
 1105 03ac A9F80420 		strh	r2, [r9, #4]	@ movhi
 658:Src/main.c    **** 			meas_value[4] = DEFI_value[5];  // OILT
 1106              		.loc 1 658 0
 1107 03b0 AB89     		ldrh	r3, [r5, #12]
 660:Src/main.c    **** 
 1108              		.loc 1 660 0
 1109 03b2 774A     		ldr	r2, .L118+20
 658:Src/main.c    **** 			meas_value[4] = DEFI_value[5];  // OILT
 1110              		.loc 1 658 0
 1111 03b4 A9F80630 		strh	r3, [r9, #6]	@ movhi
 659:Src/main.c    **** 		  meas_value[5] = O2_volt;        // O2
 1112              		.loc 1 659 0
 1113 03b8 6B89     		ldrh	r3, [r5, #10]
 660:Src/main.c    **** 
 1114              		.loc 1 660 0
 1115 03ba 1288     		ldrh	r2, [r2]
 659:Src/main.c    **** 		  meas_value[5] = O2_volt;        // O2
 1116              		.loc 1 659 0
 1117 03bc A9F80830 		strh	r3, [r9, #8]	@ movhi
 662:Src/main.c    ****     }
 1118              		.loc 1 662 0
 1119 03c0 0023     		movs	r3, #0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 39


 660:Src/main.c    **** 
 1120              		.loc 1 660 0
 1121 03c2 A9F80A20 		strh	r2, [r9, #10]	@ movhi
 662:Src/main.c    ****     }
 1122              		.loc 1 662 0
 1123 03c6 CAF80030 		str	r3, [r10]
 1124 03ca 6DE7     		b	.L48
 1125              	.L104:
 714:Src/main.c    ****         draw_indicators();
 1126              		.loc 1 714 0
 1127 03cc FFF7FEFF 		bl	draw_MeasLabels
 1128              	.LVL96:
 715:Src/main.c    **** 
 1129              		.loc 1 715 0
 1130 03d0 FFF7FEFF 		bl	draw_indicators
 1131              	.LVL97:
 1132 03d4 8AE7     		b	.L63
 1133              	.L108:
 748:Src/main.c    ****         // update Fuel Pump Voltage
 1134              		.loc 1 748 0
 1135 03d6 6C4B     		ldr	r3, .L118+12
 1136 03d8 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 1137 03da 002E     		cmp	r6, #0
 1138 03dc 00F06581 		beq	.L111
 768:Src/main.c    **** 
 1139              		.loc 1 768 0
 1140 03e0 012E     		cmp	r6, #1
 1141 03e2 00F01382 		beq	.L112
 787:Src/main.c    **** 
 1142              		.loc 1 787 0
 1143 03e6 022E     		cmp	r6, #2
 1144 03e8 00F02D81 		beq	.L113
 801:Src/main.c    **** 
 1145              		.loc 1 801 0
 1146 03ec 032E     		cmp	r6, #3
 1147 03ee 00F0E281 		beq	.L114
 815:Src/main.c    **** 
 1148              		.loc 1 815 0
 1149 03f2 042E     		cmp	r6, #4
 1150 03f4 00F07E82 		beq	.L115
 1151              	.L71:
 1152              	.LVL98:
 835:Src/main.c    **** 
 1153              		.loc 1 835 0
 1154 03f8 6248     		ldr	r0, .L118+8
 1155 03fa FFF7FEFF 		bl	u8g2_SendBuffer
 1156              	.LVL99:
 837:Src/main.c    ****     }
 1157              		.loc 1 837 0
 1158 03fe 0023     		movs	r3, #0
 1159 0400 CBF80030 		str	r3, [fp]
 1160 0404 7EE7     		b	.L69
 1161              	.LVL100:
 1162              	.L56:
 697:Src/main.c    ****           HAL_NVIC_DisableIRQ (EXTI1_IRQn);
 1163              		.loc 1 697 0
 1164 0406 6749     		ldr	r1, .L118+40
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 40


 1165 0408 6748     		ldr	r0, .L118+44
 1166 040a FFF7FEFF 		bl	HAL_UART_Transmit_printf
 1167              	.LVL101:
 698:Src/main.c    ****           // SW "ENTER"
 1168              		.loc 1 698 0
 1169 040e 0720     		movs	r0, #7
 1170 0410 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1171              	.LVL102:
 1172 0414 5AE7     		b	.L54
 1173              	.L103:
 673:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 1174              		.loc 1 673 0
 1175 0416 6549     		ldr	r1, .L118+48
 1176 0418 6348     		ldr	r0, .L118+44
 1177 041a FFF7FEFF 		bl	HAL_UART_Transmit_printf
 1178              	.LVL103:
 674:Src/main.c    ****           // SW "UP"
 1179              		.loc 1 674 0
 1180 041e 1720     		movs	r0, #23
 1181 0420 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1182              	.LVL104:
 676:Src/main.c    ****             if( mode == N_mode-1 ){
 1183              		.loc 1 676 0
 1184 0424 624B     		ldr	r3, .L118+52
 1185 0426 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1186 0428 002B     		cmp	r3, #0
 1187 042a 7FF44FAF 		bne	.L54
 677:Src/main.c    ****               mode = 0;
 1188              		.loc 1 677 0
 1189 042e 564A     		ldr	r2, .L118+12
 1190 0430 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1191 0432 032A     		cmp	r2, #3
 1192 0434 00F0F180 		beq	.L99
 680:Src/main.c    ****             }
 1193              		.loc 1 680 0
 1194 0438 534B     		ldr	r3, .L118+12
 1195 043a 0132     		adds	r2, r2, #1
 1196 043c 1A70     		strb	r2, [r3]
 1197 043e 45E7     		b	.L54
 1198              	.L55:
 685:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 1199              		.loc 1 685 0
 1200 0440 5C49     		ldr	r1, .L118+56
 1201 0442 5948     		ldr	r0, .L118+44
 1202 0444 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 1203              	.LVL105:
 686:Src/main.c    ****           // SW "DOWN"
 1204              		.loc 1 686 0
 1205 0448 1720     		movs	r0, #23
 1206 044a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1207              	.LVL106:
 688:Src/main.c    ****             if( mode == 0 ){
 1208              		.loc 1 688 0
 1209 044e 584B     		ldr	r3, .L118+52
 1210 0450 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1211 0452 002B     		cmp	r3, #0
 1212 0454 7FF43AAF 		bne	.L54
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 41


 689:Src/main.c    ****               mode = N_mode-1;
 1213              		.loc 1 689 0
 1214 0458 4B4A     		ldr	r2, .L118+12
 1215 045a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1216 045c 002B     		cmp	r3, #0
 1217 045e 40F0DB80 		bne	.L61
 690:Src/main.c    ****             }else{
 1218              		.loc 1 690 0
 1219 0462 0323     		movs	r3, #3
 1220 0464 1370     		strb	r3, [r2]
 1221 0466 31E7     		b	.L54
 1222              	.L105:
 1223 0468 534B     		ldr	r3, .L118+60
 1224 046a 544F     		ldr	r7, .L118+64
 1225 046c 0893     		str	r3, [sp, #32]
 717:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 1226              		.loc 1 717 0
 1227 046e 0226     		movs	r6, #2
 1228              	.L65:
 1229              	.LVL107:
 1230              	.LBB37:
 721:Src/main.c    ****         }
 1231              		.loc 1 721 0 discriminator 3
 1232 0470 089B     		ldr	r3, [sp, #32]
 1233 0472 0297     		str	r7, [sp, #8]
 1234 0474 0D22     		movs	r2, #13
 1235 0476 0193     		str	r3, [sp, #4]
 1236 0478 0092     		str	r2, [sp]
 1237 047a 3C23     		movs	r3, #60
 1238 047c 3246     		mov	r2, r6
 1239 047e 4421     		movs	r1, #68
 1240 0480 4048     		ldr	r0, .L118+8
 1241 0482 FFF7FEFF 		bl	draw_MeasLabelUnit
 1242              	.LVL108:
 1243 0486 0D36     		adds	r6, r6, #13
 1244              	.LVL109:
 1245 0488 089B     		ldr	r3, [sp, #32]
 1246 048a F6B2     		uxtb	r6, r6
 1247 048c 0733     		adds	r3, r3, #7
 718:Src/main.c    ****           x = meas_C_x;
 1248              		.loc 1 718 0 discriminator 3
 1249 048e 362E     		cmp	r6, #54
 1250 0490 0893     		str	r3, [sp, #32]
 1251 0492 07F10507 		add	r7, r7, #5
 1252 0496 EBD1     		bne	.L65
 1253 0498 494B     		ldr	r3, .L118+68
 1254 049a 4A4F     		ldr	r7, .L118+72
 1255 049c 0893     		str	r3, [sp, #32]
 718:Src/main.c    ****           x = meas_C_x;
 1256              		.loc 1 718 0 is_stmt 0
 1257 049e 4826     		movs	r6, #72
 1258 04a0 0123     		movs	r3, #1
 1259              	.L67:
 1260              	.LVL110:
 725:Src/main.c    ****         }
 1261              		.loc 1 725 0 is_stmt 1 discriminator 3
 1262 04a2 CDE90137 		strd	r3, r7, [sp, #4]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 42


 1263 04a6 3146     		mov	r1, r6
 1264 04a8 0923     		movs	r3, #9
 1265 04aa 1D36     		adds	r6, r6, #29
 1266 04ac 0093     		str	r3, [sp]
 1267 04ae 3522     		movs	r2, #53
 1268 04b0 1B23     		movs	r3, #27
 1269 04b2 3448     		ldr	r0, .L118+8
 1270 04b4 F6B2     		uxtb	r6, r6
 1271 04b6 FFF7FEFF 		bl	draw_IndicatorBox
 1272              	.LVL111:
 724:Src/main.c    ****           draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_s
 1273              		.loc 1 724 0 discriminator 3
 1274 04ba BC2E     		cmp	r6, #188
 1275 04bc 07F10507 		add	r7, r7, #5
 1276 04c0 04D0     		beq	.L66
 1277 04c2 089A     		ldr	r2, [sp, #32]
 1278 04c4 12F8013B 		ldrb	r3, [r2], #1	@ zero_extendqisi2
 1279 04c8 0892     		str	r2, [sp, #32]
 1280              	.LVL112:
 1281 04ca EAE7     		b	.L67
 1282              	.LVL113:
 1283              	.L66:
 727:Src/main.c    **** //        draw_CircularMeter_Init(26, 26, 26, 3, -60, 300, 10, 20, -1, -80, 120);
 1284              		.loc 1 727 0
 1285 04cc 7822     		movs	r2, #120
 1286 04ce 6FF04F03 		mvn	r3, #79
 1287 04d2 4FF0FF31 		mov	r1, #-1
 1288 04d6 0692     		str	r2, [sp, #24]
 1289 04d8 0593     		str	r3, [sp, #20]
 1290 04da 0491     		str	r1, [sp, #16]
 1291 04dc 1426     		movs	r6, #20
 1292 04de 2021     		movs	r1, #32
 1293 04e0 0A20     		movs	r0, #10
 1294 04e2 4FF49672 		mov	r2, #300
 1295 04e6 6FF03B03 		mvn	r3, #59
 1296 04ea CDE90032 		strd	r3, r2, [sp]
 1297 04ee CDE90206 		strd	r0, r6, [sp, #8]
 1298 04f2 0323     		movs	r3, #3
 1299 04f4 0846     		mov	r0, r1
 1300 04f6 1F22     		movs	r2, #31
 1301 04f8 FFF7FEFF 		bl	draw_CircularMeter_Init
 1302              	.LVL114:
 729:Src/main.c    **** 
 1303              		.loc 1 729 0
 1304 04fc 0021     		movs	r1, #0
 1305 04fe 2148     		ldr	r0, .L118+8
 1306 0500 FFF7FEFF 		bl	draw_CircularMeter
 1307              	.LVL115:
 1308              	.LBE37:
 1309 0504 F2E6     		b	.L63
 1310              	.LVL116:
 1311              	.L110:
 614:Src/main.c    ****         Gsens_Y1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x35); // Check "DATAY1" (MSB side)
 1312              		.loc 1 614 0
 1313 0506 3321     		movs	r1, #51
 1314 0508 1D20     		movs	r0, #29
 1315 050a FFF7FEFF 		bl	ADXL345_RegRead_1byte
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 43


 1316              	.LVL117:
 1317 050e 2E4E     		ldr	r6, .L118+76
 620:Src/main.c    **** 
 1318              		.loc 1 620 0
 1319 0510 2E4F     		ldr	r7, .L118+80
 614:Src/main.c    ****         Gsens_Y1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x35); // Check "DATAY1" (MSB side)
 1320              		.loc 1 614 0
 1321 0512 3070     		strb	r0, [r6]
 615:Src/main.c    ****         Gsens_Z1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x37); // Check "DATAZ1" (MSB side)
 1322              		.loc 1 615 0
 1323 0514 3521     		movs	r1, #53
 1324 0516 1D20     		movs	r0, #29
 1325 0518 FFF7FEFF 		bl	ADXL345_RegRead_1byte
 1326              	.LVL118:
 1327 051c 2C4B     		ldr	r3, .L118+84
 616:Src/main.c    ****         // Acceration 1G = 100
 1328              		.loc 1 616 0
 1329 051e 3721     		movs	r1, #55
 615:Src/main.c    ****         Gsens_Z1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x37); // Check "DATAZ1" (MSB side)
 1330              		.loc 1 615 0
 1331 0520 1870     		strb	r0, [r3]
 616:Src/main.c    ****         // Acceration 1G = 100
 1332              		.loc 1 616 0
 1333 0522 1D20     		movs	r0, #29
 1334 0524 FFF7FEFF 		bl	ADXL345_RegRead_1byte
 1335              	.LVL119:
 1336 0528 2A4A     		ldr	r2, .L118+88
 618:Src/main.c    ****         Gsens_Y = 400 * (int8_t)Gsens_Y1 / 128; // unsigned->signed & scaling
 1337              		.loc 1 618 0
 1338 052a 96F90030 		ldrsb	r3, [r6]
 616:Src/main.c    ****         // Acceration 1G = 100
 1339              		.loc 1 616 0
 1340 052e 1070     		strb	r0, [r2]
 618:Src/main.c    ****         Gsens_Y = 400 * (int8_t)Gsens_Y1 / 128; // unsigned->signed & scaling
 1341              		.loc 1 618 0
 1342 0530 4FF4C872 		mov	r2, #400
 1343 0534 02FB03F2 		mul	r2, r2, r3
 619:Src/main.c    ****         Gsens_Z = 400 * (int8_t)Gsens_Z1 / 128; // unsigned->signed & scaling
 1344              		.loc 1 619 0
 1345 0538 254B     		ldr	r3, .L118+84
 1346 053a 93F90010 		ldrsb	r1, [r3]
 618:Src/main.c    ****         Gsens_Y = 400 * (int8_t)Gsens_Y1 / 128; // unsigned->signed & scaling
 1347              		.loc 1 618 0
 1348 053e 002A     		cmp	r2, #0
 619:Src/main.c    ****         Gsens_Z = 400 * (int8_t)Gsens_Z1 / 128; // unsigned->signed & scaling
 1349              		.loc 1 619 0
 1350 0540 4FF4C873 		mov	r3, #400
 1351 0544 03FB01F3 		mul	r3, r3, r1
 618:Src/main.c    ****         Gsens_Y = 400 * (int8_t)Gsens_Y1 / 128; // unsigned->signed & scaling
 1352              		.loc 1 618 0
 1353 0548 B8BF     		it	lt
 1354 054a 7F32     		addlt	r2, r2, #127
 1355 054c 2249     		ldr	r1, .L118+92
 1356 054e D211     		asrs	r2, r2, #7
 1357 0550 0A80     		strh	r2, [r1]	@ movhi
 620:Src/main.c    **** 
 1358              		.loc 1 620 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 44


 1359 0552 4FF4C871 		mov	r1, #400
 1360 0556 01FB00F1 		mul	r1, r1, r0
 619:Src/main.c    ****         Gsens_Z = 400 * (int8_t)Gsens_Z1 / 128; // unsigned->signed & scaling
 1361              		.loc 1 619 0
 1362 055a 002B     		cmp	r3, #0
 1363 055c B8BF     		it	lt
 1364 055e 7F33     		addlt	r3, r3, #127
 620:Src/main.c    **** 
 1365              		.loc 1 620 0
 1366 0560 0029     		cmp	r1, #0
 1367 0562 B8BF     		it	lt
 1368 0564 7F31     		addlt	r1, r1, #127
 619:Src/main.c    ****         Gsens_Z = 400 * (int8_t)Gsens_Z1 / 128; // unsigned->signed & scaling
 1369              		.loc 1 619 0
 1370 0566 1D48     		ldr	r0, .L118+96
 620:Src/main.c    **** 
 1371              		.loc 1 620 0
 1372 0568 CE11     		asrs	r6, r1, #7
 619:Src/main.c    ****         Gsens_Z = 400 * (int8_t)Gsens_Z1 / 128; // unsigned->signed & scaling
 1373              		.loc 1 619 0
 1374 056a DB11     		asrs	r3, r3, #7
 1375 056c 0380     		strh	r3, [r0]	@ movhi
 622:Src/main.c    ****         
 1376              		.loc 1 622 0
 1377 056e 1C49     		ldr	r1, .L118+100
 1378 0570 0096     		str	r6, [sp]
 1379 0572 0D48     		ldr	r0, .L118+44
 620:Src/main.c    **** 
 1380              		.loc 1 620 0
 1381 0574 3E80     		strh	r6, [r7]	@ movhi
 622:Src/main.c    ****         
 1382              		.loc 1 622 0
 1383 0576 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 1384              	.LVL120:
 1385 057a 0FE7     		b	.L49
 1386              	.L119:
 1387              		.align	2
 1388              	.L118:
 1389 057c 002C0140 		.word	1073818624
 1390 0580 00000000 		.word	flag_sw
 1391 0584 00000000 		.word	u8g2
 1392 0588 00000000 		.word	mode
 1393 058c 00100040 		.word	1073745920
 1394 0590 00000000 		.word	.LANCHOR5
 1395 0594 00000000 		.word	rpm
 1396 0598 00000000 		.word	.LANCHOR6
 1397 059c F1197605 		.word	91625969
 1398 05a0 00000000 		.word	UART1_RxData
 1399 05a4 68000000 		.word	.LC9
 1400 05a8 00000000 		.word	huart2
 1401 05ac 5C000000 		.word	.LC7
 1402 05b0 00000000 		.word	setting
 1403 05b4 60000000 		.word	.LC8
 1404 05b8 00000000 		.word	.LANCHOR2
 1405 05bc 00000000 		.word	.LANCHOR1
 1406 05c0 01000000 		.word	.LANCHOR8+1
 1407 05c4 00000000 		.word	.LANCHOR0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 45


 1408 05c8 00000000 		.word	Gsens_X1
 1409 05cc 00000000 		.word	Gsens_Z
 1410 05d0 00000000 		.word	Gsens_Y1
 1411 05d4 00000000 		.word	Gsens_Z1
 1412 05d8 00000000 		.word	Gsens_X
 1413 05dc 00000000 		.word	Gsens_Y
 1414 05e0 50000000 		.word	.LC6
 1415              	.L106:
 1416              	.LBB38:
 732:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "MAP", "kPa");
 1417              		.loc 1 732 0
 1418 05e4 3420     		movs	r0, #52
 1419 05e6 6FF06301 		mvn	r1, #99
 1420 05ea C822     		movs	r2, #200
 1421 05ec 0323     		movs	r3, #3
 1422 05ee 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1423 05f2 8023     		movs	r3, #128
 1424 05f4 0D22     		movs	r2, #13
 1425 05f6 0021     		movs	r1, #0
 1426 05f8 AD48     		ldr	r0, .L120
 1427 05fa FFF7FEFF 		bl	draw_Wave_axis
 1428              	.LVL121:
 733:Src/main.c    **** 
 1429              		.loc 1 733 0
 1430 05fe AD49     		ldr	r1, .L120+4
 1431 0600 0291     		str	r1, [sp, #8]
 1432 0602 AD49     		ldr	r1, .L120+8
 1433 0604 0D23     		movs	r3, #13
 1434 0606 0022     		movs	r2, #0
 1435              	.L100:
 1436              	.LBE38:
 1437              	.LBB39:
 737:Src/main.c    **** 
 1438              		.loc 1 737 0
 1439 0608 CDE90031 		strd	r3, r1, [sp]
 1440 060c A848     		ldr	r0, .L120
 1441 060e 1146     		mov	r1, r2
 1442 0610 4023     		movs	r3, #64
 1443 0612 FFF7FEFF 		bl	draw_MeasLabelUnit
 1444              	.LVL122:
 1445 0616 69E6     		b	.L63
 1446              	.L61:
 1447              	.LBE39:
 692:Src/main.c    ****             }
 1448              		.loc 1 692 0
 1449 0618 013B     		subs	r3, r3, #1
 1450              	.L99:
 1451 061a A84A     		ldr	r2, .L120+12
 1452 061c 1370     		strb	r3, [r2]
 1453 061e 55E6     		b	.L54
 1454              	.L107:
 1455              	.LBB40:
 736:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "LatG", "G");
 1456              		.loc 1 736 0
 1457 0620 3420     		movs	r0, #52
 1458 0622 6FF0C701 		mvn	r1, #199
 1459 0626 C822     		movs	r2, #200
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 46


 1460 0628 0423     		movs	r3, #4
 1461 062a 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1462 062e 8023     		movs	r3, #128
 1463 0630 0D22     		movs	r2, #13
 1464 0632 0021     		movs	r1, #0
 1465 0634 9E48     		ldr	r0, .L120
 1466 0636 FFF7FEFF 		bl	draw_Wave_axis
 1467              	.LVL123:
 737:Src/main.c    **** 
 1468              		.loc 1 737 0
 1469 063a A149     		ldr	r1, .L120+16
 1470 063c 0291     		str	r1, [sp, #8]
 1471 063e 0D23     		movs	r3, #13
 1472 0640 0022     		movs	r2, #0
 1473 0642 A049     		ldr	r1, .L120+20
 1474 0644 E0E7     		b	.L100
 1475              	.L113:
 1476              	.LBE40:
 1477              	.LBB41:
 789:Src/main.c    ****           circular_buffer_index--;
 1478              		.loc 1 789 0
 1479 0646 0A9B     		ldr	r3, [sp, #40]
 1480 0648 002B     		cmp	r3, #0
 1481 064a 00F0DB80 		beq	.L84
 790:Src/main.c    ****         }else{
 1482              		.loc 1 790 0
 1483 064e 013B     		subs	r3, r3, #1
 1484 0650 9BB2     		uxth	r3, r3
 1485 0652 0A93     		str	r3, [sp, #40]
 1486              	.LVL124:
 1487 0654 1E46     		mov	r6, r3
 1488              	.LVL125:
 1489              	.L76:
 797:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 1490              		.loc 1 797 0
 1491 0656 6FF06302 		mvn	r2, #99
 1492 065a 3423     		movs	r3, #52
 1493 065c CDE90032 		strd	r3, r2, [sp]
 794:Src/main.c    **** 
 1494              		.loc 1 794 0
 1495 0660 0EAA     		add	r2, sp, #56
 1496 0662 B9F80030 		ldrh	r3, [r9]
 797:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 1497              		.loc 1 797 0
 1498 0666 0496     		str	r6, [sp, #16]
 1499 0668 C821     		movs	r1, #200
 1500 066a 0EA8     		add	r0, sp, #56
 1501 066c CDE90210 		strd	r1, r0, [sp, #8]
 794:Src/main.c    **** 
 1502              		.loc 1 794 0
 1503 0670 22F81630 		strh	r3, [r2, r6, lsl #1]	@ movhi
 797:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 1504              		.loc 1 797 0
 1505 0674 0021     		movs	r1, #0
 1506 0676 8023     		movs	r3, #128
 1507 0678 0D22     		movs	r2, #13
 1508 067a 8D48     		ldr	r0, .L120
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 47


 798:Src/main.c    **** 
 1509              		.loc 1 798 0
 1510 067c 8D4F     		ldr	r7, .L120+4
 797:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 1511              		.loc 1 797 0
 1512 067e FFF7FEFF 		bl	draw_Wave
 1513              	.LVL126:
 798:Src/main.c    **** 
 1514              		.loc 1 798 0
 1515 0682 0EAB     		add	r3, sp, #56
 1516 0684 0220     		movs	r0, #2
 1517 0686 33F91630 		ldrsh	r3, [r3, r6, lsl #1]
 1518 068a 0193     		str	r3, [sp, #4]
 1519 068c 0126     		movs	r6, #1
 1520 068e 0321     		movs	r1, #3
 1521 0690 0D23     		movs	r3, #13
 1522 0692 0022     		movs	r2, #0
 1523              	.L101:
 1524              	.LBE41:
 1525              	.LBB42:
 812:Src/main.c    **** 
 1526              		.loc 1 812 0
 1527 0694 CDE90210 		strd	r1, r0, [sp, #8]
 1528 0698 0093     		str	r3, [sp]
 1529 069a CDE90467 		strd	r6, r7, [sp, #16]
 1530 069e 1146     		mov	r1, r2
 1531 06a0 4023     		movs	r3, #64
 1532 06a2 8348     		ldr	r0, .L120
 1533 06a4 FFF7FEFF 		bl	draw_Value
 1534              	.LVL127:
 1535              	.LBE42:
 1536 06a8 A6E6     		b	.L71
 1537              	.LVL128:
 1538              	.L111:
 750:Src/main.c    **** 
 1539              		.loc 1 750 0
 1540 06aa B4F90030 		ldrsh	r3, [r4]
 1541 06ae 864A     		ldr	r2, .L120+24
 1542 06b0 0193     		str	r3, [sp, #4]
 1543 06b2 0327     		movs	r7, #3
 1544 06b4 0C23     		movs	r3, #12
 1545 06b6 CDE90462 		strd	r6, r2, [sp, #16]
 1546 06ba CDE90276 		strd	r7, r6, [sp, #8]
 1547 06be 0093     		str	r3, [sp]
 1548 06c0 3422     		movs	r2, #52
 1549 06c2 4623     		movs	r3, #70
 1550 06c4 3146     		mov	r1, r6
 1551 06c6 7A48     		ldr	r0, .L120
 1552 06c8 FFF7FEFF 		bl	draw_Value
 1553              	.LVL129:
 753:Src/main.c    **** 
 1554              		.loc 1 753 0
 1555 06cc 7F4B     		ldr	r3, .L120+28
 1556 06ce 7848     		ldr	r0, .L120
 1557 06d0 1988     		ldrh	r1, [r3]
 1558 06d2 0191     		str	r1, [sp, #4]
 1559 06d4 42F22832 		movw	r2, #9000
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 48


 1560 06d8 0E23     		movs	r3, #14
 1561 06da 0392     		str	r2, [sp, #12]
 1562 06dc 0093     		str	r3, [sp]
 1563 06de 3246     		mov	r2, r6
 1564 06e0 8023     		movs	r3, #128
 1565 06e2 3146     		mov	r1, r6
 1566 06e4 0296     		str	r6, [sp, #8]
 1567 06e6 FFF7FEFF 		bl	draw_BarGraph
 1568              	.LVL130:
 759:Src/main.c    ****         }
 1569              		.loc 1 759 0
 1570 06ea 0C21     		movs	r1, #12
 1571 06ec 0091     		str	r1, [sp]
 1572 06ee 7849     		ldr	r1, .L120+32
 1573 06f0 B9F90030 		ldrsh	r3, [r9]
 1574 06f4 0591     		str	r1, [sp, #20]
 1575 06f6 0222     		movs	r2, #2
 1576 06f8 0121     		movs	r1, #1
 1577 06fa CDE90321 		strd	r2, r1, [sp, #12]
 1578 06fe 0297     		str	r7, [sp, #8]
 1579 0700 0193     		str	r3, [sp, #4]
 1580 0702 1022     		movs	r2, #16
 1581 0704 4623     		movs	r3, #70
 1582 0706 3146     		mov	r1, r6
 1583 0708 6948     		ldr	r0, .L120
 1584 070a FFF7FEFF 		bl	draw_Value
 1585              	.LVL131:
 1586 070e 0122     		movs	r2, #1
 1587 0710 CDE90272 		strd	r7, r2, [sp, #8]
 1588 0714 0C22     		movs	r2, #12
 1589 0716 0092     		str	r2, [sp]
 1590 0718 6E4A     		ldr	r2, .L120+36
 1591 071a B9F90230 		ldrsh	r3, [r9, #2]
 1592 071e 0193     		str	r3, [sp, #4]
 1593 0720 CDE90462 		strd	r6, r2, [sp, #16]
 1594 0724 4623     		movs	r3, #70
 1595 0726 1C22     		movs	r2, #28
 1596 0728 3146     		mov	r1, r6
 1597 072a 6148     		ldr	r0, .L120
 1598 072c FFF7FEFF 		bl	draw_Value
 1599              	.LVL132:
 1600 0730 0122     		movs	r2, #1
 1601 0732 CDE90272 		strd	r7, r2, [sp, #8]
 1602 0736 0C22     		movs	r2, #12
 1603 0738 0092     		str	r2, [sp]
 1604 073a 674A     		ldr	r2, .L120+40
 1605 073c B9F90430 		ldrsh	r3, [r9, #4]
 1606 0740 0B97     		str	r7, [sp, #44]
 1607 0742 CDE90462 		strd	r6, r2, [sp, #16]
 1608 0746 0193     		str	r3, [sp, #4]
 1609 0748 3146     		mov	r1, r6
 1610 074a 5948     		ldr	r0, .L120
 764:Src/main.c    ****         }
 1611              		.loc 1 764 0
 1612 074c 0C27     		movs	r7, #12
 759:Src/main.c    ****         }
 1613              		.loc 1 759 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 49


 1614 074e 4623     		movs	r3, #70
 1615 0750 2822     		movs	r2, #40
 764:Src/main.c    ****         }
 1616              		.loc 1 764 0
 1617 0752 0897     		str	r7, [sp, #32]
 759:Src/main.c    ****         }
 1618              		.loc 1 759 0
 1619 0754 FFF7FEFF 		bl	draw_Value
 1620              	.LVL133:
 1621 0758 0B98     		ldr	r0, [sp, #44]
 1622 075a 3146     		mov	r1, r6
 1623 075c 0746     		mov	r7, r0
 1624              	.LVL134:
 1625              	.L72:
 763:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 1626              		.loc 1 763 0 discriminator 3
 1627 075e 5F4A     		ldr	r2, .L120+44
 764:Src/main.c    ****         }
 1628              		.loc 1 764 0 discriminator 3
 1629 0760 0491     		str	r1, [sp, #16]
 763:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 1630              		.loc 1 763 0 discriminator 3
 1631 0762 FBB2     		uxtb	r3, r7
 1632 0764 A2FB03C2 		umull	ip, r2, r2, r3
 1633 0768 5208     		lsrs	r2, r2, #1
 1634 076a 02EB4202 		add	r2, r2, r2, lsl #1
 1635 076e 9B1A     		subs	r3, r3, r2
 1636 0770 03EB4303 		add	r3, r3, r3, lsl #1
 1637 0774 9A00     		lsls	r2, r3, #2
 1638 0776 02F1100C 		add	ip, r2, #16
 764:Src/main.c    ****         }
 1639              		.loc 1 764 0 discriminator 3
 1640 077a 554A     		ldr	r2, .L120+32
 1641 077c 39F91710 		ldrsh	r1, [r9, r7, lsl #1]
 1642 0780 0191     		str	r1, [sp, #4]
 1643 0782 07EB8703 		add	r3, r7, r7, lsl #2
 1644 0786 1344     		add	r3, r3, r2
 1645 0788 089A     		ldr	r2, [sp, #32]
 1646 078a 0092     		str	r2, [sp]
 1647 078c CDE90206 		strd	r0, r6, [sp, #8]
 1648 0790 0593     		str	r3, [sp, #20]
 1649 0792 0CF0FC02 		and	r2, ip, #252
 1650 0796 0137     		adds	r7, r7, #1
 1651              	.LVL135:
 1652 0798 3823     		movs	r3, #56
 1653 079a 4821     		movs	r1, #72
 1654 079c 4448     		ldr	r0, .L120
 1655 079e FFF7FEFF 		bl	draw_Value
 1656              	.LVL136:
 761:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 1657              		.loc 1 761 0 discriminator 3
 1658 07a2 062F     		cmp	r7, #6
 1659 07a4 3FF428AE 		beq	.L71
 1660 07a8 4D4B     		ldr	r3, .L120+48
 1661 07aa D85D     		ldrb	r0, [r3, r7]	@ zero_extendqisi2
 1662 07ac 4D4B     		ldr	r3, .L120+52
 1663 07ae DE5D     		ldrb	r6, [r3, r7]	@ zero_extendqisi2
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 50


 1664 07b0 4D4B     		ldr	r3, .L120+56
 1665 07b2 D95D     		ldrb	r1, [r3, r7]	@ zero_extendqisi2
 1666 07b4 D3E7     		b	.L72
 1667              	.LVL137:
 1668              	.L114:
 1669              	.LBB43:
 803:Src/main.c    ****           circular_buffer_index--;
 1670              		.loc 1 803 0
 1671 07b6 0A9B     		ldr	r3, [sp, #40]
 1672 07b8 002B     		cmp	r3, #0
 1673 07ba 74D0     		beq	.L85
 804:Src/main.c    ****         }else{
 1674              		.loc 1 804 0
 1675 07bc 013B     		subs	r3, r3, #1
 1676 07be 9BB2     		uxth	r3, r3
 1677 07c0 0A93     		str	r3, [sp, #40]
 1678              	.LVL138:
 1679 07c2 1E46     		mov	r6, r3
 1680              	.LVL139:
 1681              	.L78:
 811:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 1682              		.loc 1 811 0
 1683 07c4 C821     		movs	r1, #200
 1684 07c6 6FF0C702 		mvn	r2, #199
 1685 07ca 3423     		movs	r3, #52
 1686 07cc 0EA8     		add	r0, sp, #56
 1687 07ce CDE90210 		strd	r1, r0, [sp, #8]
 1688 07d2 CDE90032 		strd	r3, r2, [sp]
 808:Src/main.c    **** 
 1689              		.loc 1 808 0
 1690 07d6 454B     		ldr	r3, .L120+60
 811:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 1691              		.loc 1 811 0
 1692 07d8 0496     		str	r6, [sp, #16]
 808:Src/main.c    **** 
 1693              		.loc 1 808 0
 1694 07da 0EAA     		add	r2, sp, #56
 1695 07dc 1B88     		ldrh	r3, [r3]
 1696 07de 22F81630 		strh	r3, [r2, r6, lsl #1]	@ movhi
 811:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 1697              		.loc 1 811 0
 1698 07e2 0021     		movs	r1, #0
 1699 07e4 8023     		movs	r3, #128
 1700 07e6 0D22     		movs	r2, #13
 1701 07e8 3148     		ldr	r0, .L120
 812:Src/main.c    **** 
 1702              		.loc 1 812 0
 1703 07ea 354F     		ldr	r7, .L120+16
 811:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 1704              		.loc 1 811 0
 1705 07ec FFF7FEFF 		bl	draw_Wave
 1706              	.LVL140:
 812:Src/main.c    **** 
 1707              		.loc 1 812 0
 1708 07f0 0EAB     		add	r3, sp, #56
 1709 07f2 0220     		movs	r0, #2
 1710 07f4 33F91630 		ldrsh	r3, [r3, r6, lsl #1]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 51


 1711 07f8 0193     		str	r3, [sp, #4]
 1712 07fa 0126     		movs	r6, #1
 1713 07fc 0321     		movs	r1, #3
 1714 07fe 0D23     		movs	r3, #13
 1715 0800 0022     		movs	r2, #0
 1716 0802 47E7     		b	.L101
 1717              	.LVL141:
 1718              	.L84:
 1719              	.LBE43:
 1720              	.LBB44:
 1721 0804 8023     		movs	r3, #128
 1722 0806 0A93     		str	r3, [sp, #40]
 792:Src/main.c    ****         }
 1723              		.loc 1 792 0
 1724 0808 1E46     		mov	r6, r3
 1725 080a 24E7     		b	.L76
 1726              	.L112:
 1727              	.LBE44:
 1728              	.LBB45:
 770:Src/main.c    ****         
 1729              		.loc 1 770 0
 1730 080c B9F90010 		ldrsh	r1, [r9]
 1731 0810 2748     		ldr	r0, .L120
 1732 0812 FFF7FEFF 		bl	draw_CircularMeter
 1733              	.LVL142:
 772:Src/main.c    ****         draw_MeasUnit(&u8g2, 38, 40, 28, 16, "kPa");
 1734              		.loc 1 772 0
 1735 0816 B9F90030 		ldrsh	r3, [r9]
 1736 081a 354A     		ldr	r2, .L120+64
 1737 081c 0592     		str	r2, [sp, #20]
 1738 081e 4FF0020C 		mov	ip, #2
 1739 0822 1027     		movs	r7, #16
 1740 0824 0322     		movs	r2, #3
 1741 0826 CDE903C6 		strd	ip, r6, [sp, #12]
 1742 082a CDE90132 		strd	r3, r2, [sp, #4]
 1743 082e 0097     		str	r7, [sp]
 1744 0830 1E23     		movs	r3, #30
 1745 0832 2122     		movs	r2, #33
 1746 0834 2421     		movs	r1, #36
 1747 0836 1E48     		ldr	r0, .L120
 773:Src/main.c    **** /*        
 1748              		.loc 1 773 0
 1749 0838 CDF820C0 		str	ip, [sp, #32]
 772:Src/main.c    ****         draw_MeasUnit(&u8g2, 38, 40, 28, 16, "kPa");
 1750              		.loc 1 772 0
 1751 083c FFF7FEFF 		bl	draw_Value
 1752              	.LVL143:
 773:Src/main.c    **** /*        
 1753              		.loc 1 773 0
 1754 0840 1C4B     		ldr	r3, .L120+4
 1755 0842 0097     		str	r7, [sp]
 1756 0844 0193     		str	r3, [sp, #4]
 1757 0846 2822     		movs	r2, #40
 1758 0848 2621     		movs	r1, #38
 1759 084a 1948     		ldr	r0, .L120
 1760 084c 1C23     		movs	r3, #28
 1761 084e FFF7FEFF 		bl	draw_MeasUnit
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 52


 1762              	.LVL144:
 1763 0852 0899     		ldr	r1, [sp, #32]
 1764 0854 3046     		mov	r0, r6
 1765 0856 0322     		movs	r2, #3
 783:Src/main.c    ****         }
 1766              		.loc 1 783 0
 1767 0858 8446     		mov	ip, r0
 773:Src/main.c    **** /*        
 1768              		.loc 1 773 0
 1769 085a 0027     		movs	r7, #0
 783:Src/main.c    ****         }
 1770              		.loc 1 783 0
 1771 085c 0846     		mov	r0, r1
 1772 085e 0D26     		movs	r6, #13
 1773 0860 1146     		mov	r1, r2
 1774              	.LVL145:
 1775              	.L74:
 783:Src/main.c    ****         }
 1776              		.loc 1 783 0 is_stmt 0 discriminator 3
 1777 0862 1B4A     		ldr	r2, .L120+32
 1778 0864 0291     		str	r1, [sp, #8]
 1779 0866 07EB8703 		add	r3, r7, r7, lsl #2
 1780 086a 1344     		add	r3, r3, r2
 1781 086c 39F91720 		ldrsh	r2, [r9, r7, lsl #1]
 1782 0870 0593     		str	r3, [sp, #20]
 1783 0872 CDE9030C 		strd	r0, ip, [sp, #12]
 1784 0876 0192     		str	r2, [sp, #4]
 1785 0878 3C23     		movs	r3, #60
 1786 087a 0096     		str	r6, [sp]
 1787 087c 089A     		ldr	r2, [sp, #32]
 1788 087e 0C48     		ldr	r0, .L120
 1789 0880 4421     		movs	r1, #68
 1790 0882 FFF7FEFF 		bl	draw_Value
 1791              	.LVL146:
 1792 0886 089B     		ldr	r3, [sp, #32]
 1793 0888 0137     		adds	r7, r7, #1
 1794 088a 0D33     		adds	r3, r3, #13
 1795 088c DBB2     		uxtb	r3, r3
 780:Src/main.c    ****           x = meas_C_x;
 1796              		.loc 1 780 0 is_stmt 1 discriminator 3
 1797 088e 042F     		cmp	r7, #4
 1798 0890 0893     		str	r3, [sp, #32]
 1799              	.LVL147:
 1800 0892 3FF4B1AD 		beq	.L71
 1801 0896 124B     		ldr	r3, .L120+48
 1802 0898 D95D     		ldrb	r1, [r3, r7]	@ zero_extendqisi2
 1803 089a 124B     		ldr	r3, .L120+52
 1804 089c D85D     		ldrb	r0, [r3, r7]	@ zero_extendqisi2
 1805 089e 124B     		ldr	r3, .L120+56
 1806 08a0 13F807C0 		ldrb	ip, [r3, r7]	@ zero_extendqisi2
 1807 08a4 DDE7     		b	.L74
 1808              	.LVL148:
 1809              	.L85:
 1810              	.LBE45:
 1811              	.LBB46:
 1812 08a6 8023     		movs	r3, #128
 1813 08a8 0A93     		str	r3, [sp, #40]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 53


 806:Src/main.c    ****         }
 1814              		.loc 1 806 0
 1815 08aa 1E46     		mov	r6, r3
 1816 08ac 8AE7     		b	.L78
 1817              	.L121:
 1818 08ae 00BF     		.align	2
 1819              	.L120:
 1820 08b0 00000000 		.word	u8g2
 1821 08b4 70000000 		.word	.LC10
 1822 08b8 74000000 		.word	.LC11
 1823 08bc 00000000 		.word	mode
 1824 08c0 78000000 		.word	.LC12
 1825 08c4 7C000000 		.word	.LC13
 1826 08c8 00000000 		.word	.LC0
 1827 08cc 00000000 		.word	rpm
 1828 08d0 00000000 		.word	.LANCHOR1
 1829 08d4 05000000 		.word	.LANCHOR1+5
 1830 08d8 0A000000 		.word	.LANCHOR1+10
 1831 08dc ABAAAAAA 		.word	-1431655765
 1832 08e0 00000000 		.word	.LANCHOR9
 1833 08e4 00000000 		.word	.LANCHOR10
 1834 08e8 00000000 		.word	.LANCHOR11
 1835 08ec 00000000 		.word	Gsens_Y
 1836 08f0 84000000 		.word	.LC14
 1837              	.L115:
 1838              	.LBE46:
 817:Src/main.c    ****         u8g2_SetFont(&u8g2, u8g2_font_7x14B_tf);
 1839              		.loc 1 817 0
 1840 08f4 2148     		ldr	r0, .L122
 1841 08f6 FFF7FEFF 		bl	u8g2_ClearBuffer
 1842              	.LVL149:
 818:Src/main.c    ****         u8g2_DrawStr(&u8g2, 2, 15, "Mode Setting" );
 1843              		.loc 1 818 0
 1844 08fa 2149     		ldr	r1, .L122+4
 1845 08fc 1F48     		ldr	r0, .L122
 1846 08fe FFF7FEFF 		bl	u8g2_SetFont
 1847              	.LVL150:
 819:Src/main.c    ****         if( cursor == 0 ){
 1848              		.loc 1 819 0
 1849 0902 204B     		ldr	r3, .L122+8
 1850 0904 1D48     		ldr	r0, .L122
 1851 0906 0F22     		movs	r2, #15
 1852 0908 0221     		movs	r1, #2
 1853 090a FFF7FEFF 		bl	u8g2_DrawStr
 1854              	.LVL151:
 820:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, ">" );
 1855              		.loc 1 820 0
 1856 090e 1E4B     		ldr	r3, .L122+12
 1857 0910 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1858 0912 03BB     		cbnz	r3, .L79
 821:Src/main.c    ****         }else{
 1859              		.loc 1 821 0
 1860 0914 1D4B     		ldr	r3, .L122+16
 1861 0916 1948     		ldr	r0, .L122
 1862 0918 1E22     		movs	r2, #30
 1863 091a 0221     		movs	r1, #2
 1864 091c FFF7FEFF 		bl	u8g2_DrawStr
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 54


 1865              	.LVL152:
 1866              	.L80:
 825:Src/main.c    ****         if( cursor == 1 ){
 1867              		.loc 1 825 0
 1868 0920 1B4B     		ldr	r3, .L122+20
 1869 0922 1648     		ldr	r0, .L122
 1870 0924 1E22     		movs	r2, #30
 1871 0926 0A21     		movs	r1, #10
 1872 0928 FFF7FEFF 		bl	u8g2_DrawStr
 1873              	.LVL153:
 826:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 1874              		.loc 1 826 0
 1875 092c 164B     		ldr	r3, .L122+12
 829:Src/main.c    ****         }
 1876              		.loc 1 829 0
 1877 092e 1348     		ldr	r0, .L122
 826:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 1878              		.loc 1 826 0
 1879 0930 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1880 0932 012B     		cmp	r3, #1
 827:Src/main.c    ****         }else{
 1881              		.loc 1 827 0
 1882 0934 0CBF     		ite	eq
 1883 0936 154B     		ldreq	r3, .L122+16
 829:Src/main.c    ****         }
 1884              		.loc 1 829 0
 1885 0938 164B     		ldrne	r3, .L122+24
 1886 093a 2D22     		movs	r2, #45
 1887 093c 0221     		movs	r1, #2
 1888 093e FFF7FEFF 		bl	u8g2_DrawStr
 1889              	.LVL154:
 831:Src/main.c    ****         u8g2_SendBuffer(&u8g2);
 1890              		.loc 1 831 0
 1891 0942 154B     		ldr	r3, .L122+28
 1892 0944 0D48     		ldr	r0, .L122
 1893 0946 2D22     		movs	r2, #45
 1894 0948 0A21     		movs	r1, #10
 1895 094a FFF7FEFF 		bl	u8g2_DrawStr
 1896              	.LVL155:
 832:Src/main.c    ****       }
 1897              		.loc 1 832 0
 1898 094e 0B48     		ldr	r0, .L122
 1899 0950 FFF7FEFF 		bl	u8g2_SendBuffer
 1900              	.LVL156:
 1901 0954 50E5     		b	.L71
 1902              	.L79:
 823:Src/main.c    ****         }
 1903              		.loc 1 823 0
 1904 0956 0F4B     		ldr	r3, .L122+24
 1905 0958 0848     		ldr	r0, .L122
 1906 095a 1E22     		movs	r2, #30
 1907 095c 0221     		movs	r1, #2
 1908 095e FFF7FEFF 		bl	u8g2_DrawStr
 1909              	.LVL157:
 1910 0962 DDE7     		b	.L80
 1911              	.LVL158:
 1912              	.L102:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 55


 1913              	.LBE55:
 511:Src/main.c    ****   }else{
 1914              		.loc 1 511 0
 1915 0964 1A46     		mov	r2, r3
 1916 0966 0993     		str	r3, [sp, #36]
 1917 0968 0123     		movs	r3, #1
 1918 096a 1370     		strb	r3, [r2]
 1919 096c FFF7F5BB 		b	.L41
 1920              	.LVL159:
 1921              	.L109:
 1922              	.LBB56:
 588:Src/main.c    ****       FP_duty = 60;
 1923              		.loc 1 588 0
 1924 0970 3B2B     		cmp	r3, #59
 589:Src/main.c    ****     }
 1925              		.loc 1 589 0
 1926 0972 DCBF     		itt	le
 1927 0974 3C23     		movle	r3, #60
 1928 0976 2380     		strhle	r3, [r4]	@ movhi
 1929 0978 04E5     		b	.L46
 1930              	.L123:
 1931 097a 00BF     		.align	2
 1932              	.L122:
 1933 097c 00000000 		.word	u8g2
 1934 0980 00000000 		.word	u8g2_font_7x14B_tf
 1935 0984 88000000 		.word	.LC15
 1936 0988 00000000 		.word	.LANCHOR12
 1937 098c 98000000 		.word	.LC16
 1938 0990 A0000000 		.word	.LC18
 1939 0994 9C000000 		.word	.LC17
 1940 0998 AC000000 		.word	.LC19
 1941              	.LBE56:
 1942              		.cfi_endproc
 1943              	.LFE131:
 1945              		.section	.text._Error_Handler,"ax",%progbits
 1946              		.align	1
 1947              		.p2align 2,,3
 1948              		.global	_Error_Handler
 1949              		.syntax unified
 1950              		.thumb
 1951              		.thumb_func
 1952              		.fpu fpv4-sp-d16
 1954              	_Error_Handler:
 1955              	.LFB133:
 904:Src/main.c    **** 
 905:Src/main.c    **** /* USER CODE BEGIN 4 */
 906:Src/main.c    **** 
 907:Src/main.c    **** /* USER CODE END 4 */
 908:Src/main.c    **** 
 909:Src/main.c    **** /**
 910:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 911:Src/main.c    ****   * @param  None
 912:Src/main.c    ****   * @retval None
 913:Src/main.c    ****   */
 914:Src/main.c    **** void _Error_Handler(char * file, int line)
 915:Src/main.c    **** {
 1956              		.loc 1 915 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 56


 1957              		.cfi_startproc
 1958              		@ Volatile: function does not return.
 1959              		@ args = 0, pretend = 0, frame = 0
 1960              		@ frame_needed = 0, uses_anonymous_args = 0
 1961              		@ link register save eliminated.
 1962              	.LVL160:
 1963              	.L125:
 1964 0000 FEE7     		b	.L125
 1965              		.cfi_endproc
 1966              	.LFE133:
 1968 0002 00BF     		.section	.text.assert_failed,"ax",%progbits
 1969              		.align	1
 1970              		.p2align 2,,3
 1971              		.global	assert_failed
 1972              		.syntax unified
 1973              		.thumb
 1974              		.thumb_func
 1975              		.fpu fpv4-sp-d16
 1977              	assert_failed:
 1978              	.LFB134:
 916:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 917:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 918:Src/main.c    ****   while(1) 
 919:Src/main.c    ****   {
 920:Src/main.c    ****   }
 921:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */ 
 922:Src/main.c    **** }
 923:Src/main.c    **** 
 924:Src/main.c    **** #ifdef USE_FULL_ASSERT
 925:Src/main.c    **** 
 926:Src/main.c    **** /**
 927:Src/main.c    ****    * @brief Reports the name of the source file and the source line number
 928:Src/main.c    ****    * where the assert_param error has occurred.
 929:Src/main.c    ****    * @param file: pointer to the source file name
 930:Src/main.c    ****    * @param line: assert_param error line source number
 931:Src/main.c    ****    * @retval None
 932:Src/main.c    ****    */
 933:Src/main.c    **** void assert_failed(uint8_t* file, uint32_t line)
 934:Src/main.c    **** {
 1979              		.loc 1 934 0
 1980              		.cfi_startproc
 1981              		@ args = 0, pretend = 0, frame = 0
 1982              		@ frame_needed = 0, uses_anonymous_args = 0
 1983              		@ link register save eliminated.
 1984              	.LVL161:
 935:Src/main.c    ****   /* USER CODE BEGIN 6 */
 936:Src/main.c    ****   /* User can add his own implementation to report the file name and line number,
 937:Src/main.c    ****     ex: printf("Wrong parameters value: file %s on line %d¥r¥n", file, line) */
 938:Src/main.c    ****   /* USER CODE END 6 */
 939:Src/main.c    **** 
 940:Src/main.c    **** }
 1985              		.loc 1 940 0
 1986 0000 7047     		bx	lr
 1987              		.cfi_endproc
 1988              	.LFE134:
 1990              		.comm	adc,20,4
 1991              		.comm	g_ADCBuffer,20,4
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 57


 1992              		.comm	Gsens_Z,2,2
 1993              		.comm	Gsens_Z0,1,1
 1994              		.comm	Gsens_Z1,1,1
 1995              		.comm	Gsens_Y,2,2
 1996              		.comm	Gsens_Y0,1,1
 1997              		.comm	Gsens_Y1,1,1
 1998              		.comm	Gsens_X,2,2
 1999              		.comm	Gsens_X0,1,1
 2000              		.comm	Gsens_X1,1,1
 2001              		.comm	Gsens_EN,1,1
 2002              		.global	FP_duty
 2003              		.global	FP_volt
 2004              		.global	O2_volt
 2005              		.global	meas_value
 2006              		.global	meas_sign
 2007              		.global	meas_frac
 2008              		.global	meas_digit
 2009              		.global	meas_unit
 2010              		.global	meas_name
 2011              		.global	idct_status
 2012              		.global	idct_name
 2013              		.global	cursor
 2014              		.comm	setting,1,1
 2015              		.comm	mode,1,1
 2016              		.global	MT
 2017              		.global	gear
 2018              		.global	speed
 2019              		.global	update_display
 2020              		.comm	u8g2,128,4
 2021              		.global	logo_bits
 2022 0002 00BF     		.section	.bss.cursor,"aw",%nobits
 2023              		.set	.LANCHOR12,. + 0
 2026              	cursor:
 2027 0000 00       		.space	1
 2028              		.section	.bss.gear,"aw",%nobits
 2031              	gear:
 2032 0000 00       		.space	1
 2033              		.section	.bss.update_display,"aw",%nobits
 2036              	update_display:
 2037 0000 00       		.space	1
 2038              		.section	.data.FP_duty,"aw",%progbits
 2039              		.align	1
 2040              		.set	.LANCHOR4,. + 0
 2043              	FP_duty:
 2044 0000 6400     		.short	100
 2045              		.section	.data.FP_volt,"aw",%progbits
 2046              		.align	1
 2047              		.set	.LANCHOR6,. + 0
 2050              	FP_volt:
 2051 0000 4A01     		.short	330
 2052              		.section	.data.MT,"aw",%progbits
 2053              		.align	3
 2056              	MT:
 2057 0000 77BE9F1A 		.word	446676599
 2058 0004 2FDD0B40 		.word	1074519343
 2059 0008 1F85EB51 		.word	1374389535
 2060 000c B81E0040 		.word	1073749688
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 58


 2061 0010 A8C64B37 		.word	927712936
 2062 0014 8941F63F 		.word	1073103241
 2063 0018 00000000 		.word	0
 2064 001c 0000F03F 		.word	1072693248
 2065 0020 986E1283 		.word	2199023256
 2066 0024 C0CAE93F 		.word	1072286400
 2067              		.section	.data.O2_volt,"aw",%progbits
 2068              		.align	1
 2069              		.set	.LANCHOR5,. + 0
 2072              	O2_volt:
 2073 0000 4A01     		.short	330
 2074              		.section	.data.meas_value,"aw",%progbits
 2075              		.align	2
 2076              		.set	.LANCHOR7,. + 0
 2079              	meas_value:
 2080 0000 6900     		.short	105
 2081 0002 EB00     		.short	235
 2082 0004 8502     		.short	645
 2083 0006 5900     		.short	89
 2084 0008 4900     		.short	73
 2085 000a 8F00     		.short	143
 2086              		.section	.data.speed,"aw",%progbits
 2087              		.align	1
 2090              	speed:
 2091 0000 F000     		.short	240
 2092              		.section	.rodata.draw_MeasLabels.str1.4,"aMS",%progbits,1
 2093              		.align	2
 2094              	.LC0:
 2095 0000 25202000 		.ascii	"%  \000"
 2096              	.LC1:
 2097 0004 44555459 		.ascii	"DUTY\000"
 2097      00
 2098              		.section	.rodata.idct_name,"a",%progbits
 2099              		.align	2
 2100              		.set	.LANCHOR0,. + 0
 2103              	idct_name:
 2104 0000 43414E00 		.ascii	"CAN\000"
 2105 0004 00       		.space	1
 2106 0005 4F324642 		.ascii	"O2FB\000"
 2106      00
 2107              		.section	.rodata.idct_status,"a",%progbits
 2108              		.align	2
 2109              		.set	.LANCHOR8,. + 0
 2112              	idct_status:
 2113 0000 01       		.byte	1
 2114 0001 01       		.byte	1
 2115              		.section	.rodata.logo_bits,"a",%progbits
 2116              		.align	2
 2117              		.set	.LANCHOR3,. + 0
 2120              	logo_bits:
 2121 0000 00       		.byte	0
 2122 0001 00       		.byte	0
 2123 0002 00       		.byte	0
 2124 0003 00       		.byte	0
 2125 0004 00       		.byte	0
 2126 0005 00       		.byte	0
 2127 0006 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 59


 2128 0007 00       		.byte	0
 2129 0008 00       		.byte	0
 2130 0009 00       		.byte	0
 2131 000a 00       		.byte	0
 2132 000b 00       		.byte	0
 2133 000c 00       		.byte	0
 2134 000d 00       		.byte	0
 2135 000e 00       		.byte	0
 2136 000f 00       		.byte	0
 2137 0010 00       		.byte	0
 2138 0011 00       		.byte	0
 2139 0012 00       		.byte	0
 2140 0013 00       		.byte	0
 2141 0014 00       		.byte	0
 2142 0015 00       		.byte	0
 2143 0016 00       		.byte	0
 2144 0017 00       		.byte	0
 2145 0018 00       		.byte	0
 2146 0019 00       		.byte	0
 2147 001a F0       		.byte	-16
 2148 001b 0F       		.byte	15
 2149 001c 00       		.byte	0
 2150 001d 00       		.byte	0
 2151 001e 00       		.byte	0
 2152 001f FC       		.byte	-4
 2153 0020 FF       		.byte	-1
 2154 0021 FF       		.byte	-1
 2155 0022 3F       		.byte	63
 2156 0023 00       		.byte	0
 2157 0024 80       		.byte	-128
 2158 0025 FF       		.byte	-1
 2159 0026 FF       		.byte	-1
 2160 0027 FF       		.byte	-1
 2161 0028 FF       		.byte	-1
 2162 0029 01       		.byte	1
 2163 002a E0       		.byte	-32
 2164 002b 1F       		.byte	31
 2165 002c 00       		.byte	0
 2166 002d 80       		.byte	-128
 2167 002e FF       		.byte	-1
 2168 002f 07       		.byte	7
 2169 0030 E0       		.byte	-32
 2170 0031 01       		.byte	1
 2171 0032 00       		.byte	0
 2172 0033 80       		.byte	-128
 2173 0034 81       		.byte	-127
 2174 0035 07       		.byte	7
 2175 0036 E0       		.byte	-32
 2176 0037 01       		.byte	1
 2177 0038 00       		.byte	0
 2178 0039 80       		.byte	-128
 2179 003a 81       		.byte	-127
 2180 003b 07       		.byte	7
 2181 003c C0       		.byte	-64
 2182 003d E1       		.byte	-31
 2183 003e 07       		.byte	7
 2184 003f C0       		.byte	-64
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 60


 2185 0040 80       		.byte	-128
 2186 0041 03       		.byte	3
 2187 0042 00       		.byte	0
 2188 0043 FC       		.byte	-4
 2189 0044 1F       		.byte	31
 2190 0045 E0       		.byte	-32
 2191 0046 80       		.byte	-128
 2192 0047 03       		.byte	3
 2193 0048 00       		.byte	0
 2194 0049 FE       		.byte	-2
 2195 004a 7F       		.byte	127
 2196 004b 70       		.byte	112
 2197 004c C0       		.byte	-64
 2198 004d 01       		.byte	1
 2199 004e 00       		.byte	0
 2200 004f 0F       		.byte	15
 2201 0050 FE       		.byte	-2
 2202 0051 39       		.byte	57
 2203 0052 E0       		.byte	-32
 2204 0053 00       		.byte	0
 2205 0054 00       		.byte	0
 2206 0055 07       		.byte	7
 2207 0056 F8       		.byte	-8
 2208 0057 1F       		.byte	31
 2209 0058 F0       		.byte	-16
 2210 0059 00       		.byte	0
 2211 005a 00       		.byte	0
 2212 005b 0E       		.byte	14
 2213 005c E0       		.byte	-32
 2214 005d 1F       		.byte	31
 2215 005e 78       		.byte	120
 2216 005f 00       		.byte	0
 2217 0060 00       		.byte	0
 2218 0061 0C       		.byte	12
 2219 0062 C0       		.byte	-64
 2220 0063 FF       		.byte	-1
 2221 0064 3F       		.byte	63
 2222 0065 00       		.byte	0
 2223 0066 00       		.byte	0
 2224 0067 18       		.byte	24
 2225 0068 00       		.byte	0
 2226 0069 FF       		.byte	-1
 2227 006a 1F       		.byte	31
 2228 006b 00       		.byte	0
 2229 006c 00       		.byte	0
 2230 006d 38       		.byte	56
 2231 006e C0       		.byte	-64
 2232 006f FF       		.byte	-1
 2233 0070 0F       		.byte	15
 2234 0071 00       		.byte	0
 2235 0072 00       		.byte	0
 2236 0073 70       		.byte	112
 2237 0074 E0       		.byte	-32
 2238 0075 F1       		.byte	-15
 2239 0076 03       		.byte	3
 2240 0077 00       		.byte	0
 2241 0078 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 61


 2242 0079 E0       		.byte	-32
 2243 007a 78       		.byte	120
 2244 007b 00       		.byte	0
 2245 007c 00       		.byte	0
 2246 007d 00       		.byte	0
 2247 007e 00       		.byte	0
 2248 007f C0       		.byte	-64
 2249 0080 3F       		.byte	63
 2250 0081 E0       		.byte	-32
 2251 0082 01       		.byte	1
 2252 0083 00       		.byte	0
 2253 0084 00       		.byte	0
 2254 0085 80       		.byte	-128
 2255 0086 1F       		.byte	31
 2256 0087 F0       		.byte	-16
 2257 0088 01       		.byte	1
 2258 0089 00       		.byte	0
 2259 008a 00       		.byte	0
 2260 008b 00       		.byte	0
 2261 008c 07       		.byte	7
 2262 008d F8       		.byte	-8
 2263 008e 00       		.byte	0
 2264 008f 00       		.byte	0
 2265 0090 00       		.byte	0
 2266 0091 00       		.byte	0
 2267 0092 1E       		.byte	30
 2268 0093 7C       		.byte	124
 2269 0094 00       		.byte	0
 2270 0095 00       		.byte	0
 2271 0096 00       		.byte	0
 2272 0097 00       		.byte	0
 2273 0098 F8       		.byte	-8
 2274 0099 1F       		.byte	31
 2275 009a 00       		.byte	0
 2276 009b 00       		.byte	0
 2277 009c 00       		.byte	0
 2278 009d 00       		.byte	0
 2279 009e F0       		.byte	-16
 2280 009f 0F       		.byte	15
 2281 00a0 00       		.byte	0
 2282 00a1 00       		.byte	0
 2283 00a2 00       		.byte	0
 2284 00a3 00       		.byte	0
 2285 00a4 80       		.byte	-128
 2286 00a5 01       		.byte	1
 2287 00a6 00       		.byte	0
 2288 00a7 00       		.byte	0
 2289 00a8 00       		.byte	0
 2290 00a9 00       		.byte	0
 2291 00aa 00       		.byte	0
 2292 00ab 00       		.byte	0
 2293 00ac 00       		.byte	0
 2294 00ad 00       		.byte	0
 2295 00ae 00       		.byte	0
 2296 00af 00       		.byte	0
 2297 00b0 00       		.byte	0
 2298 00b1 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 62


 2299 00b2 00       		.byte	0
 2300 00b3 00       		.byte	0
 2301 00b4 00       		.byte	0
 2302 00b5 00       		.byte	0
 2303 00b6 00       		.byte	0
 2304 00b7 00       		.byte	0
 2305 00b8 00       		.byte	0
 2306 00b9 00       		.byte	0
 2307 00ba 00       		.byte	0
 2308 00bb 00       		.byte	0
 2309 00bc 00       		.byte	0
 2310 00bd 00       		.byte	0
 2311 00be 00       		.byte	0
 2312 00bf 00       		.byte	0
 2313 00c0 00       		.byte	0
 2314 00c1 00       		.byte	0
 2315 00c2 00       		.byte	0
 2316 00c3 00       		.byte	0
 2317 00c4 00       		.byte	0
 2318 00c5 00       		.byte	0
 2319 00c6 00       		.byte	0
 2320 00c7 4C       		.byte	76
 2321 00c8 1C       		.byte	28
 2322 00c9 00       		.byte	0
 2323 00ca 00       		.byte	0
 2324 00cb 00       		.byte	0
 2325 00cc 00       		.byte	0
 2326 00cd 32       		.byte	50
 2327 00ce 0E       		.byte	14
 2328 00cf 00       		.byte	0
 2329 00d0 00       		.byte	0
 2330 00d1 00       		.byte	0
 2331 00d2 00       		.byte	0
 2332 00d3 00       		.byte	0
 2333 00d4 C6       		.byte	-58
 2334 00d5 00       		.byte	0
 2335 00d6 18       		.byte	24
 2336 00d7 00       		.byte	0
 2337 00d8 00       		.byte	0
 2338 00d9 7C       		.byte	124
 2339 00da EF       		.byte	-17
 2340 00db FC       		.byte	-4
 2341 00dc 39       		.byte	57
 2342 00dd 00       		.byte	0
 2343 00de 00       		.byte	0
 2344 00df 4E       		.byte	78
 2345 00e0 C6       		.byte	-58
 2346 00e1 B8       		.byte	-72
 2347 00e2 31       		.byte	49
 2348 00e3 00       		.byte	0
 2349 00e4 00       		.byte	0
 2350 00e5 3E       		.byte	62
 2351 00e6 C6       		.byte	-58
 2352 00e7 98       		.byte	-104
 2353 00e8 31       		.byte	49
 2354 00e9 00       		.byte	0
 2355 00ea 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 63


 2356 00eb 3C       		.byte	60
 2357 00ec C6       		.byte	-58
 2358 00ed 98       		.byte	-104
 2359 00ee 31       		.byte	49
 2360 00ef 00       		.byte	0
 2361 00f0 00       		.byte	0
 2362 00f1 0E       		.byte	14
 2363 00f2 C6       		.byte	-58
 2364 00f3 98       		.byte	-104
 2365 00f4 31       		.byte	49
 2366 00f5 00       		.byte	0
 2367 00f6 00       		.byte	0
 2368 00f7 4E       		.byte	78
 2369 00f8 CE       		.byte	-50
 2370 00f9 99       		.byte	-103
 2371 00fa 31       		.byte	49
 2372 00fb 00       		.byte	0
 2373 00fc 00       		.byte	0
 2374 00fd 7C       		.byte	124
 2375 00fe EF       		.byte	-17
 2376 00ff FD       		.byte	-3
 2377 0100 7B       		.byte	123
 2378 0101 00       		.byte	0
 2379 0102 00       		.byte	0
 2380 0103 00       		.byte	0
 2381 0104 00       		.byte	0
 2382 0105 00       		.byte	0
 2383 0106 00       		.byte	0
 2384 0107 00       		.byte	0
 2385 0108 00       		.byte	0
 2386 0109 00       		.byte	0
 2387 010a 00       		.byte	0
 2388 010b 00       		.byte	0
 2389 010c 00       		.byte	0
 2390 010d 00       		.byte	0
 2391 010e 00       		.byte	0
 2392 010f 00       		.byte	0
 2393 0110 00       		.byte	0
 2394 0111 00       		.byte	0
 2395 0112 00       		.byte	0
 2396 0113 00       		.byte	0
 2397 0114 00       		.byte	0
 2398 0115 00       		.byte	0
 2399 0116 00       		.byte	0
 2400 0117 00       		.byte	0
 2401 0118 00       		.byte	0
 2402 0119 00       		.byte	0
 2403 011a 00       		.byte	0
 2404 011b 00       		.byte	0
 2405 011c 00       		.byte	0
 2406 011d 00       		.byte	0
 2407 011e 00       		.byte	0
 2408 011f 00       		.byte	0
 2409              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2410              		.align	2
 2411              	.LC2:
 2412 0000 4D756C74 		.ascii	"Multi Function Meter\000"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 64


 2412      69204675 
 2412      6E637469 
 2412      6F6E204D 
 2412      65746572 
 2413 0015 000000   		.space	3
 2414              	.LC3:
 2415 0018 5265762E 		.ascii	"Rev. 0.2a\000"
 2415      20302E32 
 2415      6100
 2416 0022 0000     		.space	2
 2417              	.LC4:
 2418 0024 48656C6C 		.ascii	"Hello. This is MFM.\012\000"
 2418      6F2E2054 
 2418      68697320 
 2418      6973204D 
 2418      464D2E0A 
 2419 0039 000000   		.space	3
 2420              	.LC5:
 2421 003c 4144584C 		.ascii	"ADXL324 DEVID %d\012\000"
 2421      33323420 
 2421      44455649 
 2421      44202564 
 2421      0A00
 2422 004e 0000     		.space	2
 2423              	.LC6:
 2424 0050 2825642C 		.ascii	"(%d,%d,%d)\012\000"
 2424      25642C25 
 2424      64290A00 
 2425              	.LC7:
 2426 005c 55502000 		.ascii	"UP \000"
 2427              	.LC8:
 2428 0060 444F574E 		.ascii	"DOWN \000"
 2428      2000
 2429 0066 0000     		.space	2
 2430              	.LC9:
 2431 0068 454E5445 		.ascii	"ENTER \000"
 2431      522000
 2432 006f 00       		.space	1
 2433              	.LC10:
 2434 0070 6B506100 		.ascii	"kPa\000"
 2435              	.LC11:
 2436 0074 4D415000 		.ascii	"MAP\000"
 2437              	.LC12:
 2438 0078 4700     		.ascii	"G\000"
 2439 007a 0000     		.space	2
 2440              	.LC13:
 2441 007c 4C617447 		.ascii	"LatG\000"
 2441      00
 2442 0081 000000   		.space	3
 2443              	.LC14:
 2444 0084 00       		.ascii	"\000"
 2445 0085 000000   		.space	3
 2446              	.LC15:
 2447 0088 4D6F6465 		.ascii	"Mode Setting\000"
 2447      20536574 
 2447      74696E67 
 2447      00
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 65


 2448 0095 000000   		.space	3
 2449              	.LC16:
 2450 0098 3E00     		.ascii	">\000"
 2451 009a 0000     		.space	2
 2452              	.LC17:
 2453 009c 2000     		.ascii	" \000"
 2454 009e 0000     		.space	2
 2455              	.LC18:
 2456 00a0 4D756C74 		.ascii	"Multi-Meter\000"
 2456      692D4D65 
 2456      74657200 
 2457              	.LC19:
 2458 00ac 53636F70 		.ascii	"Scope\000"
 2458      6500
 2459              		.section	.rodata.meas_digit,"a",%progbits
 2460              		.align	2
 2461              		.set	.LANCHOR9,. + 0
 2464              	meas_digit:
 2465 0000 03       		.byte	3
 2466 0001 03       		.byte	3
 2467 0002 03       		.byte	3
 2468 0003 03       		.byte	3
 2469 0004 03       		.byte	3
 2470 0005 03       		.byte	3
 2471              		.section	.rodata.meas_frac,"a",%progbits
 2472              		.align	2
 2473              		.set	.LANCHOR10,. + 0
 2476              	meas_frac:
 2477 0000 02       		.byte	2
 2478 0001 01       		.byte	1
 2479 0002 01       		.byte	1
 2480 0003 00       		.byte	0
 2481 0004 00       		.byte	0
 2482 0005 02       		.byte	2
 2483              		.section	.rodata.meas_name,"a",%progbits
 2484              		.align	2
 2485              		.set	.LANCHOR2,. + 0
 2488              	meas_name:
 2489 0000 4D415000 		.ascii	"MAP\000"
 2490 0004 000000   		.space	3
 2491 0007 4F494C50 		.ascii	"OILP\000"
 2491      00
 2492 000c 0000     		.space	2
 2493 000e 46505600 		.ascii	"FPV\000"
 2494 0012 000000   		.space	3
 2495 0015 45435400 		.ascii	"ECT\000"
 2496 0019 000000   		.space	3
 2497 001c 4F494C54 		.ascii	"OILT\000"
 2497      00
 2498 0021 0000     		.space	2
 2499 0023 4F3200   		.ascii	"O2\000"
 2500 0026 00000000 		.space	4
 2501              		.section	.rodata.meas_sign,"a",%progbits
 2502              		.align	2
 2503              		.set	.LANCHOR11,. + 0
 2506              	meas_sign:
 2507 0000 01       		.byte	1
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 66


 2508 0001 00       		.byte	0
 2509 0002 00       		.byte	0
 2510 0003 00       		.byte	0
 2511 0004 00       		.byte	0
 2512 0005 00       		.byte	0
 2513              		.section	.rodata.meas_unit,"a",%progbits
 2514              		.align	2
 2515              		.set	.LANCHOR1,. + 0
 2518              	meas_unit:
 2519 0000 6B706100 		.ascii	"kpa\000"
 2520 0004 00       		.space	1
 2521 0005 6B706100 		.ascii	"kpa\000"
 2522 0009 00       		.space	1
 2523 000a 56202000 		.ascii	"V  \000"
 2524 000e 00       		.space	1
 2525 000f B0       		.byte	-80
 2526 0010 43       		.byte	67
 2527 0011 00       		.byte	0
 2528 0012 0000     		.space	2
 2529 0014 B0       		.byte	-80
 2530 0015 43       		.byte	67
 2531 0016 00       		.byte	0
 2532 0017 0000     		.space	2
 2533 0019 5600     		.ascii	"V\000"
 2534 001b 000000   		.space	3
 2535              		.text
 2536              	.Letext0:
 2537              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 2538              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 2539              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2540              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 2541              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 2542              		.file 7 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 2543              		.file 8 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 2544              		.file 9 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 2545              		.file 10 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 2546              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2547              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 2548              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 2549              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 2550              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 2551              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 2552              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 2553              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2c.h"
 2554              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi.h"
 2555              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 2556              		.file 21 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 2557              		.file 22 "Inc/adc.h"
 2558              		.file 23 "Inc/can.h"
 2559              		.file 24 "Inc/i2c.h"
 2560              		.file 25 "Inc/spi.h"
 2561              		.file 26 "Inc/tim.h"
 2562              		.file 27 "Inc/usart.h"
 2563              		.file 28 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/math.h"
 2564              		.file 29 "/Users/imashio/Electronics/ARM/_Library/u8x8.h"
 2565              		.file 30 "/Users/imashio/Electronics/ARM/_Library/u8g2.h"
 2566              		.file 31 "/Users/imashio/Electronics/ARM/_Library/flag.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 67


 2567              		.file 32 "Inc/defi_decoder.h"
 2568              		.file 33 "Src/pulse_counter.h"
 2569              		.file 34 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 2570              		.file 35 "/Users/imashio/Electronics/ARM/_Library/draw_Value.h"
 2571              		.file 36 "/Users/imashio/Electronics/ARM/_Library/draw_IndicatorBox.h"
 2572              		.file 37 "/Users/imashio/Electronics/ARM/_Library/usart_transmit_printf.h"
 2573              		.file 38 "/Users/imashio/Electronics/ARM/_Library/draw_BarGraph.h"
 2574              		.file 39 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 2575              		.file 40 "Inc/gpio.h"
 2576              		.file 41 "Inc/dma.h"
 2577              		.file 42 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 2578              		.file 43 "<built-in>"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 68


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:18     .text.ADXL345_RegWrite:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:26     .text.ADXL345_RegWrite:0000000000000000 ADXL345_RegWrite
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:67     .text.ADXL345_RegWrite:0000000000000024 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:72     .text.ADXL345_RegRead_1byte:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:80     .text.ADXL345_RegRead_1byte:0000000000000000 ADXL345_RegRead_1byte
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:132    .text.ADXL345_RegRead_1byte:0000000000000034 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:137    .text.draw_indicators:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:145    .text.draw_indicators:0000000000000000 draw_indicators
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:196    .text.draw_indicators:0000000000000038 $d
                            *COM*:0000000000000080 u8g2
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:202    .text.draw_MeasLabels:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:210    .text.draw_MeasLabels:0000000000000000 draw_MeasLabels
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:327    .text.draw_MeasLabels:00000000000000d0 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:336    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:344    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:370    .text.HAL_ADC_ConvCpltCallback:0000000000000018 $d
                            *COM*:0000000000000014 g_ADCBuffer
                            *COM*:0000000000000014 adc
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:376    .text.SystemClock_Config:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:384    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:506    .text.startup.main:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:514    .text.startup.main:0000000000000000 main
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:924    .text.startup.main:0000000000000228 $d
                            *COM*:0000000000000001 Gsens_EN
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:960    .text.startup.main:00000000000002a8 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:1389   .text.startup.main:000000000000057c $d
                            *COM*:0000000000000001 mode
                            *COM*:0000000000000001 setting
                            *COM*:0000000000000001 Gsens_X1
                            *COM*:0000000000000002 Gsens_Z
                            *COM*:0000000000000001 Gsens_Y1
                            *COM*:0000000000000001 Gsens_Z1
                            *COM*:0000000000000002 Gsens_X
                            *COM*:0000000000000002 Gsens_Y
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:1418   .text.startup.main:00000000000005e4 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:1820   .text.startup.main:00000000000008b0 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:1840   .text.startup.main:00000000000008f4 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:1933   .text.startup.main:000000000000097c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:1946   .text._Error_Handler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:1954   .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:1969   .text.assert_failed:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:1977   .text.assert_failed:0000000000000000 assert_failed
                            *COM*:0000000000000001 Gsens_Z0
                            *COM*:0000000000000001 Gsens_Y0
                            *COM*:0000000000000001 Gsens_X0
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2043   .data.FP_duty:0000000000000000 FP_duty
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2050   .data.FP_volt:0000000000000000 FP_volt
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2072   .data.O2_volt:0000000000000000 O2_volt
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2079   .data.meas_value:0000000000000000 meas_value
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2506   .rodata.meas_sign:0000000000000000 meas_sign
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2476   .rodata.meas_frac:0000000000000000 meas_frac
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2464   .rodata.meas_digit:0000000000000000 meas_digit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2518   .rodata.meas_unit:0000000000000000 meas_unit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2488   .rodata.meas_name:0000000000000000 meas_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2112   .rodata.idct_status:0000000000000000 idct_status
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 69


/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2103   .rodata.idct_name:0000000000000000 idct_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2026   .bss.cursor:0000000000000000 cursor
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2056   .data.MT:0000000000000000 MT
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2031   .bss.gear:0000000000000000 gear
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2090   .data.speed:0000000000000000 speed
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2036   .bss.update_display:0000000000000000 update_display
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2120   .rodata.logo_bits:0000000000000000 logo_bits
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2027   .bss.cursor:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2032   .bss.gear:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2037   .bss.update_display:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2039   .data.FP_duty:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2046   .data.FP_volt:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2053   .data.MT:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2068   .data.O2_volt:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2075   .data.meas_value:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2087   .data.speed:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2093   .rodata.draw_MeasLabels.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2099   .rodata.idct_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2108   .rodata.idct_status:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2116   .rodata.logo_bits:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2410   .rodata.main.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2460   .rodata.meas_digit:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2472   .rodata.meas_frac:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2484   .rodata.meas_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2502   .rodata.meas_sign:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s:2514   .rodata.meas_unit:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_I2C_Master_Transmit
hi2c1
HAL_I2C_Master_Receive
draw_IndicatorBox
draw_MeasLabelUnit
draw_Value
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
memset
MX_GPIO_Init
MX_DMA_Init
MX_ADC1_Init
MX_CAN_Init
MX_I2C1_Init
MX_SPI1_Init
MX_TIM1_Init
MX_TIM2_Init
MX_TIM3_Init
MX_TIM6_Init
MX_USART1_UART_Init
MX_USART2_UART_Init
HAL_TIM_PWM_Start
HAL_TIM_Base_Start_IT
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgVZWso.s 			page 70


HAL_ADC_Start_DMA
HAL_UART_Receive_IT
u8g2_Setup_ssd1309_128x64_noname2_f
HAL_GPIO_WritePin
HAL_Delay
u8x8_InitDisplay
u8x8_SetPowerSave
u8x8_SetContrast
u8g2_ClearDisplay
u8g2_DrawXBMP
u8g2_SetFont
u8g2_DrawStr
u8g2_SendBuffer
u8g2_ClearBuffer
HAL_UART_Transmit_printf
htim1
htim2
htim3
htim6
hadc1
UART1_Data
huart1
u8x8_gpio_and_delay_STM32F303
u8x8_byte_4wire_hw_spi
u8g2_cb_r0
u8g2_font_5x7_tf
huart2
DEFI_value
flag_meas
flag_disp
defi_decoder
HAL_NVIC_DisableIRQ
draw_CircularMeter_Init
draw_CircularMeter
flag_sw
rpm
UART1_RxData
draw_Wave_axis
draw_Wave
draw_BarGraph
draw_MeasUnit
u8g2_font_7x14B_tf
