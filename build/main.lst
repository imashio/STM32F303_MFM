ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.draw_indicators,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	draw_indicators
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	draw_indicators:
  27              	.LFB126:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "adc.h"
  24:Src/main.c    **** #include "can.h"
  25:Src/main.c    **** #include "dma.h"
  26:Src/main.c    **** #include "i2c.h"
  27:Src/main.c    **** #include "spi.h"
  28:Src/main.c    **** #include "tim.h"
  29:Src/main.c    **** #include "usart.h"
  30:Src/main.c    **** #include "gpio.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 2


  31:Src/main.c    **** 
  32:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  33:Src/main.c    **** /* USER CODE BEGIN Includes */
  34:Src/main.c    **** #include <stdio.h>
  35:Src/main.c    **** #include <math.h>
  36:Src/main.c    **** 
  37:Src/main.c    **** // #include "basic.h"  // original library
  38:Src/main.c    **** #include "usart_transmit_printf.h"
  39:Src/main.c    **** #include "u8g2.h"		// graphic display library
  40:Src/main.c    **** #include "u8x8_gpio_STM32F303.h"
  41:Src/main.c    **** #include "u8x8_byte_4wire_hw_spi.h"
  42:Src/main.c    **** #include "draw_Value.h"
  43:Src/main.c    **** #include "draw_BarGraph.h"
  44:Src/main.c    **** #include "draw_IndicatorBox.h"
  45:Src/main.c    **** //#include "draw_Rotary.h"
  46:Src/main.c    **** 
  47:Src/main.c    **** #include "flag.h"
  48:Src/main.c    **** #include "defi_decoder.h"
  49:Src/main.c    **** #include "pulse_counter.h"
  50:Src/main.c    **** #include "can_obd.h"
  51:Src/main.c    **** #include "gsens_ADXL345.h"
  52:Src/main.c    **** 
  53:Src/main.c    **** /* USER CODE END Includes */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  56:Src/main.c    **** /* USER CODE BEGIN PTD */
  57:Src/main.c    **** 
  58:Src/main.c    **** /* USER CODE END PTD */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  61:Src/main.c    **** /* USER CODE BEGIN PD */
  62:Src/main.c    **** /* USER CODE END PD */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  65:Src/main.c    **** /* USER CODE BEGIN PM */
  66:Src/main.c    **** /* USER CODE END PM */
  67:Src/main.c    **** 
  68:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE BEGIN PV */
  71:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  72:Src/main.c    **** 
  73:Src/main.c    **** // Debug
  74:Src/main.c    **** #define DEBUG_USBserial       1
  75:Src/main.c    **** 
  76:Src/main.c    **** // Dummy data generation for debug
  77:Src/main.c    **** #define DUMMY_DATA            1
  78:Src/main.c    **** 
  79:Src/main.c    **** // mode definition
  80:Src/main.c    **** #define N_mode                5
  81:Src/main.c    **** 
  82:Src/main.c    **** #define MODE_BAR_METER        0
  83:Src/main.c    **** #define MODE_CIRCULAR_METER   1
  84:Src/main.c    **** #define MODE_ROTARY           2
  85:Src/main.c    **** #define MODE_SCOPE_MAP        3
  86:Src/main.c    **** #define MODE_SCOPE_Gsens      4
  87:Src/main.c    **** #define MODE_SETTING          5
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 3


  88:Src/main.c    **** 
  89:Src/main.c    **** // RPM bar graph parameter definition
  90:Src/main.c    **** #define	rpmbar_x		          0
  91:Src/main.c    **** #define	rpmbar_y		          0
  92:Src/main.c    **** #define	rpmbar_width	        128
  93:Src/main.c    **** #define	rpmbar_height	        14
  94:Src/main.c    **** #define	rpm_min			          0
  95:Src/main.c    **** #define	rpm_max			          9000
  96:Src/main.c    **** 
  97:Src/main.c    **** // measurements display parameter definition
  98:Src/main.c    **** // Bar graph
  99:Src/main.c    **** #define	N_meas			      6
 100:Src/main.c    **** #define	meas_x			      0
 101:Src/main.c    **** #define	meas_y			      16
 102:Src/main.c    **** #define	meas_x_offset   	2
 103:Src/main.c    **** #define	meas_width1		    70
 104:Src/main.c    **** #define	meas_width2		    56
 105:Src/main.c    **** #define	meas_height		    12
 106:Src/main.c    **** // Circular Meter
 107:Src/main.c    **** #define	N_meas_C			    4
 108:Src/main.c    **** #define	meas_C_x			    68
 109:Src/main.c    **** #define	meas_C_y			    2
 110:Src/main.c    **** #define	meas_C_x_offset		2
 111:Src/main.c    **** #define	meas_C_width		  60
 112:Src/main.c    **** #define	meas_C_height		  13
 113:Src/main.c    **** 
 114:Src/main.c    **** // indicators parameter definition
 115:Src/main.c    **** #define	N_idct			      2
 116:Src/main.c    **** #define	idct_x			      72
 117:Src/main.c    **** #define	idct_y			      53
 118:Src/main.c    ****  #define	idct_width		    27 // 2-items
 119:Src/main.c    **** // #define	idct_width		    17 // 3-item
 120:Src/main.c    **** #define	idct_height		    9
 121:Src/main.c    **** 
 122:Src/main.c    **** //  Fuel Pump Voltage display parameter definition
 123:Src/main.c    **** #define	FP_x		    	    0
 124:Src/main.c    **** #define	FP_y              52
 125:Src/main.c    **** #define	FP_height	        12
 126:Src/main.c    **** #define	FP_volt_width	    45
 127:Src/main.c    **** #define	FP_duty_width	    70
 128:Src/main.c    **** 
 129:Src/main.c    **** // wave display parameter definition
 130:Src/main.c    **** #define	wave_x			      0
 131:Src/main.c    **** #define	wave_y			      13
 132:Src/main.c    **** #define	wave_width		    128
 133:Src/main.c    **** #define	wave_height		    52
 134:Src/main.c    **** #define	wave_value_min	  -100
 135:Src/main.c    **** #define	wave_value_max	  +200
 136:Src/main.c    **** 
 137:Src/main.c    **** 
 138:Src/main.c    **** // measurements display parameter definition
 139:Src/main.c    **** #define	meas_width_NSX    128
 140:Src/main.c    **** #define	meas_height_NSX   24
 141:Src/main.c    **** 
 142:Src/main.c    **** // einfini logo definition (small 'enfini' logo)
 143:Src/main.c    **** #define enfini_logo_width        48
 144:Src/main.c    **** #define enfini_logo_height       48
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 4


 145:Src/main.c    **** const unsigned char enfini_logo[] = {
 146:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 147:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 148:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0x3F, 0x00,
 149:Src/main.c    ****   0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x1F, 0x00, 0x80, 0xFF, 0x07,
 150:Src/main.c    ****   0xE0, 0x01, 0x00, 0x80, 0x81, 0x07, 0xE0, 0x01, 0x00, 0x80, 0x81, 0x07,
 151:Src/main.c    ****   0xC0, 0xE1, 0x07, 0xC0, 0x80, 0x03, 0x00, 0xFC, 0x1F, 0xE0, 0x80, 0x03,
 152:Src/main.c    ****   0x00, 0xFE, 0x7F, 0x70, 0xC0, 0x01, 0x00, 0x0F, 0xFE, 0x39, 0xE0, 0x00,
 153:Src/main.c    ****   0x00, 0x07, 0xF8, 0x1F, 0xF0, 0x00, 0x00, 0x0E, 0xE0, 0x1F, 0x78, 0x00,
 154:Src/main.c    ****   0x00, 0x0C, 0xC0, 0xFF, 0x3F, 0x00, 0x00, 0x18, 0x00, 0xFF, 0x1F, 0x00,
 155:Src/main.c    ****   0x00, 0x38, 0xC0, 0xFF, 0x0F, 0x00, 0x00, 0x70, 0xE0, 0xF1, 0x03, 0x00,
 156:Src/main.c    ****   0x00, 0xE0, 0x78, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3F, 0xE0, 0x01, 0x00,
 157:Src/main.c    ****   0x00, 0x80, 0x1F, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00,
 158:Src/main.c    ****   0x00, 0x00, 0x1E, 0x7C, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00,
 159:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00,
 160:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 161:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 162:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4C, 0x1C, 0x00, 0x00, 0x00,
 163:Src/main.c    ****   0x00, 0x32, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x00, 0x18, 0x00,
 164:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFC, 0x39, 0x00, 0x00, 0x4E, 0xC6, 0xB8, 0x31, 0x00,
 165:Src/main.c    ****   0x00, 0x3E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x3C, 0xC6, 0x98, 0x31, 0x00,
 166:Src/main.c    ****   0x00, 0x0E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x4E, 0xCE, 0x99, 0x31, 0x00,
 167:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFD, 0x7B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 168:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 169:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 170:Src/main.c    ****   };
 171:Src/main.c    **** 
 172:Src/main.c    **** /*
 173:Src/main.c    **** // enfini logo definition (meidium 'enfini' logo)
 174:Src/main.c    **** #define logo_width        54
 175:Src/main.c    **** #define logo_height       48
 176:Src/main.c    **** static unsigned char enfini_logo[] = {
 177:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0x0F,
 178:Src/main.c    ****   0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0xE0, 0xFF, 0xFF,
 179:Src/main.c    ****   0xFF, 0xFF, 0xFF, 0x01, 0xF8, 0x3F, 0x00, 0x00, 0xF0, 0xFF, 0x07, 0xF8,
 180:Src/main.c    ****   0x01, 0x00, 0x00, 0x70, 0xE0, 0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x80,
 181:Src/main.c    ****   0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00,
 182:Src/main.c    ****   0x38, 0x80, 0x07, 0x00, 0xF8, 0x3F, 0x00, 0x38, 0x80, 0x07, 0x00, 0xFE,
 183:Src/main.c    ****   0xFF, 0x00, 0x1C, 0xC0, 0x03, 0x80, 0xFF, 0xFF, 0x01, 0x0E, 0xC0, 0x01,
 184:Src/main.c    ****   0xC0, 0x07, 0xFC, 0x07, 0x07, 0xE0, 0x01, 0x80, 0x03, 0xF0, 0x9F, 0x03,
 185:Src/main.c    ****   0xF0, 0x00, 0x80, 0x03, 0xC0, 0xFF, 0x03, 0x78, 0x00, 0x00, 0x07, 0x80,
 186:Src/main.c    ****   0xFF, 0x01, 0x3C, 0x00, 0x00, 0x06, 0x00, 0xFE, 0x87, 0x3F, 0x00, 0x00,
 187:Src/main.c    ****   0x0E, 0x00, 0xF8, 0xFF, 0x1F, 0x00, 0x00, 0x1C, 0x00, 0xF8, 0xFF, 0x07,
 188:Src/main.c    ****   0x00, 0x00, 0x38, 0x00, 0xDE, 0xFF, 0x03, 0x00, 0x00, 0x70, 0x00, 0x0F,
 189:Src/main.c    ****   0x7E, 0x00, 0x00, 0x00, 0xE0, 0xC0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xC0,
 190:Src/main.c    ****   0xF1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x00, 0x7C, 0x00, 0x00,
 191:Src/main.c    ****   0x00, 0x00, 0x3F, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x1F,
 192:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x3C, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x78,
 193:Src/main.c    ****   0xE0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0x03, 0x00, 0x00, 0x00,
 194:Src/main.c    ****   0x00, 0xC0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00,
 195:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00,
 196:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x4E, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39,
 197:Src/main.c    ****   0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00,
 198:Src/main.c    ****   0x00, 0x7E, 0x3E, 0xC7, 0x3D, 0x1C, 0x00, 0x00, 0x6F, 0x3E, 0xC7, 0x7F,
 199:Src/main.c    ****   0x1C, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x73, 0x18, 0x00, 0x00, 0x07, 0x1C,
 200:Src/main.c    ****   0x86, 0x71, 0x18, 0x00, 0x00, 0x3E, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00,
 201:Src/main.c    ****   0x1F, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x71, 0x18,
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 5


 202:Src/main.c    ****   0x00, 0x00, 0x47, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x7F, 0x3E, 0xCF,
 203:Src/main.c    ****   0xFB, 0x3C, 0x00, 0x00, 0x3C, 0x3E, 0xCF, 0xFB, 0x3C, 0x00, 0x00, 0x00,
 204:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 205:Src/main.c    ****   };
 206:Src/main.c    **** */
 207:Src/main.c    **** 
 208:Src/main.c    **** u8g2_t    u8g2; // a structure which will contain all the data for one display
 209:Src/main.c    **** 
 210:Src/main.c    **** uint8_t   update_display = 0;
 211:Src/main.c    **** 
 212:Src/main.c    **** // uint16_t	rpm = 0;
 213:Src/main.c    **** // uint16_t	speed = 240;
 214:Src/main.c    **** uint8_t		gear = 0;
 215:Src/main.c    **** double		MT[5] = {3.483, 2.015, 1.391, 1.000, 0.806};
 216:Src/main.c    **** 
 217:Src/main.c    **** // UI
 218:Src/main.c    **** uint8_t   mode;
 219:Src/main.c    **** uint8_t   setting;
 220:Src/main.c    **** uint8_t   cursor = 0;
 221:Src/main.c    **** 
 222:Src/main.c    **** 
 223:Src/main.c    **** // variables for indicators
 224:Src/main.c    **** const unsigned char idct_name[N_idct][5] = { // length must be (text length + 1)
 225:Src/main.c    **** 		"CAN"	,
 226:Src/main.c    **** 		"GSENS"	,
 227:Src/main.c    **** };
 228:Src/main.c    **** 
 229:Src/main.c    **** uint8_t	idct_status[N_idct] = {
 230:Src/main.c    **** 		0	,
 231:Src/main.c    **** 		0
 232:Src/main.c    **** };
 233:Src/main.c    **** 
 234:Src/main.c    **** // variables for measurement
 235:Src/main.c    **** const unsigned char meas_name[N_meas][7] = { // length must be (text length + 1)
 236:Src/main.c    **** 		"MAP"         ,
 237:Src/main.c    **** 		"OILP"        ,
 238:Src/main.c    **** 		"FPV"         ,
 239:Src/main.c    **** 		"ECT"         ,
 240:Src/main.c    **** 		"OILT"        ,
 241:Src/main.c    **** 		"O2"          
 242:Src/main.c    **** };
 243:Src/main.c    **** 
 244:Src/main.c    **** const unsigned char meas_unit[N_meas][5] = {
 245:Src/main.c    **** 		"kpa"			    ,	// MAP
 246:Src/main.c    **** 		"kpa"			    ,	// OILP
 247:Src/main.c    **** 		"V  "         ,	// FuelPump Voltage
 248:Src/main.c    **** 		{176, 67, 0}  ,	// ECT  degC...{176, 67, 0}
 249:Src/main.c    **** 		{176, 67, 0}	,	// OILT  degC...{176, 67, 0}
 250:Src/main.c    **** 		"V"					    // O2
 251:Src/main.c    **** };
 252:Src/main.c    **** 
 253:Src/main.c    **** const uint8_t	meas_digit[N_meas] = {
 254:Src/main.c    **** 		3	,	// MAP
 255:Src/main.c    **** 		3	,	// OILP
 256:Src/main.c    **** 		3	,	// FuelPump Voltage
 257:Src/main.c    **** 		3	,	// ECT
 258:Src/main.c    **** 		3	,	// OILT
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 6


 259:Src/main.c    **** 		3		// O2
 260:Src/main.c    **** };
 261:Src/main.c    **** 
 262:Src/main.c    **** const uint8_t	meas_frac[N_meas] = {
 263:Src/main.c    **** 		2	,	// MAP
 264:Src/main.c    **** 		1	,	// OILP
 265:Src/main.c    **** 		1	,	// FuelPump Voltage
 266:Src/main.c    **** 		0	,	// ECT
 267:Src/main.c    **** 		0	,	// OILT
 268:Src/main.c    **** 		2		// O2
 269:Src/main.c    **** };
 270:Src/main.c    **** 
 271:Src/main.c    **** const uint8_t	meas_sign[N_meas] = {
 272:Src/main.c    **** 		1	,	// MAP
 273:Src/main.c    **** 		0	,	// OILP
 274:Src/main.c    **** 		0	,	// FuelPump Voltage
 275:Src/main.c    **** 		0	,	// ECT
 276:Src/main.c    **** 		0	,	// OILT
 277:Src/main.c    **** 		0		// O2
 278:Src/main.c    **** };
 279:Src/main.c    **** 
 280:Src/main.c    **** int16_t	meas_value[N_meas] = {
 281:Src/main.c    **** 		105	,	// MAP
 282:Src/main.c    **** 		235	,	// OILP
 283:Src/main.c    **** 		645	,	// FuelPump Voltage
 284:Src/main.c    **** 		89	,	// ECT
 285:Src/main.c    **** 		73	,	// OILT
 286:Src/main.c    **** 		143		// O2
 287:Src/main.c    **** };
 288:Src/main.c    **** 
 289:Src/main.c    **** // O2 senser Voltage
 290:Src/main.c    **** int16_t   O2_volt = 330;
 291:Src/main.c    **** 
 292:Src/main.c    **** // Fuel Pump Voltage
 293:Src/main.c    **** int16_t   FP_volt = 330;
 294:Src/main.c    **** int16_t   FP_duty = 100;
 295:Src/main.c    **** 
 296:Src/main.c    **** // CAN Tranceiver --------------------------------------------------
 297:Src/main.c    **** uint8_t   CAN_EN;
 298:Src/main.c    **** 
 299:Src/main.c    **** // ADXL345 3-axis acceration sensor --------------------------------
 300:Src/main.c    **** uint8_t   Gsens_EN;
 301:Src/main.c    **** // uint8_t   Gsens_X1;
 302:Src/main.c    **** // uint8_t   Gsens_X0;
 303:Src/main.c    **** int16_t   Gsens_X;
 304:Src/main.c    **** // uint8_t   Gsens_Y1;
 305:Src/main.c    **** // uint8_t   Gsens_Y0;
 306:Src/main.c    **** int16_t   Gsens_Y;
 307:Src/main.c    **** // uint8_t   Gsens_Z1;
 308:Src/main.c    **** // uint8_t   Gsens_Z0;
 309:Src/main.c    **** int16_t   Gsens_Z;
 310:Src/main.c    **** 
 311:Src/main.c    **** #define ADXL0_ADDR 0x1D
 312:Src/main.c    **** // ADXL345     I2C
 313:Src/main.c    **** // SDO/ALT   Address
 314:Src/main.c    **** //    H        0x1D
 315:Src/main.c    **** //    L        0x53
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 7


 316:Src/main.c    **** 
 317:Src/main.c    **** /*
 318:Src/main.c    **** void ADXL345_RegWrite(uint8_t slv_addr, uint8_t addr, uint8_t data){
 319:Src/main.c    ****   uint8_t i2c_buf[2];
 320:Src/main.c    ****   i2c_buf[0] = addr;
 321:Src/main.c    ****   i2c_buf[1] = data;  
 322:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1, slv_addr << 1, &i2c_buf, 2, 10);
 323:Src/main.c    **** }
 324:Src/main.c    **** 
 325:Src/main.c    **** int8_t ADXL345_RegRead_1byte(uint8_t slv_addr, uint8_t addr){
 326:Src/main.c    ****   uint8_t data;
 327:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1, slv_addr << 1, &addr, 1, 10);
 328:Src/main.c    ****   HAL_I2C_Master_Receive(&hi2c1, slv_addr << 1, &data, 1, 10);
 329:Src/main.c    ****   return data;
 330:Src/main.c    **** }
 331:Src/main.c    **** */
 332:Src/main.c    **** 
 333:Src/main.c    **** /* USER CODE END PV */
 334:Src/main.c    **** 
 335:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 336:Src/main.c    **** void SystemClock_Config(void);
 337:Src/main.c    **** /* USER CODE BEGIN PFP */
 338:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 339:Src/main.c    **** 
 340:Src/main.c    **** /* USER CODE END PFP */
 341:Src/main.c    **** 
 342:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
 343:Src/main.c    **** /* USER CODE BEGIN 0 */
 344:Src/main.c    **** void draw_indicators(){
  29              		.loc 1 344 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 20
  37              		.cfi_offset 4, -20
  38              		.cfi_offset 5, -16
  39              		.cfi_offset 6, -12
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
 345:Src/main.c    ****   uint8_t n;
 346:Src/main.c    ****   uint8_t x, y;
 347:Src/main.c    ****   // draw indicators
 348:Src/main.c    **** 
 349:Src/main.c    ****   for( n=0; n<N_idct; n++ ){
 350:Src/main.c    ****     draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[
  42              		.loc 1 350 0
  43 0002 0E4F     		ldr	r7, .L4
  44 0004 0E4D     		ldr	r5, .L4+4
  45 0006 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
  46 0008 0E4C     		ldr	r4, .L4+8
 344:Src/main.c    ****   uint8_t n;
  47              		.loc 1 344 0
  48 000a 85B0     		sub	sp, sp, #20
  49              	.LCFI1:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 8


  50              		.cfi_def_cfa_offset 40
  51              		.loc 1 350 0
  52 000c 0926     		movs	r6, #9
  53 000e 0193     		str	r3, [sp, #4]
  54 0010 2846     		mov	r0, r5
  55 0012 0294     		str	r4, [sp, #8]
  56 0014 0096     		str	r6, [sp]
  57 0016 1B23     		movs	r3, #27
  58 0018 3522     		movs	r2, #53
  59 001a 4821     		movs	r1, #72
  60 001c FFF7FEFF 		bl	draw_IndicatorBox
  61              	.LVL1:
  62 0020 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
  63 0022 0096     		str	r6, [sp]
  64 0024 0534     		adds	r4, r4, #5
  65 0026 CDE90134 		strd	r3, r4, [sp, #4]
  66 002a 2846     		mov	r0, r5
  67 002c 1B23     		movs	r3, #27
  68 002e 3522     		movs	r2, #53
  69 0030 6521     		movs	r1, #101
  70 0032 FFF7FEFF 		bl	draw_IndicatorBox
  71              	.LVL2:
 351:Src/main.c    ****   }
 352:Src/main.c    **** }
  72              		.loc 1 352 0
  73 0036 05B0     		add	sp, sp, #20
  74              	.LCFI2:
  75              		.cfi_def_cfa_offset 20
  76              		@ sp needed
  77 0038 F0BD     		pop	{r4, r5, r6, r7, pc}
  78              	.L5:
  79 003a 00BF     		.align	2
  80              	.L4:
  81 003c 00000000 		.word	.LANCHOR1
  82 0040 00000000 		.word	u8g2
  83 0044 00000000 		.word	.LANCHOR0
  84              		.cfi_endproc
  85              	.LFE126:
  87              		.section	.text.draw_MeasLabels,"ax",%progbits
  88              		.align	1
  89              		.p2align 2,,3
  90              		.global	draw_MeasLabels
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  94              		.fpu fpv4-sp-d16
  96              	draw_MeasLabels:
  97              	.LFB127:
 353:Src/main.c    **** 
 354:Src/main.c    **** void draw_MeasLabels(){
  98              		.loc 1 354 0
  99              		.cfi_startproc
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              	.LVL3:
 103 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 104              	.LCFI3:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 9


 105              		.cfi_def_cfa_offset 20
 106              		.cfi_offset 4, -20
 107              		.cfi_offset 5, -16
 108              		.cfi_offset 6, -12
 109              		.cfi_offset 7, -8
 110              		.cfi_offset 14, -4
 355:Src/main.c    ****   uint8_t n;
 356:Src/main.c    ****   uint8_t x, y;
 357:Src/main.c    ****   // draw measurements label & unit
 358:Src/main.c    ****   for( n=0; n<3; n++ ){
 359:Src/main.c    ****     x = meas_x;
 360:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 361:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width1, meas_height, meas_name[n], meas_unit[n]);
 111              		.loc 1 361 0
 112 0002 334C     		ldr	r4, .L8
 113 0004 334E     		ldr	r6, .L8+4
 114 0006 344F     		ldr	r7, .L8+8
 354:Src/main.c    ****   uint8_t n;
 115              		.loc 1 354 0
 116 0008 87B0     		sub	sp, sp, #28
 117              	.LCFI4:
 118              		.cfi_def_cfa_offset 48
 119              		.loc 1 361 0
 120 000a 0C25     		movs	r5, #12
 121 000c 0297     		str	r7, [sp, #8]
 122 000e 2046     		mov	r0, r4
 123 0010 CDE90056 		strd	r5, r6, [sp]
 124 0014 4623     		movs	r3, #70
 125 0016 1022     		movs	r2, #16
 126 0018 0021     		movs	r1, #0
 127 001a FFF7FEFF 		bl	draw_MeasLabelUnit
 128              	.LVL4:
 129 001e 7A1D     		adds	r2, r7, #5
 130 0020 F31D     		adds	r3, r6, #7
 131 0022 CDE90132 		strd	r3, r2, [sp, #4]
 132 0026 2046     		mov	r0, r4
 133 0028 0095     		str	r5, [sp]
 134 002a 4623     		movs	r3, #70
 135 002c 1C22     		movs	r2, #28
 136 002e 0021     		movs	r1, #0
 137 0030 FFF7FEFF 		bl	draw_MeasLabelUnit
 138              	.LVL5:
 139 0034 07F10A02 		add	r2, r7, #10
 140 0038 06F10E03 		add	r3, r6, #14
 141 003c CDE90132 		strd	r3, r2, [sp, #4]
 142 0040 2046     		mov	r0, r4
 143 0042 0095     		str	r5, [sp]
 144 0044 4623     		movs	r3, #70
 145 0046 2822     		movs	r2, #40
 146 0048 0021     		movs	r1, #0
 147 004a FFF7FEFF 		bl	draw_MeasLabelUnit
 148              	.LVL6:
 362:Src/main.c    ****   }
 363:Src/main.c    ****   for( n=3; n<N_meas; n++ ){
 364:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 365:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 366:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width2, meas_height, meas_name[n], meas_unit[n]);
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 10


 149              		.loc 1 366 0
 150 004e 07F10F02 		add	r2, r7, #15
 151 0052 06F11503 		add	r3, r6, #21
 152 0056 CDE90132 		strd	r3, r2, [sp, #4]
 153 005a 2046     		mov	r0, r4
 154 005c 0095     		str	r5, [sp]
 155 005e 3823     		movs	r3, #56
 156 0060 1022     		movs	r2, #16
 157 0062 4821     		movs	r1, #72
 158 0064 FFF7FEFF 		bl	draw_MeasLabelUnit
 159              	.LVL7:
 160 0068 07F11402 		add	r2, r7, #20
 161 006c 06F11C03 		add	r3, r6, #28
 162 0070 CDE90132 		strd	r3, r2, [sp, #4]
 163 0074 2046     		mov	r0, r4
 164 0076 0095     		str	r5, [sp]
 165 0078 3823     		movs	r3, #56
 166 007a 1C22     		movs	r2, #28
 167 007c 4821     		movs	r1, #72
 168 007e 1937     		adds	r7, r7, #25
 169 0080 2336     		adds	r6, r6, #35
 170 0082 FFF7FEFF 		bl	draw_MeasLabelUnit
 171              	.LVL8:
 172 0086 CDE90167 		strd	r6, r7, [sp, #4]
 173 008a 2046     		mov	r0, r4
 174 008c 0095     		str	r5, [sp]
 175 008e 3823     		movs	r3, #56
 176 0090 2822     		movs	r2, #40
 177 0092 4821     		movs	r1, #72
 178 0094 FFF7FEFF 		bl	draw_MeasLabelUnit
 179              	.LVL9:
 367:Src/main.c    ****   }
 368:Src/main.c    **** 
 369:Src/main.c    ****   // Fuel Pump voltage & duty
 370:Src/main.c    ****   draw_MeasLabelUnit(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, "DUTY", "%  ");
 180              		.loc 1 370 0
 181 0098 104E     		ldr	r6, .L8+12
 182 009a 114B     		ldr	r3, .L8+16
 183 009c 0095     		str	r5, [sp]
 184 009e 2046     		mov	r0, r4
 185 00a0 CDE90136 		strd	r3, r6, [sp, #4]
 186 00a4 3422     		movs	r2, #52
 187 00a6 4623     		movs	r3, #70
 188 00a8 0021     		movs	r1, #0
 189 00aa FFF7FEFF 		bl	draw_MeasLabelUnit
 190              	.LVL10:
 371:Src/main.c    ****   draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, 100, 3, 0, 0, "%  ");
 191              		.loc 1 371 0
 192 00ae 0021     		movs	r1, #0
 193 00b0 0322     		movs	r2, #3
 194 00b2 6423     		movs	r3, #100
 195 00b4 CDE90132 		strd	r3, r2, [sp, #4]
 196 00b8 0596     		str	r6, [sp, #20]
 197 00ba 0095     		str	r5, [sp]
 198 00bc 2046     		mov	r0, r4
 199 00be CDE90311 		strd	r1, r1, [sp, #12]
 200 00c2 4623     		movs	r3, #70
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 11


 201 00c4 3422     		movs	r2, #52
 202 00c6 FFF7FEFF 		bl	draw_Value
 203              	.LVL11:
 372:Src/main.c    **** }
 204              		.loc 1 372 0
 205 00ca 07B0     		add	sp, sp, #28
 206              	.LCFI5:
 207              		.cfi_def_cfa_offset 20
 208              		@ sp needed
 209 00cc F0BD     		pop	{r4, r5, r6, r7, pc}
 210              	.L9:
 211 00ce 00BF     		.align	2
 212              	.L8:
 213 00d0 00000000 		.word	u8g2
 214 00d4 00000000 		.word	.LANCHOR3
 215 00d8 00000000 		.word	.LANCHOR2
 216 00dc 00000000 		.word	.LC0
 217 00e0 04000000 		.word	.LC1
 218              		.cfi_endproc
 219              	.LFE127:
 221              		.section	.text.draw_MeasLabels_Rotary,"ax",%progbits
 222              		.align	1
 223              		.p2align 2,,3
 224              		.global	draw_MeasLabels_Rotary
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 228              		.fpu fpv4-sp-d16
 230              	draw_MeasLabels_Rotary:
 231              	.LFB128:
 373:Src/main.c    **** 
 374:Src/main.c    **** void draw_MeasLabels_Rotary(){
 232              		.loc 1 374 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              	.LVL12:
 237 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 238              	.LCFI6:
 239              		.cfi_def_cfa_offset 24
 240              		.cfi_offset 4, -24
 241              		.cfi_offset 5, -20
 242              		.cfi_offset 6, -16
 243              		.cfi_offset 7, -12
 244              		.cfi_offset 8, -8
 245              		.cfi_offset 14, -4
 246 0004 0D4E     		ldr	r6, .L14
 247 0006 0E4D     		ldr	r5, .L14+4
 375:Src/main.c    ****   uint8_t n;
 376:Src/main.c    ****   uint8_t x, y;
 377:Src/main.c    ****   // draw measurements label & unit
 378:Src/main.c    ****   for( n=0; n<4; n++ ){
 379:Src/main.c    **** 	  x = meas_x;
 380:Src/main.c    **** 	  y = (n % 4) * meas_height	+ meas_y;
 381:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width1, meas_height, meas_name[n], meas_unit[n]);
 248              		.loc 1 381 0
 249 0008 DFF83880 		ldr	r8, .L14+8
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 12


 374:Src/main.c    ****   uint8_t n;
 250              		.loc 1 374 0
 251 000c 84B0     		sub	sp, sp, #16
 252              	.LCFI7:
 253              		.cfi_def_cfa_offset 40
 374:Src/main.c    ****   uint8_t n;
 254              		.loc 1 374 0
 255 000e 1024     		movs	r4, #16
 256              		.loc 1 381 0
 257 0010 0C27     		movs	r7, #12
 258              	.LVL13:
 259              	.L11:
 260              		.loc 1 381 0 is_stmt 0 discriminator 3
 261 0012 2246     		mov	r2, r4
 262 0014 0C34     		adds	r4, r4, #12
 263              	.LVL14:
 264 0016 CDE90165 		strd	r6, r5, [sp, #4]
 265 001a 0097     		str	r7, [sp]
 266 001c 4623     		movs	r3, #70
 267 001e 0021     		movs	r1, #0
 268 0020 4046     		mov	r0, r8
 269 0022 E4B2     		uxtb	r4, r4
 270 0024 FFF7FEFF 		bl	draw_MeasLabelUnit
 271              	.LVL15:
 378:Src/main.c    **** 	  x = meas_x;
 272              		.loc 1 378 0 is_stmt 1 discriminator 3
 273 0028 402C     		cmp	r4, #64
 274 002a 06F10706 		add	r6, r6, #7
 275 002e 05F10505 		add	r5, r5, #5
 276 0032 EED1     		bne	.L11
 382:Src/main.c    ****   }
 383:Src/main.c    **** }
 277              		.loc 1 383 0
 278 0034 04B0     		add	sp, sp, #16
 279              	.LCFI8:
 280              		.cfi_def_cfa_offset 24
 281              		@ sp needed
 282 0036 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 283              	.L15:
 284 003a 00BF     		.align	2
 285              	.L14:
 286 003c 00000000 		.word	.LANCHOR3
 287 0040 00000000 		.word	.LANCHOR2
 288 0044 00000000 		.word	u8g2
 289              		.cfi_endproc
 290              	.LFE128:
 292              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 293              		.align	1
 294              		.p2align 2,,3
 295              		.global	HAL_ADC_ConvCpltCallback
 296              		.syntax unified
 297              		.thumb
 298              		.thumb_func
 299              		.fpu fpv4-sp-d16
 301              	HAL_ADC_ConvCpltCallback:
 302              	.LFB129:
 384:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 13


 385:Src/main.c    **** 
 386:Src/main.c    **** // ADC buffer definition
 387:Src/main.c    **** enum{ ADC_BUFFER_LENGTH = 10 };
 388:Src/main.c    **** uint16_t g_ADCBuffer[ADC_BUFFER_LENGTH];
 389:Src/main.c    **** uint16_t adc[ADC_BUFFER_LENGTH];  
 390:Src/main.c    **** 
 391:Src/main.c    **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc){
 303              		.loc 1 391 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 0
 306              		@ frame_needed = 0, uses_anonymous_args = 0
 307              		@ link register save eliminated.
 308              	.LVL16:
 309 0000 054B     		ldr	r3, .L19
 310 0002 064A     		ldr	r2, .L19+4
 311 0004 03F11400 		add	r0, r3, #20
 312              	.LVL17:
 313              	.L17:
 314              	.LBB28:
 392:Src/main.c    **** 	for (unsigned int i =0; i<ADC_BUFFER_LENGTH; i++){
 393:Src/main.c    **** 	   adc[i] = g_ADCBuffer[i];  // store the values in adc[]
 315              		.loc 1 393 0 discriminator 3
 316 0008 33F8021B 		ldrh	r1, [r3], #2
 317 000c 22F8021B 		strh	r1, [r2], #2	@ movhi
 392:Src/main.c    **** 	for (unsigned int i =0; i<ADC_BUFFER_LENGTH; i++){
 318              		.loc 1 392 0 discriminator 3
 319 0010 8342     		cmp	r3, r0
 320 0012 F9D1     		bne	.L17
 321              	.LBE28:
 394:Src/main.c    **** 	}
 395:Src/main.c    **** }
 322              		.loc 1 395 0
 323 0014 7047     		bx	lr
 324              	.L20:
 325 0016 00BF     		.align	2
 326              	.L19:
 327 0018 00000000 		.word	g_ADCBuffer
 328 001c 00000000 		.word	adc
 329              		.cfi_endproc
 330              	.LFE129:
 332              		.section	.text.SystemClock_Config,"ax",%progbits
 333              		.align	1
 334              		.p2align 2,,3
 335              		.global	SystemClock_Config
 336              		.syntax unified
 337              		.thumb
 338              		.thumb_func
 339              		.fpu fpv4-sp-d16
 341              	SystemClock_Config:
 342              	.LFB131:
 396:Src/main.c    **** 
 397:Src/main.c    **** /* USER CODE END 0 */
 398:Src/main.c    **** 
 399:Src/main.c    **** /**
 400:Src/main.c    ****   * @brief  The application entry point.
 401:Src/main.c    ****   * @retval int
 402:Src/main.c    ****   */
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 14


 403:Src/main.c    **** int main(void)
 404:Src/main.c    **** {
 405:Src/main.c    ****   /* USER CODE BEGIN 1 */
 406:Src/main.c    **** 
 407:Src/main.c    ****   /* USER CODE END 1 */
 408:Src/main.c    ****   
 409:Src/main.c    **** 
 410:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 411:Src/main.c    **** 
 412:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 413:Src/main.c    ****   HAL_Init();
 414:Src/main.c    **** 
 415:Src/main.c    ****   /* USER CODE BEGIN Init */
 416:Src/main.c    ****   uint8_t n;
 417:Src/main.c    ****   uint8_t x, y;
 418:Src/main.c    **** 
 419:Src/main.c    ****   uint8_t a = 0; // for dummy data
 420:Src/main.c    ****   uint8_t b = 0; // for dummy data
 421:Src/main.c    **** 
 422:Src/main.c    ****   // ROTARY
 423:Src/main.c    ****   uint16_t  rpm_integral;
 424:Src/main.c    ****   uint8_t   index_animation;
 425:Src/main.c    **** 
 426:Src/main.c    ****   // circular buffer for ADC data
 427:Src/main.c    ****   uint16_t  circular_buffer_index = 0;
 428:Src/main.c    ****   int16_t   circular_buffer[128]={};
 429:Src/main.c    **** 
 430:Src/main.c    ****   /* USER CODE END Init */
 431:Src/main.c    **** 
 432:Src/main.c    ****   /* Configure the system clock */
 433:Src/main.c    ****   SystemClock_Config();
 434:Src/main.c    **** 
 435:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 436:Src/main.c    **** 
 437:Src/main.c    ****   /* USER CODE END SysInit */
 438:Src/main.c    **** 
 439:Src/main.c    ****   /* Initialize all configured peripherals */
 440:Src/main.c    ****   MX_GPIO_Init();
 441:Src/main.c    ****   MX_DMA_Init();
 442:Src/main.c    ****   MX_ADC1_Init();
 443:Src/main.c    ****   MX_CAN_Init();
 444:Src/main.c    ****   MX_I2C1_Init();
 445:Src/main.c    ****   MX_SPI1_Init();
 446:Src/main.c    ****   MX_TIM1_Init();
 447:Src/main.c    ****   MX_TIM2_Init();
 448:Src/main.c    ****   MX_TIM3_Init();
 449:Src/main.c    ****   MX_TIM6_Init();
 450:Src/main.c    ****   MX_USART1_UART_Init();
 451:Src/main.c    ****   MX_USART2_UART_Init();
 452:Src/main.c    ****   MX_TIM7_Init();
 453:Src/main.c    ****   MX_TIM16_Init();
 454:Src/main.c    ****   /* USER CODE BEGIN 2 */
 455:Src/main.c    **** 
 456:Src/main.c    ****   ///// PWM initialize ----------------------------------------------------------------
 457:Src/main.c    **** 
 458:Src/main.c    ****   ///// Timer /////
 459:Src/main.c    ****   // TIM1 - PWM for Fuel Pump Driver (Cycle 100kHz = 1MHz / 100count)
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 15


 460:Src/main.c    ****   //  if (HAL_TIM_Base_Start_IT(&htim1) != HAL_OK){
 461:Src/main.c    ****   if (HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1) != HAL_OK){
 462:Src/main.c    ****     Error_Handler();
 463:Src/main.c    ****   }
 464:Src/main.c    **** 
 465:Src/main.c    ****   // TIM2 - display (Cycle 20ms = 1/100kHz x 2,000count)
 466:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim2) != HAL_OK){
 467:Src/main.c    ****     Error_Handler();
 468:Src/main.c    ****   }
 469:Src/main.c    **** 
 470:Src/main.c    ****   // TIM3 - Pulse counter for Tacho (f 200kHz, count 65535)
 471:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim3) != HAL_OK){
 472:Src/main.c    ****     Error_Handler();
 473:Src/main.c    ****   }
 474:Src/main.c    **** 
 475:Src/main.c    ****   // TIM6 - Pulse counter for Speed (f 200kHz, count 65535)
 476:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim6) != HAL_OK){
 477:Src/main.c    ****     Error_Handler();
 478:Src/main.c    ****   }
 479:Src/main.c    **** 
 480:Src/main.c    ****   // TIM7 - SW interrupt control (Cycle 100ms = 1/100kHz x 10,000count)
 481:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim7) != HAL_OK){
 482:Src/main.c    ****     Error_Handler();
 483:Src/main.c    ****   }
 484:Src/main.c    **** 
 485:Src/main.c    ****   // TIM16 - Status control (Cycle 1000ms = 1/32.757kHz x 32,768count)
 486:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim16) != HAL_OK){
 487:Src/main.c    ****     Error_Handler();
 488:Src/main.c    ****   }
 489:Src/main.c    **** 
 490:Src/main.c    **** 
 491:Src/main.c    ****   // ADC
 492:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, g_ADCBuffer, ADC_BUFFER_LENGTH);
 493:Src/main.c    **** 
 494:Src/main.c    ****   // UART1 interrupt setup for DEFI decoder
 495:Src/main.c    ****   HAL_UART_Receive_IT(&huart1, &UART1_Data, 1);
 496:Src/main.c    ****   // variables is defined in 'defi.h'
 497:Src/main.c    **** 
 498:Src/main.c    ****   // CAN initialization
 499:Src/main.c    ****   CAN_OBD_Init();
 500:Src/main.c    **** 
 501:Src/main.c    ****   // OLED diaplay initialization
 502:Src/main.c    ****   // 128x64 2.42inch SPI
 503:Src/main.c    ****    u8g2_Setup_ssd1309_128x64_noname2_f(&u8g2, U8G2_R0, u8x8_byte_4wire_hw_spi, u8x8_gpio_and_delay_
 504:Src/main.c    ****   // 128x64 1.3inch SPI
 505:Src/main.c    ****   //u8g2_Setup_sh1106_128x64_noname_f(&u8g2, U8G2_R0, u8x8_byte_4wire_hw_spi, u8x8_gpio_and_delay_S
 506:Src/main.c    **** 
 507:Src/main.c    ****   // OLED display Reset (must be more than 3us!!)
 508:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 0); // Set RES=L (OLED Reset)
 509:Src/main.c    ****   HAL_Delay(5);
 510:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 511:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 512:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 513:Src/main.c    ****   u8g2_SetContrast(&u8g2, 255); // set contrast
 514:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 515:Src/main.c    **** 
 516:Src/main.c    ****   // draw opening
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 16


 517:Src/main.c    ****   u8g2_DrawXBMP(&u8g2, 40, 0, enfini_logo_width, enfini_logo_height, enfini_logo );
 518:Src/main.c    **** 
 519:Src/main.c    ****   u8g2_SetFont(&u8g2, u8g2_font_5x7_tf);
 520:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 521:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.3a");
 522:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 523:Src/main.c    ****   if( DUMMY_DATA ){
 524:Src/main.c    ****     u8g2_DrawStr(&u8g2, 0, 8, "DUMMY DATA MODE");
 525:Src/main.c    ****     u8g2_SendBuffer(&u8g2);
 526:Src/main.c    ****     HAL_Delay(500);
 527:Src/main.c    ****   }
 528:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 529:Src/main.c    **** 
 530:Src/main.c    ****   HAL_Delay(1000);
 531:Src/main.c    **** 
 532:Src/main.c    ****   u8g2_ClearBuffer(&u8g2);
 533:Src/main.c    **** 
 534:Src/main.c    ****   HAL_UART_Transmit_printf(&huart2, "Hello. This is MFM.\n");
 535:Src/main.c    **** 
 536:Src/main.c    ****   // Set PWM Duty for Timer1 / Output1 (Asymmetric PWM2)
 537:Src/main.c    ****   TIM1->CCR1 = (100 - FP_duty);
 538:Src/main.c    **** 
 539:Src/main.c    ****   /* USER CODE END 2 */
 540:Src/main.c    **** 
 541:Src/main.c    ****   /* Infinite loop */
 542:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 543:Src/main.c    **** 
 544:Src/main.c    ****   draw_MeasLabels();
 545:Src/main.c    ****   draw_indicators();
 546:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 547:Src/main.c    **** 
 548:Src/main.c    ****   // I2C communication to ADXL345(3-axis G-sensor)
 549:Src/main.c    ****   Gsens_EN = Gsens_ADXL345_Init(0);
 550:Src/main.c    **** 
 551:Src/main.c    ****   while(1){
 552:Src/main.c    ****     /* USER CODE END WHILE */
 553:Src/main.c    **** 
 554:Src/main.c    ****     /* USER CODE BEGIN 3 */
 555:Src/main.c    **** 
 556:Src/main.c    ****     ///// STATUS ----------------------------------------------------------------
 557:Src/main.c    ****     if( flag_status ){
 558:Src/main.c    ****       CAN_EN = 0;
 559:Src/main.c    ****       flag_status = 0;
 560:Src/main.c    ****     }
 561:Src/main.c    **** 
 562:Src/main.c    ****     if( CAN_EN == 0 ){
 563:Src/main.c    ****       CAN_EN = CAN_Received;
 564:Src/main.c    ****     }
 565:Src/main.c    **** 
 566:Src/main.c    ****     idct_status[0] = CAN_EN;
 567:Src/main.c    ****     idct_status[1] = Gsens_EN;
 568:Src/main.c    **** 
 569:Src/main.c    **** 
 570:Src/main.c    ****     ///// ADC ----------------------------------------------------------------
 571:Src/main.c    **** 
 572:Src/main.c    **** 		// read O2 sensor ADC output
 573:Src/main.c    **** 		O2_volt = (int16_t)(100.0 * 3.3 * (float)adc[0]/255.0);
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 17


 574:Src/main.c    ****     // Resister attenation ratio
 575:Src/main.c    ****     //    O2 amp : 1
 576:Src/main.c    ****     //    MFM Board : 1
 577:Src/main.c    ****     // Fractional digit : 0.01 = 100.0
 578:Src/main.c    **** 
 579:Src/main.c    **** 		// read Fuel Pump Voltage ADC output
 580:Src/main.c    **** 		FP_volt = (int16_t)(5.0 * 2.0 * 10.0 * 3.3 * (float)adc[1]/255.0);
 581:Src/main.c    ****     // Resister attenation ratio
 582:Src/main.c    ****     //    Fuel Pump driver : 1/5
 583:Src/main.c    ****     //    MFM Board : 1/2
 584:Src/main.c    ****     // Fractional digit : 0.1 = 10.0
 585:Src/main.c    **** 
 586:Src/main.c    ****     ///// CAN ----------------------------------------------------------------
 587:Src/main.c    **** 
 588:Src/main.c    ****     //CAN_OBD_Response(MAP, rpm, SPEED, THROTTLE, FUELPRESS);
 589:Src/main.c    ****     //CAN_OBD_Response(uint8_t MAP, uint16_t rpm, uint8_t SPEED, uint8_t THROTTLE, uint8_t COOLANT_
 590:Src/main.c    ****     CAN_OBD_Response(DEFI_value[0], rpm, 250, 0x00, 80, 70, 270);
 591:Src/main.c    **** 
 592:Src/main.c    **** 
 593:Src/main.c    ****     ///// Fuel Pump Driver ----------------------------------------------------------------
 594:Src/main.c    ****     // Duty calculation
 595:Src/main.c    ****     if( (rpm >= 3000)|(DEFI_value[0] > 0) ){ // DEFI_value[0] .. MAP
 596:Src/main.c    ****       FP_duty = 100;
 597:Src/main.c    ****     }else{
 598:Src/main.c    ****       FP_duty = (uint16_t)((float)rpm/3000.0*100.0);
 599:Src/main.c    ****     }
 600:Src/main.c    ****     // Saturation process
 601:Src/main.c    ****     if( FP_duty > 100 ){
 602:Src/main.c    ****       FP_duty = 100;
 603:Src/main.c    ****     }else if( FP_duty < 60 ){
 604:Src/main.c    ****       FP_duty = 60;
 605:Src/main.c    ****     }
 606:Src/main.c    **** 
 607:Src/main.c    **** 
 608:Src/main.c    ****     ///// Measure data  ----------------------------------------------------------------
 609:Src/main.c    ****     defi_decoder(UART1_RxData); // DEFI decoder
 610:Src/main.c    **** 
 611:Src/main.c    ****     if( flag_meas == 1 ){
 612:Src/main.c    **** 
 613:Src/main.c    ****       // I2C communication to ADXL345(3-axis G-sensor)
 614:Src/main.c    ****       if( Gsens_EN == 1 ){
 615:Src/main.c    ****         // Acceration 1G = 100
 616:Src/main.c    ****         Gsens_X = Gsens_ADXL345_Read_G('x', 0);
 617:Src/main.c    ****         Gsens_Y = Gsens_ADXL345_Read_G('y', 0);
 618:Src/main.c    ****         Gsens_Z = Gsens_ADXL345_Read_G('z', 0);
 619:Src/main.c    **** 
 620:Src/main.c    **** //        HAL_UART_Transmit_printf(&huart2, "(%d,%d,%d)\n", Gsens_X, Gsens_Y, Gsens_Z); // debug
 621:Src/main.c    ****         
 622:Src/main.c    ****       }
 623:Src/main.c    **** 
 624:Src/main.c    ****       meas_value[0] = DEFI_value[0];  // MAP
 625:Src/main.c    **** 		  meas_value[1] = DEFI_value[2];  // OILP
 626:Src/main.c    **** 			meas_value[2] = FP_volt;        // FuelPump Voltage
 627:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 628:Src/main.c    **** 			meas_value[4] = DEFI_value[5];  // OILT
 629:Src/main.c    **** 		  meas_value[5] = O2_volt;        // O2
 630:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 18


 631:Src/main.c    ****       flag_meas = 0; // enable again by TIM2 interrupt
 632:Src/main.c    **** 
 633:Src/main.c    ****       if( DUMMY_DATA ){
 634:Src/main.c    ****         // MAP
 635:Src/main.c    ****         if( DEFI_value[0] > 90 ){
 636:Src/main.c    ****           DEFI_value[0] = -60;
 637:Src/main.c    ****         }else{
 638:Src/main.c    ****           DEFI_value[0] = DEFI_value[0] + 1;
 639:Src/main.c    ****         }
 640:Src/main.c    ****         // OILP
 641:Src/main.c    ****         if( DEFI_value[2] > 60 ){
 642:Src/main.c    ****           DEFI_value[2] = 15;
 643:Src/main.c    ****         }else{
 644:Src/main.c    ****           DEFI_value[2] = DEFI_value[2] + 1;
 645:Src/main.c    ****         }
 646:Src/main.c    ****         // ECT
 647:Src/main.c    ****         if( DEFI_value[6] > 120 ){
 648:Src/main.c    ****           DEFI_value[6] = 60;
 649:Src/main.c    ****         }else{
 650:Src/main.c    ****           DEFI_value[6] = DEFI_value[6] + 1;
 651:Src/main.c    ****         }
 652:Src/main.c    ****         // OILT
 653:Src/main.c    ****         if( DEFI_value[5] > 120 ){
 654:Src/main.c    ****           DEFI_value[5] = 50;
 655:Src/main.c    ****         }else{
 656:Src/main.c    ****           DEFI_value[5] = DEFI_value[5] + 1;
 657:Src/main.c    ****         }
 658:Src/main.c    ****         // Tacho 
 659:Src/main.c    ****         if( rpm > 8500 ){
 660:Src/main.c    ****           rpm = 750;
 661:Src/main.c    ****         }else{
 662:Src/main.c    ****           rpm = 0;
 663:Src/main.c    ****         }
 664:Src/main.c    ****       }
 665:Src/main.c    **** 
 666:Src/main.c    ****     }
 667:Src/main.c    **** 
 668:Src/main.c    **** 
 669:Src/main.c    **** 
 670:Src/main.c    ****     ///// FP driver ----------------------------------------------------------------
 671:Src/main.c    ****     // Set PWM Duty for Timer1 / Output1 (Asymmetric PWM2)
 672:Src/main.c    ****     TIM1->CCR1 = (100 - FP_duty);
 673:Src/main.c    **** 
 674:Src/main.c    **** 
 675:Src/main.c    ****     ///// Switch ----------------------------------------------------------------
 676:Src/main.c    ****     if( flag_sw != 0 ){
 677:Src/main.c    ****       switch( flag_sw ){
 678:Src/main.c    ****         case 1: // SW "UP"
 679:Src/main.c    ****           #if DEBUG_USBserial
 680:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "UP "); // debug
 681:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 682:Src/main.c    ****           #endif
 683:Src/main.c    ****           if( mode < MODE_SETTING ){
 684:Src/main.c    ****             if( mode == N_mode-1 ){
 685:Src/main.c    ****               mode = 0;
 686:Src/main.c    ****             }else{
 687:Src/main.c    ****               mode++;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 19


 688:Src/main.c    ****             }
 689:Src/main.c    ****           }
 690:Src/main.c    ****           break;
 691:Src/main.c    ****         case 2: // SW "DOWN"
 692:Src/main.c    ****           #if DEBUG_USBserial
 693:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "DOWN "); // debug
 694:Src/main.c    ****           #endif
 695:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 696:Src/main.c    ****           if( mode < MODE_SETTING ){
 697:Src/main.c    ****             if( mode == 0 ){
 698:Src/main.c    ****               mode = N_mode-1;
 699:Src/main.c    ****             }else{
 700:Src/main.c    ****               mode--;
 701:Src/main.c    ****             }
 702:Src/main.c    ****           }
 703:Src/main.c    ****           break;
 704:Src/main.c    ****         case 3: // SW "ENTER"
 705:Src/main.c    ****           #if DEBUG_USBserial
 706:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "ENTER "); // debug
 707:Src/main.c    ****           #endif
 708:Src/main.c    ****           HAL_NVIC_DisableIRQ (EXTI1_IRQn);
 709:Src/main.c    **** 
 710:Src/main.c    ****           // if( setting == 0 ){
 711:Src/main.c    ****           //   mode = cursor;
 712:Src/main.c    ****           //   u8g2_ClearBuffer(&u8g2);
 713:Src/main.c    ****           // }else{
 714:Src/main.c    ****           //   mode = 10;
 715:Src/main.c    ****           // }
 716:Src/main.c    ****           // break;
 717:Src/main.c    **** 
 718:Src/main.c    ****         default:
 719:Src/main.c    ****           break;
 720:Src/main.c    ****       }
 721:Src/main.c    ****       u8g2_ClearBuffer(&u8g2);
 722:Src/main.c    ****       if( mode == MODE_BAR_METER ){
 723:Src/main.c    ****         draw_MeasLabels();
 724:Src/main.c    ****         draw_indicators();
 725:Src/main.c    **** 
 726:Src/main.c    ****       }else if( mode == MODE_CIRCULAR_METER ){
 727:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 728:Src/main.c    ****           x = meas_C_x;
 729:Src/main.c    ****           y = n * meas_C_height	+ meas_C_y;
 730:Src/main.c    ****           draw_MeasLabelUnit(&u8g2, x, y, meas_C_width, meas_C_height, meas_name[n], meas_unit[n]);
 731:Src/main.c    ****         }
 732:Src/main.c    ****         // draw indicators
 733:Src/main.c    ****         for( n=0; n<4; n++ ){
 734:Src/main.c    ****           draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_s
 735:Src/main.c    ****         }
 736:Src/main.c    ****         draw_CircularMeter_Init(32, 32, 31, 3, -60, 300, 10, 20, -1, -80, 120);
 737:Src/main.c    **** //        draw_CircularMeter_Init(26, 26, 26, 3, -60, 300, 10, 20, -1, -80, 120);
 738:Src/main.c    ****         draw_CircularMeter(&u8g2, 0);
 739:Src/main.c    **** 
 740:Src/main.c    ****       }else if( mode == MODE_ROTARY ){
 741:Src/main.c    ****         draw_MeasLabels_Rotary();
 742:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 2, meas_width1, meas_height, "TACHO", "rpm");
 743:Src/main.c    **** 
 744:Src/main.c    ****       }else if( mode == MODE_SCOPE_MAP ){
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 20


 745:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_m
 746:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "MAP", "kPa");
 747:Src/main.c    **** 
 748:Src/main.c    ****       }else if( mode == MODE_SCOPE_Gsens ){
 749:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, -200, 200, 4);
 750:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "LatG", "G");
 751:Src/main.c    **** 
 752:Src/main.c    ****       }
 753:Src/main.c    ****       u8g2_SendBuffer(&u8g2);
 754:Src/main.c    **** 
 755:Src/main.c    ****       TIM6->CNT = 0;
 756:Src/main.c    ****       
 757:Src/main.c    ****       flag_sw = 0;
 758:Src/main.c    ****     }
 759:Src/main.c    **** 
 760:Src/main.c    **** 
 761:Src/main.c    ****     ///// Display sequence ----------------------------------------------------------------
 762:Src/main.c    ****     if( flag_disp ){
 763:Src/main.c    **** 
 764:Src/main.c    ****       ///// multi meter /////
 765:Src/main.c    ****       if( mode == MODE_BAR_METER ){
 766:Src/main.c    ****         // update Fuel Pump Voltage
 767:Src/main.c    ****         draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, FP_duty, 3, 0, 0, "%  ");
 768:Src/main.c    **** 
 769:Src/main.c    ****         // draw bar graph
 770:Src/main.c    ****         draw_BarGraph(&u8g2, rpmbar_x, rpmbar_y, rpmbar_width, rpmbar_height, rpm, rpm_min, rpm_max
 771:Src/main.c    **** 
 772:Src/main.c    ****         // draw measurement data
 773:Src/main.c    ****         for( n=0; n<3; n++ ){
 774:Src/main.c    ****           x = meas_x;
 775:Src/main.c    ****           y = (n % 3) * meas_height	+ meas_y;
 776:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac
 777:Src/main.c    ****         }
 778:Src/main.c    ****         for( n=3; n<N_meas; n++ ){
 779:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 780:Src/main.c    ****           y = (n % 3) * meas_height	+ meas_y;
 781:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 782:Src/main.c    ****         }
 783:Src/main.c    ****         
 784:Src/main.c    ****         draw_indicators();
 785:Src/main.c    **** 
 786:Src/main.c    ****       ///// Circular Meter /////
 787:Src/main.c    ****       }else if( mode == MODE_CIRCULAR_METER ){
 788:Src/main.c    **** 
 789:Src/main.c    ****         draw_CircularMeter(&u8g2, meas_value[0]);
 790:Src/main.c    ****         
 791:Src/main.c    ****         draw_Value(&u8g2, 36, 33, 30, 16, meas_value[0], 3, 2, 1, "");
 792:Src/main.c    ****         draw_MeasUnit(&u8g2, 38, 40, 28, 16, "kPa");
 793:Src/main.c    ****         
 794:Src/main.c    **** //        draw_Value(&u8g2, 34, 28, 30, 16, meas_value[0], 3, 2, 1, "");
 795:Src/main.c    **** //        draw_MeasUnit(&u8g2, 36, 36, 28, 16, "kPa");
 796:Src/main.c    **** 
 797:Src/main.c    **** 
 798:Src/main.c    ****         // draw measurement data
 799:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 800:Src/main.c    ****           x = meas_C_x;
 801:Src/main.c    ****           y = n * meas_C_height	+ meas_C_y;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 21


 802:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_C_width, meas_C_height, meas_value[n], meas_digit[n], meas_f
 803:Src/main.c    ****         }
 804:Src/main.c    **** 
 805:Src/main.c    **** 
 806:Src/main.c    ****       }else if( mode == MODE_ROTARY ){
 807:Src/main.c    **** 
 808:Src/main.c    ****         rpm_integral = rpm_integral + rpm;
 809:Src/main.c    ****         if( rpm_integral > 10000 ){
 810:Src/main.c    ****           rpm_integral = rpm_integral - 10000;
 811:Src/main.c    ****         }
 812:Src/main.c    ****         index_animation = (uint8_t)( (float)rpm_integral / 1000.0 );
 813:Src/main.c    **** 
 814:Src/main.c    ****         draw_Rotary(&u8g2, 58, 2, index_animation);
 815:Src/main.c    **** 
 816:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 2, meas_width1, meas_height, "TACHO", "rpm");
 817:Src/main.c    ****         draw_Value(&u8g2, 0, 2, meas_width1, meas_height, rpm, 4, 0, 0, "rpm");
 818:Src/main.c    **** 
 819:Src/main.c    ****         draw_MeasLabels_Rotary();
 820:Src/main.c    ****         // draw measurement data
 821:Src/main.c    ****         for( n=0; n<4; n++ ){
 822:Src/main.c    ****           x = meas_x;
 823:Src/main.c    ****           y = (n % 4) * meas_height	+ meas_y;
 824:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac
 825:Src/main.c    ****         }
 826:Src/main.c    **** 
 827:Src/main.c    **** 
 828:Src/main.c    ****       ///// Scope /////
 829:Src/main.c    ****       }else if( mode == MODE_SCOPE_MAP ){
 830:Src/main.c    **** 
 831:Src/main.c    ****         if( circular_buffer_index > 0 ){
 832:Src/main.c    ****           circular_buffer_index--;
 833:Src/main.c    ****         }else{
 834:Src/main.c    ****           circular_buffer_index = 128;
 835:Src/main.c    ****         }
 836:Src/main.c    ****         circular_buffer[circular_buffer_index] = meas_value[0];
 837:Src/main.c    **** 
 838:Src/main.c    ****         // draw wave
 839:Src/main.c    ****         draw_Wave(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_max, c
 840:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 841:Src/main.c    **** 
 842:Src/main.c    ****       ///// G-Scope /////
 843:Src/main.c    ****       }else if( mode == MODE_SCOPE_Gsens ){
 844:Src/main.c    **** 
 845:Src/main.c    ****         if( circular_buffer_index > 0 ){
 846:Src/main.c    ****           circular_buffer_index--;
 847:Src/main.c    ****         }else{
 848:Src/main.c    ****           circular_buffer_index = 128;
 849:Src/main.c    ****         }
 850:Src/main.c    ****         circular_buffer[circular_buffer_index] = Gsens_Y;
 851:Src/main.c    **** 
 852:Src/main.c    ****         // draw wave
 853:Src/main.c    ****         draw_Wave(&u8g2, wave_x, wave_y, wave_width, wave_height, -200, +200, circular_buffer, circ
 854:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 855:Src/main.c    **** 
 856:Src/main.c    ****       // mode setting
 857:Src/main.c    ****       }else if( mode == MODE_SETTING ){
 858:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 22


 859:Src/main.c    ****         u8g2_ClearBuffer(&u8g2);
 860:Src/main.c    ****         u8g2_SetFont(&u8g2, u8g2_font_7x14B_tf);
 861:Src/main.c    ****         u8g2_DrawStr(&u8g2, 2, 15, "Mode Setting" );
 862:Src/main.c    ****         if( cursor == 0 ){
 863:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, ">" );
 864:Src/main.c    ****         }else{
 865:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, " " );
 866:Src/main.c    ****         }
 867:Src/main.c    ****         u8g2_DrawStr(&u8g2,10, 30, "Multi-Meter" );
 868:Src/main.c    ****         if( cursor == 1 ){
 869:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 870:Src/main.c    ****         }else{
 871:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, " " );
 872:Src/main.c    ****         }
 873:Src/main.c    ****         u8g2_DrawStr(&u8g2,10, 45, "Scope" );
 874:Src/main.c    ****         u8g2_SendBuffer(&u8g2);
 875:Src/main.c    **** 
 876:Src/main.c    ****       }
 877:Src/main.c    ****       // send buffer
 878:Src/main.c    ****       u8g2_SendBuffer(&u8g2);
 879:Src/main.c    **** 
 880:Src/main.c    ****       flag_disp = 0; // enable again by TIM2 interrupt
 881:Src/main.c    ****     }
 882:Src/main.c    ****   
 883:Src/main.c    **** 
 884:Src/main.c    **** 
 885:Src/main.c    ****   }
 886:Src/main.c    ****   /* USER CODE END 3 */
 887:Src/main.c    **** }
 888:Src/main.c    **** 
 889:Src/main.c    **** /**
 890:Src/main.c    ****   * @brief System Clock Configuration
 891:Src/main.c    ****   * @retval None
 892:Src/main.c    ****   */
 893:Src/main.c    **** void SystemClock_Config(void)
 894:Src/main.c    **** {
 343              		.loc 1 894 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 88
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347 0000 30B5     		push	{r4, r5, lr}
 348              	.LCFI9:
 349              		.cfi_def_cfa_offset 12
 350              		.cfi_offset 4, -12
 351              		.cfi_offset 5, -8
 352              		.cfi_offset 14, -4
 353 0002 97B0     		sub	sp, sp, #92
 354              	.LCFI10:
 355              		.cfi_def_cfa_offset 104
 895:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 356              		.loc 1 895 0
 357 0004 0023     		movs	r3, #0
 896:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 897:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 898:Src/main.c    **** 
 899:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 900:Src/main.c    ****   */
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 23


 901:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 358              		.loc 1 901 0
 359 0006 0324     		movs	r4, #3
 902:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 360              		.loc 1 902 0
 361 0008 4FF4A022 		mov	r2, #327680
 903:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 904:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 362              		.loc 1 904 0
 363 000c 0120     		movs	r0, #1
 895:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 364              		.loc 1 895 0
 365 000e CDE90E33 		strd	r3, r3, [sp, #56]
 366 0012 1293     		str	r3, [sp, #72]
 896:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 367              		.loc 1 896 0
 368 0014 0193     		str	r3, [sp, #4]
 897:Src/main.c    **** 
 369              		.loc 1 897 0
 370 0016 0693     		str	r3, [sp, #24]
 896:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 371              		.loc 1 896 0
 372 0018 CDE90233 		strd	r3, r3, [sp, #8]
 373 001c CDE90433 		strd	r3, r3, [sp, #16]
 897:Src/main.c    **** 
 374              		.loc 1 897 0
 375 0020 CDE90733 		strd	r3, r3, [sp, #28]
 376 0024 CDE90933 		strd	r3, r3, [sp, #36]
 377 0028 0B93     		str	r3, [sp, #44]
 905:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 378              		.loc 1 905 0
 379 002a 1021     		movs	r1, #16
 901:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 380              		.loc 1 901 0
 381 002c 0C94     		str	r4, [sp, #48]
 902:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 382              		.loc 1 902 0
 383 002e 0D92     		str	r2, [sp, #52]
 906:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 384              		.loc 1 906 0
 385 0030 0224     		movs	r4, #2
 907:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 386              		.loc 1 907 0
 387 0032 4FF48032 		mov	r2, #65536
 904:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 388              		.loc 1 904 0
 389 0036 1090     		str	r0, [sp, #64]
 908:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 390              		.loc 1 908 0
 391 0038 4FF4E013 		mov	r3, #1835008
 909:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 392              		.loc 1 909 0
 393 003c 0CA8     		add	r0, sp, #48
 905:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 394              		.loc 1 905 0
 395 003e 1191     		str	r1, [sp, #68]
 907:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 24


 396              		.loc 1 907 0
 397 0040 CDE91342 		strd	r4, r2, [sp, #76]
 908:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 398              		.loc 1 908 0
 399 0044 1593     		str	r3, [sp, #84]
 400              		.loc 1 909 0
 401 0046 FFF7FEFF 		bl	HAL_RCC_OscConfig
 402              	.LVL18:
 403 004a 00B1     		cbz	r0, .L22
 404              	.L23:
 405 004c FEE7     		b	.L23
 406              	.L22:
 407 004e 0346     		mov	r3, r0
 910:Src/main.c    ****   {
 911:Src/main.c    ****     Error_Handler();
 912:Src/main.c    ****   }
 913:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 914:Src/main.c    ****   */
 915:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 916:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 917:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 918:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 919:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 408              		.loc 1 919 0
 409 0050 4FF48062 		mov	r2, #1024
 920:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 921:Src/main.c    **** 
 922:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 410              		.loc 1 922 0
 411 0054 01A8     		add	r0, sp, #4
 412 0056 2146     		mov	r1, r4
 915:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 413              		.loc 1 915 0
 414 0058 0F25     		movs	r5, #15
 918:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 415              		.loc 1 918 0
 416 005a 0393     		str	r3, [sp, #12]
 920:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 417              		.loc 1 920 0
 418 005c 0593     		str	r3, [sp, #20]
 917:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 419              		.loc 1 917 0
 420 005e 0294     		str	r4, [sp, #8]
 915:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 421              		.loc 1 915 0
 422 0060 0195     		str	r5, [sp, #4]
 919:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 423              		.loc 1 919 0
 424 0062 0492     		str	r2, [sp, #16]
 425              		.loc 1 922 0
 426 0064 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 427              	.LVL19:
 428 0068 0346     		mov	r3, r0
 429 006a 00B1     		cbz	r0, .L24
 430              	.L25:
 431 006c FEE7     		b	.L25
 432              	.L24:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 25


 923:Src/main.c    ****   {
 924:Src/main.c    ****     Error_Handler();
 925:Src/main.c    ****   }
 926:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1
 433              		.loc 1 926 0
 434 006e 41F22102 		movw	r2, #4129
 927:Src/main.c    ****                               |RCC_PERIPHCLK_TIM1;
 928:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 929:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 930:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 931:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 435              		.loc 1 931 0
 436 0072 06A8     		add	r0, sp, #24
 929:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 437              		.loc 1 929 0
 438 0074 CDE90833 		strd	r3, r3, [sp, #32]
 930:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 439              		.loc 1 930 0
 440 0078 0B93     		str	r3, [sp, #44]
 926:Src/main.c    ****                               |RCC_PERIPHCLK_TIM1;
 441              		.loc 1 926 0
 442 007a 0692     		str	r2, [sp, #24]
 443              		.loc 1 931 0
 444 007c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 445              	.LVL20:
 446 0080 00B1     		cbz	r0, .L21
 447              	.L27:
 448 0082 FEE7     		b	.L27
 449              	.L21:
 932:Src/main.c    ****   {
 933:Src/main.c    ****     Error_Handler();
 934:Src/main.c    ****   }
 935:Src/main.c    **** }
 450              		.loc 1 935 0
 451 0084 17B0     		add	sp, sp, #92
 452              	.LCFI11:
 453              		.cfi_def_cfa_offset 12
 454              		@ sp needed
 455 0086 30BD     		pop	{r4, r5, pc}
 456              		.cfi_endproc
 457              	.LFE131:
 459              		.global	__aeabi_f2d
 460              		.global	__aeabi_dmul
 461              		.global	__aeabi_ddiv
 462              		.global	__aeabi_d2iz
 463              		.global	__aeabi_d2uiz
 464              		.section	.text.startup.main,"ax",%progbits
 465              		.align	1
 466              		.p2align 2,,3
 467              		.global	main
 468              		.syntax unified
 469              		.thumb
 470              		.thumb_func
 471              		.fpu fpv4-sp-d16
 473              	main:
 474              	.LFB130:
 404:Src/main.c    ****   /* USER CODE BEGIN 1 */
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 26


 475              		.loc 1 404 0
 476              		.cfi_startproc
 477              		@ args = 0, pretend = 0, frame = 272
 478              		@ frame_needed = 0, uses_anonymous_args = 0
 479 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 480              	.LCFI12:
 481              		.cfi_def_cfa_offset 36
 482              		.cfi_offset 4, -36
 483              		.cfi_offset 5, -32
 484              		.cfi_offset 6, -28
 485              		.cfi_offset 7, -24
 486              		.cfi_offset 8, -20
 487              		.cfi_offset 9, -16
 488              		.cfi_offset 10, -12
 489              		.cfi_offset 11, -8
 490              		.cfi_offset 14, -4
 491 0004 CDB0     		sub	sp, sp, #308
 492              	.LCFI13:
 493              		.cfi_def_cfa_offset 344
 413:Src/main.c    **** 
 494              		.loc 1 413 0
 495 0006 FFF7FEFF 		bl	HAL_Init
 496              	.LVL21:
 428:Src/main.c    **** 
 497              		.loc 1 428 0
 498 000a 0021     		movs	r1, #0
 499 000c 4FF48072 		mov	r2, #256
 500 0010 0CA8     		add	r0, sp, #48
 501 0012 FFF7FEFF 		bl	memset
 502              	.LVL22:
 433:Src/main.c    **** 
 503              		.loc 1 433 0
 504 0016 FFF7FEFF 		bl	SystemClock_Config
 505              	.LVL23:
 440:Src/main.c    ****   MX_DMA_Init();
 506              		.loc 1 440 0
 507 001a FFF7FEFF 		bl	MX_GPIO_Init
 508              	.LVL24:
 441:Src/main.c    ****   MX_ADC1_Init();
 509              		.loc 1 441 0
 510 001e FFF7FEFF 		bl	MX_DMA_Init
 511              	.LVL25:
 442:Src/main.c    ****   MX_CAN_Init();
 512              		.loc 1 442 0
 513 0022 FFF7FEFF 		bl	MX_ADC1_Init
 514              	.LVL26:
 443:Src/main.c    ****   MX_I2C1_Init();
 515              		.loc 1 443 0
 516 0026 FFF7FEFF 		bl	MX_CAN_Init
 517              	.LVL27:
 444:Src/main.c    ****   MX_SPI1_Init();
 518              		.loc 1 444 0
 519 002a FFF7FEFF 		bl	MX_I2C1_Init
 520              	.LVL28:
 445:Src/main.c    ****   MX_TIM1_Init();
 521              		.loc 1 445 0
 522 002e FFF7FEFF 		bl	MX_SPI1_Init
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 27


 523              	.LVL29:
 446:Src/main.c    ****   MX_TIM2_Init();
 524              		.loc 1 446 0
 525 0032 FFF7FEFF 		bl	MX_TIM1_Init
 526              	.LVL30:
 447:Src/main.c    ****   MX_TIM3_Init();
 527              		.loc 1 447 0
 528 0036 FFF7FEFF 		bl	MX_TIM2_Init
 529              	.LVL31:
 448:Src/main.c    ****   MX_TIM6_Init();
 530              		.loc 1 448 0
 531 003a FFF7FEFF 		bl	MX_TIM3_Init
 532              	.LVL32:
 449:Src/main.c    ****   MX_USART1_UART_Init();
 533              		.loc 1 449 0
 534 003e FFF7FEFF 		bl	MX_TIM6_Init
 535              	.LVL33:
 450:Src/main.c    ****   MX_USART2_UART_Init();
 536              		.loc 1 450 0
 537 0042 FFF7FEFF 		bl	MX_USART1_UART_Init
 538              	.LVL34:
 451:Src/main.c    ****   MX_TIM7_Init();
 539              		.loc 1 451 0
 540 0046 FFF7FEFF 		bl	MX_USART2_UART_Init
 541              	.LVL35:
 452:Src/main.c    ****   MX_TIM16_Init();
 542              		.loc 1 452 0
 543 004a FFF7FEFF 		bl	MX_TIM7_Init
 544              	.LVL36:
 453:Src/main.c    ****   /* USER CODE BEGIN 2 */
 545              		.loc 1 453 0
 546 004e FFF7FEFF 		bl	MX_TIM16_Init
 547              	.LVL37:
 461:Src/main.c    ****     Error_Handler();
 548              		.loc 1 461 0
 549 0052 0021     		movs	r1, #0
 550 0054 B248     		ldr	r0, .L131+24
 551 0056 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 552              	.LVL38:
 553 005a 00B1     		cbz	r0, .L30
 554              	.L31:
 555 005c FEE7     		b	.L31
 556              	.L30:
 466:Src/main.c    ****     Error_Handler();
 557              		.loc 1 466 0
 558 005e B148     		ldr	r0, .L131+28
 559 0060 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 560              	.LVL39:
 561 0064 00B1     		cbz	r0, .L32
 562              	.L33:
 563 0066 FEE7     		b	.L33
 564              	.L32:
 471:Src/main.c    ****     Error_Handler();
 565              		.loc 1 471 0
 566 0068 AF48     		ldr	r0, .L131+32
 567 006a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 568              	.LVL40:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 28


 569 006e 00B1     		cbz	r0, .L34
 570              	.L35:
 571 0070 FEE7     		b	.L35
 572              	.L34:
 476:Src/main.c    ****     Error_Handler();
 573              		.loc 1 476 0
 574 0072 AE48     		ldr	r0, .L131+36
 575 0074 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 576              	.LVL41:
 577 0078 00B1     		cbz	r0, .L36
 578              	.L37:
 579 007a FEE7     		b	.L37
 580              	.L36:
 481:Src/main.c    ****     Error_Handler();
 581              		.loc 1 481 0
 582 007c AC48     		ldr	r0, .L131+40
 583 007e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 584              	.LVL42:
 585 0082 00B1     		cbz	r0, .L38
 586              	.L39:
 587 0084 FEE7     		b	.L39
 588              	.L38:
 486:Src/main.c    ****     Error_Handler();
 589              		.loc 1 486 0
 590 0086 AB48     		ldr	r0, .L131+44
 591 0088 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 592              	.LVL43:
 593 008c 0646     		mov	r6, r0
 594 008e 00B1     		cbz	r0, .L40
 595              	.L41:
 596 0090 FEE7     		b	.L41
 597              	.L40:
 492:Src/main.c    **** 
 598              		.loc 1 492 0
 599 0092 0A22     		movs	r2, #10
 600 0094 A849     		ldr	r1, .L131+48
 601 0096 A948     		ldr	r0, .L131+52
 537:Src/main.c    **** 
 602              		.loc 1 537 0
 603 0098 DFF820B3 		ldr	fp, .L131+180
 604 009c DFF820A3 		ldr	r10, .L131+184
 605 00a0 A74C     		ldr	r4, .L131+56
 606 00a2 A84D     		ldr	r5, .L131+60
 607 00a4 DFF81C93 		ldr	r9, .L131+188
 492:Src/main.c    **** 
 608              		.loc 1 492 0
 609 00a8 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 610              	.LVL44:
 495:Src/main.c    ****   // variables is defined in 'defi.h'
 611              		.loc 1 495 0
 612 00ac 0122     		movs	r2, #1
 613 00ae A649     		ldr	r1, .L131+64
 614 00b0 A648     		ldr	r0, .L131+68
 615 00b2 FFF7FEFF 		bl	HAL_UART_Receive_IT
 616              	.LVL45:
 499:Src/main.c    **** 
 617              		.loc 1 499 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 29


 618 00b6 FFF7FEFF 		bl	CAN_OBD_Init
 619              	.LVL46:
 503:Src/main.c    ****   // 128x64 1.3inch SPI
 620              		.loc 1 503 0
 621 00ba A54B     		ldr	r3, .L131+72
 622 00bc A54A     		ldr	r2, .L131+76
 623 00be A649     		ldr	r1, .L131+80
 624 00c0 A648     		ldr	r0, .L131+84
 625 00c2 FFF7FEFF 		bl	u8g2_Setup_ssd1309_128x64_noname2_f
 626              	.LVL47:
 508:Src/main.c    ****   HAL_Delay(5);
 627              		.loc 1 508 0
 628 00c6 3246     		mov	r2, r6
 629 00c8 0821     		movs	r1, #8
 630 00ca A548     		ldr	r0, .L131+88
 631 00cc FFF7FEFF 		bl	HAL_GPIO_WritePin
 632              	.LVL48:
 509:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 633              		.loc 1 509 0
 634 00d0 0520     		movs	r0, #5
 635 00d2 FFF7FEFF 		bl	HAL_Delay
 636              	.LVL49:
 510:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 637              		.loc 1 510 0
 638 00d6 0122     		movs	r2, #1
 639 00d8 0821     		movs	r1, #8
 640 00da A148     		ldr	r0, .L131+88
 641 00dc FFF7FEFF 		bl	HAL_GPIO_WritePin
 642              	.LVL50:
 511:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 643              		.loc 1 511 0
 644 00e0 9E48     		ldr	r0, .L131+84
 645 00e2 FFF7FEFF 		bl	u8x8_InitDisplay
 646              	.LVL51:
 512:Src/main.c    ****   u8g2_SetContrast(&u8g2, 255); // set contrast
 647              		.loc 1 512 0
 648 00e6 3146     		mov	r1, r6
 649 00e8 9C48     		ldr	r0, .L131+84
 650 00ea FFF7FEFF 		bl	u8x8_SetPowerSave
 651              	.LVL52:
 513:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 652              		.loc 1 513 0
 653 00ee FF21     		movs	r1, #255
 654 00f0 9A48     		ldr	r0, .L131+84
 655 00f2 FFF7FEFF 		bl	u8x8_SetContrast
 656              	.LVL53:
 514:Src/main.c    **** 
 657              		.loc 1 514 0
 658 00f6 9948     		ldr	r0, .L131+84
 659 00f8 FFF7FEFF 		bl	u8g2_ClearDisplay
 660              	.LVL54:
 517:Src/main.c    **** 
 661              		.loc 1 517 0
 662 00fc 994B     		ldr	r3, .L131+92
 663 00fe 0193     		str	r3, [sp, #4]
 664 0100 3023     		movs	r3, #48
 665 0102 0093     		str	r3, [sp]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 30


 666 0104 3246     		mov	r2, r6
 667 0106 2821     		movs	r1, #40
 668 0108 9448     		ldr	r0, .L131+84
 669 010a FFF7FEFF 		bl	u8g2_DrawXBMP
 670              	.LVL55:
 519:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 671              		.loc 1 519 0
 672 010e 9649     		ldr	r1, .L131+96
 673 0110 9248     		ldr	r0, .L131+84
 674 0112 FFF7FEFF 		bl	u8g2_SetFont
 675              	.LVL56:
 520:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.3a");
 676              		.loc 1 520 0
 677 0116 954B     		ldr	r3, .L131+100
 678 0118 9048     		ldr	r0, .L131+84
 679 011a 3722     		movs	r2, #55
 680 011c 1021     		movs	r1, #16
 681 011e FFF7FEFF 		bl	u8g2_DrawStr
 682              	.LVL57:
 521:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 683              		.loc 1 521 0
 684 0122 934B     		ldr	r3, .L131+104
 685 0124 8D48     		ldr	r0, .L131+84
 686 0126 4022     		movs	r2, #64
 687 0128 2821     		movs	r1, #40
 688 012a FFF7FEFF 		bl	u8g2_DrawStr
 689              	.LVL58:
 522:Src/main.c    ****   if( DUMMY_DATA ){
 690              		.loc 1 522 0
 691 012e 8B48     		ldr	r0, .L131+84
 692 0130 FFF7FEFF 		bl	u8g2_SendBuffer
 693              	.LVL59:
 524:Src/main.c    ****     u8g2_SendBuffer(&u8g2);
 694              		.loc 1 524 0
 695 0134 8F4B     		ldr	r3, .L131+108
 696 0136 8948     		ldr	r0, .L131+84
 697 0138 0822     		movs	r2, #8
 698 013a 3146     		mov	r1, r6
 699 013c FFF7FEFF 		bl	u8g2_DrawStr
 700              	.LVL60:
 525:Src/main.c    ****     HAL_Delay(500);
 701              		.loc 1 525 0
 702 0140 8648     		ldr	r0, .L131+84
 703 0142 FFF7FEFF 		bl	u8g2_SendBuffer
 704              	.LVL61:
 526:Src/main.c    ****   }
 705              		.loc 1 526 0
 706 0146 4FF4FA70 		mov	r0, #500
 707 014a FFF7FEFF 		bl	HAL_Delay
 708              	.LVL62:
 528:Src/main.c    **** 
 709              		.loc 1 528 0
 710 014e 8348     		ldr	r0, .L131+84
 711 0150 FFF7FEFF 		bl	u8g2_SendBuffer
 712              	.LVL63:
 530:Src/main.c    **** 
 713              		.loc 1 530 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 31


 714 0154 4FF47A70 		mov	r0, #1000
 715 0158 FFF7FEFF 		bl	HAL_Delay
 716              	.LVL64:
 532:Src/main.c    **** 
 717              		.loc 1 532 0
 718 015c 7F48     		ldr	r0, .L131+84
 719 015e FFF7FEFF 		bl	u8g2_ClearBuffer
 720              	.LVL65:
 534:Src/main.c    **** 
 721              		.loc 1 534 0
 722 0162 8549     		ldr	r1, .L131+112
 723 0164 8548     		ldr	r0, .L131+116
 724 0166 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 725              	.LVL66:
 537:Src/main.c    **** 
 726              		.loc 1 537 0
 727 016a BBF90030 		ldrsh	r3, [fp]
 728 016e 844A     		ldr	r2, .L131+120
 729 0170 C3F16403 		rsb	r3, r3, #100
 730 0174 5363     		str	r3, [r2, #52]
 544:Src/main.c    ****   draw_indicators();
 731              		.loc 1 544 0
 732 0176 FFF7FEFF 		bl	draw_MeasLabels
 733              	.LVL67:
 545:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 734              		.loc 1 545 0
 735 017a FFF7FEFF 		bl	draw_indicators
 736              	.LVL68:
 546:Src/main.c    **** 
 737              		.loc 1 546 0
 738 017e 7748     		ldr	r0, .L131+84
 739 0180 FFF7FEFF 		bl	u8g2_SendBuffer
 740              	.LVL69:
 549:Src/main.c    **** 
 741              		.loc 1 549 0
 742 0184 3046     		mov	r0, r6
 743 0186 FFF7FEFF 		bl	Gsens_ADXL345_Init
 744              	.LVL70:
 745 018a 7E4B     		ldr	r3, .L131+124
 427:Src/main.c    ****   int16_t   circular_buffer[128]={};
 746              		.loc 1 427 0
 747 018c 0A96     		str	r6, [sp, #40]
 549:Src/main.c    **** 
 748              		.loc 1 549 0
 749 018e 1870     		strb	r0, [r3]
 750              	.LVL71:
 751              	.L94:
 752              	.LBB29:
 559:Src/main.c    ****     }
 753              		.loc 1 559 0
 754 0190 4FF00008 		mov	r8, #0
 755 0194 ACE0     		b	.L76
 756              	.L122:
 757 0196 CAF80080 		str	r8, [r10]
 758              	.L43:
 563:Src/main.c    ****     }
 759              		.loc 1 563 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 32


 760 019a 7B4B     		ldr	r3, .L131+128
 761 019c 7B4A     		ldr	r2, .L131+132
 762 019e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 763 01a0 DBB2     		uxtb	r3, r3
 764 01a2 1370     		strb	r3, [r2]
 765              	.L44:
 573:Src/main.c    ****     // Resister attenation ratio
 766              		.loc 1 573 0
 767 01a4 7A4E     		ldr	r6, .L131+136
 567:Src/main.c    **** 
 768              		.loc 1 567 0
 769 01a6 774A     		ldr	r2, .L131+124
 573:Src/main.c    ****     // Resister attenation ratio
 770              		.loc 1 573 0
 771 01a8 3088     		ldrh	r0, [r6]
 566:Src/main.c    ****     idct_status[1] = Gsens_EN;
 772              		.loc 1 566 0
 773 01aa 7A49     		ldr	r1, .L131+140
 567:Src/main.c    **** 
 774              		.loc 1 567 0
 775 01ac 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 566:Src/main.c    ****     idct_status[1] = Gsens_EN;
 776              		.loc 1 566 0
 777 01ae 0B70     		strb	r3, [r1]
 573:Src/main.c    ****     // Resister attenation ratio
 778              		.loc 1 573 0
 779 01b0 07EE900A 		vmov	s15, r0	@ int
 780 01b4 F8EE677A 		vcvt.f32.u32	s15, s15
 567:Src/main.c    **** 
 781              		.loc 1 567 0
 782 01b8 4A70     		strb	r2, [r1, #1]
 573:Src/main.c    ****     // Resister attenation ratio
 783              		.loc 1 573 0
 784 01ba 17EE900A 		vmov	r0, s15
 785 01be FFF7FEFF 		bl	__aeabi_f2d
 786              	.LVL72:
 787 01c2 51A3     		adr	r3, .L131
 788 01c4 D3E90023 		ldrd	r2, [r3]
 789 01c8 FFF7FEFF 		bl	__aeabi_dmul
 790              	.LVL73:
 791 01cc 50A3     		adr	r3, .L131+8
 792 01ce D3E90023 		ldrd	r2, [r3]
 793 01d2 FFF7FEFF 		bl	__aeabi_ddiv
 794              	.LVL74:
 795 01d6 FFF7FEFF 		bl	__aeabi_d2iz
 796              	.LVL75:
 580:Src/main.c    ****     // Resister attenation ratio
 797              		.loc 1 580 0
 798 01da 7388     		ldrh	r3, [r6, #2]
 573:Src/main.c    ****     // Resister attenation ratio
 799              		.loc 1 573 0
 800 01dc 6E4A     		ldr	r2, .L131+144
 580:Src/main.c    ****     // Resister attenation ratio
 801              		.loc 1 580 0
 802 01de 07EE903A 		vmov	s15, r3	@ int
 803 01e2 F8EE677A 		vcvt.f32.u32	s15, s15
 573:Src/main.c    ****     // Resister attenation ratio
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 33


 804              		.loc 1 573 0
 805 01e6 1080     		strh	r0, [r2]	@ movhi
 580:Src/main.c    ****     // Resister attenation ratio
 806              		.loc 1 580 0
 807 01e8 17EE900A 		vmov	r0, s15
 808 01ec FFF7FEFF 		bl	__aeabi_f2d
 809              	.LVL76:
 810 01f0 45A3     		adr	r3, .L131
 811 01f2 D3E90023 		ldrd	r2, [r3]
 812 01f6 FFF7FEFF 		bl	__aeabi_dmul
 813              	.LVL77:
 814 01fa 45A3     		adr	r3, .L131+8
 815 01fc D3E90023 		ldrd	r2, [r3]
 816 0200 FFF7FEFF 		bl	__aeabi_ddiv
 817              	.LVL78:
 818 0204 FFF7FEFF 		bl	__aeabi_d2iz
 819              	.LVL79:
 820 0208 644B     		ldr	r3, .L131+148
 590:Src/main.c    **** 
 821              		.loc 1 590 0
 822 020a 2788     		ldrh	r7, [r4]
 580:Src/main.c    ****     // Resister attenation ratio
 823              		.loc 1 580 0
 824 020c 1880     		strh	r0, [r3]	@ movhi
 590:Src/main.c    **** 
 825              		.loc 1 590 0
 826 020e 4622     		movs	r2, #70
 827 0210 5023     		movs	r3, #80
 828 0212 4FF48776 		mov	r6, #270
 829 0216 2988     		ldrh	r1, [r5]
 830 0218 0093     		str	r3, [sp]
 831 021a CDE90126 		strd	r2, r6, [sp, #4]
 832 021e 0023     		movs	r3, #0
 833 0220 FA22     		movs	r2, #250
 834 0222 F8B2     		uxtb	r0, r7
 835 0224 FFF7FEFF 		bl	CAN_OBD_Response
 836              	.LVL80:
 595:Src/main.c    ****       FP_duty = 100;
 837              		.loc 1 595 0
 838 0228 2B88     		ldrh	r3, [r5]
 839 022a 2288     		ldrh	r2, [r4]
 840 022c 1BB2     		sxth	r3, r3
 841 022e 40F6B731 		movw	r1, #2999
 842 0232 8B42     		cmp	r3, r1
 843 0234 12B2     		sxth	r2, r2
 844 0236 1CDC     		bgt	.L48
 845 0238 002A     		cmp	r2, #0
 846 023a 1ADC     		bgt	.L48
 598:Src/main.c    ****     }
 847              		.loc 1 598 0
 848 023c 2B88     		ldrh	r3, [r5]
 849 023e 18B2     		sxth	r0, r3
 850 0240 07EE900A 		vmov	s15, r0	@ int
 851 0244 F8EEE77A 		vcvt.f32.s32	s15, s15
 852 0248 17EE900A 		vmov	r0, s15
 853 024c FFF7FEFF 		bl	__aeabi_f2d
 854              	.LVL81:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 34


 855 0250 31A3     		adr	r3, .L131+16
 856 0252 D3E90023 		ldrd	r2, [r3]
 857 0256 FFF7FEFF 		bl	__aeabi_ddiv
 858              	.LVL82:
 859 025a 0022     		movs	r2, #0
 860 025c 504B     		ldr	r3, .L131+152
 861 025e FFF7FEFF 		bl	__aeabi_dmul
 862              	.LVL83:
 863 0262 FFF7FEFF 		bl	__aeabi_d2uiz
 864              	.LVL84:
 865 0266 00B2     		sxth	r0, r0
 601:Src/main.c    ****       FP_duty = 100;
 866              		.loc 1 601 0
 867 0268 6428     		cmp	r0, #100
 598:Src/main.c    ****     }
 868              		.loc 1 598 0
 869 026a ABF80000 		strh	r0, [fp]	@ movhi
 601:Src/main.c    ****       FP_duty = 100;
 870              		.loc 1 601 0
 871 026e 40F30884 		ble	.L113
 872              	.L48:
 596:Src/main.c    ****     }else{
 873              		.loc 1 596 0
 874 0272 6423     		movs	r3, #100
 875 0274 ABF80030 		strh	r3, [fp]	@ movhi
 876              	.L47:
 609:Src/main.c    **** 
 877              		.loc 1 609 0
 878 0278 4A48     		ldr	r0, .L131+156
 879 027a FFF7FEFF 		bl	defi_decoder
 880              	.LVL85:
 611:Src/main.c    **** 
 881              		.loc 1 611 0
 882 027e 4A4B     		ldr	r3, .L131+160
 883 0280 1B68     		ldr	r3, [r3]
 884 0282 012B     		cmp	r3, #1
 885 0284 00F0A080 		beq	.L114
 886              	.L49:
 672:Src/main.c    **** 
 887              		.loc 1 672 0
 888 0288 BBF90030 		ldrsh	r3, [fp]
 889 028c 3C4A     		ldr	r2, .L131+120
 890 028e C3F16403 		rsb	r3, r3, #100
 891 0292 5363     		str	r3, [r2, #52]
 676:Src/main.c    ****       switch( flag_sw ){
 892              		.loc 1 676 0
 893 0294 454B     		ldr	r3, .L131+164
 894 0296 1B68     		ldr	r3, [r3]
 895 0298 2BB3     		cbz	r3, .L60
 677:Src/main.c    ****         case 1: // SW "UP"
 896              		.loc 1 677 0
 897 029a 022B     		cmp	r3, #2
 898 029c 00F00C81 		beq	.L62
 899 02a0 032B     		cmp	r3, #3
 900 02a2 00F00181 		beq	.L63
 901 02a6 012B     		cmp	r3, #1
 902 02a8 00F01881 		beq	.L115
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 35


 903              	.L61:
 721:Src/main.c    ****       if( mode == MODE_BAR_METER ){
 904              		.loc 1 721 0
 905 02ac 2B48     		ldr	r0, .L131+84
 906 02ae FFF7FEFF 		bl	u8g2_ClearBuffer
 907              	.LVL86:
 722:Src/main.c    ****         draw_MeasLabels();
 908              		.loc 1 722 0
 909 02b2 3F4B     		ldr	r3, .L131+168
 910 02b4 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 911 02b6 002E     		cmp	r6, #0
 912 02b8 00F0D680 		beq	.L116
 726:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 913              		.loc 1 726 0
 914 02bc 012E     		cmp	r6, #1
 915 02be 00F01F81 		beq	.L117
 740:Src/main.c    ****         draw_MeasLabels_Rotary();
 916              		.loc 1 740 0
 917 02c2 022E     		cmp	r6, #2
 918 02c4 00F07C81 		beq	.L118
 744:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_m
 919              		.loc 1 744 0
 920 02c8 032E     		cmp	r6, #3
 921 02ca 00F08881 		beq	.L119
 748:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, -200, 200, 4);
 922              		.loc 1 748 0
 923 02ce 042E     		cmp	r6, #4
 924 02d0 00F0A081 		beq	.L120
 925              	.L70:
 753:Src/main.c    **** 
 926              		.loc 1 753 0
 927 02d4 2148     		ldr	r0, .L131+84
 928 02d6 FFF7FEFF 		bl	u8g2_SendBuffer
 929              	.LVL87:
 755:Src/main.c    ****       
 930              		.loc 1 755 0
 931 02da 364B     		ldr	r3, .L131+172
 932 02dc C3F82480 		str	r8, [r3, #36]
 757:Src/main.c    ****     }
 933              		.loc 1 757 0
 934 02e0 324B     		ldr	r3, .L131+164
 935 02e2 C3F80080 		str	r8, [r3]
 936              	.L60:
 762:Src/main.c    **** 
 937              		.loc 1 762 0
 938 02e6 344B     		ldr	r3, .L131+176
 939 02e8 1B68     		ldr	r3, [r3]
 940 02ea 002B     		cmp	r3, #0
 941 02ec 40F0C180 		bne	.L121
 942              	.L76:
 557:Src/main.c    ****       CAN_EN = 0;
 943              		.loc 1 557 0
 944 02f0 DAF80030 		ldr	r3, [r10]
 945 02f4 002B     		cmp	r3, #0
 946 02f6 7FF44EAF 		bne	.L122
 562:Src/main.c    ****       CAN_EN = CAN_Received;
 947              		.loc 1 562 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 36


 948 02fa 244B     		ldr	r3, .L131+132
 949 02fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 950 02fe 002B     		cmp	r3, #0
 951 0300 7FF450AF 		bne	.L44
 952 0304 49E7     		b	.L43
 953              	.L132:
 954 0306 00BF     		.align	3
 955              	.L131:
 956 0308 00000000 		.word	0
 957 030c 00A07440 		.word	1081384960
 958 0310 00000000 		.word	0
 959 0314 00E06F40 		.word	1081073664
 960 0318 00000000 		.word	0
 961 031c 0070A740 		.word	1084715008
 962 0320 00000000 		.word	htim1
 963 0324 00000000 		.word	htim2
 964 0328 00000000 		.word	htim3
 965 032c 00000000 		.word	htim6
 966 0330 00000000 		.word	htim7
 967 0334 00000000 		.word	htim16
 968 0338 00000000 		.word	g_ADCBuffer
 969 033c 00000000 		.word	hadc1
 970 0340 00000000 		.word	DEFI_value
 971 0344 00000000 		.word	rpm
 972 0348 00000000 		.word	UART1_Data
 973 034c 00000000 		.word	huart1
 974 0350 00000000 		.word	u8x8_gpio_and_delay_STM32F303
 975 0354 00000000 		.word	u8x8_byte_4wire_hw_spi
 976 0358 00000000 		.word	u8g2_cb_r0
 977 035c 00000000 		.word	u8g2
 978 0360 00040048 		.word	1207960576
 979 0364 00000000 		.word	.LANCHOR4
 980 0368 00000000 		.word	u8g2_font_5x7_tf
 981 036c 00000000 		.word	.LC2
 982 0370 18000000 		.word	.LC3
 983 0374 24000000 		.word	.LC4
 984 0378 34000000 		.word	.LC5
 985 037c 00000000 		.word	huart2
 986 0380 002C0140 		.word	1073818624
 987 0384 00000000 		.word	Gsens_EN
 988 0388 00000000 		.word	CAN_Received
 989 038c 00000000 		.word	CAN_EN
 990 0390 00000000 		.word	adc
 991 0394 00000000 		.word	.LANCHOR1
 992 0398 00000000 		.word	.LANCHOR6
 993 039c 00000000 		.word	.LANCHOR7
 994 03a0 00005940 		.word	1079574528
 995 03a4 00000000 		.word	UART1_RxData
 996 03a8 00000000 		.word	flag_meas
 997 03ac 00000000 		.word	flag_sw
 998 03b0 00000000 		.word	mode
 999 03b4 00100040 		.word	1073745920
 1000 03b8 00000000 		.word	flag_disp
 1001 03bc 00000000 		.word	.LANCHOR5
 1002 03c0 00000000 		.word	flag_status
 1003 03c4 00000000 		.word	.LANCHOR8
 1004              	.L114:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 37


 614:Src/main.c    ****         // Acceration 1G = 100
 1005              		.loc 1 614 0
 1006 03c8 9E4B     		ldr	r3, .L133
 1007 03ca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1008 03cc 012B     		cmp	r3, #1
 1009 03ce 00F0E480 		beq	.L123
 1010              	.L50:
 624:Src/main.c    **** 		  meas_value[1] = DEFI_value[2];  // OILP
 1011              		.loc 1 624 0
 1012 03d2 2388     		ldrh	r3, [r4]
 1013 03d4 A9F80030 		strh	r3, [r9]	@ movhi
 625:Src/main.c    **** 			meas_value[2] = FP_volt;        // FuelPump Voltage
 1014              		.loc 1 625 0
 1015 03d8 A088     		ldrh	r0, [r4, #4]
 627:Src/main.c    **** 			meas_value[4] = DEFI_value[5];  // OILT
 1016              		.loc 1 627 0
 1017 03da A189     		ldrh	r1, [r4, #12]
 628:Src/main.c    **** 		  meas_value[5] = O2_volt;        // O2
 1018              		.loc 1 628 0
 1019 03dc 6289     		ldrh	r2, [r4, #10]
 635:Src/main.c    ****           DEFI_value[0] = -60;
 1020              		.loc 1 635 0
 1021 03de 2388     		ldrh	r3, [r4]
 628:Src/main.c    **** 		  meas_value[5] = O2_volt;        // O2
 1022              		.loc 1 628 0
 1023 03e0 A9F80820 		strh	r2, [r9, #8]	@ movhi
 635:Src/main.c    ****           DEFI_value[0] = -60;
 1024              		.loc 1 635 0
 1025 03e4 1BB2     		sxth	r3, r3
 1026 03e6 5A2B     		cmp	r3, #90
 638:Src/main.c    ****         }
 1027              		.loc 1 638 0
 1028 03e8 D8BF     		it	le
 1029 03ea 2388     		ldrhle	r3, [r4]
 629:Src/main.c    **** 
 1030              		.loc 1 629 0
 1031 03ec 964A     		ldr	r2, .L133+4
 627:Src/main.c    **** 			meas_value[4] = DEFI_value[5];  // OILT
 1032              		.loc 1 627 0
 1033 03ee A9F80610 		strh	r1, [r9, #6]	@ movhi
 638:Src/main.c    ****         }
 1034              		.loc 1 638 0
 1035 03f2 D6BF     		itet	le
 1036 03f4 0133     		addle	r3, r3, #1
 636:Src/main.c    ****         }else{
 1037              		.loc 1 636 0
 1038 03f6 4FF6C473 		movwgt	r3, #65476
 638:Src/main.c    ****         }
 1039              		.loc 1 638 0
 1040 03fa 1BB2     		sxthle	r3, r3
 1041 03fc 2380     		strh	r3, [r4]	@ movhi
 641:Src/main.c    ****           DEFI_value[2] = 15;
 1042              		.loc 1 641 0
 1043 03fe A388     		ldrh	r3, [r4, #4]
 629:Src/main.c    **** 
 1044              		.loc 1 629 0
 1045 0400 1288     		ldrh	r2, [r2]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 38


 626:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 1046              		.loc 1 626 0
 1047 0402 9249     		ldr	r1, .L133+8
 629:Src/main.c    **** 
 1048              		.loc 1 629 0
 1049 0404 A9F80A20 		strh	r2, [r9, #10]	@ movhi
 641:Src/main.c    ****           DEFI_value[2] = 15;
 1050              		.loc 1 641 0
 1051 0408 1BB2     		sxth	r3, r3
 1052 040a 3C2B     		cmp	r3, #60
 644:Src/main.c    ****         }
 1053              		.loc 1 644 0
 1054 040c D8BF     		it	le
 1055 040e A388     		ldrhle	r3, [r4, #4]
 631:Src/main.c    **** 
 1056              		.loc 1 631 0
 1057 0410 8F4E     		ldr	r6, .L133+12
 626:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 1058              		.loc 1 626 0
 1059 0412 0988     		ldrh	r1, [r1]
 631:Src/main.c    **** 
 1060              		.loc 1 631 0
 1061 0414 C6F80080 		str	r8, [r6]
 644:Src/main.c    ****         }
 1062              		.loc 1 644 0
 1063 0418 D6BF     		itet	le
 1064 041a 0133     		addle	r3, r3, #1
 642:Src/main.c    ****         }else{
 1065              		.loc 1 642 0
 1066 041c 0F23     		movgt	r3, #15
 644:Src/main.c    ****         }
 1067              		.loc 1 644 0
 1068 041e 1BB2     		sxthle	r3, r3
 1069 0420 A380     		strh	r3, [r4, #4]	@ movhi
 647:Src/main.c    ****           DEFI_value[6] = 60;
 1070              		.loc 1 647 0
 1071 0422 A389     		ldrh	r3, [r4, #12]
 625:Src/main.c    **** 			meas_value[2] = FP_volt;        // FuelPump Voltage
 1072              		.loc 1 625 0
 1073 0424 A9F80200 		strh	r0, [r9, #2]	@ movhi
 647:Src/main.c    ****           DEFI_value[6] = 60;
 1074              		.loc 1 647 0
 1075 0428 1BB2     		sxth	r3, r3
 1076 042a 782B     		cmp	r3, #120
 650:Src/main.c    ****         }
 1077              		.loc 1 650 0
 1078 042c D8BF     		it	le
 1079 042e A389     		ldrhle	r3, [r4, #12]
 626:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 1080              		.loc 1 626 0
 1081 0430 A9F80410 		strh	r1, [r9, #4]	@ movhi
 650:Src/main.c    ****         }
 1082              		.loc 1 650 0
 1083 0434 D6BF     		itet	le
 1084 0436 0133     		addle	r3, r3, #1
 648:Src/main.c    ****         }else{
 1085              		.loc 1 648 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 39


 1086 0438 3C23     		movgt	r3, #60
 650:Src/main.c    ****         }
 1087              		.loc 1 650 0
 1088 043a 1BB2     		sxthle	r3, r3
 1089 043c A381     		strh	r3, [r4, #12]	@ movhi
 653:Src/main.c    ****           DEFI_value[5] = 50;
 1090              		.loc 1 653 0
 1091 043e 6389     		ldrh	r3, [r4, #10]
 1092 0440 1BB2     		sxth	r3, r3
 1093 0442 782B     		cmp	r3, #120
 656:Src/main.c    ****         }
 1094              		.loc 1 656 0
 1095 0444 DBBF     		ittet	le
 1096 0446 6389     		ldrhle	r3, [r4, #10]
 1097 0448 0133     		addle	r3, r3, #1
 654:Src/main.c    ****         }else{
 1098              		.loc 1 654 0
 1099 044a 3223     		movgt	r3, #50
 656:Src/main.c    ****         }
 1100              		.loc 1 656 0
 1101 044c 1BB2     		sxthle	r3, r3
 1102 044e 6381     		strh	r3, [r4, #10]	@ movhi
 659:Src/main.c    ****           rpm = 750;
 1103              		.loc 1 659 0
 1104 0450 2B88     		ldrh	r3, [r5]
 1105 0452 42F23412 		movw	r2, #8500
 1106 0456 1BB2     		sxth	r3, r3
 1107 0458 9342     		cmp	r3, r2
 660:Src/main.c    ****         }else{
 1108              		.loc 1 660 0
 1109 045a C6BF     		itte	gt
 1110 045c 40F2EE23 		movwgt	r3, #750
 1111 0460 2B80     		strhgt	r3, [r5]	@ movhi
 662:Src/main.c    ****         }
 1112              		.loc 1 662 0
 1113 0462 A5F80080 		strhle	r8, [r5]	@ movhi
 1114 0466 0FE7     		b	.L49
 1115              	.L116:
 723:Src/main.c    ****         draw_indicators();
 1116              		.loc 1 723 0
 1117 0468 FFF7FEFF 		bl	draw_MeasLabels
 1118              	.LVL88:
 724:Src/main.c    **** 
 1119              		.loc 1 724 0
 1120 046c FFF7FEFF 		bl	draw_indicators
 1121              	.LVL89:
 1122 0470 30E7     		b	.L70
 1123              	.L121:
 765:Src/main.c    ****         // update Fuel Pump Voltage
 1124              		.loc 1 765 0
 1125 0472 784B     		ldr	r3, .L133+16
 1126 0474 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 1127 0476 002E     		cmp	r6, #0
 1128 0478 00F04681 		beq	.L124
 787:Src/main.c    **** 
 1129              		.loc 1 787 0
 1130 047c 012E     		cmp	r6, #1
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 40


 1131 047e 00F03682 		beq	.L125
 806:Src/main.c    **** 
 1132              		.loc 1 806 0
 1133 0482 022E     		cmp	r6, #2
 1134 0484 00F0C581 		beq	.L126
 829:Src/main.c    **** 
 1135              		.loc 1 829 0
 1136 0488 032E     		cmp	r6, #3
 1137 048a 00F00B81 		beq	.L127
 843:Src/main.c    **** 
 1138              		.loc 1 843 0
 1139 048e 042E     		cmp	r6, #4
 1140 0490 00F07982 		beq	.L128
 857:Src/main.c    **** 
 1141              		.loc 1 857 0
 1142 0494 052E     		cmp	r6, #5
 1143 0496 00F0BF82 		beq	.L129
 1144              	.L80:
 1145              	.LVL90:
 878:Src/main.c    **** 
 1146              		.loc 1 878 0
 1147 049a 6F48     		ldr	r0, .L133+20
 1148 049c FFF7FEFF 		bl	u8g2_SendBuffer
 1149              	.LVL91:
 880:Src/main.c    ****     }
 1150              		.loc 1 880 0
 1151 04a0 6E4A     		ldr	r2, .L133+24
 1152 04a2 0023     		movs	r3, #0
 1153 04a4 1360     		str	r3, [r2]
 1154 04a6 73E6     		b	.L94
 1155              	.LVL92:
 1156              	.L63:
 706:Src/main.c    ****           #endif
 1157              		.loc 1 706 0
 1158 04a8 6D49     		ldr	r1, .L133+28
 1159 04aa 6E48     		ldr	r0, .L133+32
 1160 04ac FFF7FEFF 		bl	HAL_UART_Transmit_printf
 1161              	.LVL93:
 708:Src/main.c    **** 
 1162              		.loc 1 708 0
 1163 04b0 0720     		movs	r0, #7
 1164 04b2 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1165              	.LVL94:
 1166 04b6 F9E6     		b	.L61
 1167              	.L62:
 693:Src/main.c    ****           #endif
 1168              		.loc 1 693 0
 1169 04b8 6B49     		ldr	r1, .L133+36
 1170 04ba 6A48     		ldr	r0, .L133+32
 1171 04bc FFF7FEFF 		bl	HAL_UART_Transmit_printf
 1172              	.LVL95:
 695:Src/main.c    ****           if( mode < MODE_SETTING ){
 1173              		.loc 1 695 0
 1174 04c0 1720     		movs	r0, #23
 1175 04c2 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1176              	.LVL96:
 696:Src/main.c    ****             if( mode == 0 ){
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 41


 1177              		.loc 1 696 0
 1178 04c6 634A     		ldr	r2, .L133+16
 1179 04c8 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1180 04ca 042B     		cmp	r3, #4
 1181 04cc 3FF6EEAE 		bhi	.L61
 697:Src/main.c    ****               mode = N_mode-1;
 1182              		.loc 1 697 0
 1183 04d0 002B     		cmp	r3, #0
 1184 04d2 40F0B380 		bne	.L68
 698:Src/main.c    ****             }else{
 1185              		.loc 1 698 0
 1186 04d6 0423     		movs	r3, #4
 1187 04d8 1370     		strb	r3, [r2]
 1188 04da E7E6     		b	.L61
 1189              	.L115:
 680:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 1190              		.loc 1 680 0
 1191 04dc 6349     		ldr	r1, .L133+40
 1192 04de 6148     		ldr	r0, .L133+32
 1193 04e0 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 1194              	.LVL97:
 681:Src/main.c    ****           #endif
 1195              		.loc 1 681 0
 1196 04e4 1720     		movs	r0, #23
 1197 04e6 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1198              	.LVL98:
 683:Src/main.c    ****             if( mode == N_mode-1 ){
 1199              		.loc 1 683 0
 1200 04ea 5A4B     		ldr	r3, .L133+16
 1201 04ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1202 04ee 042B     		cmp	r3, #4
 1203 04f0 3FF6DCAE 		bhi	.L61
 684:Src/main.c    ****               mode = 0;
 1204              		.loc 1 684 0
 1205 04f4 00F0F781 		beq	.L130
 687:Src/main.c    ****             }
 1206              		.loc 1 687 0
 1207 04f8 564A     		ldr	r2, .L133+16
 1208 04fa 0133     		adds	r3, r3, #1
 1209 04fc 1370     		strb	r3, [r2]
 1210 04fe D5E6     		b	.L61
 1211              	.L117:
 1212 0500 5B4B     		ldr	r3, .L133+44
 1213 0502 5C4F     		ldr	r7, .L133+48
 1214 0504 0993     		str	r3, [sp, #36]
 726:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 1215              		.loc 1 726 0
 1216 0506 0226     		movs	r6, #2
 1217              	.L72:
 1218              	.LVL99:
 1219              	.LBB30:
 730:Src/main.c    ****         }
 1220              		.loc 1 730 0 discriminator 3
 1221 0508 099B     		ldr	r3, [sp, #36]
 1222 050a 5348     		ldr	r0, .L133+20
 1223 050c 0D22     		movs	r2, #13
 1224 050e CDE90173 		strd	r7, r3, [sp, #4]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 42


 1225 0512 0092     		str	r2, [sp]
 1226 0514 3C23     		movs	r3, #60
 1227 0516 3246     		mov	r2, r6
 1228 0518 4421     		movs	r1, #68
 1229 051a FFF7FEFF 		bl	draw_MeasLabelUnit
 1230              	.LVL100:
 1231 051e 0D36     		adds	r6, r6, #13
 1232              	.LVL101:
 1233 0520 099B     		ldr	r3, [sp, #36]
 1234 0522 F6B2     		uxtb	r6, r6
 1235 0524 0533     		adds	r3, r3, #5
 727:Src/main.c    ****           x = meas_C_x;
 1236              		.loc 1 727 0 discriminator 3
 1237 0526 362E     		cmp	r6, #54
 1238 0528 07F10707 		add	r7, r7, #7
 1239 052c 0993     		str	r3, [sp, #36]
 1240 052e EBD1     		bne	.L72
 1241 0530 514B     		ldr	r3, .L133+52
 1242 0532 524F     		ldr	r7, .L133+56
 1243 0534 0993     		str	r3, [sp, #36]
 727:Src/main.c    ****           x = meas_C_x;
 1244              		.loc 1 727 0 is_stmt 0
 1245 0536 4826     		movs	r6, #72
 1246              	.L73:
 1247              	.LVL102:
 734:Src/main.c    ****         }
 1248              		.loc 1 734 0 is_stmt 1 discriminator 3
 1249 0538 099A     		ldr	r2, [sp, #36]
 1250 053a 4748     		ldr	r0, .L133+20
 1251 053c 12F8013B 		ldrb	r3, [r2], #1	@ zero_extendqisi2
 1252 0540 0992     		str	r2, [sp, #36]
 1253              	.LVL103:
 1254 0542 3146     		mov	r1, r6
 1255 0544 0922     		movs	r2, #9
 1256 0546 1D36     		adds	r6, r6, #29
 1257 0548 CDE90023 		strd	r2, r3, [sp]
 1258 054c 0297     		str	r7, [sp, #8]
 1259 054e 1B23     		movs	r3, #27
 1260 0550 3522     		movs	r2, #53
 1261 0552 F6B2     		uxtb	r6, r6
 1262 0554 FFF7FEFF 		bl	draw_IndicatorBox
 1263              	.LVL104:
 733:Src/main.c    ****           draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_s
 1264              		.loc 1 733 0 discriminator 3
 1265 0558 BC2E     		cmp	r6, #188
 1266 055a 07F10507 		add	r7, r7, #5
 1267 055e EBD1     		bne	.L73
 736:Src/main.c    **** //        draw_CircularMeter_Init(26, 26, 26, 3, -60, 300, 10, 20, -1, -80, 120);
 1268              		.loc 1 736 0
 1269 0560 7822     		movs	r2, #120
 1270 0562 6FF04F03 		mvn	r3, #79
 1271 0566 4FF0FF31 		mov	r1, #-1
 1272 056a 0692     		str	r2, [sp, #24]
 1273 056c 0593     		str	r3, [sp, #20]
 1274 056e 0491     		str	r1, [sp, #16]
 1275 0570 1426     		movs	r6, #20
 1276 0572 2021     		movs	r1, #32
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 43


 1277 0574 0A20     		movs	r0, #10
 1278 0576 4FF49672 		mov	r2, #300
 1279 057a 6FF03B03 		mvn	r3, #59
 1280 057e CDE90032 		strd	r3, r2, [sp]
 1281 0582 CDE90206 		strd	r0, r6, [sp, #8]
 1282 0586 0323     		movs	r3, #3
 1283 0588 0846     		mov	r0, r1
 1284 058a 1F22     		movs	r2, #31
 1285 058c FFF7FEFF 		bl	draw_CircularMeter_Init
 1286              	.LVL105:
 738:Src/main.c    **** 
 1287              		.loc 1 738 0
 1288 0590 0021     		movs	r1, #0
 1289 0592 3148     		ldr	r0, .L133+20
 1290 0594 FFF7FEFF 		bl	draw_CircularMeter
 1291              	.LVL106:
 1292              	.LBE30:
 1293 0598 9CE6     		b	.L70
 1294              	.LVL107:
 1295              	.L123:
 616:Src/main.c    ****         Gsens_Y = Gsens_ADXL345_Read_G('y', 0);
 1296              		.loc 1 616 0
 1297 059a 0021     		movs	r1, #0
 1298 059c 7820     		movs	r0, #120
 1299 059e FFF7FEFF 		bl	Gsens_ADXL345_Read_G
 1300              	.LVL108:
 1301 05a2 374B     		ldr	r3, .L133+60
 617:Src/main.c    ****         Gsens_Z = Gsens_ADXL345_Read_G('z', 0);
 1302              		.loc 1 617 0
 1303 05a4 0021     		movs	r1, #0
 616:Src/main.c    ****         Gsens_Y = Gsens_ADXL345_Read_G('y', 0);
 1304              		.loc 1 616 0
 1305 05a6 1880     		strh	r0, [r3]	@ movhi
 617:Src/main.c    ****         Gsens_Z = Gsens_ADXL345_Read_G('z', 0);
 1306              		.loc 1 617 0
 1307 05a8 7920     		movs	r0, #121
 1308 05aa FFF7FEFF 		bl	Gsens_ADXL345_Read_G
 1309              	.LVL109:
 1310 05ae 354B     		ldr	r3, .L133+64
 618:Src/main.c    **** 
 1311              		.loc 1 618 0
 1312 05b0 0021     		movs	r1, #0
 617:Src/main.c    ****         Gsens_Z = Gsens_ADXL345_Read_G('z', 0);
 1313              		.loc 1 617 0
 1314 05b2 1880     		strh	r0, [r3]	@ movhi
 618:Src/main.c    **** 
 1315              		.loc 1 618 0
 1316 05b4 7A20     		movs	r0, #122
 1317 05b6 FFF7FEFF 		bl	Gsens_ADXL345_Read_G
 1318              	.LVL110:
 1319 05ba 334B     		ldr	r3, .L133+68
 1320 05bc 1880     		strh	r0, [r3]	@ movhi
 1321 05be 08E7     		b	.L50
 1322              	.L118:
 741:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 2, meas_width1, meas_height, "TACHO", "rpm");
 1323              		.loc 1 741 0
 1324 05c0 FFF7FEFF 		bl	draw_MeasLabels_Rotary
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 44


 1325              	.LVL111:
 742:Src/main.c    **** 
 1326              		.loc 1 742 0
 1327 05c4 314A     		ldr	r2, .L133+72
 1328 05c6 0292     		str	r2, [sp, #8]
 1329 05c8 0C23     		movs	r3, #12
 1330 05ca 314A     		ldr	r2, .L133+76
 1331 05cc 0192     		str	r2, [sp, #4]
 1332 05ce 0093     		str	r3, [sp]
 1333 05d0 3246     		mov	r2, r6
 1334 05d2 4623     		movs	r3, #70
 1335 05d4 0021     		movs	r1, #0
 1336 05d6 2048     		ldr	r0, .L133+20
 1337 05d8 FFF7FEFF 		bl	draw_MeasLabelUnit
 1338              	.LVL112:
 1339 05dc 7AE6     		b	.L70
 1340              	.L119:
 1341              	.LBB31:
 745:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "MAP", "kPa");
 1342              		.loc 1 745 0
 1343 05de C821     		movs	r1, #200
 1344 05e0 6FF06302 		mvn	r2, #99
 1345 05e4 3423     		movs	r3, #52
 1346 05e6 CDE90032 		strd	r3, r2, [sp]
 1347 05ea CDE90216 		strd	r1, r6, [sp, #8]
 1348 05ee 8023     		movs	r3, #128
 1349 05f0 0D22     		movs	r2, #13
 1350 05f2 0021     		movs	r1, #0
 1351 05f4 1848     		ldr	r0, .L133+20
 1352 05f6 FFF7FEFF 		bl	draw_Wave_axis
 1353              	.LVL113:
 746:Src/main.c    **** 
 1354              		.loc 1 746 0
 1355 05fa 2649     		ldr	r1, .L133+80
 1356 05fc 0291     		str	r1, [sp, #8]
 1357 05fe 2649     		ldr	r1, .L133+84
 1358 0600 0D23     		movs	r3, #13
 1359 0602 0022     		movs	r2, #0
 1360              	.L111:
 1361              	.LBE31:
 1362              	.LBB32:
 750:Src/main.c    **** 
 1363              		.loc 1 750 0
 1364 0604 CDE90031 		strd	r3, r1, [sp]
 1365 0608 1348     		ldr	r0, .L133+20
 1366 060a 1146     		mov	r1, r2
 1367 060c 4023     		movs	r3, #64
 1368 060e FFF7FEFF 		bl	draw_MeasLabelUnit
 1369              	.LVL114:
 1370 0612 5FE6     		b	.L70
 1371              	.L120:
 749:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "LatG", "G");
 1372              		.loc 1 749 0
 1373 0614 C821     		movs	r1, #200
 1374 0616 6FF0C702 		mvn	r2, #199
 1375 061a 3423     		movs	r3, #52
 1376 061c CDE90032 		strd	r3, r2, [sp]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 45


 1377 0620 CDE90216 		strd	r1, r6, [sp, #8]
 1378 0624 8023     		movs	r3, #128
 1379 0626 0D22     		movs	r2, #13
 1380 0628 0021     		movs	r1, #0
 1381 062a 0B48     		ldr	r0, .L133+20
 1382 062c FFF7FEFF 		bl	draw_Wave_axis
 1383              	.LVL115:
 750:Src/main.c    **** 
 1384              		.loc 1 750 0
 1385 0630 1A49     		ldr	r1, .L133+88
 1386 0632 0291     		str	r1, [sp, #8]
 1387 0634 0D23     		movs	r3, #13
 1388 0636 0022     		movs	r2, #0
 1389 0638 1949     		ldr	r1, .L133+92
 1390 063a E3E7     		b	.L111
 1391              	.L68:
 1392              	.LBE32:
 700:Src/main.c    ****             }
 1393              		.loc 1 700 0
 1394 063c 054A     		ldr	r2, .L133+16
 1395 063e 013B     		subs	r3, r3, #1
 1396 0640 1370     		strb	r3, [r2]
 1397 0642 33E6     		b	.L61
 1398              	.L134:
 1399              		.align	2
 1400              	.L133:
 1401 0644 00000000 		.word	Gsens_EN
 1402 0648 00000000 		.word	.LANCHOR6
 1403 064c 00000000 		.word	.LANCHOR7
 1404 0650 00000000 		.word	flag_meas
 1405 0654 00000000 		.word	mode
 1406 0658 00000000 		.word	u8g2
 1407 065c 00000000 		.word	flag_disp
 1408 0660 58000000 		.word	.LC8
 1409 0664 00000000 		.word	huart2
 1410 0668 50000000 		.word	.LC7
 1411 066c 4C000000 		.word	.LC6
 1412 0670 00000000 		.word	.LANCHOR2
 1413 0674 00000000 		.word	.LANCHOR3
 1414 0678 00000000 		.word	.LANCHOR1
 1415 067c 00000000 		.word	.LANCHOR0
 1416 0680 00000000 		.word	Gsens_X
 1417 0684 00000000 		.word	Gsens_Y
 1418 0688 00000000 		.word	Gsens_Z
 1419 068c 60000000 		.word	.LC9
 1420 0690 64000000 		.word	.LC10
 1421 0694 6C000000 		.word	.LC11
 1422 0698 70000000 		.word	.LC12
 1423 069c 74000000 		.word	.LC13
 1424 06a0 78000000 		.word	.LC14
 1425              	.L127:
 1426              	.LBB33:
 831:Src/main.c    ****           circular_buffer_index--;
 1427              		.loc 1 831 0
 1428 06a4 0A9B     		ldr	r3, [sp, #40]
 1429 06a6 002B     		cmp	r3, #0
 1430 06a8 00F06981 		beq	.L95
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 46


 832:Src/main.c    ****         }else{
 1431              		.loc 1 832 0
 1432 06ac 013B     		subs	r3, r3, #1
 1433 06ae 9BB2     		uxth	r3, r3
 1434 06b0 0A93     		str	r3, [sp, #40]
 1435              	.LVL116:
 1436 06b2 1E46     		mov	r6, r3
 1437              	.LVL117:
 1438              	.L87:
 839:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 1439              		.loc 1 839 0
 1440 06b4 6FF06302 		mvn	r2, #99
 1441 06b8 3423     		movs	r3, #52
 1442 06ba CDE90032 		strd	r3, r2, [sp]
 836:Src/main.c    **** 
 1443              		.loc 1 836 0
 1444 06be 0CAA     		add	r2, sp, #48
 1445 06c0 B9F80030 		ldrh	r3, [r9]
 839:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 1446              		.loc 1 839 0
 1447 06c4 0496     		str	r6, [sp, #16]
 1448 06c6 C821     		movs	r1, #200
 1449 06c8 0CA8     		add	r0, sp, #48
 1450 06ca CDE90210 		strd	r1, r0, [sp, #8]
 836:Src/main.c    **** 
 1451              		.loc 1 836 0
 1452 06ce 22F81630 		strh	r3, [r2, r6, lsl #1]	@ movhi
 839:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 1453              		.loc 1 839 0
 1454 06d2 0021     		movs	r1, #0
 1455 06d4 8023     		movs	r3, #128
 1456 06d6 0D22     		movs	r2, #13
 1457 06d8 BE48     		ldr	r0, .L135
 840:Src/main.c    **** 
 1458              		.loc 1 840 0
 1459 06da BF4F     		ldr	r7, .L135+4
 839:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 1460              		.loc 1 839 0
 1461 06dc FFF7FEFF 		bl	draw_Wave
 1462              	.LVL118:
 840:Src/main.c    **** 
 1463              		.loc 1 840 0
 1464 06e0 0CAB     		add	r3, sp, #48
 1465 06e2 0220     		movs	r0, #2
 1466 06e4 33F91630 		ldrsh	r3, [r3, r6, lsl #1]
 1467 06e8 0193     		str	r3, [sp, #4]
 1468 06ea 0126     		movs	r6, #1
 1469 06ec 0321     		movs	r1, #3
 1470 06ee 0D23     		movs	r3, #13
 1471 06f0 0022     		movs	r2, #0
 1472              	.L112:
 1473              	.LBE33:
 1474              	.LBB34:
 854:Src/main.c    **** 
 1475              		.loc 1 854 0
 1476 06f2 CDE90210 		strd	r1, r0, [sp, #8]
 1477 06f6 0093     		str	r3, [sp]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 47


 1478 06f8 CDE90467 		strd	r6, r7, [sp, #16]
 1479 06fc 1146     		mov	r1, r2
 1480 06fe 4023     		movs	r3, #64
 1481 0700 B448     		ldr	r0, .L135
 1482 0702 FFF7FEFF 		bl	draw_Value
 1483              	.LVL119:
 1484              	.LBE34:
 1485 0706 C8E6     		b	.L80
 1486              	.LVL120:
 1487              	.L124:
 767:Src/main.c    **** 
 1488              		.loc 1 767 0
 1489 0708 BBF90030 		ldrsh	r3, [fp]
 1490 070c B34A     		ldr	r2, .L135+8
 1491 070e 0592     		str	r2, [sp, #20]
 1492 0710 0327     		movs	r7, #3
 1493 0712 4FF00C08 		mov	r8, #12
 1494 0716 CDE90137 		strd	r3, r7, [sp, #4]
 1495 071a 3422     		movs	r2, #52
 1496 071c 4623     		movs	r3, #70
 1497 071e 3146     		mov	r1, r6
 1498 0720 AC48     		ldr	r0, .L135
 1499 0722 CDF80080 		str	r8, [sp]
 1500 0726 CDE90366 		strd	r6, r6, [sp, #12]
 1501 072a FFF7FEFF 		bl	draw_Value
 1502              	.LVL121:
 770:Src/main.c    **** 
 1503              		.loc 1 770 0
 1504 072e 2988     		ldrh	r1, [r5]
 1505 0730 0191     		str	r1, [sp, #4]
 1506 0732 42F22832 		movw	r2, #9000
 1507 0736 0E23     		movs	r3, #14
 1508 0738 0392     		str	r2, [sp, #12]
 1509 073a 0093     		str	r3, [sp]
 1510 073c 3246     		mov	r2, r6
 1511 073e 8023     		movs	r3, #128
 1512 0740 3146     		mov	r1, r6
 1513 0742 A448     		ldr	r0, .L135
 1514 0744 0296     		str	r6, [sp, #8]
 1515 0746 FFF7FEFF 		bl	draw_BarGraph
 1516              	.LVL122:
 776:Src/main.c    ****         }
 1517              		.loc 1 776 0
 1518 074a A549     		ldr	r1, .L135+12
 1519 074c B9F90030 		ldrsh	r3, [r9]
 1520 0750 0591     		str	r1, [sp, #20]
 1521 0752 0222     		movs	r2, #2
 1522 0754 0121     		movs	r1, #1
 1523 0756 CDE90321 		strd	r2, r1, [sp, #12]
 1524 075a 0193     		str	r3, [sp, #4]
 1525 075c 1022     		movs	r2, #16
 1526 075e 4623     		movs	r3, #70
 1527 0760 3146     		mov	r1, r6
 1528 0762 9C48     		ldr	r0, .L135
 1529 0764 0297     		str	r7, [sp, #8]
 1530 0766 CDF80080 		str	r8, [sp]
 1531 076a FFF7FEFF 		bl	draw_Value
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 48


 1532              	.LVL123:
 1533 076e 0122     		movs	r2, #1
 1534 0770 CDE90272 		strd	r7, r2, [sp, #8]
 1535 0774 9B4A     		ldr	r2, .L135+16
 1536 0776 B9F90230 		ldrsh	r3, [r9, #2]
 1537 077a 0193     		str	r3, [sp, #4]
 1538 077c CDE90462 		strd	r6, r2, [sp, #16]
 1539 0780 4623     		movs	r3, #70
 1540 0782 1C22     		movs	r2, #28
 1541 0784 3146     		mov	r1, r6
 1542 0786 9348     		ldr	r0, .L135
 1543 0788 CDF80080 		str	r8, [sp]
 1544 078c FFF7FEFF 		bl	draw_Value
 1545              	.LVL124:
 1546 0790 0122     		movs	r2, #1
 1547 0792 CDE90272 		strd	r7, r2, [sp, #8]
 1548 0796 944A     		ldr	r2, .L135+20
 1549 0798 B9F90430 		ldrsh	r3, [r9, #4]
 1550 079c 0193     		str	r3, [sp, #4]
 1551 079e CDE90462 		strd	r6, r2, [sp, #16]
 1552 07a2 3146     		mov	r1, r6
 1553 07a4 8B48     		ldr	r0, .L135
 1554 07a6 CDF80080 		str	r8, [sp]
 1555 07aa 4623     		movs	r3, #70
 1556 07ac 2822     		movs	r2, #40
 1557 07ae FFF7FEFF 		bl	draw_Value
 1558              	.LVL125:
 1559 07b2 3846     		mov	r0, r7
 1560 07b4 3146     		mov	r1, r6
 1561              	.LVL126:
 1562              	.L79:
 780:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 1563              		.loc 1 780 0 discriminator 3
 1564 07b6 8D4A     		ldr	r2, .L135+24
 781:Src/main.c    ****         }
 1565              		.loc 1 781 0 discriminator 3
 1566 07b8 0491     		str	r1, [sp, #16]
 780:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 1567              		.loc 1 780 0 discriminator 3
 1568 07ba FBB2     		uxtb	r3, r7
 1569 07bc A2FB03C2 		umull	ip, r2, r2, r3
 1570 07c0 5208     		lsrs	r2, r2, #1
 1571 07c2 02EB4202 		add	r2, r2, r2, lsl #1
 1572 07c6 9B1A     		subs	r3, r3, r2
 1573 07c8 03EB4303 		add	r3, r3, r3, lsl #1
 1574 07cc 9A00     		lsls	r2, r3, #2
 1575 07ce 02F1100C 		add	ip, r2, #16
 781:Src/main.c    ****         }
 1576              		.loc 1 781 0 discriminator 3
 1577 07d2 834A     		ldr	r2, .L135+12
 1578 07d4 39F91710 		ldrsh	r1, [r9, r7, lsl #1]
 1579 07d8 0191     		str	r1, [sp, #4]
 1580 07da 07EB8703 		add	r3, r7, r7, lsl #2
 1581 07de 1344     		add	r3, r3, r2
 1582 07e0 CDE90206 		strd	r0, r6, [sp, #8]
 1583 07e4 0593     		str	r3, [sp, #20]
 1584 07e6 CDF80080 		str	r8, [sp]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 49


 1585 07ea 0CF0FC02 		and	r2, ip, #252
 1586 07ee 0137     		adds	r7, r7, #1
 1587              	.LVL127:
 1588 07f0 3823     		movs	r3, #56
 1589 07f2 4821     		movs	r1, #72
 1590 07f4 7748     		ldr	r0, .L135
 1591 07f6 FFF7FEFF 		bl	draw_Value
 1592              	.LVL128:
 778:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 1593              		.loc 1 778 0 discriminator 3
 1594 07fa 062F     		cmp	r7, #6
 1595 07fc 06D0     		beq	.L78
 1596 07fe 7C4B     		ldr	r3, .L135+28
 1597 0800 D85D     		ldrb	r0, [r3, r7]	@ zero_extendqisi2
 1598 0802 7C4B     		ldr	r3, .L135+32
 1599 0804 DE5D     		ldrb	r6, [r3, r7]	@ zero_extendqisi2
 1600 0806 7C4B     		ldr	r3, .L135+36
 1601 0808 D95D     		ldrb	r1, [r3, r7]	@ zero_extendqisi2
 1602 080a D4E7     		b	.L79
 1603              	.L78:
 784:Src/main.c    **** 
 1604              		.loc 1 784 0
 1605 080c FFF7FEFF 		bl	draw_indicators
 1606              	.LVL129:
 1607 0810 43E6     		b	.L80
 1608              	.LVL130:
 1609              	.L126:
 1610              	.LBB35:
 808:Src/main.c    ****         if( rpm_integral > 10000 ){
 1611              		.loc 1 808 0
 1612 0812 2B88     		ldrh	r3, [r5]
 1613 0814 0B9A     		ldr	r2, [sp, #44]
 1614 0816 1A44     		add	r2, r2, r3
 1615 0818 92B2     		uxth	r2, r2
 809:Src/main.c    ****           rpm_integral = rpm_integral - 10000;
 1616              		.loc 1 809 0
 1617 081a 42F21073 		movw	r3, #10000
 1618 081e 9A42     		cmp	r2, r3
 808:Src/main.c    ****         if( rpm_integral > 10000 ){
 1619              		.loc 1 808 0
 1620 0820 0B92     		str	r2, [sp, #44]
 1621              	.LVL131:
 809:Src/main.c    ****           rpm_integral = rpm_integral - 10000;
 1622              		.loc 1 809 0
 1623 0822 04D9     		bls	.L84
 810:Src/main.c    ****         }
 1624              		.loc 1 810 0
 1625 0824 A2F51C53 		sub	r3, r2, #9984
 1626 0828 103B     		subs	r3, r3, #16
 1627 082a 9BB2     		uxth	r3, r3
 1628 082c 0B93     		str	r3, [sp, #44]
 1629              	.LVL132:
 1630              	.L84:
 812:Src/main.c    **** 
 1631              		.loc 1 812 0
 1632 082e DDED0B7A 		vldr.32	s15, [sp, #44]	@ int
 816:Src/main.c    ****         draw_Value(&u8g2, 0, 2, meas_width1, meas_height, rpm, 4, 0, 0, "rpm");
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 50


 1633              		.loc 1 816 0
 1634 0832 724F     		ldr	r7, .L135+40
 812:Src/main.c    **** 
 1635              		.loc 1 812 0
 1636 0834 F8EE677A 		vcvt.f32.u32	s15, s15
 816:Src/main.c    ****         draw_Value(&u8g2, 0, 2, meas_width1, meas_height, rpm, 4, 0, 0, "rpm");
 1637              		.loc 1 816 0
 1638 0838 0C26     		movs	r6, #12
 812:Src/main.c    **** 
 1639              		.loc 1 812 0
 1640 083a 17EE900A 		vmov	r0, s15
 1641 083e FFF7FEFF 		bl	__aeabi_f2d
 1642              	.LVL133:
 1643 0842 0022     		movs	r2, #0
 1644 0844 6E4B     		ldr	r3, .L135+44
 1645 0846 FFF7FEFF 		bl	__aeabi_ddiv
 1646              	.LVL134:
 1647 084a FFF7FEFF 		bl	__aeabi_d2uiz
 1648              	.LVL135:
 814:Src/main.c    **** 
 1649              		.loc 1 814 0
 1650 084e C3B2     		uxtb	r3, r0
 1651 0850 6048     		ldr	r0, .L135
 1652 0852 0222     		movs	r2, #2
 1653 0854 3A21     		movs	r1, #58
 824:Src/main.c    ****         }
 1654              		.loc 1 824 0
 1655 0856 8046     		mov	r8, r0
 814:Src/main.c    **** 
 1656              		.loc 1 814 0
 1657 0858 FFF7FEFF 		bl	draw_Rotary
 1658              	.LVL136:
 816:Src/main.c    ****         draw_Value(&u8g2, 0, 2, meas_width1, meas_height, rpm, 4, 0, 0, "rpm");
 1659              		.loc 1 816 0
 1660 085c 694B     		ldr	r3, .L135+48
 1661 085e 0297     		str	r7, [sp, #8]
 1662 0860 CDE90063 		strd	r6, r3, [sp]
 1663 0864 0222     		movs	r2, #2
 1664 0866 4623     		movs	r3, #70
 1665 0868 0021     		movs	r1, #0
 1666 086a 4046     		mov	r0, r8
 1667 086c FFF7FEFF 		bl	draw_MeasLabelUnit
 1668              	.LVL137:
 817:Src/main.c    **** 
 1669              		.loc 1 817 0
 1670 0870 2B88     		ldrh	r3, [r5]
 1671 0872 0096     		str	r6, [sp]
 1672 0874 0021     		movs	r1, #0
 1673 0876 1BB2     		sxth	r3, r3
 1674 0878 0422     		movs	r2, #4
 1675 087a CDE90311 		strd	r1, r1, [sp, #12]
 1676 087e 4046     		mov	r0, r8
 1677 0880 0597     		str	r7, [sp, #20]
 1678 0882 0193     		str	r3, [sp, #4]
 1679 0884 0292     		str	r2, [sp, #8]
 1680 0886 4623     		movs	r3, #70
 1681 0888 0222     		movs	r2, #2
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 51


 824:Src/main.c    ****         }
 1682              		.loc 1 824 0
 1683 088a 0996     		str	r6, [sp, #36]
 819:Src/main.c    ****         // draw measurement data
 1684              		.loc 1 819 0
 1685 088c 0E46     		mov	r6, r1
 817:Src/main.c    **** 
 1686              		.loc 1 817 0
 1687 088e FFF7FEFF 		bl	draw_Value
 1688              	.LVL138:
 819:Src/main.c    ****         // draw measurement data
 1689              		.loc 1 819 0
 1690 0892 FFF7FEFF 		bl	draw_MeasLabels_Rotary
 1691              	.LVL139:
 1692 0896 0322     		movs	r2, #3
 1693 0898 1027     		movs	r7, #16
 1694 089a 0120     		movs	r0, #1
 1695 089c 0221     		movs	r1, #2
 1696 089e 9646     		mov	lr, r2
 1697              	.LVL140:
 1698              	.L85:
 824:Src/main.c    ****         }
 1699              		.loc 1 824 0 discriminator 3
 1700 08a0 4F4A     		ldr	r2, .L135+12
 1701 08a2 39F916C0 		ldrsh	ip, [r9, r6, lsl #1]
 1702 08a6 CDF808E0 		str	lr, [sp, #8]
 1703 08aa 06EB8603 		add	r3, r6, r6, lsl #2
 1704 08ae 1344     		add	r3, r3, r2
 1705 08b0 099A     		ldr	r2, [sp, #36]
 1706 08b2 0092     		str	r2, [sp]
 1707 08b4 CDE90310 		strd	r1, r0, [sp, #12]
 1708 08b8 0593     		str	r3, [sp, #20]
 1709 08ba 3A46     		mov	r2, r7
 1710 08bc CDF804C0 		str	ip, [sp, #4]
 1711 08c0 4623     		movs	r3, #70
 1712 08c2 0021     		movs	r1, #0
 1713 08c4 4046     		mov	r0, r8
 1714 08c6 0136     		adds	r6, r6, #1
 1715              	.LVL141:
 1716 08c8 FFF7FEFF 		bl	draw_Value
 1717              	.LVL142:
 1718 08cc 0C37     		adds	r7, r7, #12
 1719              	.LVL143:
 821:Src/main.c    ****           x = meas_x;
 1720              		.loc 1 821 0 discriminator 3
 1721 08ce 042E     		cmp	r6, #4
 1722 08d0 FFB2     		uxtb	r7, r7
 1723 08d2 3FF4E2AD 		beq	.L80
 1724 08d6 464B     		ldr	r3, .L135+28
 1725 08d8 13F806E0 		ldrb	lr, [r3, r6]	@ zero_extendqisi2
 1726 08dc 454B     		ldr	r3, .L135+32
 1727 08de 995D     		ldrb	r1, [r3, r6]	@ zero_extendqisi2
 1728 08e0 454B     		ldr	r3, .L135+36
 1729 08e2 985D     		ldrb	r0, [r3, r6]	@ zero_extendqisi2
 1730 08e4 DCE7     		b	.L85
 1731              	.LVL144:
 1732              	.L130:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 52


 1733              	.LBE35:
 685:Src/main.c    ****             }else{
 1734              		.loc 1 685 0
 1735 08e6 484B     		ldr	r3, .L135+52
 1736 08e8 83F80080 		strb	r8, [r3]
 1737 08ec DEE4     		b	.L61
 1738              	.L125:
 1739              	.LBB36:
 789:Src/main.c    ****         
 1740              		.loc 1 789 0
 1741 08ee B9F90010 		ldrsh	r1, [r9]
 1742 08f2 3848     		ldr	r0, .L135
 1743 08f4 FFF7FEFF 		bl	draw_CircularMeter
 1744              	.LVL145:
 791:Src/main.c    ****         draw_MeasUnit(&u8g2, 38, 40, 28, 16, "kPa");
 1745              		.loc 1 791 0
 1746 08f8 B9F90030 		ldrsh	r3, [r9]
 1747 08fc 434A     		ldr	r2, .L135+56
 1748 08fe 0592     		str	r2, [sp, #20]
 1749 0900 1027     		movs	r7, #16
 1750 0902 4FF00208 		mov	r8, #2
 1751 0906 0322     		movs	r2, #3
 1752 0908 CDE90132 		strd	r3, r2, [sp, #4]
 1753 090c 0097     		str	r7, [sp]
 1754 090e 1E23     		movs	r3, #30
 1755 0910 2122     		movs	r2, #33
 1756 0912 2421     		movs	r1, #36
 1757 0914 2F48     		ldr	r0, .L135
 1758 0916 CDE90386 		strd	r8, r6, [sp, #12]
 1759 091a FFF7FEFF 		bl	draw_Value
 1760              	.LVL146:
 792:Src/main.c    ****         
 1761              		.loc 1 792 0
 1762 091e 2E4B     		ldr	r3, .L135+4
 1763 0920 0097     		str	r7, [sp]
 1764 0922 0193     		str	r3, [sp, #4]
 1765 0924 2621     		movs	r1, #38
 1766 0926 1C23     		movs	r3, #28
 1767 0928 2A48     		ldr	r0, .L135
 1768 092a 2822     		movs	r2, #40
 1769 092c FFF7FEFF 		bl	draw_MeasUnit
 1770              	.LVL147:
 1771 0930 0027     		movs	r7, #0
 1772 0932 0323     		movs	r3, #3
 1773 0934 3046     		mov	r0, r6
 1774 0936 4146     		mov	r1, r8
 1775              	.LVL148:
 1776              	.L82:
 802:Src/main.c    ****         }
 1777              		.loc 1 802 0 discriminator 3
 1778 0938 294E     		ldr	r6, .L135+12
 1779 093a 39F917C0 		ldrsh	ip, [r9, r7, lsl #1]
 1780 093e 0293     		str	r3, [sp, #8]
 1781 0940 07EB8702 		add	r2, r7, r7, lsl #2
 1782 0944 3244     		add	r2, r2, r6
 1783 0946 0D23     		movs	r3, #13
 1784 0948 CDE90310 		strd	r1, r0, [sp, #12]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 53


 1785 094c 0093     		str	r3, [sp]
 1786 094e 0592     		str	r2, [sp, #20]
 1787 0950 CDF804C0 		str	ip, [sp, #4]
 1788 0954 4246     		mov	r2, r8
 1789 0956 3C23     		movs	r3, #60
 1790 0958 4421     		movs	r1, #68
 1791 095a 1E48     		ldr	r0, .L135
 1792 095c 0137     		adds	r7, r7, #1
 1793              	.LVL149:
 1794 095e FFF7FEFF 		bl	draw_Value
 1795              	.LVL150:
 1796 0962 08F10D08 		add	r8, r8, #13
 1797              	.LVL151:
 799:Src/main.c    ****           x = meas_C_x;
 1798              		.loc 1 799 0 discriminator 3
 1799 0966 042F     		cmp	r7, #4
 1800 0968 5FFA88F8 		uxtb	r8, r8
 1801 096c 3FF495AD 		beq	.L80
 1802 0970 204A     		ldr	r2, .L135+32
 1803 0972 1F4B     		ldr	r3, .L135+28
 1804 0974 D15D     		ldrb	r1, [r2, r7]	@ zero_extendqisi2
 1805 0976 204A     		ldr	r2, .L135+36
 1806 0978 DB5D     		ldrb	r3, [r3, r7]	@ zero_extendqisi2
 1807 097a D05D     		ldrb	r0, [r2, r7]	@ zero_extendqisi2
 1808 097c DCE7     		b	.L82
 1809              	.LVL152:
 1810              	.L95:
 1811              	.LBE36:
 1812              	.LBB37:
 1813 097e 8023     		movs	r3, #128
 1814 0980 0A93     		str	r3, [sp, #40]
 834:Src/main.c    ****         }
 1815              		.loc 1 834 0
 1816 0982 1E46     		mov	r6, r3
 1817 0984 96E6     		b	.L87
 1818              	.L128:
 1819              	.LBE37:
 1820              	.LBB38:
 845:Src/main.c    ****           circular_buffer_index--;
 1821              		.loc 1 845 0
 1822 0986 0A9B     		ldr	r3, [sp, #40]
 1823 0988 002B     		cmp	r3, #0
 1824 098a 76D0     		beq	.L96
 846:Src/main.c    ****         }else{
 1825              		.loc 1 846 0
 1826 098c 013B     		subs	r3, r3, #1
 1827 098e 9BB2     		uxth	r3, r3
 1828 0990 0A93     		str	r3, [sp, #40]
 1829              	.LVL153:
 1830 0992 1E46     		mov	r6, r3
 1831              	.LVL154:
 1832              	.L89:
 853:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 1833              		.loc 1 853 0
 1834 0994 C821     		movs	r1, #200
 1835 0996 6FF0C702 		mvn	r2, #199
 1836 099a 3423     		movs	r3, #52
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 54


 1837 099c 0CA8     		add	r0, sp, #48
 1838 099e CDE90210 		strd	r1, r0, [sp, #8]
 1839 09a2 CDE90032 		strd	r3, r2, [sp]
 850:Src/main.c    **** 
 1840              		.loc 1 850 0
 1841 09a6 1A4B     		ldr	r3, .L135+60
 853:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 1842              		.loc 1 853 0
 1843 09a8 0496     		str	r6, [sp, #16]
 850:Src/main.c    **** 
 1844              		.loc 1 850 0
 1845 09aa 0CAA     		add	r2, sp, #48
 1846 09ac 1B88     		ldrh	r3, [r3]
 1847 09ae 22F81630 		strh	r3, [r2, r6, lsl #1]	@ movhi
 853:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 1848              		.loc 1 853 0
 1849 09b2 0021     		movs	r1, #0
 1850 09b4 8023     		movs	r3, #128
 1851 09b6 0D22     		movs	r2, #13
 1852 09b8 0648     		ldr	r0, .L135
 854:Src/main.c    **** 
 1853              		.loc 1 854 0
 1854 09ba 164F     		ldr	r7, .L135+64
 853:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 1855              		.loc 1 853 0
 1856 09bc FFF7FEFF 		bl	draw_Wave
 1857              	.LVL155:
 854:Src/main.c    **** 
 1858              		.loc 1 854 0
 1859 09c0 0CAB     		add	r3, sp, #48
 1860 09c2 0220     		movs	r0, #2
 1861 09c4 33F91630 		ldrsh	r3, [r3, r6, lsl #1]
 1862 09c8 0193     		str	r3, [sp, #4]
 1863 09ca 0126     		movs	r6, #1
 1864 09cc 0321     		movs	r1, #3
 1865 09ce 0D23     		movs	r3, #13
 1866 09d0 0022     		movs	r2, #0
 1867 09d2 8EE6     		b	.L112
 1868              	.L136:
 1869              		.align	2
 1870              	.L135:
 1871 09d4 00000000 		.word	u8g2
 1872 09d8 6C000000 		.word	.LC11
 1873 09dc 00000000 		.word	.LC0
 1874 09e0 00000000 		.word	.LANCHOR2
 1875 09e4 05000000 		.word	.LANCHOR2+5
 1876 09e8 0A000000 		.word	.LANCHOR2+10
 1877 09ec ABAAAAAA 		.word	-1431655765
 1878 09f0 00000000 		.word	.LANCHOR9
 1879 09f4 00000000 		.word	.LANCHOR10
 1880 09f8 00000000 		.word	.LANCHOR11
 1881 09fc 60000000 		.word	.LC9
 1882 0a00 00408F40 		.word	1083129856
 1883 0a04 64000000 		.word	.LC10
 1884 0a08 00000000 		.word	mode
 1885 0a0c 80000000 		.word	.LC15
 1886 0a10 00000000 		.word	Gsens_Y
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 55


 1887 0a14 74000000 		.word	.LC13
 1888              	.LVL156:
 1889              	.L129:
 1890              	.LBE38:
 859:Src/main.c    ****         u8g2_SetFont(&u8g2, u8g2_font_7x14B_tf);
 1891              		.loc 1 859 0
 1892 0a18 2148     		ldr	r0, .L137
 1893 0a1a FFF7FEFF 		bl	u8g2_ClearBuffer
 1894              	.LVL157:
 860:Src/main.c    ****         u8g2_DrawStr(&u8g2, 2, 15, "Mode Setting" );
 1895              		.loc 1 860 0
 1896 0a1e 2149     		ldr	r1, .L137+4
 1897 0a20 1F48     		ldr	r0, .L137
 1898 0a22 FFF7FEFF 		bl	u8g2_SetFont
 1899              	.LVL158:
 861:Src/main.c    ****         if( cursor == 0 ){
 1900              		.loc 1 861 0
 1901 0a26 204B     		ldr	r3, .L137+8
 1902 0a28 1D48     		ldr	r0, .L137
 1903 0a2a 0F22     		movs	r2, #15
 1904 0a2c 0221     		movs	r1, #2
 1905 0a2e FFF7FEFF 		bl	u8g2_DrawStr
 1906              	.LVL159:
 862:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, ">" );
 1907              		.loc 1 862 0
 1908 0a32 1E4B     		ldr	r3, .L137+12
 1909 0a34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1910 0a36 5BBB     		cbnz	r3, .L90
 863:Src/main.c    ****         }else{
 1911              		.loc 1 863 0
 1912 0a38 1D4B     		ldr	r3, .L137+16
 1913 0a3a 1948     		ldr	r0, .L137
 1914 0a3c 1E22     		movs	r2, #30
 1915 0a3e 0221     		movs	r1, #2
 1916 0a40 FFF7FEFF 		bl	u8g2_DrawStr
 1917              	.LVL160:
 1918              	.L91:
 867:Src/main.c    ****         if( cursor == 1 ){
 1919              		.loc 1 867 0
 1920 0a44 1B4B     		ldr	r3, .L137+20
 1921 0a46 1648     		ldr	r0, .L137
 1922 0a48 1E22     		movs	r2, #30
 1923 0a4a 0A21     		movs	r1, #10
 1924 0a4c FFF7FEFF 		bl	u8g2_DrawStr
 1925              	.LVL161:
 868:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 1926              		.loc 1 868 0
 1927 0a50 164B     		ldr	r3, .L137+12
 871:Src/main.c    ****         }
 1928              		.loc 1 871 0
 1929 0a52 1348     		ldr	r0, .L137
 868:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 1930              		.loc 1 868 0
 1931 0a54 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1932 0a56 012B     		cmp	r3, #1
 869:Src/main.c    ****         }else{
 1933              		.loc 1 869 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 56


 1934 0a58 0CBF     		ite	eq
 1935 0a5a 154B     		ldreq	r3, .L137+16
 871:Src/main.c    ****         }
 1936              		.loc 1 871 0
 1937 0a5c 164B     		ldrne	r3, .L137+24
 1938 0a5e 2D22     		movs	r2, #45
 1939 0a60 0221     		movs	r1, #2
 1940 0a62 FFF7FEFF 		bl	u8g2_DrawStr
 1941              	.LVL162:
 873:Src/main.c    ****         u8g2_SendBuffer(&u8g2);
 1942              		.loc 1 873 0
 1943 0a66 154B     		ldr	r3, .L137+28
 1944 0a68 0D48     		ldr	r0, .L137
 1945 0a6a 2D22     		movs	r2, #45
 1946 0a6c 0A21     		movs	r1, #10
 1947 0a6e FFF7FEFF 		bl	u8g2_DrawStr
 1948              	.LVL163:
 874:Src/main.c    **** 
 1949              		.loc 1 874 0
 1950 0a72 0B48     		ldr	r0, .L137
 1951 0a74 FFF7FEFF 		bl	u8g2_SendBuffer
 1952              	.LVL164:
 1953 0a78 0FE5     		b	.L80
 1954              	.L96:
 1955              	.LBB39:
 1956 0a7a 8023     		movs	r3, #128
 1957 0a7c 0A93     		str	r3, [sp, #40]
 848:Src/main.c    ****         }
 1958              		.loc 1 848 0
 1959 0a7e 1E46     		mov	r6, r3
 1960 0a80 88E7     		b	.L89
 1961              	.L113:
 1962              	.LBE39:
 603:Src/main.c    ****       FP_duty = 60;
 1963              		.loc 1 603 0
 1964 0a82 3B28     		cmp	r0, #59
 604:Src/main.c    ****     }
 1965              		.loc 1 604 0
 1966 0a84 DCBF     		itt	le
 1967 0a86 3C23     		movle	r3, #60
 1968 0a88 ABF80030 		strhle	r3, [fp]	@ movhi
 1969 0a8c FFF7F4BB 		b	.L47
 1970              	.L90:
 865:Src/main.c    ****         }
 1971              		.loc 1 865 0
 1972 0a90 094B     		ldr	r3, .L137+24
 1973 0a92 0348     		ldr	r0, .L137
 1974 0a94 1E22     		movs	r2, #30
 1975 0a96 0221     		movs	r1, #2
 1976 0a98 FFF7FEFF 		bl	u8g2_DrawStr
 1977              	.LVL165:
 1978 0a9c D2E7     		b	.L91
 1979              	.L138:
 1980 0a9e 00BF     		.align	2
 1981              	.L137:
 1982 0aa0 00000000 		.word	u8g2
 1983 0aa4 00000000 		.word	u8g2_font_7x14B_tf
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 57


 1984 0aa8 84000000 		.word	.LC16
 1985 0aac 00000000 		.word	.LANCHOR12
 1986 0ab0 94000000 		.word	.LC17
 1987 0ab4 9C000000 		.word	.LC19
 1988 0ab8 98000000 		.word	.LC18
 1989 0abc A8000000 		.word	.LC20
 1990              	.LBE29:
 1991              		.cfi_endproc
 1992              	.LFE130:
 1994              		.section	.text.Error_Handler,"ax",%progbits
 1995              		.align	1
 1996              		.p2align 2,,3
 1997              		.global	Error_Handler
 1998              		.syntax unified
 1999              		.thumb
 2000              		.thumb_func
 2001              		.fpu fpv4-sp-d16
 2003              	Error_Handler:
 2004              	.LFB132:
 936:Src/main.c    **** 
 937:Src/main.c    **** /* USER CODE BEGIN 4 */
 938:Src/main.c    **** 
 939:Src/main.c    **** /* USER CODE END 4 */
 940:Src/main.c    **** 
 941:Src/main.c    **** /**
 942:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 943:Src/main.c    ****   * @retval None
 944:Src/main.c    ****   */
 945:Src/main.c    **** void Error_Handler(void)
 946:Src/main.c    **** {
 2005              		.loc 1 946 0
 2006              		.cfi_startproc
 2007              		@ Volatile: function does not return.
 2008              		@ args = 0, pretend = 0, frame = 0
 2009              		@ frame_needed = 0, uses_anonymous_args = 0
 2010              		@ link register save eliminated.
 2011              	.L140:
 2012 0000 FEE7     		b	.L140
 2013              		.cfi_endproc
 2014              	.LFE132:
 2016              		.comm	adc,20,4
 2017              		.comm	g_ADCBuffer,20,4
 2018              		.comm	Gsens_Z,2,2
 2019              		.comm	Gsens_Y,2,2
 2020              		.comm	Gsens_X,2,2
 2021              		.comm	Gsens_EN,1,1
 2022              		.comm	CAN_EN,1,1
 2023              		.global	FP_duty
 2024              		.global	FP_volt
 2025              		.global	O2_volt
 2026              		.global	meas_value
 2027              		.global	meas_sign
 2028              		.global	meas_frac
 2029              		.global	meas_digit
 2030              		.global	meas_unit
 2031              		.global	meas_name
 2032              		.global	idct_status
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 58


 2033              		.global	idct_name
 2034              		.global	cursor
 2035              		.comm	setting,1,1
 2036              		.comm	mode,1,1
 2037              		.global	MT
 2038              		.global	gear
 2039              		.global	update_display
 2040              		.comm	u8g2,128,4
 2041              		.global	enfini_logo
 2042 0002 00BF     		.section	.bss.cursor,"aw",%nobits
 2043              		.set	.LANCHOR12,. + 0
 2046              	cursor:
 2047 0000 00       		.space	1
 2048              		.section	.bss.gear,"aw",%nobits
 2051              	gear:
 2052 0000 00       		.space	1
 2053              		.section	.bss.idct_status,"aw",%nobits
 2054              		.align	2
 2055              		.set	.LANCHOR1,. + 0
 2058              	idct_status:
 2059 0000 0000     		.space	2
 2060              		.section	.bss.update_display,"aw",%nobits
 2063              	update_display:
 2064 0000 00       		.space	1
 2065              		.section	.data.FP_duty,"aw",%progbits
 2066              		.align	1
 2067              		.set	.LANCHOR5,. + 0
 2070              	FP_duty:
 2071 0000 6400     		.short	100
 2072              		.section	.data.FP_volt,"aw",%progbits
 2073              		.align	1
 2074              		.set	.LANCHOR7,. + 0
 2077              	FP_volt:
 2078 0000 4A01     		.short	330
 2079              		.section	.data.MT,"aw",%progbits
 2080              		.align	3
 2083              	MT:
 2084 0000 77BE9F1A 		.word	446676599
 2085 0004 2FDD0B40 		.word	1074519343
 2086 0008 1F85EB51 		.word	1374389535
 2087 000c B81E0040 		.word	1073749688
 2088 0010 A8C64B37 		.word	927712936
 2089 0014 8941F63F 		.word	1073103241
 2090 0018 00000000 		.word	0
 2091 001c 0000F03F 		.word	1072693248
 2092 0020 986E1283 		.word	2199023256
 2093 0024 C0CAE93F 		.word	1072286400
 2094              		.section	.data.O2_volt,"aw",%progbits
 2095              		.align	1
 2096              		.set	.LANCHOR6,. + 0
 2099              	O2_volt:
 2100 0000 4A01     		.short	330
 2101              		.section	.data.meas_value,"aw",%progbits
 2102              		.align	2
 2103              		.set	.LANCHOR8,. + 0
 2106              	meas_value:
 2107 0000 6900     		.short	105
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 59


 2108 0002 EB00     		.short	235
 2109 0004 8502     		.short	645
 2110 0006 5900     		.short	89
 2111 0008 4900     		.short	73
 2112 000a 8F00     		.short	143
 2113              		.section	.rodata.draw_MeasLabels.str1.4,"aMS",%progbits,1
 2114              		.align	2
 2115              	.LC0:
 2116 0000 25202000 		.ascii	"%  \000"
 2117              	.LC1:
 2118 0004 44555459 		.ascii	"DUTY\000"
 2118      00
 2119              		.section	.rodata.enfini_logo,"a",%progbits
 2120              		.align	2
 2121              		.set	.LANCHOR4,. + 0
 2124              	enfini_logo:
 2125 0000 00       		.byte	0
 2126 0001 00       		.byte	0
 2127 0002 00       		.byte	0
 2128 0003 00       		.byte	0
 2129 0004 00       		.byte	0
 2130 0005 00       		.byte	0
 2131 0006 00       		.byte	0
 2132 0007 00       		.byte	0
 2133 0008 00       		.byte	0
 2134 0009 00       		.byte	0
 2135 000a 00       		.byte	0
 2136 000b 00       		.byte	0
 2137 000c 00       		.byte	0
 2138 000d 00       		.byte	0
 2139 000e 00       		.byte	0
 2140 000f 00       		.byte	0
 2141 0010 00       		.byte	0
 2142 0011 00       		.byte	0
 2143 0012 00       		.byte	0
 2144 0013 00       		.byte	0
 2145 0014 00       		.byte	0
 2146 0015 00       		.byte	0
 2147 0016 00       		.byte	0
 2148 0017 00       		.byte	0
 2149 0018 00       		.byte	0
 2150 0019 00       		.byte	0
 2151 001a F0       		.byte	-16
 2152 001b 0F       		.byte	15
 2153 001c 00       		.byte	0
 2154 001d 00       		.byte	0
 2155 001e 00       		.byte	0
 2156 001f FC       		.byte	-4
 2157 0020 FF       		.byte	-1
 2158 0021 FF       		.byte	-1
 2159 0022 3F       		.byte	63
 2160 0023 00       		.byte	0
 2161 0024 80       		.byte	-128
 2162 0025 FF       		.byte	-1
 2163 0026 FF       		.byte	-1
 2164 0027 FF       		.byte	-1
 2165 0028 FF       		.byte	-1
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 60


 2166 0029 01       		.byte	1
 2167 002a E0       		.byte	-32
 2168 002b 1F       		.byte	31
 2169 002c 00       		.byte	0
 2170 002d 80       		.byte	-128
 2171 002e FF       		.byte	-1
 2172 002f 07       		.byte	7
 2173 0030 E0       		.byte	-32
 2174 0031 01       		.byte	1
 2175 0032 00       		.byte	0
 2176 0033 80       		.byte	-128
 2177 0034 81       		.byte	-127
 2178 0035 07       		.byte	7
 2179 0036 E0       		.byte	-32
 2180 0037 01       		.byte	1
 2181 0038 00       		.byte	0
 2182 0039 80       		.byte	-128
 2183 003a 81       		.byte	-127
 2184 003b 07       		.byte	7
 2185 003c C0       		.byte	-64
 2186 003d E1       		.byte	-31
 2187 003e 07       		.byte	7
 2188 003f C0       		.byte	-64
 2189 0040 80       		.byte	-128
 2190 0041 03       		.byte	3
 2191 0042 00       		.byte	0
 2192 0043 FC       		.byte	-4
 2193 0044 1F       		.byte	31
 2194 0045 E0       		.byte	-32
 2195 0046 80       		.byte	-128
 2196 0047 03       		.byte	3
 2197 0048 00       		.byte	0
 2198 0049 FE       		.byte	-2
 2199 004a 7F       		.byte	127
 2200 004b 70       		.byte	112
 2201 004c C0       		.byte	-64
 2202 004d 01       		.byte	1
 2203 004e 00       		.byte	0
 2204 004f 0F       		.byte	15
 2205 0050 FE       		.byte	-2
 2206 0051 39       		.byte	57
 2207 0052 E0       		.byte	-32
 2208 0053 00       		.byte	0
 2209 0054 00       		.byte	0
 2210 0055 07       		.byte	7
 2211 0056 F8       		.byte	-8
 2212 0057 1F       		.byte	31
 2213 0058 F0       		.byte	-16
 2214 0059 00       		.byte	0
 2215 005a 00       		.byte	0
 2216 005b 0E       		.byte	14
 2217 005c E0       		.byte	-32
 2218 005d 1F       		.byte	31
 2219 005e 78       		.byte	120
 2220 005f 00       		.byte	0
 2221 0060 00       		.byte	0
 2222 0061 0C       		.byte	12
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 61


 2223 0062 C0       		.byte	-64
 2224 0063 FF       		.byte	-1
 2225 0064 3F       		.byte	63
 2226 0065 00       		.byte	0
 2227 0066 00       		.byte	0
 2228 0067 18       		.byte	24
 2229 0068 00       		.byte	0
 2230 0069 FF       		.byte	-1
 2231 006a 1F       		.byte	31
 2232 006b 00       		.byte	0
 2233 006c 00       		.byte	0
 2234 006d 38       		.byte	56
 2235 006e C0       		.byte	-64
 2236 006f FF       		.byte	-1
 2237 0070 0F       		.byte	15
 2238 0071 00       		.byte	0
 2239 0072 00       		.byte	0
 2240 0073 70       		.byte	112
 2241 0074 E0       		.byte	-32
 2242 0075 F1       		.byte	-15
 2243 0076 03       		.byte	3
 2244 0077 00       		.byte	0
 2245 0078 00       		.byte	0
 2246 0079 E0       		.byte	-32
 2247 007a 78       		.byte	120
 2248 007b 00       		.byte	0
 2249 007c 00       		.byte	0
 2250 007d 00       		.byte	0
 2251 007e 00       		.byte	0
 2252 007f C0       		.byte	-64
 2253 0080 3F       		.byte	63
 2254 0081 E0       		.byte	-32
 2255 0082 01       		.byte	1
 2256 0083 00       		.byte	0
 2257 0084 00       		.byte	0
 2258 0085 80       		.byte	-128
 2259 0086 1F       		.byte	31
 2260 0087 F0       		.byte	-16
 2261 0088 01       		.byte	1
 2262 0089 00       		.byte	0
 2263 008a 00       		.byte	0
 2264 008b 00       		.byte	0
 2265 008c 07       		.byte	7
 2266 008d F8       		.byte	-8
 2267 008e 00       		.byte	0
 2268 008f 00       		.byte	0
 2269 0090 00       		.byte	0
 2270 0091 00       		.byte	0
 2271 0092 1E       		.byte	30
 2272 0093 7C       		.byte	124
 2273 0094 00       		.byte	0
 2274 0095 00       		.byte	0
 2275 0096 00       		.byte	0
 2276 0097 00       		.byte	0
 2277 0098 F8       		.byte	-8
 2278 0099 1F       		.byte	31
 2279 009a 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 62


 2280 009b 00       		.byte	0
 2281 009c 00       		.byte	0
 2282 009d 00       		.byte	0
 2283 009e F0       		.byte	-16
 2284 009f 0F       		.byte	15
 2285 00a0 00       		.byte	0
 2286 00a1 00       		.byte	0
 2287 00a2 00       		.byte	0
 2288 00a3 00       		.byte	0
 2289 00a4 80       		.byte	-128
 2290 00a5 01       		.byte	1
 2291 00a6 00       		.byte	0
 2292 00a7 00       		.byte	0
 2293 00a8 00       		.byte	0
 2294 00a9 00       		.byte	0
 2295 00aa 00       		.byte	0
 2296 00ab 00       		.byte	0
 2297 00ac 00       		.byte	0
 2298 00ad 00       		.byte	0
 2299 00ae 00       		.byte	0
 2300 00af 00       		.byte	0
 2301 00b0 00       		.byte	0
 2302 00b1 00       		.byte	0
 2303 00b2 00       		.byte	0
 2304 00b3 00       		.byte	0
 2305 00b4 00       		.byte	0
 2306 00b5 00       		.byte	0
 2307 00b6 00       		.byte	0
 2308 00b7 00       		.byte	0
 2309 00b8 00       		.byte	0
 2310 00b9 00       		.byte	0
 2311 00ba 00       		.byte	0
 2312 00bb 00       		.byte	0
 2313 00bc 00       		.byte	0
 2314 00bd 00       		.byte	0
 2315 00be 00       		.byte	0
 2316 00bf 00       		.byte	0
 2317 00c0 00       		.byte	0
 2318 00c1 00       		.byte	0
 2319 00c2 00       		.byte	0
 2320 00c3 00       		.byte	0
 2321 00c4 00       		.byte	0
 2322 00c5 00       		.byte	0
 2323 00c6 00       		.byte	0
 2324 00c7 4C       		.byte	76
 2325 00c8 1C       		.byte	28
 2326 00c9 00       		.byte	0
 2327 00ca 00       		.byte	0
 2328 00cb 00       		.byte	0
 2329 00cc 00       		.byte	0
 2330 00cd 32       		.byte	50
 2331 00ce 0E       		.byte	14
 2332 00cf 00       		.byte	0
 2333 00d0 00       		.byte	0
 2334 00d1 00       		.byte	0
 2335 00d2 00       		.byte	0
 2336 00d3 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 63


 2337 00d4 C6       		.byte	-58
 2338 00d5 00       		.byte	0
 2339 00d6 18       		.byte	24
 2340 00d7 00       		.byte	0
 2341 00d8 00       		.byte	0
 2342 00d9 7C       		.byte	124
 2343 00da EF       		.byte	-17
 2344 00db FC       		.byte	-4
 2345 00dc 39       		.byte	57
 2346 00dd 00       		.byte	0
 2347 00de 00       		.byte	0
 2348 00df 4E       		.byte	78
 2349 00e0 C6       		.byte	-58
 2350 00e1 B8       		.byte	-72
 2351 00e2 31       		.byte	49
 2352 00e3 00       		.byte	0
 2353 00e4 00       		.byte	0
 2354 00e5 3E       		.byte	62
 2355 00e6 C6       		.byte	-58
 2356 00e7 98       		.byte	-104
 2357 00e8 31       		.byte	49
 2358 00e9 00       		.byte	0
 2359 00ea 00       		.byte	0
 2360 00eb 3C       		.byte	60
 2361 00ec C6       		.byte	-58
 2362 00ed 98       		.byte	-104
 2363 00ee 31       		.byte	49
 2364 00ef 00       		.byte	0
 2365 00f0 00       		.byte	0
 2366 00f1 0E       		.byte	14
 2367 00f2 C6       		.byte	-58
 2368 00f3 98       		.byte	-104
 2369 00f4 31       		.byte	49
 2370 00f5 00       		.byte	0
 2371 00f6 00       		.byte	0
 2372 00f7 4E       		.byte	78
 2373 00f8 CE       		.byte	-50
 2374 00f9 99       		.byte	-103
 2375 00fa 31       		.byte	49
 2376 00fb 00       		.byte	0
 2377 00fc 00       		.byte	0
 2378 00fd 7C       		.byte	124
 2379 00fe EF       		.byte	-17
 2380 00ff FD       		.byte	-3
 2381 0100 7B       		.byte	123
 2382 0101 00       		.byte	0
 2383 0102 00       		.byte	0
 2384 0103 00       		.byte	0
 2385 0104 00       		.byte	0
 2386 0105 00       		.byte	0
 2387 0106 00       		.byte	0
 2388 0107 00       		.byte	0
 2389 0108 00       		.byte	0
 2390 0109 00       		.byte	0
 2391 010a 00       		.byte	0
 2392 010b 00       		.byte	0
 2393 010c 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 64


 2394 010d 00       		.byte	0
 2395 010e 00       		.byte	0
 2396 010f 00       		.byte	0
 2397 0110 00       		.byte	0
 2398 0111 00       		.byte	0
 2399 0112 00       		.byte	0
 2400 0113 00       		.byte	0
 2401 0114 00       		.byte	0
 2402 0115 00       		.byte	0
 2403 0116 00       		.byte	0
 2404 0117 00       		.byte	0
 2405 0118 00       		.byte	0
 2406 0119 00       		.byte	0
 2407 011a 00       		.byte	0
 2408 011b 00       		.byte	0
 2409 011c 00       		.byte	0
 2410 011d 00       		.byte	0
 2411 011e 00       		.byte	0
 2412 011f 00       		.byte	0
 2413              		.section	.rodata.idct_name,"a",%progbits
 2414              		.align	2
 2415              		.set	.LANCHOR0,. + 0
 2418              	idct_name:
 2419 0000 43414E00 		.ascii	"CAN\000"
 2420 0004 00       		.space	1
 2421 0005 4753454E 		.ascii	"GSENS"
 2421      53
 2422              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2423              		.align	2
 2424              	.LC2:
 2425 0000 4D756C74 		.ascii	"Multi Function Meter\000"
 2425      69204675 
 2425      6E637469 
 2425      6F6E204D 
 2425      65746572 
 2426 0015 000000   		.space	3
 2427              	.LC3:
 2428 0018 5265762E 		.ascii	"Rev. 0.3a\000"
 2428      20302E33 
 2428      6100
 2429 0022 0000     		.space	2
 2430              	.LC4:
 2431 0024 44554D4D 		.ascii	"DUMMY DATA MODE\000"
 2431      59204441 
 2431      5441204D 
 2431      4F444500 
 2432              	.LC5:
 2433 0034 48656C6C 		.ascii	"Hello. This is MFM.\012\000"
 2433      6F2E2054 
 2433      68697320 
 2433      6973204D 
 2433      464D2E0A 
 2434 0049 000000   		.space	3
 2435              	.LC6:
 2436 004c 55502000 		.ascii	"UP \000"
 2437              	.LC7:
 2438 0050 444F574E 		.ascii	"DOWN \000"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 65


 2438      2000
 2439 0056 0000     		.space	2
 2440              	.LC8:
 2441 0058 454E5445 		.ascii	"ENTER \000"
 2441      522000
 2442 005f 00       		.space	1
 2443              	.LC9:
 2444 0060 72706D00 		.ascii	"rpm\000"
 2445              	.LC10:
 2446 0064 54414348 		.ascii	"TACHO\000"
 2446      4F00
 2447 006a 0000     		.space	2
 2448              	.LC11:
 2449 006c 6B506100 		.ascii	"kPa\000"
 2450              	.LC12:
 2451 0070 4D415000 		.ascii	"MAP\000"
 2452              	.LC13:
 2453 0074 4700     		.ascii	"G\000"
 2454 0076 0000     		.space	2
 2455              	.LC14:
 2456 0078 4C617447 		.ascii	"LatG\000"
 2456      00
 2457 007d 000000   		.space	3
 2458              	.LC15:
 2459 0080 00       		.ascii	"\000"
 2460 0081 000000   		.space	3
 2461              	.LC16:
 2462 0084 4D6F6465 		.ascii	"Mode Setting\000"
 2462      20536574 
 2462      74696E67 
 2462      00
 2463 0091 000000   		.space	3
 2464              	.LC17:
 2465 0094 3E00     		.ascii	">\000"
 2466 0096 0000     		.space	2
 2467              	.LC18:
 2468 0098 2000     		.ascii	" \000"
 2469 009a 0000     		.space	2
 2470              	.LC19:
 2471 009c 4D756C74 		.ascii	"Multi-Meter\000"
 2471      692D4D65 
 2471      74657200 
 2472              	.LC20:
 2473 00a8 53636F70 		.ascii	"Scope\000"
 2473      6500
 2474              		.section	.rodata.meas_digit,"a",%progbits
 2475              		.align	2
 2476              		.set	.LANCHOR9,. + 0
 2479              	meas_digit:
 2480 0000 03       		.byte	3
 2481 0001 03       		.byte	3
 2482 0002 03       		.byte	3
 2483 0003 03       		.byte	3
 2484 0004 03       		.byte	3
 2485 0005 03       		.byte	3
 2486              		.section	.rodata.meas_frac,"a",%progbits
 2487              		.align	2
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 66


 2488              		.set	.LANCHOR10,. + 0
 2491              	meas_frac:
 2492 0000 02       		.byte	2
 2493 0001 01       		.byte	1
 2494 0002 01       		.byte	1
 2495 0003 00       		.byte	0
 2496 0004 00       		.byte	0
 2497 0005 02       		.byte	2
 2498              		.section	.rodata.meas_name,"a",%progbits
 2499              		.align	2
 2500              		.set	.LANCHOR3,. + 0
 2503              	meas_name:
 2504 0000 4D415000 		.ascii	"MAP\000"
 2505 0004 000000   		.space	3
 2506 0007 4F494C50 		.ascii	"OILP\000"
 2506      00
 2507 000c 0000     		.space	2
 2508 000e 46505600 		.ascii	"FPV\000"
 2509 0012 000000   		.space	3
 2510 0015 45435400 		.ascii	"ECT\000"
 2511 0019 000000   		.space	3
 2512 001c 4F494C54 		.ascii	"OILT\000"
 2512      00
 2513 0021 0000     		.space	2
 2514 0023 4F3200   		.ascii	"O2\000"
 2515 0026 00000000 		.space	4
 2516              		.section	.rodata.meas_sign,"a",%progbits
 2517              		.align	2
 2518              		.set	.LANCHOR11,. + 0
 2521              	meas_sign:
 2522 0000 01       		.byte	1
 2523 0001 00       		.byte	0
 2524 0002 00       		.byte	0
 2525 0003 00       		.byte	0
 2526 0004 00       		.byte	0
 2527 0005 00       		.byte	0
 2528              		.section	.rodata.meas_unit,"a",%progbits
 2529              		.align	2
 2530              		.set	.LANCHOR2,. + 0
 2533              	meas_unit:
 2534 0000 6B706100 		.ascii	"kpa\000"
 2535 0004 00       		.space	1
 2536 0005 6B706100 		.ascii	"kpa\000"
 2537 0009 00       		.space	1
 2538 000a 56202000 		.ascii	"V  \000"
 2539 000e 00       		.space	1
 2540 000f B0       		.byte	-80
 2541 0010 43       		.byte	67
 2542 0011 00       		.byte	0
 2543 0012 0000     		.space	2
 2544 0014 B0       		.byte	-80
 2545 0015 43       		.byte	67
 2546 0016 00       		.byte	0
 2547 0017 0000     		.space	2
 2548 0019 5600     		.ascii	"V\000"
 2549 001b 000000   		.space	3
 2550              		.text
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 67


 2551              	.Letext0:
 2552              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 2553              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 2554              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2555              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 2556              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 2557              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 2558              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2559              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 2560              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 2561              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 2562              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 2563              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 2564              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 2565              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2c.h"
 2566              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi.h"
 2567              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 2568              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 2569              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 2570              		.file 20 "Inc/adc.h"
 2571              		.file 21 "Inc/can.h"
 2572              		.file 22 "Inc/i2c.h"
 2573              		.file 23 "Inc/spi.h"
 2574              		.file 24 "Inc/tim.h"
 2575              		.file 25 "Inc/usart.h"
 2576              		.file 26 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 2577              		.file 27 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 2578              		.file 28 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef
 2579              		.file 29 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 2580              		.file 30 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/math.h"
 2581              		.file 31 "/Users/imashio/Electronics/ARM/_Library/u8x8.h"
 2582              		.file 32 "/Users/imashio/Electronics/ARM/_Library/u8g2.h"
 2583              		.file 33 "/Users/imashio/Electronics/ARM/_Library/flag.h"
 2584              		.file 34 "Inc/defi_decoder.h"
 2585              		.file 35 "Inc/pulse_counter.h"
 2586              		.file 36 "Inc/can_obd.h"
 2587              		.file 37 "/Users/imashio/Electronics/ARM/_Library/draw_Value.h"
 2588              		.file 38 "/Users/imashio/Electronics/ARM/_Library/draw_IndicatorBox.h"
 2589              		.file 39 "/Users/imashio/Electronics/ARM/_Library/usart_transmit_printf.h"
 2590              		.file 40 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 2591              		.file 41 "Inc/gsens_ADXL345.h"
 2592              		.file 42 "/Users/imashio/Electronics/ARM/_Library/draw_BarGraph.h"
 2593              		.file 43 "Inc/gpio.h"
 2594              		.file 44 "Inc/dma.h"
 2595              		.file 45 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 2596              		.file 46 "<built-in>"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 68


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:18     .text.draw_indicators:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:26     .text.draw_indicators:0000000000000000 draw_indicators
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:81     .text.draw_indicators:000000000000003c $d
                            *COM*:0000000000000080 u8g2
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:88     .text.draw_MeasLabels:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:96     .text.draw_MeasLabels:0000000000000000 draw_MeasLabels
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:213    .text.draw_MeasLabels:00000000000000d0 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:222    .text.draw_MeasLabels_Rotary:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:230    .text.draw_MeasLabels_Rotary:0000000000000000 draw_MeasLabels_Rotary
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:286    .text.draw_MeasLabels_Rotary:000000000000003c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:293    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:301    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:327    .text.HAL_ADC_ConvCpltCallback:0000000000000018 $d
                            *COM*:0000000000000014 g_ADCBuffer
                            *COM*:0000000000000014 adc
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:333    .text.SystemClock_Config:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:341    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:465    .text.startup.main:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:473    .text.startup.main:0000000000000000 main
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:956    .text.startup.main:0000000000000308 $d
                            *COM*:0000000000000001 Gsens_EN
                            *COM*:0000000000000001 CAN_EN
                            *COM*:0000000000000001 mode
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:1006   .text.startup.main:00000000000003c8 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:1401   .text.startup.main:0000000000000644 $d
                            *COM*:0000000000000002 Gsens_X
                            *COM*:0000000000000002 Gsens_Y
                            *COM*:0000000000000002 Gsens_Z
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:1428   .text.startup.main:00000000000006a4 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:1871   .text.startup.main:00000000000009d4 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:1892   .text.startup.main:0000000000000a18 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:1982   .text.startup.main:0000000000000aa0 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:1995   .text.Error_Handler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2003   .text.Error_Handler:0000000000000000 Error_Handler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2070   .data.FP_duty:0000000000000000 FP_duty
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2077   .data.FP_volt:0000000000000000 FP_volt
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2099   .data.O2_volt:0000000000000000 O2_volt
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2106   .data.meas_value:0000000000000000 meas_value
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2521   .rodata.meas_sign:0000000000000000 meas_sign
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2491   .rodata.meas_frac:0000000000000000 meas_frac
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2479   .rodata.meas_digit:0000000000000000 meas_digit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2533   .rodata.meas_unit:0000000000000000 meas_unit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2503   .rodata.meas_name:0000000000000000 meas_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2058   .bss.idct_status:0000000000000000 idct_status
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2418   .rodata.idct_name:0000000000000000 idct_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2046   .bss.cursor:0000000000000000 cursor
                            *COM*:0000000000000001 setting
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2083   .data.MT:0000000000000000 MT
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2051   .bss.gear:0000000000000000 gear
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2063   .bss.update_display:0000000000000000 update_display
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2124   .rodata.enfini_logo:0000000000000000 enfini_logo
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2047   .bss.cursor:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2052   .bss.gear:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2054   .bss.idct_status:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2064   .bss.update_display:0000000000000000 $d
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 69


/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2066   .data.FP_duty:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2073   .data.FP_volt:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2080   .data.MT:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2095   .data.O2_volt:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2102   .data.meas_value:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2114   .rodata.draw_MeasLabels.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2120   .rodata.enfini_logo:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2414   .rodata.idct_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2423   .rodata.main.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2475   .rodata.meas_digit:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2487   .rodata.meas_frac:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2499   .rodata.meas_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2517   .rodata.meas_sign:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s:2529   .rodata.meas_unit:0000000000000000 $d

UNDEFINED SYMBOLS
draw_IndicatorBox
draw_MeasLabelUnit
draw_Value
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_f2d
__aeabi_dmul
__aeabi_ddiv
__aeabi_d2iz
__aeabi_d2uiz
HAL_Init
memset
MX_GPIO_Init
MX_DMA_Init
MX_ADC1_Init
MX_CAN_Init
MX_I2C1_Init
MX_SPI1_Init
MX_TIM1_Init
MX_TIM2_Init
MX_TIM3_Init
MX_TIM6_Init
MX_USART1_UART_Init
MX_USART2_UART_Init
MX_TIM7_Init
MX_TIM16_Init
HAL_TIM_PWM_Start
HAL_TIM_Base_Start_IT
HAL_ADC_Start_DMA
HAL_UART_Receive_IT
CAN_OBD_Init
u8g2_Setup_ssd1309_128x64_noname2_f
HAL_GPIO_WritePin
HAL_Delay
u8x8_InitDisplay
u8x8_SetPowerSave
u8x8_SetContrast
u8g2_ClearDisplay
u8g2_DrawXBMP
u8g2_SetFont
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccgMjQmX.s 			page 70


u8g2_DrawStr
u8g2_SendBuffer
u8g2_ClearBuffer
HAL_UART_Transmit_printf
Gsens_ADXL345_Init
CAN_OBD_Response
defi_decoder
htim1
htim2
htim3
htim6
htim7
htim16
hadc1
DEFI_value
rpm
UART1_Data
huart1
u8x8_gpio_and_delay_STM32F303
u8x8_byte_4wire_hw_spi
u8g2_cb_r0
u8g2_font_5x7_tf
huart2
CAN_Received
UART1_RxData
flag_meas
flag_sw
flag_disp
flag_status
HAL_NVIC_DisableIRQ
draw_CircularMeter_Init
draw_CircularMeter
Gsens_ADXL345_Read_G
draw_Wave_axis
draw_Wave
draw_BarGraph
draw_Rotary
draw_MeasUnit
u8g2_font_7x14B_tf
