ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.draw_indicators,"ax",%progbits
  18              		.align	1
  19              		.global	draw_indicators
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	draw_indicators:
  26              	.LFB126:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 2


  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  39:Src/main.c    **** #include "main.h"
  40:Src/main.c    **** #include "stm32f3xx_hal.h"
  41:Src/main.c    **** #include "adc.h"
  42:Src/main.c    **** #include "can.h"
  43:Src/main.c    **** #include "dma.h"
  44:Src/main.c    **** #include "spi.h"
  45:Src/main.c    **** #include "tim.h"
  46:Src/main.c    **** #include "usart.h"
  47:Src/main.c    **** #include "gpio.h"
  48:Src/main.c    **** 
  49:Src/main.c    **** /* USER CODE BEGIN Includes */
  50:Src/main.c    **** #include <stdio.h>
  51:Src/main.c    **** #include <math.h>
  52:Src/main.c    **** 
  53:Src/main.c    **** #include "basic.h"  // original library
  54:Src/main.c    **** #include "u8g2.h"		// graphic display library
  55:Src/main.c    **** #include "u8x8_gpio_STM32F303.h"
  56:Src/main.c    **** #include "u8x8_byte_4wire_hw_spi.h"
  57:Src/main.c    **** #include "draw_Value.h"
  58:Src/main.c    **** #include "draw_BarGraph.h"
  59:Src/main.c    **** #include "draw_IndicatorBox.h"
  60:Src/main.c    **** 
  61:Src/main.c    **** #include "flag.h"
  62:Src/main.c    **** 
  63:Src/main.c    **** /* USER CODE END Includes */
  64:Src/main.c    **** 
  65:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE BEGIN PV */
  68:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  69:Src/main.c    **** u8g2_t u8g2; // a structure which will contain all the data for one display
  70:Src/main.c    **** 
  71:Src/main.c    **** // RPM bar graph parameter definition
  72:Src/main.c    **** #define	rpmbar_x		  0
  73:Src/main.c    **** #define	rpmbar_y		  0
  74:Src/main.c    **** #define	rpmbar_width	128
  75:Src/main.c    **** #define	rpmbar_height	14
  76:Src/main.c    **** #define	rpm_min			  0
  77:Src/main.c    **** #define	rpm_max			  9000
  78:Src/main.c    **** 
  79:Src/main.c    **** // measurements display parameter definition
  80:Src/main.c    **** #define	N_meas			  6
  81:Src/main.c    **** #define	meas_x			  0
  82:Src/main.c    **** #define	meas_y			  16
  83:Src/main.c    **** #define	meas_x_offset	2
  84:Src/main.c    **** #define	meas_width1		70
  85:Src/main.c    **** #define	meas_width2		56
  86:Src/main.c    **** #define	meas_height		12
  87:Src/main.c    **** 
  88:Src/main.c    **** // indicators parameter definition
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 3


  89:Src/main.c    **** #define	N_idct			  2
  90:Src/main.c    **** #define	idct_x			  72
  91:Src/main.c    **** #define	idct_y			  53
  92:Src/main.c    **** #define	idct_width		27
  93:Src/main.c    **** #define	idct_height		9
  94:Src/main.c    **** 
  95:Src/main.c    **** //  Fuel Pump Voltage dosplay parameter definition
  96:Src/main.c    **** #define	FP_x		    	0
  97:Src/main.c    **** #define	FP_y          52
  98:Src/main.c    **** #define	FP_height	    12
  99:Src/main.c    **** #define	FP_volt_width	45
 100:Src/main.c    **** #define	FP_duty_width	70
 101:Src/main.c    **** 
 102:Src/main.c    **** // wave display parameter definition
 103:Src/main.c    **** #define	wave_x			0
 104:Src/main.c    **** #define	wave_y			15
 105:Src/main.c    **** #define	wave_width		128
 106:Src/main.c    **** #define	wave_height		40
 107:Src/main.c    **** #define	wave_value_min	-6
 108:Src/main.c    **** #define	wave_value_max	+12
 109:Src/main.c    **** 
 110:Src/main.c    **** // logo parameter definition (small 'enfini' logo)
 111:Src/main.c    **** #define logo_width    48
 112:Src/main.c    **** #define logo_height   48
 113:Src/main.c    **** 
 114:Src/main.c    **** uint8_t   update_display=0;
 115:Src/main.c    **** 
 116:Src/main.c    **** const unsigned char logo_bits[] = {
 117:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 118:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 119:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0x3F, 0x00,
 120:Src/main.c    ****   0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x1F, 0x00, 0x80, 0xFF, 0x07,
 121:Src/main.c    ****   0xE0, 0x01, 0x00, 0x80, 0x81, 0x07, 0xE0, 0x01, 0x00, 0x80, 0x81, 0x07,
 122:Src/main.c    ****   0xC0, 0xE1, 0x07, 0xC0, 0x80, 0x03, 0x00, 0xFC, 0x1F, 0xE0, 0x80, 0x03,
 123:Src/main.c    ****   0x00, 0xFE, 0x7F, 0x70, 0xC0, 0x01, 0x00, 0x0F, 0xFE, 0x39, 0xE0, 0x00,
 124:Src/main.c    ****   0x00, 0x07, 0xF8, 0x1F, 0xF0, 0x00, 0x00, 0x0E, 0xE0, 0x1F, 0x78, 0x00,
 125:Src/main.c    ****   0x00, 0x0C, 0xC0, 0xFF, 0x3F, 0x00, 0x00, 0x18, 0x00, 0xFF, 0x1F, 0x00,
 126:Src/main.c    ****   0x00, 0x38, 0xC0, 0xFF, 0x0F, 0x00, 0x00, 0x70, 0xE0, 0xF1, 0x03, 0x00,
 127:Src/main.c    ****   0x00, 0xE0, 0x78, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3F, 0xE0, 0x01, 0x00,
 128:Src/main.c    ****   0x00, 0x80, 0x1F, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00,
 129:Src/main.c    ****   0x00, 0x00, 0x1E, 0x7C, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00,
 130:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00,
 131:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 132:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 133:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4C, 0x1C, 0x00, 0x00, 0x00,
 134:Src/main.c    ****   0x00, 0x32, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x00, 0x18, 0x00,
 135:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFC, 0x39, 0x00, 0x00, 0x4E, 0xC6, 0xB8, 0x31, 0x00,
 136:Src/main.c    ****   0x00, 0x3E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x3C, 0xC6, 0x98, 0x31, 0x00,
 137:Src/main.c    ****   0x00, 0x0E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x4E, 0xCE, 0x99, 0x31, 0x00,
 138:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFD, 0x7B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 139:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 140:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 141:Src/main.c    ****   };
 142:Src/main.c    **** 
 143:Src/main.c    **** /*
 144:Src/main.c    **** // logo parameter definition (meidium 'enfini' logo)
 145:Src/main.c    **** #define logo_width 54
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 4


 146:Src/main.c    **** #define logo_height 48
 147:Src/main.c    **** 
 148:Src/main.c    **** static unsigned char logo_bits[] = {
 149:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0x0F,
 150:Src/main.c    ****   0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0xE0, 0xFF, 0xFF,
 151:Src/main.c    ****   0xFF, 0xFF, 0xFF, 0x01, 0xF8, 0x3F, 0x00, 0x00, 0xF0, 0xFF, 0x07, 0xF8,
 152:Src/main.c    ****   0x01, 0x00, 0x00, 0x70, 0xE0, 0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x80,
 153:Src/main.c    ****   0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00,
 154:Src/main.c    ****   0x38, 0x80, 0x07, 0x00, 0xF8, 0x3F, 0x00, 0x38, 0x80, 0x07, 0x00, 0xFE,
 155:Src/main.c    ****   0xFF, 0x00, 0x1C, 0xC0, 0x03, 0x80, 0xFF, 0xFF, 0x01, 0x0E, 0xC0, 0x01,
 156:Src/main.c    ****   0xC0, 0x07, 0xFC, 0x07, 0x07, 0xE0, 0x01, 0x80, 0x03, 0xF0, 0x9F, 0x03,
 157:Src/main.c    ****   0xF0, 0x00, 0x80, 0x03, 0xC0, 0xFF, 0x03, 0x78, 0x00, 0x00, 0x07, 0x80,
 158:Src/main.c    ****   0xFF, 0x01, 0x3C, 0x00, 0x00, 0x06, 0x00, 0xFE, 0x87, 0x3F, 0x00, 0x00,
 159:Src/main.c    ****   0x0E, 0x00, 0xF8, 0xFF, 0x1F, 0x00, 0x00, 0x1C, 0x00, 0xF8, 0xFF, 0x07,
 160:Src/main.c    ****   0x00, 0x00, 0x38, 0x00, 0xDE, 0xFF, 0x03, 0x00, 0x00, 0x70, 0x00, 0x0F,
 161:Src/main.c    ****   0x7E, 0x00, 0x00, 0x00, 0xE0, 0xC0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xC0,
 162:Src/main.c    ****   0xF1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x00, 0x7C, 0x00, 0x00,
 163:Src/main.c    ****   0x00, 0x00, 0x3F, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x1F,
 164:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x3C, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x78,
 165:Src/main.c    ****   0xE0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0x03, 0x00, 0x00, 0x00,
 166:Src/main.c    ****   0x00, 0xC0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00,
 167:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00,
 168:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x4E, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39,
 169:Src/main.c    ****   0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00,
 170:Src/main.c    ****   0x00, 0x7E, 0x3E, 0xC7, 0x3D, 0x1C, 0x00, 0x00, 0x6F, 0x3E, 0xC7, 0x7F,
 171:Src/main.c    ****   0x1C, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x73, 0x18, 0x00, 0x00, 0x07, 0x1C,
 172:Src/main.c    ****   0x86, 0x71, 0x18, 0x00, 0x00, 0x3E, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00,
 173:Src/main.c    ****   0x1F, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x71, 0x18,
 174:Src/main.c    ****   0x00, 0x00, 0x47, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x7F, 0x3E, 0xCF,
 175:Src/main.c    ****   0xFB, 0x3C, 0x00, 0x00, 0x3C, 0x3E, 0xCF, 0xFB, 0x3C, 0x00, 0x00, 0x00,
 176:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 177:Src/main.c    ****   };
 178:Src/main.c    **** */
 179:Src/main.c    **** 
 180:Src/main.c    **** uint16_t	rpm = 0;
 181:Src/main.c    **** uint16_t	speed = 240;
 182:Src/main.c    **** uint8_t		gear = 0;
 183:Src/main.c    **** double		MT[5] = {3.483, 2.015, 1.391, 1.000, 0.806};
 184:Src/main.c    **** 
 185:Src/main.c    **** /*
 186:Src/main.c    **** typedef struct {
 187:Src/main.c    **** 	unsigned char	name;
 188:Src/main.c    **** 	uint8_t			status;
 189:Src/main.c    **** } idct;
 190:Src/main.c    **** */
 191:Src/main.c    **** 
 192:Src/main.c    **** // variables for indicators
 193:Src/main.c    **** const unsigned char idct_name[N_idct][5] = { // length must be (text length + 1)
 194:Src/main.c    **** 		"CAN"	,
 195:Src/main.c    **** 		"O2FB"
 196:Src/main.c    **** };
 197:Src/main.c    **** 
 198:Src/main.c    **** const uint8_t	idct_status[N_idct] = {
 199:Src/main.c    **** 		1	,
 200:Src/main.c    **** 		1
 201:Src/main.c    **** };
 202:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 5


 203:Src/main.c    **** // variables for measurement
 204:Src/main.c    **** const unsigned char meas_name[N_meas][7] = { // length must be (text length + 1)
 205:Src/main.c    **** 		"MAP"	,
 206:Src/main.c    **** 		"OILP"	,
 207:Src/main.c    **** 		"FPVOLT"	,
 208:Src/main.c    **** 		"ECT"	,
 209:Src/main.c    **** 		"OILT"	,
 210:Src/main.c    **** 		"O2"
 211:Src/main.c    **** };
 212:Src/main.c    **** 
 213:Src/main.c    **** const unsigned char meas_unit[N_meas][5] = {
 214:Src/main.c    **** 		"kpa"			,	// MAP
 215:Src/main.c    **** 		"kpa"			,	// OILP
 216:Src/main.c    **** 		"V  "     ,	// FuelPump Voltage
 217:Src/main.c    **** 		{176, 67, 0}	,	// ECT  degC...{176, 67, 0}
 218:Src/main.c    **** 		{176, 67, 0}	,	// OILT  degC...{176, 67, 0}
 219:Src/main.c    **** 		"V"					// O2
 220:Src/main.c    **** };
 221:Src/main.c    **** 
 222:Src/main.c    **** const uint8_t	meas_digit[N_meas] = {
 223:Src/main.c    **** 		3	,	// MAP
 224:Src/main.c    **** 		3	,	// OILP
 225:Src/main.c    **** 		3	,	// FuelPump Voltage
 226:Src/main.c    **** 		3	,	// ECT
 227:Src/main.c    **** 		3	,	// OILT
 228:Src/main.c    **** 		3		// O2
 229:Src/main.c    **** };
 230:Src/main.c    **** 
 231:Src/main.c    **** const uint8_t	meas_frac[N_meas] = {
 232:Src/main.c    **** 		2	,	// MAP
 233:Src/main.c    **** 		2	,	// OILP
 234:Src/main.c    **** 		1	,	// FuelPump Voltage
 235:Src/main.c    **** 		0	,	// ECT
 236:Src/main.c    **** 		0	,	// OILT
 237:Src/main.c    **** 		2		// O2
 238:Src/main.c    **** };
 239:Src/main.c    **** 
 240:Src/main.c    **** const uint8_t	meas_sign[N_meas] = {
 241:Src/main.c    **** 		1	,	// MAP
 242:Src/main.c    **** 		0	,	// OILP
 243:Src/main.c    **** 		0	,	// FuelPump Voltage
 244:Src/main.c    **** 		0	,	// ECT
 245:Src/main.c    **** 		0	,	// OILT
 246:Src/main.c    **** 		0		// O2
 247:Src/main.c    **** };
 248:Src/main.c    **** 
 249:Src/main.c    **** int16_t	meas_value[N_meas] = {
 250:Src/main.c    **** 		105	,	// MAP
 251:Src/main.c    **** 		235	,	// OILP
 252:Src/main.c    **** 		645	,	// FuelPump Voltage
 253:Src/main.c    **** 		89	,	// ECT
 254:Src/main.c    **** 		73	,	// OILT
 255:Src/main.c    **** 		143		// O2
 256:Src/main.c    **** };
 257:Src/main.c    **** 
 258:Src/main.c    **** // Fuel Pump Voltage
 259:Src/main.c    **** int16_t FP_volt = 330;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 6


 260:Src/main.c    **** int16_t FP_duty = 100;
 261:Src/main.c    **** 
 262:Src/main.c    **** /* USER CODE END PV */
 263:Src/main.c    **** 
 264:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 265:Src/main.c    **** void SystemClock_Config(void);
 266:Src/main.c    **** 
 267:Src/main.c    **** /* USER CODE BEGIN PFP */
 268:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 269:Src/main.c    **** 
 270:Src/main.c    **** /* USER CODE END PFP */
 271:Src/main.c    **** 
 272:Src/main.c    **** /* USER CODE BEGIN 0 */
 273:Src/main.c    **** void draw_indicators(){
  28              		.loc 1 273 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
  37 0002 84B0     		sub	sp, sp, #16
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 24
  40              	.LVL0:
 274:Src/main.c    ****   uint8_t n;
 275:Src/main.c    ****   uint8_t x, y;
 276:Src/main.c    ****   // draw indicators
 277:Src/main.c    ****   for( n=0; n<N_idct; n++ ){
  41              		.loc 1 277 0
  42 0004 0024     		movs	r4, #0
  43 0006 16E0     		b	.L2
  44              	.LVL1:
  45              	.L3:
 278:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
  46              		.loc 1 278 0 discriminator 3
  47 0008 04EB8402 		add	r2, r4, r4, lsl #2
  48 000c 0C4B     		ldr	r3, .L5
  49 000e 1344     		add	r3, r3, r2
  50 0010 C4EBC401 		rsb	r1, r4, r4, lsl #3
  51 0014 04EB8101 		add	r1, r4, r1, lsl #2
  52 0018 4831     		adds	r1, r1, #72
  53 001a 0293     		str	r3, [sp, #8]
  54 001c 094B     		ldr	r3, .L5+4
  55 001e 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
  56 0020 0193     		str	r3, [sp, #4]
  57 0022 0923     		movs	r3, #9
  58 0024 0093     		str	r3, [sp]
  59 0026 1B23     		movs	r3, #27
  60 0028 3522     		movs	r2, #53
  61 002a C9B2     		uxtb	r1, r1
  62 002c 0648     		ldr	r0, .L5+8
  63 002e FFF7FEFF 		bl	draw_IndicatorBox
  64              	.LVL2:
 277:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 7


  65              		.loc 1 277 0 discriminator 3
  66 0032 0134     		adds	r4, r4, #1
  67              	.LVL3:
  68 0034 E4B2     		uxtb	r4, r4
  69              	.LVL4:
  70              	.L2:
 277:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
  71              		.loc 1 277 0 is_stmt 0 discriminator 1
  72 0036 012C     		cmp	r4, #1
  73 0038 E6D9     		bls	.L3
 279:Src/main.c    ****   }
 280:Src/main.c    **** }
  74              		.loc 1 280 0 is_stmt 1
  75 003a 04B0     		add	sp, sp, #16
  76              	.LCFI2:
  77              		.cfi_def_cfa_offset 8
  78              		@ sp needed
  79 003c 10BD     		pop	{r4, pc}
  80              	.LVL5:
  81              	.L6:
  82 003e 00BF     		.align	2
  83              	.L5:
  84 0040 00000000 		.word	.LANCHOR0
  85 0044 00000000 		.word	.LANCHOR1
  86 0048 00000000 		.word	u8g2
  87              		.cfi_endproc
  88              	.LFE126:
  90              		.section	.text.draw_MeasLabels,"ax",%progbits
  91              		.align	1
  92              		.global	draw_MeasLabels
  93              		.syntax unified
  94              		.thumb
  95              		.thumb_func
  96              		.fpu fpv4-sp-d16
  98              	draw_MeasLabels:
  99              	.LFB127:
 281:Src/main.c    **** 
 282:Src/main.c    **** extern unsigned int cursor = 0;
 283:Src/main.c    **** void draw_MeasLabels(){
 100              		.loc 1 283 0
 101              		.cfi_startproc
 102              		@ args = 0, pretend = 0, frame = 0
 103              		@ frame_needed = 0, uses_anonymous_args = 0
 104 0000 70B5     		push	{r4, r5, r6, lr}
 105              	.LCFI3:
 106              		.cfi_def_cfa_offset 16
 107              		.cfi_offset 4, -16
 108              		.cfi_offset 5, -12
 109              		.cfi_offset 6, -8
 110              		.cfi_offset 14, -4
 111 0002 86B0     		sub	sp, sp, #24
 112              	.LCFI4:
 113              		.cfi_def_cfa_offset 40
 114              	.LVL6:
 284:Src/main.c    ****   uint8_t n;
 285:Src/main.c    ****   uint8_t x, y;
 286:Src/main.c    ****   // draw measurements label & unit
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 8


 287:Src/main.c    ****   for( n=0; n<3; n++ ){
 115              		.loc 1 287 0
 116 0004 0024     		movs	r4, #0
 117 0006 20E0     		b	.L8
 118              	.LVL7:
 119              	.L9:
 288:Src/main.c    **** 	  x = meas_x;
 289:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 120              		.loc 1 289 0 discriminator 3
 121 0008 324B     		ldr	r3, .L13
 122 000a A3FB0423 		umull	r2, r3, r3, r4
 123 000e 5B08     		lsrs	r3, r3, #1
 124 0010 03EB4303 		add	r3, r3, r3, lsl #1
 125 0014 E31A     		subs	r3, r4, r3
 126 0016 03EB4303 		add	r3, r3, r3, lsl #1
 127 001a 9A00     		lsls	r2, r3, #2
 128 001c D2B2     		uxtb	r2, r2
 129 001e 1032     		adds	r2, r2, #16
 130              	.LVL8:
 290:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width1, meas_height, meas_name[n], meas_unit[n]);
 131              		.loc 1 290 0 discriminator 3
 132 0020 C4EBC401 		rsb	r1, r4, r4, lsl #3
 133 0024 2C4B     		ldr	r3, .L13+4
 134 0026 0B44     		add	r3, r3, r1
 135 0028 04EB8400 		add	r0, r4, r4, lsl #2
 136 002c 2B49     		ldr	r1, .L13+8
 137 002e 0144     		add	r1, r1, r0
 138 0030 0291     		str	r1, [sp, #8]
 139 0032 0193     		str	r3, [sp, #4]
 140 0034 0C23     		movs	r3, #12
 141 0036 0093     		str	r3, [sp]
 142 0038 4623     		movs	r3, #70
 143 003a 02F0FC02 		and	r2, r2, #252
 144              	.LVL9:
 145 003e 0021     		movs	r1, #0
 146 0040 2748     		ldr	r0, .L13+12
 147 0042 FFF7FEFF 		bl	draw_MeasLabelUnit
 148              	.LVL10:
 287:Src/main.c    **** 	  x = meas_x;
 149              		.loc 1 287 0 discriminator 3
 150 0046 0134     		adds	r4, r4, #1
 151              	.LVL11:
 152 0048 E4B2     		uxtb	r4, r4
 153              	.LVL12:
 154              	.L8:
 287:Src/main.c    **** 	  x = meas_x;
 155              		.loc 1 287 0 is_stmt 0 discriminator 1
 156 004a 022C     		cmp	r4, #2
 157 004c DCD9     		bls	.L9
 291:Src/main.c    ****   }
 292:Src/main.c    ****   for( n=3; n<N_meas; n++ ){
 158              		.loc 1 292 0 is_stmt 1
 159 004e 0324     		movs	r4, #3
 160              	.LVL13:
 161 0050 20E0     		b	.L10
 162              	.LVL14:
 163              	.L11:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 9


 293:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 294:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 164              		.loc 1 294 0 discriminator 3
 165 0052 204B     		ldr	r3, .L13
 166 0054 A3FB0423 		umull	r2, r3, r3, r4
 167 0058 5B08     		lsrs	r3, r3, #1
 168 005a 03EB4303 		add	r3, r3, r3, lsl #1
 169 005e E31A     		subs	r3, r4, r3
 170 0060 03EB4303 		add	r3, r3, r3, lsl #1
 171 0064 9A00     		lsls	r2, r3, #2
 172 0066 D2B2     		uxtb	r2, r2
 173 0068 1032     		adds	r2, r2, #16
 174              	.LVL15:
 295:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width2, meas_height, meas_name[n], meas_unit[n]);
 175              		.loc 1 295 0 discriminator 3
 176 006a C4EBC401 		rsb	r1, r4, r4, lsl #3
 177 006e 1A4B     		ldr	r3, .L13+4
 178 0070 0B44     		add	r3, r3, r1
 179 0072 04EB8400 		add	r0, r4, r4, lsl #2
 180 0076 1949     		ldr	r1, .L13+8
 181 0078 0144     		add	r1, r1, r0
 182 007a 0291     		str	r1, [sp, #8]
 183 007c 0193     		str	r3, [sp, #4]
 184 007e 0C23     		movs	r3, #12
 185 0080 0093     		str	r3, [sp]
 186 0082 3823     		movs	r3, #56
 187 0084 02F0FC02 		and	r2, r2, #252
 188              	.LVL16:
 189 0088 4821     		movs	r1, #72
 190 008a 1548     		ldr	r0, .L13+12
 191 008c FFF7FEFF 		bl	draw_MeasLabelUnit
 192              	.LVL17:
 292:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 193              		.loc 1 292 0 discriminator 3
 194 0090 0134     		adds	r4, r4, #1
 195              	.LVL18:
 196 0092 E4B2     		uxtb	r4, r4
 197              	.LVL19:
 198              	.L10:
 292:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 199              		.loc 1 292 0 is_stmt 0 discriminator 1
 200 0094 052C     		cmp	r4, #5
 201 0096 DCD9     		bls	.L11
 296:Src/main.c    ****   }
 297:Src/main.c    **** 
 298:Src/main.c    ****   // Fuel Pump voltage & duty
 299:Src/main.c    ****   draw_MeasLabelUnit(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, "DUTY", "%  ");
 202              		.loc 1 299 0 is_stmt 1
 203 0098 114C     		ldr	r4, .L13+12
 204              	.LVL20:
 205 009a 124E     		ldr	r6, .L13+16
 206 009c 0296     		str	r6, [sp, #8]
 207 009e 124B     		ldr	r3, .L13+20
 208 00a0 0193     		str	r3, [sp, #4]
 209 00a2 0C25     		movs	r5, #12
 210 00a4 0095     		str	r5, [sp]
 211 00a6 4623     		movs	r3, #70
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 10


 212 00a8 3422     		movs	r2, #52
 213 00aa 0021     		movs	r1, #0
 214 00ac 2046     		mov	r0, r4
 215 00ae FFF7FEFF 		bl	draw_MeasLabelUnit
 216              	.LVL21:
 300:Src/main.c    ****   draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, 100, 3, 0, 0, "%  ");
 217              		.loc 1 300 0
 218 00b2 0596     		str	r6, [sp, #20]
 219 00b4 0021     		movs	r1, #0
 220 00b6 0491     		str	r1, [sp, #16]
 221 00b8 0391     		str	r1, [sp, #12]
 222 00ba 0323     		movs	r3, #3
 223 00bc 0293     		str	r3, [sp, #8]
 224 00be 6423     		movs	r3, #100
 225 00c0 0193     		str	r3, [sp, #4]
 226 00c2 0095     		str	r5, [sp]
 227 00c4 4623     		movs	r3, #70
 228 00c6 3422     		movs	r2, #52
 229 00c8 2046     		mov	r0, r4
 230 00ca FFF7FEFF 		bl	draw_Value
 231              	.LVL22:
 301:Src/main.c    **** }
 232              		.loc 1 301 0
 233 00ce 06B0     		add	sp, sp, #24
 234              	.LCFI5:
 235              		.cfi_def_cfa_offset 16
 236              		@ sp needed
 237 00d0 70BD     		pop	{r4, r5, r6, pc}
 238              	.L14:
 239 00d2 00BF     		.align	2
 240              	.L13:
 241 00d4 ABAAAAAA 		.word	-1431655765
 242 00d8 00000000 		.word	.LANCHOR2
 243 00dc 00000000 		.word	.LANCHOR3
 244 00e0 00000000 		.word	u8g2
 245 00e4 00000000 		.word	.LC0
 246 00e8 04000000 		.word	.LC1
 247              		.cfi_endproc
 248              	.LFE127:
 250              		.section	.text._Error_Handler,"ax",%progbits
 251              		.align	1
 252              		.global	_Error_Handler
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 256              		.fpu fpv4-sp-d16
 258              	_Error_Handler:
 259              	.LFB130:
 302:Src/main.c    **** 
 303:Src/main.c    **** /* USER CODE END 0 */
 304:Src/main.c    **** 
 305:Src/main.c    **** int main(void)
 306:Src/main.c    **** {
 307:Src/main.c    **** 
 308:Src/main.c    ****   /* USER CODE BEGIN 1 */
 309:Src/main.c    **** 
 310:Src/main.c    ****   /* USER CODE END 1 */
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 11


 311:Src/main.c    **** 
 312:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 313:Src/main.c    **** 
 314:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 315:Src/main.c    ****   HAL_Init();
 316:Src/main.c    **** 
 317:Src/main.c    ****   /* USER CODE BEGIN Init */
 318:Src/main.c    ****   uint8_t n;
 319:Src/main.c    ****   uint8_t x, y;
 320:Src/main.c    **** 
 321:Src/main.c    ****   uint16_t a = 0;
 322:Src/main.c    ****   uint16_t b = 0;
 323:Src/main.c    **** 
 324:Src/main.c    ****   uint8_t mode;
 325:Src/main.c    **** 
 326:Src/main.c    ****   uint16_t circular_buffer_index = 0;
 327:Src/main.c    ****   int16_t circular_buffer[128]={};
 328:Src/main.c    **** 
 329:Src/main.c    ****   /* USER CODE END Init */
 330:Src/main.c    **** 
 331:Src/main.c    ****   /* Configure the system clock */
 332:Src/main.c    ****   SystemClock_Config();
 333:Src/main.c    **** 
 334:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 335:Src/main.c    **** 
 336:Src/main.c    ****   /* USER CODE END SysInit */
 337:Src/main.c    **** 
 338:Src/main.c    ****   /* Initialize all configured peripherals */
 339:Src/main.c    ****   MX_GPIO_Init();
 340:Src/main.c    ****   MX_DMA_Init();
 341:Src/main.c    ****   MX_USART2_UART_Init();
 342:Src/main.c    ****   MX_TIM1_Init();
 343:Src/main.c    ****   MX_USART1_UART_Init();
 344:Src/main.c    ****   MX_SPI1_Init();
 345:Src/main.c    ****   MX_ADC1_Init();
 346:Src/main.c    ****   MX_TIM2_Init();
 347:Src/main.c    ****   MX_ADC2_Init();
 348:Src/main.c    ****   MX_CAN_Init();
 349:Src/main.c    ****   MX_TIM6_Init();
 350:Src/main.c    **** 
 351:Src/main.c    ****   /* USER CODE BEGIN 2 */
 352:Src/main.c    **** 
 353:Src/main.c    ****   // OLED diaplay initialization
 354:Src/main.c    ****   u8g2_Setup_ssd1309_128x64_noname2_f(&u8g2, U8G2_R0, u8x8_byte_4wire_hw_spi, u8x8_gpio_and_delay_S
 355:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 356:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 357:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 358:Src/main.c    ****   u8g2_SetContrast(&u8g2, 128); // set contrast
 359:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 360:Src/main.c    **** 
 361:Src/main.c    **** 
 362:Src/main.c    ****   // draw opening
 363:Src/main.c    ****   u8g2_DrawXBMP(&u8g2, 40, 0, logo_width, logo_height, logo_bits );
 364:Src/main.c    **** 
 365:Src/main.c    ****   u8g2_SetFont(&u8g2, u8g2_font_5x7_tf);
 366:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 367:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.1a");
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 12


 368:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 369:Src/main.c    **** 
 370:Src/main.c    ****   HAL_Delay(2000);
 371:Src/main.c    **** 
 372:Src/main.c    ****   ///// Timer /////
 373:Src/main.c    ****   // PWM for Fuel Pump Driver ()
 374:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim1) != HAL_OK)
 375:Src/main.c    ****   {
 376:Src/main.c    ****     Error_Handler();
 377:Src/main.c    ****   }
 378:Src/main.c    **** 
 379:Src/main.c    ****   // display (20ms)
 380:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim2) != HAL_OK)
 381:Src/main.c    ****   {
 382:Src/main.c    ****     Error_Handler();
 383:Src/main.c    ****   }
 384:Src/main.c    **** 
 385:Src/main.c    ****   // interrupt control (100ms)
 386:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim6) != HAL_OK)
 387:Src/main.c    ****   {
 388:Src/main.c    ****     Error_Handler();
 389:Src/main.c    ****   }
 390:Src/main.c    **** 
 391:Src/main.c    ****   // ADC (for PA0) buffer definition
 392:Src/main.c    ****   enum{ ADC_BUFFER_LENGTH = 1024 };
 393:Src/main.c    ****   uint16_t g_ADCBuffer[ADC_BUFFER_LENGTH];
 394:Src/main.c    ****   memset(g_ADCBuffer, 0, sizeof(g_ADCBuffer));
 395:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, g_ADCBuffer, ADC_BUFFER_LENGTH);
 396:Src/main.c    **** 
 397:Src/main.c    ****   u8g2_ClearBuffer(&u8g2);
 398:Src/main.c    **** 
 399:Src/main.c    ****   HAL_UART_Transmit_printf(&huart1, "Hello. This is MFM.\n");
 400:Src/main.c    ****   HAL_UART_Transmit_printf(&huart2, "Hello. This is MFM.\n");
 401:Src/main.c    **** 
 402:Src/main.c    ****   /* USER CODE END 2 */
 403:Src/main.c    **** 
 404:Src/main.c    ****   /* Infinite loop */
 405:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 406:Src/main.c    **** 
 407:Src/main.c    ****   draw_MeasLabels();
 408:Src/main.c    ****   draw_indicators();
 409:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 410:Src/main.c    **** 
 411:Src/main.c    **** 
 412:Src/main.c    ****   while (1) 
 413:Src/main.c    ****   {
 414:Src/main.c    ****   /* USER CODE END WHILE */
 415:Src/main.c    **** 
 416:Src/main.c    ****   /* USER CODE BEGIN 3 */
 417:Src/main.c    **** 
 418:Src/main.c    **** 	  // start of create dummy data for debug
 419:Src/main.c    ****     if( flag_meas_short == 1 ){
 420:Src/main.c    ****       if( rpm <= 8200 ){
 421:Src/main.c    ****           rpm = rpm + (int)(20*MT[gear]);
 422:Src/main.c    ****           //rpm=rpm+10;
 423:Src/main.c    ****       }else{
 424:Src/main.c    ****         if( gear < 4 ){
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 13


 425:Src/main.c    ****           gear++;
 426:Src/main.c    ****           rpm = (double)speed / (0.002*60.0) * (MT[gear]*4.1);
 427:Src/main.c    ****         }else{
 428:Src/main.c    ****           gear = 0;
 429:Src/main.c    ****           rpm = 1000;
 430:Src/main.c    ****         }
 431:Src/main.c    ****       }
 432:Src/main.c    ****       speed = (double)rpm*0.002*60.0/MT[gear]/4.1;
 433:Src/main.c    **** 
 434:Src/main.c    ****       if( a >= 150){
 435:Src/main.c    ****         a = 0;
 436:Src/main.c    ****       }else{
 437:Src/main.c    ****         a++;
 438:Src/main.c    ****       }
 439:Src/main.c    **** 
 440:Src/main.c    ****       for( n=0; n<=5; n++){
 441:Src/main.c    ****         if( n==0 ){
 442:Src/main.c    ****           meas_value[n] = a - 75;
 443:Src/main.c    ****         }else{
 444:Src/main.c    ****           meas_value[n] = a;
 445:Src/main.c    ****         }
 446:Src/main.c    ****       }
 447:Src/main.c    **** 
 448:Src/main.c    ****       flag_meas_short = 0;
 449:Src/main.c    ****     }
 450:Src/main.c    **** 	  // end of create dummy data for debug
 451:Src/main.c    **** 
 452:Src/main.c    **** 
 453:Src/main.c    ****     ///// ADC /////
 454:Src/main.c    **** 		// read O2 sensor ADC output
 455:Src/main.c    **** 		meas_value[5] = (int16_t)(330 * (float)g_ADCBuffer[0]/255);
 456:Src/main.c    **** 
 457:Src/main.c    **** 		// read Fuel Pump Voltage ADC output
 458:Src/main.c    **** 		FP_volt = (int16_t)(330*(float)g_ADCBuffer[0]/255);
 459:Src/main.c    ****     FP_duty = (int16_t)(FP_volt/(14.4)*10);
 460:Src/main.c    **** 		meas_value[2] = FP_volt;
 461:Src/main.c    **** 
 462:Src/main.c    ****     ///// Switch /////
 463:Src/main.c    ****     if( flag_sw != 0 ){
 464:Src/main.c    ****       switch( flag_sw ){
 465:Src/main.c    ****         case 1:
 466:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "UP ");
 467:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 468:Src/main.c    ****           // SW "UP"
 469:Src/main.c    ****           if( mode == 10 ){
 470:Src/main.c    ****             if( cursor == 1 ){
 471:Src/main.c    ****               cursor = 0;
 472:Src/main.c    ****             }else{
 473:Src/main.c    ****               cursor++;
 474:Src/main.c    ****             }
 475:Src/main.c    ****           }
 476:Src/main.c    ****           break;
 477:Src/main.c    ****         case 2:
 478:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "DOWN ");
 479:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 480:Src/main.c    ****           // SW "DOWN"
 481:Src/main.c    ****           if( mode == 10 ){
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 14


 482:Src/main.c    ****             if( cursor == 0 ){
 483:Src/main.c    ****               cursor = 1;
 484:Src/main.c    ****             }else{
 485:Src/main.c    ****               cursor--;
 486:Src/main.c    ****             }
 487:Src/main.c    ****           }
 488:Src/main.c    ****           break;
 489:Src/main.c    ****         case 3:
 490:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "ENTER ");
 491:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI1_IRQn);
 492:Src/main.c    ****           // SW "ENTER"
 493:Src/main.c    ****           if( mode == 10 ){
 494:Src/main.c    ****             mode = cursor;
 495:Src/main.c    ****             u8g2_ClearBuffer(&u8g2);
 496:Src/main.c    ****             if( mode == 0 ){
 497:Src/main.c    ****               draw_MeasLabels();
 498:Src/main.c    ****               draw_indicators();
 499:Src/main.c    ****             }else if( mode == 1 ){
 500:Src/main.c    ****               draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_v
 501:Src/main.c    ****               draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "MAP", "kPa");
 502:Src/main.c    ****             }
 503:Src/main.c    ****             u8g2_SendBuffer(&u8g2);
 504:Src/main.c    ****           }else{
 505:Src/main.c    ****             mode = 10;
 506:Src/main.c    ****           }
 507:Src/main.c    ****           break;
 508:Src/main.c    ****         default:
 509:Src/main.c    ****           break;
 510:Src/main.c    ****       }
 511:Src/main.c    ****       TIM6->CNT = 0;
 512:Src/main.c    ****       flag_sw = 0;
 513:Src/main.c    ****     }
 514:Src/main.c    **** 
 515:Src/main.c    ****     ///// Display sequence /////
 516:Src/main.c    ****     if( flag_disp == 1 ){
 517:Src/main.c    ****       ///// multi meter /////
 518:Src/main.c    ****       if( mode == 0 ){
 519:Src/main.c    ****         // update Fuel Pump Voltage
 520:Src/main.c    ****         draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, FP_duty, 3, 0, 0, "%  ");
 521:Src/main.c    **** 
 522:Src/main.c    ****         // draw bar graph
 523:Src/main.c    ****         draw_BarGraph(&u8g2, rpmbar_x, rpmbar_y, rpmbar_width, rpmbar_height, rpm, rpm_min, rpm_max
 524:Src/main.c    **** 
 525:Src/main.c    ****         // draw measurement data
 526:Src/main.c    ****         for( n=0; n<3; n++ ){
 527:Src/main.c    ****           x = meas_x;
 528:Src/main.c    ****           y = (n % 3) * meas_height	+ meas_y;
 529:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac
 530:Src/main.c    ****         }
 531:Src/main.c    ****         for( n=3; n<N_meas; n++ ){
 532:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 533:Src/main.c    ****           y = (n % 3) * meas_height	+ meas_y;
 534:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 535:Src/main.c    ****         }
 536:Src/main.c    ****       ///// Scope /////
 537:Src/main.c    ****       }else if( mode == 1 ){
 538:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 15


 539:Src/main.c    ****         if( circular_buffer_index > 0 ){
 540:Src/main.c    ****           circular_buffer_index--;
 541:Src/main.c    ****         }else{
 542:Src/main.c    ****           circular_buffer_index = 128;
 543:Src/main.c    ****         }
 544:Src/main.c    **** //    		circular_buffer[circular_buffer_index] = b; // sine-wave
 545:Src/main.c    ****         circular_buffer[circular_buffer_index] = (int16_t)(18 * (float)g_ADCBuffer[0]/255 - 6); // 
 546:Src/main.c    **** 
 547:Src/main.c    ****         // draw wave
 548:Src/main.c    ****         draw_Wave(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_max, c
 549:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 1, 1, "kPa");
 550:Src/main.c    **** 
 551:Src/main.c    ****       // mode setting
 552:Src/main.c    ****       }else if( mode == 10 ){
 553:Src/main.c    ****         u8g2_ClearBuffer(&u8g2);
 554:Src/main.c    ****         u8g2_SetFont(&u8g2, u8g2_font_7x14B_tf);
 555:Src/main.c    ****         u8g2_DrawStr(&u8g2, 2, 15, "Mode Setting" );
 556:Src/main.c    ****         if( cursor == 0 ){
 557:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, ">" );
 558:Src/main.c    ****         }else{
 559:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, " " );
 560:Src/main.c    ****         }
 561:Src/main.c    ****         u8g2_DrawStr(&u8g2,10, 30, "Multi-Meter" );
 562:Src/main.c    ****         if( cursor == 1 ){
 563:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 564:Src/main.c    ****         }else{
 565:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, " " );
 566:Src/main.c    ****         }
 567:Src/main.c    ****         u8g2_DrawStr(&u8g2,10, 45, "Scope" );
 568:Src/main.c    ****         u8g2_SendBuffer(&u8g2);
 569:Src/main.c    ****       }
 570:Src/main.c    ****       // send buffer
 571:Src/main.c    ****       u8g2_SendBuffer(&u8g2);
 572:Src/main.c    **** 
 573:Src/main.c    ****       flag_disp = 0;
 574:Src/main.c    ****     }
 575:Src/main.c    **** 
 576:Src/main.c    **** 
 577:Src/main.c    ****   }
 578:Src/main.c    ****   /* USER CODE END 3 */
 579:Src/main.c    **** 
 580:Src/main.c    **** }
 581:Src/main.c    **** 
 582:Src/main.c    **** /** System Clock Configuration
 583:Src/main.c    **** */
 584:Src/main.c    **** void SystemClock_Config(void)
 585:Src/main.c    **** {
 586:Src/main.c    **** 
 587:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 588:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 589:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 590:Src/main.c    **** 
 591:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 592:Src/main.c    ****     */
 593:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 594:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 595:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 16


 596:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 597:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 598:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 599:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 600:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 601:Src/main.c    ****   {
 602:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 603:Src/main.c    ****   }
 604:Src/main.c    **** 
 605:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 606:Src/main.c    ****     */
 607:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 608:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 609:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 610:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 611:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 612:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 613:Src/main.c    **** 
 614:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 615:Src/main.c    ****   {
 616:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 617:Src/main.c    ****   }
 618:Src/main.c    **** 
 619:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_TIM1;
 620:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 621:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 622:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 623:Src/main.c    ****   {
 624:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 625:Src/main.c    ****   }
 626:Src/main.c    **** 
 627:Src/main.c    ****     /**Configure the Systick interrupt time 
 628:Src/main.c    ****     */
 629:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 630:Src/main.c    **** 
 631:Src/main.c    ****     /**Configure the Systick 
 632:Src/main.c    ****     */
 633:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 634:Src/main.c    **** 
 635:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 636:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 637:Src/main.c    **** }
 638:Src/main.c    **** 
 639:Src/main.c    **** /* USER CODE BEGIN 4 */
 640:Src/main.c    **** 
 641:Src/main.c    **** /* USER CODE END 4 */
 642:Src/main.c    **** 
 643:Src/main.c    **** /**
 644:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 645:Src/main.c    ****   * @param  None
 646:Src/main.c    ****   * @retval None
 647:Src/main.c    ****   */
 648:Src/main.c    **** void _Error_Handler(char * file, int line)
 649:Src/main.c    **** {
 260              		.loc 1 649 0
 261              		.cfi_startproc
 262              		@ Volatile: function does not return.
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 17


 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 266              	.LVL23:
 267              	.L16:
 268 0000 FEE7     		b	.L16
 269              		.cfi_endproc
 270              	.LFE130:
 272              		.section	.text.SystemClock_Config,"ax",%progbits
 273              		.align	1
 274              		.global	SystemClock_Config
 275              		.syntax unified
 276              		.thumb
 277              		.thumb_func
 278              		.fpu fpv4-sp-d16
 280              	SystemClock_Config:
 281              	.LFB129:
 585:Src/main.c    **** 
 282              		.loc 1 585 0
 283              		.cfi_startproc
 284              		@ args = 0, pretend = 0, frame = 88
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 585:Src/main.c    **** 
 286              		.loc 1 585 0
 287 0000 00B5     		push	{lr}
 288              	.LCFI6:
 289              		.cfi_def_cfa_offset 4
 290              		.cfi_offset 14, -4
 291 0002 97B0     		sub	sp, sp, #92
 292              	.LCFI7:
 293              		.cfi_def_cfa_offset 96
 593:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 294              		.loc 1 593 0
 295 0004 0123     		movs	r3, #1
 296 0006 0C93     		str	r3, [sp, #48]
 594:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 297              		.loc 1 594 0
 298 0008 4FF4A022 		mov	r2, #327680
 299 000c 0D92     		str	r2, [sp, #52]
 595:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 300              		.loc 1 595 0
 301 000e 0022     		movs	r2, #0
 302 0010 0E92     		str	r2, [sp, #56]
 596:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 303              		.loc 1 596 0
 304 0012 1093     		str	r3, [sp, #64]
 597:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 305              		.loc 1 597 0
 306 0014 0223     		movs	r3, #2
 307 0016 1393     		str	r3, [sp, #76]
 598:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 308              		.loc 1 598 0
 309 0018 4FF48033 		mov	r3, #65536
 310 001c 1493     		str	r3, [sp, #80]
 599:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 311              		.loc 1 599 0
 312 001e 4FF4E013 		mov	r3, #1835008
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 18


 313 0022 1593     		str	r3, [sp, #84]
 600:Src/main.c    ****   {
 314              		.loc 1 600 0
 315 0024 0CA8     		add	r0, sp, #48
 316 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 317              	.LVL24:
 318 002a 58BB     		cbnz	r0, .L22
 607:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 319              		.loc 1 607 0
 320 002c 0F23     		movs	r3, #15
 321 002e 0793     		str	r3, [sp, #28]
 609:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 322              		.loc 1 609 0
 323 0030 0221     		movs	r1, #2
 324 0032 0891     		str	r1, [sp, #32]
 610:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 325              		.loc 1 610 0
 326 0034 0023     		movs	r3, #0
 327 0036 0993     		str	r3, [sp, #36]
 611:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 328              		.loc 1 611 0
 329 0038 4FF48062 		mov	r2, #1024
 330 003c 0A92     		str	r2, [sp, #40]
 612:Src/main.c    **** 
 331              		.loc 1 612 0
 332 003e 0B93     		str	r3, [sp, #44]
 614:Src/main.c    ****   {
 333              		.loc 1 614 0
 334 0040 07A8     		add	r0, sp, #28
 335 0042 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 336              	.LVL25:
 337 0046 10BB     		cbnz	r0, .L23
 619:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 338              		.loc 1 619 0
 339 0048 41F20103 		movw	r3, #4097
 340 004c 0193     		str	r3, [sp, #4]
 620:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 341              		.loc 1 620 0
 342 004e 0023     		movs	r3, #0
 343 0050 0393     		str	r3, [sp, #12]
 621:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 344              		.loc 1 621 0
 345 0052 0693     		str	r3, [sp, #24]
 622:Src/main.c    ****   {
 346              		.loc 1 622 0
 347 0054 01A8     		add	r0, sp, #4
 348 0056 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 349              	.LVL26:
 350 005a E8B9     		cbnz	r0, .L24
 629:Src/main.c    **** 
 351              		.loc 1 629 0
 352 005c FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 353              	.LVL27:
 354 0060 104B     		ldr	r3, .L25
 355 0062 A3FB0030 		umull	r3, r0, r3, r0
 356 0066 8009     		lsrs	r0, r0, #6
 357 0068 FFF7FEFF 		bl	HAL_SYSTICK_Config
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 19


 358              	.LVL28:
 633:Src/main.c    **** 
 359              		.loc 1 633 0
 360 006c 0420     		movs	r0, #4
 361 006e FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 362              	.LVL29:
 636:Src/main.c    **** }
 363              		.loc 1 636 0
 364 0072 0022     		movs	r2, #0
 365 0074 1146     		mov	r1, r2
 366 0076 4FF0FF30 		mov	r0, #-1
 367 007a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 368              	.LVL30:
 637:Src/main.c    **** 
 369              		.loc 1 637 0
 370 007e 17B0     		add	sp, sp, #92
 371              	.LCFI8:
 372              		.cfi_remember_state
 373              		.cfi_def_cfa_offset 4
 374              		@ sp needed
 375 0080 5DF804FB 		ldr	pc, [sp], #4
 376              	.L22:
 377              	.LCFI9:
 378              		.cfi_restore_state
 602:Src/main.c    ****   }
 379              		.loc 1 602 0
 380 0084 40F25A21 		movw	r1, #602
 381 0088 0748     		ldr	r0, .L25+4
 382 008a FFF7FEFF 		bl	_Error_Handler
 383              	.LVL31:
 384              	.L23:
 616:Src/main.c    ****   }
 385              		.loc 1 616 0
 386 008e 4FF41A71 		mov	r1, #616
 387 0092 0548     		ldr	r0, .L25+4
 388 0094 FFF7FEFF 		bl	_Error_Handler
 389              	.LVL32:
 390              	.L24:
 624:Src/main.c    ****   }
 391              		.loc 1 624 0
 392 0098 4FF41C71 		mov	r1, #624
 393 009c 0248     		ldr	r0, .L25+4
 394 009e FFF7FEFF 		bl	_Error_Handler
 395              	.LVL33:
 396              	.L26:
 397 00a2 00BF     		.align	2
 398              	.L25:
 399 00a4 D34D6210 		.word	274877907
 400 00a8 00000000 		.word	.LC2
 401              		.cfi_endproc
 402              	.LFE129:
 404              		.global	__aeabi_dmul
 405              		.global	__aeabi_d2iz
 406              		.global	__aeabi_ui2d
 407              		.global	__aeabi_ddiv
 408              		.global	__aeabi_d2uiz
 409              		.global	__aeabi_i2d
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 20


 410              		.section	.text.main,"ax",%progbits
 411              		.align	1
 412              		.global	main
 413              		.syntax unified
 414              		.thumb
 415              		.thumb_func
 416              		.fpu fpv4-sp-d16
 418              	main:
 419              	.LFB128:
 306:Src/main.c    **** 
 420              		.loc 1 306 0
 421              		.cfi_startproc
 422              		@ args = 0, pretend = 0, frame = 2304
 423              		@ frame_needed = 0, uses_anonymous_args = 0
 424 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 425              	.LCFI10:
 426              		.cfi_def_cfa_offset 28
 427              		.cfi_offset 4, -28
 428              		.cfi_offset 5, -24
 429              		.cfi_offset 6, -20
 430              		.cfi_offset 7, -16
 431              		.cfi_offset 8, -12
 432              		.cfi_offset 9, -8
 433              		.cfi_offset 14, -4
 434 0004 ADF61C1D 		subw	sp, sp, #2332
 435              	.LCFI11:
 436              		.cfi_def_cfa_offset 2360
 315:Src/main.c    **** 
 437              		.loc 1 315 0
 438 0008 FFF7FEFF 		bl	HAL_Init
 439              	.LVL34:
 327:Src/main.c    **** 
 440              		.loc 1 327 0
 441 000c 4FF48072 		mov	r2, #256
 442 0010 0021     		movs	r1, #0
 443 0012 0DF61800 		addw	r0, sp, #2072
 444 0016 FFF7FEFF 		bl	memset
 445              	.LVL35:
 332:Src/main.c    **** 
 446              		.loc 1 332 0
 447 001a FFF7FEFF 		bl	SystemClock_Config
 448              	.LVL36:
 339:Src/main.c    ****   MX_DMA_Init();
 449              		.loc 1 339 0
 450 001e FFF7FEFF 		bl	MX_GPIO_Init
 451              	.LVL37:
 340:Src/main.c    ****   MX_USART2_UART_Init();
 452              		.loc 1 340 0
 453 0022 FFF7FEFF 		bl	MX_DMA_Init
 454              	.LVL38:
 341:Src/main.c    ****   MX_TIM1_Init();
 455              		.loc 1 341 0
 456 0026 FFF7FEFF 		bl	MX_USART2_UART_Init
 457              	.LVL39:
 342:Src/main.c    ****   MX_USART1_UART_Init();
 458              		.loc 1 342 0
 459 002a FFF7FEFF 		bl	MX_TIM1_Init
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 21


 460              	.LVL40:
 343:Src/main.c    ****   MX_SPI1_Init();
 461              		.loc 1 343 0
 462 002e FFF7FEFF 		bl	MX_USART1_UART_Init
 463              	.LVL41:
 344:Src/main.c    ****   MX_ADC1_Init();
 464              		.loc 1 344 0
 465 0032 FFF7FEFF 		bl	MX_SPI1_Init
 466              	.LVL42:
 345:Src/main.c    ****   MX_TIM2_Init();
 467              		.loc 1 345 0
 468 0036 FFF7FEFF 		bl	MX_ADC1_Init
 469              	.LVL43:
 346:Src/main.c    ****   MX_ADC2_Init();
 470              		.loc 1 346 0
 471 003a FFF7FEFF 		bl	MX_TIM2_Init
 472              	.LVL44:
 347:Src/main.c    ****   MX_CAN_Init();
 473              		.loc 1 347 0
 474 003e FFF7FEFF 		bl	MX_ADC2_Init
 475              	.LVL45:
 348:Src/main.c    ****   MX_TIM6_Init();
 476              		.loc 1 348 0
 477 0042 FFF7FEFF 		bl	MX_CAN_Init
 478              	.LVL46:
 349:Src/main.c    **** 
 479              		.loc 1 349 0
 480 0046 FFF7FEFF 		bl	MX_TIM6_Init
 481              	.LVL47:
 354:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 482              		.loc 1 354 0
 483 004a 8F4C     		ldr	r4, .L79+24
 484 004c 8F4B     		ldr	r3, .L79+28
 485 004e 904A     		ldr	r2, .L79+32
 486 0050 9049     		ldr	r1, .L79+36
 487 0052 2046     		mov	r0, r4
 488 0054 FFF7FEFF 		bl	u8g2_Setup_ssd1309_128x64_noname2_f
 489              	.LVL48:
 355:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 490              		.loc 1 355 0
 491 0058 0122     		movs	r2, #1
 492 005a 0821     		movs	r1, #8
 493 005c 8E48     		ldr	r0, .L79+40
 494 005e FFF7FEFF 		bl	HAL_GPIO_WritePin
 495              	.LVL49:
 356:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 496              		.loc 1 356 0
 497 0062 2046     		mov	r0, r4
 498 0064 FFF7FEFF 		bl	u8x8_InitDisplay
 499              	.LVL50:
 357:Src/main.c    ****   u8g2_SetContrast(&u8g2, 128); // set contrast
 500              		.loc 1 357 0
 501 0068 0021     		movs	r1, #0
 502 006a 2046     		mov	r0, r4
 503 006c FFF7FEFF 		bl	u8x8_SetPowerSave
 504              	.LVL51:
 358:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 22


 505              		.loc 1 358 0
 506 0070 8021     		movs	r1, #128
 507 0072 2046     		mov	r0, r4
 508 0074 FFF7FEFF 		bl	u8x8_SetContrast
 509              	.LVL52:
 359:Src/main.c    **** 
 510              		.loc 1 359 0
 511 0078 2046     		mov	r0, r4
 512 007a FFF7FEFF 		bl	u8g2_ClearDisplay
 513              	.LVL53:
 363:Src/main.c    **** 
 514              		.loc 1 363 0
 515 007e 874B     		ldr	r3, .L79+44
 516 0080 0193     		str	r3, [sp, #4]
 517 0082 3023     		movs	r3, #48
 518 0084 0093     		str	r3, [sp]
 519 0086 0022     		movs	r2, #0
 520 0088 2821     		movs	r1, #40
 521 008a 2046     		mov	r0, r4
 522 008c FFF7FEFF 		bl	u8g2_DrawXBMP
 523              	.LVL54:
 365:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 524              		.loc 1 365 0
 525 0090 8349     		ldr	r1, .L79+48
 526 0092 2046     		mov	r0, r4
 527 0094 FFF7FEFF 		bl	u8g2_SetFont
 528              	.LVL55:
 366:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.1a");
 529              		.loc 1 366 0
 530 0098 824B     		ldr	r3, .L79+52
 531 009a 3722     		movs	r2, #55
 532 009c 1021     		movs	r1, #16
 533 009e 2046     		mov	r0, r4
 534 00a0 FFF7FEFF 		bl	u8g2_DrawStr
 535              	.LVL56:
 367:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 536              		.loc 1 367 0
 537 00a4 804B     		ldr	r3, .L79+56
 538 00a6 4022     		movs	r2, #64
 539 00a8 2821     		movs	r1, #40
 540 00aa 2046     		mov	r0, r4
 541 00ac FFF7FEFF 		bl	u8g2_DrawStr
 542              	.LVL57:
 368:Src/main.c    **** 
 543              		.loc 1 368 0
 544 00b0 2046     		mov	r0, r4
 545 00b2 FFF7FEFF 		bl	u8g2_SendBuffer
 546              	.LVL58:
 370:Src/main.c    **** 
 547              		.loc 1 370 0
 548 00b6 4FF4FA60 		mov	r0, #2000
 549 00ba FFF7FEFF 		bl	HAL_Delay
 550              	.LVL59:
 374:Src/main.c    ****   {
 551              		.loc 1 374 0
 552 00be 7B48     		ldr	r0, .L79+60
 553 00c0 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 23


 554              	.LVL60:
 555 00c4 20B1     		cbz	r0, .L28
 376:Src/main.c    ****   }
 556              		.loc 1 376 0
 557 00c6 4FF4BC71 		mov	r1, #376
 558 00ca 7948     		ldr	r0, .L79+64
 559 00cc FFF7FEFF 		bl	_Error_Handler
 560              	.LVL61:
 561              	.L28:
 380:Src/main.c    ****   {
 562              		.loc 1 380 0
 563 00d0 7848     		ldr	r0, .L79+68
 564 00d2 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 565              	.LVL62:
 566 00d6 20B1     		cbz	r0, .L29
 382:Src/main.c    ****   }
 567              		.loc 1 382 0
 568 00d8 4FF4BF71 		mov	r1, #382
 569 00dc 7448     		ldr	r0, .L79+64
 570 00de FFF7FEFF 		bl	_Error_Handler
 571              	.LVL63:
 572              	.L29:
 386:Src/main.c    ****   {
 573              		.loc 1 386 0
 574 00e2 7548     		ldr	r0, .L79+72
 575 00e4 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 576              	.LVL64:
 577 00e8 20B1     		cbz	r0, .L30
 388:Src/main.c    ****   }
 578              		.loc 1 388 0
 579 00ea 4FF4C271 		mov	r1, #388
 580 00ee 7048     		ldr	r0, .L79+64
 581 00f0 FFF7FEFF 		bl	_Error_Handler
 582              	.LVL65:
 583              	.L30:
 394:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, g_ADCBuffer, ADC_BUFFER_LENGTH);
 584              		.loc 1 394 0
 585 00f4 4FF40062 		mov	r2, #2048
 586 00f8 0021     		movs	r1, #0
 587 00fa 06A8     		add	r0, sp, #24
 588 00fc FFF7FEFF 		bl	memset
 589              	.LVL66:
 395:Src/main.c    **** 
 590              		.loc 1 395 0
 591 0100 4FF48062 		mov	r2, #1024
 592 0104 06A9     		add	r1, sp, #24
 593 0106 6D48     		ldr	r0, .L79+76
 594 0108 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 595              	.LVL67:
 397:Src/main.c    **** 
 596              		.loc 1 397 0
 597 010c 5E4C     		ldr	r4, .L79+24
 598 010e 2046     		mov	r0, r4
 599 0110 FFF7FEFF 		bl	u8g2_ClearBuffer
 600              	.LVL68:
 399:Src/main.c    ****   HAL_UART_Transmit_printf(&huart2, "Hello. This is MFM.\n");
 601              		.loc 1 399 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 24


 602 0114 6A4D     		ldr	r5, .L79+80
 603 0116 2946     		mov	r1, r5
 604 0118 6A48     		ldr	r0, .L79+84
 605 011a FFF7FEFF 		bl	HAL_UART_Transmit_printf
 606              	.LVL69:
 400:Src/main.c    **** 
 607              		.loc 1 400 0
 608 011e 2946     		mov	r1, r5
 609 0120 6948     		ldr	r0, .L79+88
 610 0122 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 611              	.LVL70:
 407:Src/main.c    ****   draw_indicators();
 612              		.loc 1 407 0
 613 0126 FFF7FEFF 		bl	draw_MeasLabels
 614              	.LVL71:
 408:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 615              		.loc 1 408 0
 616 012a FFF7FEFF 		bl	draw_indicators
 617              	.LVL72:
 409:Src/main.c    **** 
 618              		.loc 1 409 0
 619 012e 2046     		mov	r0, r4
 620 0130 FFF7FEFF 		bl	u8g2_SendBuffer
 621              	.LVL73:
 326:Src/main.c    ****   int16_t circular_buffer[128]={};
 622              		.loc 1 326 0
 623 0134 0027     		movs	r7, #0
 321:Src/main.c    ****   uint16_t b = 0;
 624              		.loc 1 321 0
 625 0136 3D46     		mov	r5, r7
 626 0138 EFE0     		b	.L31
 627              	.LVL74:
 628              	.L71:
 420:Src/main.c    ****           rpm = rpm + (int)(20*MT[gear]);
 629              		.loc 1 420 0
 630 013a 644B     		ldr	r3, .L79+92
 631 013c 1C88     		ldrh	r4, [r3]
 632 013e 42F20803 		movw	r3, #8200
 633 0142 9C42     		cmp	r4, r3
 634 0144 34D8     		bhi	.L33
 421:Src/main.c    ****           //rpm=rpm+10;
 635              		.loc 1 421 0
 636 0146 624B     		ldr	r3, .L79+96
 637 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 638 014a 6249     		ldr	r1, .L79+100
 639 014c 01EBC301 		add	r1, r1, r3, lsl #3
 640 0150 0022     		movs	r2, #0
 641 0152 614B     		ldr	r3, .L79+104
 642 0154 D1E90001 		ldrd	r0, [r1]
 643 0158 FFF7FEFF 		bl	__aeabi_dmul
 644              	.LVL75:
 645 015c FFF7FEFF 		bl	__aeabi_d2iz
 646              	.LVL76:
 647 0160 2044     		add	r0, r0, r4
 648 0162 5A4B     		ldr	r3, .L79+92
 649 0164 1880     		strh	r0, [r3]	@ movhi
 650              	.L34:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 25


 432:Src/main.c    **** 
 651              		.loc 1 432 0
 652 0166 594B     		ldr	r3, .L79+92
 653 0168 1888     		ldrh	r0, [r3]
 654 016a FFF7FEFF 		bl	__aeabi_ui2d
 655              	.LVL77:
 656 016e 40A3     		adr	r3, .L79
 657 0170 D3E90023 		ldrd	r2, [r3]
 658 0174 FFF7FEFF 		bl	__aeabi_dmul
 659              	.LVL78:
 660 0178 0022     		movs	r2, #0
 661 017a 584B     		ldr	r3, .L79+108
 662 017c FFF7FEFF 		bl	__aeabi_dmul
 663              	.LVL79:
 664 0180 534B     		ldr	r3, .L79+96
 665 0182 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 666 0184 534B     		ldr	r3, .L79+100
 667 0186 03EBC203 		add	r3, r3, r2, lsl #3
 668 018a D3E90023 		ldrd	r2, [r3]
 669 018e FFF7FEFF 		bl	__aeabi_ddiv
 670              	.LVL80:
 671 0192 39A3     		adr	r3, .L79+8
 672 0194 D3E90023 		ldrd	r2, [r3]
 673 0198 FFF7FEFF 		bl	__aeabi_ddiv
 674              	.LVL81:
 675 019c FFF7FEFF 		bl	__aeabi_d2uiz
 676              	.LVL82:
 677 01a0 4F4B     		ldr	r3, .L79+112
 678 01a2 1880     		strh	r0, [r3]	@ movhi
 434:Src/main.c    ****         a = 0;
 679              		.loc 1 434 0
 680 01a4 952D     		cmp	r5, #149
 681 01a6 33D8     		bhi	.L63
 437:Src/main.c    ****       }
 682              		.loc 1 437 0
 683 01a8 0135     		adds	r5, r5, #1
 684              	.LVL83:
 685 01aa ADB2     		uxth	r5, r5
 686              	.LVL84:
 687              	.L36:
 440:Src/main.c    ****         if( n==0 ){
 688              		.loc 1 440 0
 689 01ac 0023     		movs	r3, #0
 690 01ae 38E0     		b	.L37
 691              	.LVL85:
 692              	.L33:
 424:Src/main.c    ****           gear++;
 693              		.loc 1 424 0
 694 01b0 474B     		ldr	r3, .L79+96
 695 01b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 696 01b4 032B     		cmp	r3, #3
 697 01b6 23D8     		bhi	.L35
 425:Src/main.c    ****           rpm = (double)speed / (0.002*60.0) * (MT[gear]*4.1);
 698              		.loc 1 425 0
 699 01b8 0133     		adds	r3, r3, #1
 700 01ba DCB2     		uxtb	r4, r3
 701 01bc 444B     		ldr	r3, .L79+96
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 26


 702 01be 1C70     		strb	r4, [r3]
 426:Src/main.c    ****         }else{
 703              		.loc 1 426 0
 704 01c0 474B     		ldr	r3, .L79+112
 705 01c2 1888     		ldrh	r0, [r3]
 706 01c4 FFF7FEFF 		bl	__aeabi_ui2d
 707              	.LVL86:
 708 01c8 2DA3     		adr	r3, .L79+16
 709 01ca D3E90023 		ldrd	r2, [r3]
 710 01ce FFF7FEFF 		bl	__aeabi_ddiv
 711              	.LVL87:
 712 01d2 8046     		mov	r8, r0
 713 01d4 8946     		mov	r9, r1
 714 01d6 3F4B     		ldr	r3, .L79+100
 715 01d8 03EBC404 		add	r4, r3, r4, lsl #3
 716 01dc 26A3     		adr	r3, .L79+8
 717 01de D3E90023 		ldrd	r2, [r3]
 718 01e2 D4E90001 		ldrd	r0, [r4]
 719 01e6 FFF7FEFF 		bl	__aeabi_dmul
 720              	.LVL88:
 721 01ea 0246     		mov	r2, r0
 722 01ec 0B46     		mov	r3, r1
 723 01ee 4046     		mov	r0, r8
 724 01f0 4946     		mov	r1, r9
 725 01f2 FFF7FEFF 		bl	__aeabi_dmul
 726              	.LVL89:
 727 01f6 FFF7FEFF 		bl	__aeabi_d2uiz
 728              	.LVL90:
 729 01fa 344B     		ldr	r3, .L79+92
 730 01fc 1880     		strh	r0, [r3]	@ movhi
 731 01fe B2E7     		b	.L34
 732              	.L35:
 428:Src/main.c    ****           rpm = 1000;
 733              		.loc 1 428 0
 734 0200 334B     		ldr	r3, .L79+96
 735 0202 0022     		movs	r2, #0
 736 0204 1A70     		strb	r2, [r3]
 429:Src/main.c    ****         }
 737              		.loc 1 429 0
 738 0206 314B     		ldr	r3, .L79+92
 739 0208 4FF47A72 		mov	r2, #1000
 740 020c 1A80     		strh	r2, [r3]	@ movhi
 741 020e AAE7     		b	.L34
 742              	.L63:
 435:Src/main.c    ****       }else{
 743              		.loc 1 435 0
 744 0210 0025     		movs	r5, #0
 745              	.LVL91:
 746 0212 CBE7     		b	.L36
 747              	.LVL92:
 748              	.L68:
 442:Src/main.c    ****         }else{
 749              		.loc 1 442 0
 750 0214 A5F14B02 		sub	r2, r5, #75
 751 0218 3249     		ldr	r1, .L79+116
 752 021a 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 753              	.L39:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 27


 440:Src/main.c    ****         if( n==0 ){
 754              		.loc 1 440 0 discriminator 2
 755 021e 0133     		adds	r3, r3, #1
 756              	.LVL93:
 757 0220 DBB2     		uxtb	r3, r3
 758              	.LVL94:
 759              	.L37:
 440:Src/main.c    ****         if( n==0 ){
 760              		.loc 1 440 0 is_stmt 0 discriminator 1
 761 0222 052B     		cmp	r3, #5
 762 0224 05D8     		bhi	.L67
 441:Src/main.c    ****           meas_value[n] = a - 75;
 763              		.loc 1 441 0 is_stmt 1
 764 0226 002B     		cmp	r3, #0
 765 0228 F4D0     		beq	.L68
 444:Src/main.c    ****         }
 766              		.loc 1 444 0
 767 022a 2E4A     		ldr	r2, .L79+116
 768 022c 22F81350 		strh	r5, [r2, r3, lsl #1]	@ movhi
 769 0230 F5E7     		b	.L39
 770              	.L67:
 448:Src/main.c    ****     }
 771              		.loc 1 448 0
 772 0232 2D4B     		ldr	r3, .L79+120
 773              	.LVL95:
 774 0234 0022     		movs	r2, #0
 775 0236 1A60     		str	r2, [r3]
 776 0238 74E0     		b	.L32
 777              	.L72:
 471:Src/main.c    ****             }else{
 778              		.loc 1 471 0
 779 023a 2C4B     		ldr	r3, .L79+124
 780 023c 0022     		movs	r2, #0
 781 023e 1A60     		str	r2, [r3]
 782 0240 62E0     		b	.L42
 783              	.L43:
 478:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 784              		.loc 1 478 0
 785 0242 2B49     		ldr	r1, .L79+128
 786 0244 2048     		ldr	r0, .L79+88
 787 0246 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 788              	.LVL96:
 479:Src/main.c    ****           // SW "DOWN"
 789              		.loc 1 479 0
 790 024a 1720     		movs	r0, #23
 791 024c FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 792              	.LVL97:
 481:Src/main.c    ****             if( cursor == 0 ){
 793              		.loc 1 481 0
 794 0250 0A2E     		cmp	r6, #10
 795 0252 59D1     		bne	.L42
 482:Src/main.c    ****               cursor = 1;
 796              		.loc 1 482 0
 797 0254 254B     		ldr	r3, .L79+124
 798 0256 1B68     		ldr	r3, [r3]
 799 0258 1BB9     		cbnz	r3, .L47
 483:Src/main.c    ****             }else{
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 28


 800              		.loc 1 483 0
 801 025a 244B     		ldr	r3, .L79+124
 802 025c 0122     		movs	r2, #1
 803 025e 1A60     		str	r2, [r3]
 804 0260 52E0     		b	.L42
 805              	.L47:
 485:Src/main.c    ****             }
 806              		.loc 1 485 0
 807 0262 013B     		subs	r3, r3, #1
 808 0264 214A     		ldr	r2, .L79+124
 809 0266 1360     		str	r3, [r2]
 810 0268 4EE0     		b	.L42
 811              	.L80:
 812 026a 00BFAFF3 		.align	3
 812      0080
 813              	.L79:
 814 0270 FCA9F1D2 		.word	3539053052
 815 0274 4D62603F 		.word	1063281229
 816 0278 66666666 		.word	1717986918
 817 027c 66661040 		.word	1074816614
 818 0280 B81E85EB 		.word	3951369912
 819 0284 51B8BE3F 		.word	1069463633
 820 0288 00000000 		.word	u8g2
 821 028c 00000000 		.word	u8x8_gpio_and_delay_STM32F303
 822 0290 00000000 		.word	u8x8_byte_4wire_hw_spi
 823 0294 00000000 		.word	u8g2_cb_r0
 824 0298 00040048 		.word	1207960576
 825 029c 00000000 		.word	.LANCHOR4
 826 02a0 00000000 		.word	u8g2_font_5x7_tf
 827 02a4 00000000 		.word	.LC3
 828 02a8 18000000 		.word	.LC4
 829 02ac 00000000 		.word	htim1
 830 02b0 00000000 		.word	.LC2
 831 02b4 00000000 		.word	htim2
 832 02b8 00000000 		.word	htim6
 833 02bc 00000000 		.word	hadc1
 834 02c0 24000000 		.word	.LC5
 835 02c4 00000000 		.word	huart1
 836 02c8 00000000 		.word	huart2
 837 02cc 00000000 		.word	.LANCHOR5
 838 02d0 00000000 		.word	.LANCHOR7
 839 02d4 00000000 		.word	.LANCHOR6
 840 02d8 00003440 		.word	1077149696
 841 02dc 00004E40 		.word	1078853632
 842 02e0 00000000 		.word	.LANCHOR8
 843 02e4 00000000 		.word	.LANCHOR9
 844 02e8 00000000 		.word	flag_meas_short
 845 02ec 00000000 		.word	.LANCHOR12
 846 02f0 40000000 		.word	.LC7
 847              	.L44:
 490:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI1_IRQn);
 848              		.loc 1 490 0
 849 02f4 B049     		ldr	r1, .L81+8
 850 02f6 B148     		ldr	r0, .L81+12
 851 02f8 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 852              	.LVL98:
 491:Src/main.c    ****           // SW "ENTER"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 29


 853              		.loc 1 491 0
 854 02fc 0720     		movs	r0, #7
 855 02fe FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 856              	.LVL99:
 493:Src/main.c    ****             mode = cursor;
 857              		.loc 1 493 0
 858 0302 0A2E     		cmp	r6, #10
 859 0304 56D0     		beq	.L69
 505:Src/main.c    ****           }
 860              		.loc 1 505 0
 861 0306 0A26     		movs	r6, #10
 862              	.LVL100:
 863              	.L42:
 511:Src/main.c    ****       flag_sw = 0;
 864              		.loc 1 511 0
 865 0308 0023     		movs	r3, #0
 866 030a AD4A     		ldr	r2, .L81+16
 867 030c 5362     		str	r3, [r2, #36]
 512:Src/main.c    ****     }
 868              		.loc 1 512 0
 869 030e AD4A     		ldr	r2, .L81+20
 870 0310 1360     		str	r3, [r2]
 871              	.L41:
 516:Src/main.c    ****       ///// multi meter /////
 872              		.loc 1 516 0
 873 0312 AD4B     		ldr	r3, .L81+24
 874 0314 1B68     		ldr	r3, [r3]
 875 0316 012B     		cmp	r3, #1
 876 0318 78D0     		beq	.L70
 877              	.LVL101:
 878              	.L31:
 419:Src/main.c    ****       if( rpm <= 8200 ){
 879              		.loc 1 419 0
 880 031a AC4B     		ldr	r3, .L81+28
 881 031c 1B68     		ldr	r3, [r3]
 882 031e 012B     		cmp	r3, #1
 883 0320 3FF40BAF 		beq	.L71
 884              	.L32:
 455:Src/main.c    **** 
 885              		.loc 1 455 0
 886 0324 BDF81830 		ldrh	r3, [sp, #24]
 887 0328 07EE103A 		vmov	s14, r3	@ int
 888 032c B8EE477A 		vcvt.f32.u32	s14, s14
 889 0330 DFEDA77A 		vldr.32	s15, .L81+32
 890 0334 27EE277A 		vmul.f32	s14, s14, s15
 891 0338 DFEDA66A 		vldr.32	s13, .L81+36
 892 033c C7EE267A 		vdiv.f32	s15, s14, s13
 893 0340 FDEEE77A 		vcvt.s32.f32	s15, s15
 894 0344 17EE903A 		vmov	r3, s15	@ int
 895 0348 1CB2     		sxth	r4, r3
 896 034a DFF8C882 		ldr	r8, .L81+100
 897 034e A8F80A40 		strh	r4, [r8, #10]	@ movhi
 458:Src/main.c    ****     FP_duty = (int16_t)(FP_volt/(14.4)*10);
 898              		.loc 1 458 0
 899 0352 A14B     		ldr	r3, .L81+40
 900 0354 1C80     		strh	r4, [r3]	@ movhi
 459:Src/main.c    **** 		meas_value[2] = FP_volt;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 30


 901              		.loc 1 459 0
 902 0356 2046     		mov	r0, r4
 903 0358 FFF7FEFF 		bl	__aeabi_i2d
 904              	.LVL102:
 905 035c 94A3     		adr	r3, .L81
 906 035e D3E90023 		ldrd	r2, [r3]
 907 0362 FFF7FEFF 		bl	__aeabi_ddiv
 908              	.LVL103:
 909 0366 0022     		movs	r2, #0
 910 0368 9C4B     		ldr	r3, .L81+44
 911 036a FFF7FEFF 		bl	__aeabi_dmul
 912              	.LVL104:
 913 036e FFF7FEFF 		bl	__aeabi_d2iz
 914              	.LVL105:
 915 0372 9B4B     		ldr	r3, .L81+48
 916 0374 1880     		strh	r0, [r3]	@ movhi
 460:Src/main.c    **** 
 917              		.loc 1 460 0
 918 0376 A8F80440 		strh	r4, [r8, #4]	@ movhi
 463:Src/main.c    ****       switch( flag_sw ){
 919              		.loc 1 463 0
 920 037a 924B     		ldr	r3, .L81+20
 921 037c 1B68     		ldr	r3, [r3]
 922 037e 002B     		cmp	r3, #0
 923 0380 C7D0     		beq	.L41
 464:Src/main.c    ****         case 1:
 924              		.loc 1 464 0
 925 0382 022B     		cmp	r3, #2
 926 0384 3FF45DAF 		beq	.L43
 927 0388 032B     		cmp	r3, #3
 928 038a B3D0     		beq	.L44
 929 038c 012B     		cmp	r3, #1
 930 038e BBD1     		bne	.L42
 466:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 931              		.loc 1 466 0
 932 0390 9449     		ldr	r1, .L81+52
 933 0392 8A48     		ldr	r0, .L81+12
 934 0394 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 935              	.LVL106:
 467:Src/main.c    ****           // SW "UP"
 936              		.loc 1 467 0
 937 0398 1720     		movs	r0, #23
 938 039a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 939              	.LVL107:
 469:Src/main.c    ****             if( cursor == 1 ){
 940              		.loc 1 469 0
 941 039e 0A2E     		cmp	r6, #10
 942 03a0 B2D1     		bne	.L42
 470:Src/main.c    ****               cursor = 0;
 943              		.loc 1 470 0
 944 03a2 914B     		ldr	r3, .L81+56
 945 03a4 1B68     		ldr	r3, [r3]
 946 03a6 012B     		cmp	r3, #1
 947 03a8 3FF447AF 		beq	.L72
 473:Src/main.c    ****             }
 948              		.loc 1 473 0
 949 03ac 0133     		adds	r3, r3, #1
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 31


 950 03ae 8E4A     		ldr	r2, .L81+56
 951 03b0 1360     		str	r3, [r2]
 952 03b2 A9E7     		b	.L42
 953              	.L69:
 494:Src/main.c    ****             u8g2_ClearBuffer(&u8g2);
 954              		.loc 1 494 0
 955 03b4 8C4B     		ldr	r3, .L81+56
 956 03b6 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 957              	.LVL108:
 495:Src/main.c    ****             if( mode == 0 ){
 958              		.loc 1 495 0
 959 03b8 8C48     		ldr	r0, .L81+60
 960 03ba FFF7FEFF 		bl	u8g2_ClearBuffer
 961              	.LVL109:
 496:Src/main.c    ****               draw_MeasLabels();
 962              		.loc 1 496 0
 963 03be 2EB1     		cbz	r6, .L73
 499:Src/main.c    ****               draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_v
 964              		.loc 1 499 0
 965 03c0 012E     		cmp	r6, #1
 966 03c2 08D0     		beq	.L74
 967              	.L49:
 503:Src/main.c    ****           }else{
 968              		.loc 1 503 0
 969 03c4 8948     		ldr	r0, .L81+60
 970 03c6 FFF7FEFF 		bl	u8g2_SendBuffer
 971              	.LVL110:
 972 03ca 9DE7     		b	.L42
 973              	.L73:
 497:Src/main.c    ****               draw_indicators();
 974              		.loc 1 497 0
 975 03cc FFF7FEFF 		bl	draw_MeasLabels
 976              	.LVL111:
 498:Src/main.c    ****             }else if( mode == 1 ){
 977              		.loc 1 498 0
 978 03d0 FFF7FEFF 		bl	draw_indicators
 979              	.LVL112:
 980 03d4 F6E7     		b	.L49
 981              	.L74:
 982              	.LBB2:
 500:Src/main.c    ****               draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "MAP", "kPa");
 983              		.loc 1 500 0
 984 03d6 854C     		ldr	r4, .L81+60
 985 03d8 0C23     		movs	r3, #12
 986 03da 0293     		str	r3, [sp, #8]
 987 03dc 6FF00503 		mvn	r3, #5
 988 03e0 0193     		str	r3, [sp, #4]
 989 03e2 2823     		movs	r3, #40
 990 03e4 0093     		str	r3, [sp]
 991 03e6 8023     		movs	r3, #128
 992 03e8 0F22     		movs	r2, #15
 993 03ea 0021     		movs	r1, #0
 994 03ec 2046     		mov	r0, r4
 995 03ee FFF7FEFF 		bl	draw_Wave_axis
 996              	.LVL113:
 501:Src/main.c    ****             }
 997              		.loc 1 501 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 32


 998 03f2 7F4B     		ldr	r3, .L81+64
 999 03f4 0293     		str	r3, [sp, #8]
 1000 03f6 7F4B     		ldr	r3, .L81+68
 1001 03f8 0193     		str	r3, [sp, #4]
 1002 03fa 0D23     		movs	r3, #13
 1003 03fc 0093     		str	r3, [sp]
 1004 03fe 4023     		movs	r3, #64
 1005 0400 0022     		movs	r2, #0
 1006 0402 1146     		mov	r1, r2
 1007 0404 2046     		mov	r0, r4
 1008 0406 FFF7FEFF 		bl	draw_MeasLabelUnit
 1009              	.LVL114:
 1010 040a DBE7     		b	.L49
 1011              	.L70:
 1012              	.LBE2:
 518:Src/main.c    ****         // update Fuel Pump Voltage
 1013              		.loc 1 518 0
 1014 040c 66B1     		cbz	r6, .L75
 537:Src/main.c    **** 
 1015              		.loc 1 537 0
 1016 040e 012E     		cmp	r6, #1
 1017 0410 00F08980 		beq	.L76
 552:Src/main.c    ****         u8g2_ClearBuffer(&u8g2);
 1018              		.loc 1 552 0
 1019 0414 0A2E     		cmp	r6, #10
 1020 0416 00F0FF80 		beq	.L77
 1021              	.L56:
 571:Src/main.c    **** 
 1022              		.loc 1 571 0
 1023 041a 7448     		ldr	r0, .L81+60
 1024 041c FFF7FEFF 		bl	u8g2_SendBuffer
 1025              	.LVL115:
 573:Src/main.c    ****     }
 1026              		.loc 1 573 0
 1027 0420 694B     		ldr	r3, .L81+24
 1028 0422 0022     		movs	r2, #0
 1029 0424 1A60     		str	r2, [r3]
 1030 0426 78E7     		b	.L31
 1031              	.L75:
 520:Src/main.c    **** 
 1032              		.loc 1 520 0
 1033 0428 DFF8C081 		ldr	r8, .L81+60
 1034 042c 724B     		ldr	r3, .L81+72
 1035 042e 0593     		str	r3, [sp, #20]
 1036 0430 0024     		movs	r4, #0
 1037 0432 0494     		str	r4, [sp, #16]
 1038 0434 0394     		str	r4, [sp, #12]
 1039 0436 0323     		movs	r3, #3
 1040 0438 0293     		str	r3, [sp, #8]
 1041 043a 694B     		ldr	r3, .L81+48
 1042 043c B3F90030 		ldrsh	r3, [r3]
 1043 0440 0193     		str	r3, [sp, #4]
 1044 0442 0C23     		movs	r3, #12
 1045 0444 0093     		str	r3, [sp]
 1046 0446 4623     		movs	r3, #70
 1047 0448 3422     		movs	r2, #52
 1048 044a 2146     		mov	r1, r4
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 33


 1049 044c 4046     		mov	r0, r8
 1050 044e FFF7FEFF 		bl	draw_Value
 1051              	.LVL116:
 523:Src/main.c    **** 
 1052              		.loc 1 523 0
 1053 0452 42F22833 		movw	r3, #9000
 1054 0456 0393     		str	r3, [sp, #12]
 1055 0458 0294     		str	r4, [sp, #8]
 1056 045a 684B     		ldr	r3, .L81+76
 1057 045c 1B88     		ldrh	r3, [r3]
 1058 045e 0193     		str	r3, [sp, #4]
 1059 0460 0E23     		movs	r3, #14
 1060 0462 0093     		str	r3, [sp]
 1061 0464 8023     		movs	r3, #128
 1062 0466 2246     		mov	r2, r4
 1063 0468 2146     		mov	r1, r4
 1064 046a 4046     		mov	r0, r8
 1065 046c FFF7FEFF 		bl	draw_BarGraph
 1066              	.LVL117:
 526:Src/main.c    ****           x = meas_x;
 1067              		.loc 1 526 0
 1068 0470 3446     		mov	r4, r6
 1069 0472 28E0     		b	.L52
 1070              	.LVL118:
 1071              	.L53:
 528:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac
 1072              		.loc 1 528 0 discriminator 3
 1073 0474 624B     		ldr	r3, .L81+80
 1074 0476 A3FB0423 		umull	r2, r3, r3, r4
 1075 047a 5B08     		lsrs	r3, r3, #1
 1076 047c 03EB4303 		add	r3, r3, r3, lsl #1
 1077 0480 E31A     		subs	r3, r4, r3
 1078 0482 03EB4303 		add	r3, r3, r3, lsl #1
 1079 0486 9A00     		lsls	r2, r3, #2
 1080 0488 D2B2     		uxtb	r2, r2
 1081 048a 1032     		adds	r2, r2, #16
 1082              	.LVL119:
 529:Src/main.c    ****         }
 1083              		.loc 1 529 0 discriminator 3
 1084 048c 04EB8401 		add	r1, r4, r4, lsl #2
 1085 0490 5C4B     		ldr	r3, .L81+84
 1086 0492 0B44     		add	r3, r3, r1
 1087 0494 0593     		str	r3, [sp, #20]
 1088 0496 5C4B     		ldr	r3, .L81+88
 1089 0498 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1090 049a 0493     		str	r3, [sp, #16]
 1091 049c 5B4B     		ldr	r3, .L81+92
 1092 049e 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1093 04a0 0393     		str	r3, [sp, #12]
 1094 04a2 5B4B     		ldr	r3, .L81+96
 1095 04a4 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1096 04a6 0293     		str	r3, [sp, #8]
 1097 04a8 5A4B     		ldr	r3, .L81+100
 1098 04aa 33F91430 		ldrsh	r3, [r3, r4, lsl #1]
 1099 04ae 0193     		str	r3, [sp, #4]
 1100 04b0 0C23     		movs	r3, #12
 1101 04b2 0093     		str	r3, [sp]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 34


 1102 04b4 4623     		movs	r3, #70
 1103 04b6 02F0FC02 		and	r2, r2, #252
 1104              	.LVL120:
 1105 04ba 0021     		movs	r1, #0
 1106 04bc 4B48     		ldr	r0, .L81+60
 1107 04be FFF7FEFF 		bl	draw_Value
 1108              	.LVL121:
 526:Src/main.c    ****           x = meas_x;
 1109              		.loc 1 526 0 discriminator 3
 1110 04c2 0134     		adds	r4, r4, #1
 1111              	.LVL122:
 1112 04c4 E4B2     		uxtb	r4, r4
 1113              	.LVL123:
 1114              	.L52:
 526:Src/main.c    ****           x = meas_x;
 1115              		.loc 1 526 0 is_stmt 0 discriminator 1
 1116 04c6 022C     		cmp	r4, #2
 1117 04c8 D4D9     		bls	.L53
 531:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 1118              		.loc 1 531 0 is_stmt 1
 1119 04ca 0324     		movs	r4, #3
 1120              	.LVL124:
 1121 04cc 28E0     		b	.L54
 1122              	.LVL125:
 1123              	.L55:
 533:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 1124              		.loc 1 533 0 discriminator 3
 1125 04ce 4C4B     		ldr	r3, .L81+80
 1126 04d0 A3FB0423 		umull	r2, r3, r3, r4
 1127 04d4 5B08     		lsrs	r3, r3, #1
 1128 04d6 03EB4303 		add	r3, r3, r3, lsl #1
 1129 04da E31A     		subs	r3, r4, r3
 1130 04dc 03EB4303 		add	r3, r3, r3, lsl #1
 1131 04e0 9A00     		lsls	r2, r3, #2
 1132 04e2 D2B2     		uxtb	r2, r2
 1133 04e4 1032     		adds	r2, r2, #16
 1134              	.LVL126:
 534:Src/main.c    ****         }
 1135              		.loc 1 534 0 discriminator 3
 1136 04e6 04EB8401 		add	r1, r4, r4, lsl #2
 1137 04ea 464B     		ldr	r3, .L81+84
 1138 04ec 0B44     		add	r3, r3, r1
 1139 04ee 0593     		str	r3, [sp, #20]
 1140 04f0 454B     		ldr	r3, .L81+88
 1141 04f2 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1142 04f4 0493     		str	r3, [sp, #16]
 1143 04f6 454B     		ldr	r3, .L81+92
 1144 04f8 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1145 04fa 0393     		str	r3, [sp, #12]
 1146 04fc 444B     		ldr	r3, .L81+96
 1147 04fe 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
 1148 0500 0293     		str	r3, [sp, #8]
 1149 0502 444B     		ldr	r3, .L81+100
 1150 0504 33F91430 		ldrsh	r3, [r3, r4, lsl #1]
 1151 0508 0193     		str	r3, [sp, #4]
 1152 050a 0C23     		movs	r3, #12
 1153 050c 0093     		str	r3, [sp]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 35


 1154 050e 3823     		movs	r3, #56
 1155 0510 02F0FC02 		and	r2, r2, #252
 1156              	.LVL127:
 1157 0514 4821     		movs	r1, #72
 1158 0516 3548     		ldr	r0, .L81+60
 1159 0518 FFF7FEFF 		bl	draw_Value
 1160              	.LVL128:
 531:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 1161              		.loc 1 531 0 discriminator 3
 1162 051c 0134     		adds	r4, r4, #1
 1163              	.LVL129:
 1164 051e E4B2     		uxtb	r4, r4
 1165              	.LVL130:
 1166              	.L54:
 531:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 1167              		.loc 1 531 0 is_stmt 0 discriminator 1
 1168 0520 052C     		cmp	r4, #5
 1169 0522 D4D9     		bls	.L55
 1170 0524 79E7     		b	.L56
 1171              	.LVL131:
 1172              	.L76:
 1173              	.LBB3:
 539:Src/main.c    ****           circular_buffer_index--;
 1174              		.loc 1 539 0 is_stmt 1
 1175 0526 002F     		cmp	r7, #0
 1176 0528 3FD0     		beq	.L65
 540:Src/main.c    ****         }else{
 1177              		.loc 1 540 0
 1178 052a 013F     		subs	r7, r7, #1
 1179              	.LVL132:
 1180 052c BFB2     		uxth	r7, r7
 1181              	.LVL133:
 1182              	.L58:
 545:Src/main.c    **** 
 1183              		.loc 1 545 0
 1184 052e BDF81830 		ldrh	r3, [sp, #24]
 1185 0532 07EE103A 		vmov	s14, r3	@ int
 1186 0536 B8EE477A 		vcvt.f32.u32	s14, s14
 1187 053a F3EE027A 		vmov.f32	s15, #1.8e+1
 1188 053e 27EE277A 		vmul.f32	s14, s14, s15
 1189 0542 DFED246A 		vldr.32	s13, .L81+36
 1190 0546 C7EE267A 		vdiv.f32	s15, s14, s13
 1191 054a B1EE087A 		vmov.f32	s14, #6.0e+0
 1192 054e 77EEC77A 		vsub.f32	s15, s15, s14
 1193 0552 FDEEE77A 		vcvt.s32.f32	s15, s15
 1194 0556 0DF61804 		addw	r4, sp, #2072
 1195 055a 17EE903A 		vmov	r3, s15	@ int
 1196 055e 24F81730 		strh	r3, [r4, r7, lsl #1]	@ movhi
 548:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 1, 1, "kPa");
 1197              		.loc 1 548 0
 1198 0562 DFF88880 		ldr	r8, .L81+60
 1199 0566 0497     		str	r7, [sp, #16]
 1200 0568 0394     		str	r4, [sp, #12]
 1201 056a 0C23     		movs	r3, #12
 1202 056c 0293     		str	r3, [sp, #8]
 1203 056e 6FF00503 		mvn	r3, #5
 1204 0572 0193     		str	r3, [sp, #4]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 36


 1205 0574 2823     		movs	r3, #40
 1206 0576 0093     		str	r3, [sp]
 1207 0578 8023     		movs	r3, #128
 1208 057a 0F22     		movs	r2, #15
 1209 057c 0021     		movs	r1, #0
 1210 057e 4046     		mov	r0, r8
 1211 0580 FFF7FEFF 		bl	draw_Wave
 1212              	.LVL134:
 549:Src/main.c    **** 
 1213              		.loc 1 549 0
 1214 0584 1A4B     		ldr	r3, .L81+64
 1215 0586 0593     		str	r3, [sp, #20]
 1216 0588 0123     		movs	r3, #1
 1217 058a 0493     		str	r3, [sp, #16]
 1218 058c 0393     		str	r3, [sp, #12]
 1219 058e 0323     		movs	r3, #3
 1220 0590 0293     		str	r3, [sp, #8]
 1221 0592 34F91730 		ldrsh	r3, [r4, r7, lsl #1]
 1222 0596 0193     		str	r3, [sp, #4]
 1223 0598 0D23     		movs	r3, #13
 1224 059a 0093     		str	r3, [sp]
 1225 059c 4023     		movs	r3, #64
 1226 059e 0022     		movs	r2, #0
 1227 05a0 1146     		mov	r1, r2
 1228 05a2 4046     		mov	r0, r8
 1229 05a4 FFF7FEFF 		bl	draw_Value
 1230              	.LVL135:
 1231              	.LBE3:
 1232 05a8 37E7     		b	.L56
 1233              	.L65:
 1234              	.LBB4:
 542:Src/main.c    ****         }
 1235              		.loc 1 542 0
 1236 05aa 8027     		movs	r7, #128
 1237              	.LVL136:
 1238 05ac BFE7     		b	.L58
 1239              	.L82:
 1240 05ae 00BF     		.align	3
 1241              	.L81:
 1242 05b0 CDCCCCCC 		.word	3435973837
 1243 05b4 CCCC2C40 		.word	1076677836
 1244 05b8 48000000 		.word	.LC8
 1245 05bc 00000000 		.word	huart2
 1246 05c0 00100040 		.word	1073745920
 1247 05c4 00000000 		.word	flag_sw
 1248 05c8 00000000 		.word	flag_disp
 1249 05cc 00000000 		.word	flag_meas_short
 1250 05d0 0000A543 		.word	1134886912
 1251 05d4 00007F43 		.word	1132396544
 1252 05d8 00000000 		.word	.LANCHOR10
 1253 05dc 00002440 		.word	1076101120
 1254 05e0 00000000 		.word	.LANCHOR11
 1255 05e4 3C000000 		.word	.LC6
 1256 05e8 00000000 		.word	.LANCHOR12
 1257 05ec 00000000 		.word	u8g2
 1258 05f0 50000000 		.word	.LC9
 1259 05f4 54000000 		.word	.LC10
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 37


 1260 05f8 00000000 		.word	.LC0
 1261 05fc 00000000 		.word	.LANCHOR5
 1262 0600 ABAAAAAA 		.word	-1431655765
 1263 0604 00000000 		.word	.LANCHOR3
 1264 0608 00000000 		.word	.LANCHOR13
 1265 060c 00000000 		.word	.LANCHOR14
 1266 0610 00000000 		.word	.LANCHOR15
 1267 0614 00000000 		.word	.LANCHOR9
 1268              	.LVL137:
 1269              	.L77:
 1270              	.LBE4:
 553:Src/main.c    ****         u8g2_SetFont(&u8g2, u8g2_font_7x14B_tf);
 1271              		.loc 1 553 0
 1272 0618 1F4C     		ldr	r4, .L83
 1273 061a 2046     		mov	r0, r4
 1274 061c FFF7FEFF 		bl	u8g2_ClearBuffer
 1275              	.LVL138:
 554:Src/main.c    ****         u8g2_DrawStr(&u8g2, 2, 15, "Mode Setting" );
 1276              		.loc 1 554 0
 1277 0620 1E49     		ldr	r1, .L83+4
 1278 0622 2046     		mov	r0, r4
 1279 0624 FFF7FEFF 		bl	u8g2_SetFont
 1280              	.LVL139:
 555:Src/main.c    ****         if( cursor == 0 ){
 1281              		.loc 1 555 0
 1282 0628 1D4B     		ldr	r3, .L83+8
 1283 062a 0F22     		movs	r2, #15
 1284 062c 0221     		movs	r1, #2
 1285 062e 2046     		mov	r0, r4
 1286 0630 FFF7FEFF 		bl	u8g2_DrawStr
 1287              	.LVL140:
 556:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, ">" );
 1288              		.loc 1 556 0
 1289 0634 1B4B     		ldr	r3, .L83+12
 1290 0636 1B68     		ldr	r3, [r3]
 1291 0638 03BB     		cbnz	r3, .L59
 557:Src/main.c    ****         }else{
 1292              		.loc 1 557 0
 1293 063a 1B4B     		ldr	r3, .L83+16
 1294 063c 1E22     		movs	r2, #30
 1295 063e 0221     		movs	r1, #2
 1296 0640 2046     		mov	r0, r4
 1297 0642 FFF7FEFF 		bl	u8g2_DrawStr
 1298              	.LVL141:
 1299              	.L60:
 561:Src/main.c    ****         if( cursor == 1 ){
 1300              		.loc 1 561 0
 1301 0646 194B     		ldr	r3, .L83+20
 1302 0648 1E22     		movs	r2, #30
 1303 064a 0A21     		movs	r1, #10
 1304 064c 1248     		ldr	r0, .L83
 1305 064e FFF7FEFF 		bl	u8g2_DrawStr
 1306              	.LVL142:
 562:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 1307              		.loc 1 562 0
 1308 0652 144B     		ldr	r3, .L83+12
 1309 0654 1B68     		ldr	r3, [r3]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 38


 1310 0656 012B     		cmp	r3, #1
 1311 0658 17D0     		beq	.L78
 565:Src/main.c    ****         }
 1312              		.loc 1 565 0
 1313 065a 154B     		ldr	r3, .L83+24
 1314 065c 2D22     		movs	r2, #45
 1315 065e 0221     		movs	r1, #2
 1316 0660 0D48     		ldr	r0, .L83
 1317 0662 FFF7FEFF 		bl	u8g2_DrawStr
 1318              	.LVL143:
 1319              	.L62:
 567:Src/main.c    ****         u8g2_SendBuffer(&u8g2);
 1320              		.loc 1 567 0
 1321 0666 0C4C     		ldr	r4, .L83
 1322 0668 124B     		ldr	r3, .L83+28
 1323 066a 2D22     		movs	r2, #45
 1324 066c 0A21     		movs	r1, #10
 1325 066e 2046     		mov	r0, r4
 1326 0670 FFF7FEFF 		bl	u8g2_DrawStr
 1327              	.LVL144:
 568:Src/main.c    ****       }
 1328              		.loc 1 568 0
 1329 0674 2046     		mov	r0, r4
 1330 0676 FFF7FEFF 		bl	u8g2_SendBuffer
 1331              	.LVL145:
 1332 067a CEE6     		b	.L56
 1333              	.L59:
 559:Src/main.c    ****         }
 1334              		.loc 1 559 0
 1335 067c 0C4B     		ldr	r3, .L83+24
 1336 067e 1E22     		movs	r2, #30
 1337 0680 0221     		movs	r1, #2
 1338 0682 0548     		ldr	r0, .L83
 1339 0684 FFF7FEFF 		bl	u8g2_DrawStr
 1340              	.LVL146:
 1341 0688 DDE7     		b	.L60
 1342              	.L78:
 563:Src/main.c    ****         }else{
 1343              		.loc 1 563 0
 1344 068a 074B     		ldr	r3, .L83+16
 1345 068c 2D22     		movs	r2, #45
 1346 068e 0221     		movs	r1, #2
 1347 0690 0148     		ldr	r0, .L83
 1348 0692 FFF7FEFF 		bl	u8g2_DrawStr
 1349              	.LVL147:
 1350 0696 E6E7     		b	.L62
 1351              	.L84:
 1352              		.align	2
 1353              	.L83:
 1354 0698 00000000 		.word	u8g2
 1355 069c 00000000 		.word	u8g2_font_7x14B_tf
 1356 06a0 58000000 		.word	.LC11
 1357 06a4 00000000 		.word	.LANCHOR12
 1358 06a8 68000000 		.word	.LC12
 1359 06ac 70000000 		.word	.LC14
 1360 06b0 6C000000 		.word	.LC13
 1361 06b4 7C000000 		.word	.LC15
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 39


 1362              		.cfi_endproc
 1363              	.LFE128:
 1365              		.section	.text.assert_failed,"ax",%progbits
 1366              		.align	1
 1367              		.global	assert_failed
 1368              		.syntax unified
 1369              		.thumb
 1370              		.thumb_func
 1371              		.fpu fpv4-sp-d16
 1373              	assert_failed:
 1374              	.LFB131:
 650:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 651:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 652:Src/main.c    ****   while(1) 
 653:Src/main.c    ****   {
 654:Src/main.c    ****   }
 655:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */ 
 656:Src/main.c    **** }
 657:Src/main.c    **** 
 658:Src/main.c    **** #ifdef USE_FULL_ASSERT
 659:Src/main.c    **** 
 660:Src/main.c    **** /**
 661:Src/main.c    ****    * @brief Reports the name of the source file and the source line number
 662:Src/main.c    ****    * where the assert_param error has occurred.
 663:Src/main.c    ****    * @param file: pointer to the source file name
 664:Src/main.c    ****    * @param line: assert_param error line source number
 665:Src/main.c    ****    * @retval None
 666:Src/main.c    ****    */
 667:Src/main.c    **** void assert_failed(uint8_t* file, uint32_t line)
 668:Src/main.c    **** {
 1375              		.loc 1 668 0
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 0
 1378              		@ frame_needed = 0, uses_anonymous_args = 0
 1379              		@ link register save eliminated.
 1380              	.LVL148:
 669:Src/main.c    ****   /* USER CODE BEGIN 6 */
 670:Src/main.c    ****   /* User can add his own implementation to report the file name and line number,
 671:Src/main.c    ****     ex: printf("Wrong parameters value: file %s on line %d¥r¥n", file, line) */
 672:Src/main.c    ****   /* USER CODE END 6 */
 673:Src/main.c    **** 
 674:Src/main.c    **** }
 1381              		.loc 1 674 0
 1382 0000 7047     		bx	lr
 1383              		.cfi_endproc
 1384              	.LFE131:
 1386              		.global	cursor
 1387              		.global	FP_duty
 1388              		.global	FP_volt
 1389              		.global	meas_value
 1390              		.global	meas_sign
 1391              		.global	meas_frac
 1392              		.global	meas_digit
 1393              		.global	meas_unit
 1394              		.global	meas_name
 1395              		.global	idct_status
 1396              		.global	idct_name
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 40


 1397              		.global	MT
 1398              		.global	gear
 1399              		.global	speed
 1400              		.global	rpm
 1401              		.global	logo_bits
 1402              		.global	update_display
 1403              		.comm	u8g2,128,4
 1404              		.section	.bss.cursor,"aw",%nobits
 1405              		.align	2
 1406              		.set	.LANCHOR12,. + 0
 1409              	cursor:
 1410 0000 00000000 		.space	4
 1411              		.section	.bss.gear,"aw",%nobits
 1412              		.set	.LANCHOR7,. + 0
 1415              	gear:
 1416 0000 00       		.space	1
 1417              		.section	.bss.rpm,"aw",%nobits
 1418              		.align	1
 1419              		.set	.LANCHOR5,. + 0
 1422              	rpm:
 1423 0000 0000     		.space	2
 1424              		.section	.bss.update_display,"aw",%nobits
 1427              	update_display:
 1428 0000 00       		.space	1
 1429              		.section	.data.FP_duty,"aw",%progbits
 1430              		.align	1
 1431              		.set	.LANCHOR11,. + 0
 1434              	FP_duty:
 1435 0000 6400     		.short	100
 1436              		.section	.data.FP_volt,"aw",%progbits
 1437              		.align	1
 1438              		.set	.LANCHOR10,. + 0
 1441              	FP_volt:
 1442 0000 4A01     		.short	330
 1443              		.section	.data.MT,"aw",%progbits
 1444              		.align	3
 1445              		.set	.LANCHOR6,. + 0
 1448              	MT:
 1449 0000 77BE9F1A 		.word	446676599
 1450 0004 2FDD0B40 		.word	1074519343
 1451 0008 1F85EB51 		.word	1374389535
 1452 000c B81E0040 		.word	1073749688
 1453 0010 A8C64B37 		.word	927712936
 1454 0014 8941F63F 		.word	1073103241
 1455 0018 00000000 		.word	0
 1456 001c 0000F03F 		.word	1072693248
 1457 0020 986E1283 		.word	2199023256
 1458 0024 C0CAE93F 		.word	1072286400
 1459              		.section	.data.meas_value,"aw",%progbits
 1460              		.align	2
 1461              		.set	.LANCHOR9,. + 0
 1464              	meas_value:
 1465 0000 6900     		.short	105
 1466 0002 EB00     		.short	235
 1467 0004 8502     		.short	645
 1468 0006 5900     		.short	89
 1469 0008 4900     		.short	73
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 41


 1470 000a 8F00     		.short	143
 1471              		.section	.data.speed,"aw",%progbits
 1472              		.align	1
 1473              		.set	.LANCHOR8,. + 0
 1476              	speed:
 1477 0000 F000     		.short	240
 1478              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 1479              		.align	2
 1480              	.LC2:
 1481 0000 5372632F 		.ascii	"Src/main.c\000"
 1481      6D61696E 
 1481      2E6300
 1482              		.section	.rodata.draw_MeasLabels.str1.4,"aMS",%progbits,1
 1483              		.align	2
 1484              	.LC0:
 1485 0000 25202000 		.ascii	"%  \000"
 1486              	.LC1:
 1487 0004 44555459 		.ascii	"DUTY\000"
 1487      00
 1488              		.section	.rodata.idct_name,"a",%progbits
 1489              		.align	2
 1490              		.set	.LANCHOR0,. + 0
 1493              	idct_name:
 1494 0000 43414E00 		.ascii	"CAN\000"
 1495 0004 00       		.space	1
 1496 0005 4F324642 		.ascii	"O2FB\000"
 1496      00
 1497              		.section	.rodata.idct_status,"a",%progbits
 1498              		.align	2
 1499              		.set	.LANCHOR1,. + 0
 1502              	idct_status:
 1503 0000 01       		.byte	1
 1504 0001 01       		.byte	1
 1505              		.section	.rodata.logo_bits,"a",%progbits
 1506              		.align	2
 1507              		.set	.LANCHOR4,. + 0
 1510              	logo_bits:
 1511 0000 00       		.byte	0
 1512 0001 00       		.byte	0
 1513 0002 00       		.byte	0
 1514 0003 00       		.byte	0
 1515 0004 00       		.byte	0
 1516 0005 00       		.byte	0
 1517 0006 00       		.byte	0
 1518 0007 00       		.byte	0
 1519 0008 00       		.byte	0
 1520 0009 00       		.byte	0
 1521 000a 00       		.byte	0
 1522 000b 00       		.byte	0
 1523 000c 00       		.byte	0
 1524 000d 00       		.byte	0
 1525 000e 00       		.byte	0
 1526 000f 00       		.byte	0
 1527 0010 00       		.byte	0
 1528 0011 00       		.byte	0
 1529 0012 00       		.byte	0
 1530 0013 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 42


 1531 0014 00       		.byte	0
 1532 0015 00       		.byte	0
 1533 0016 00       		.byte	0
 1534 0017 00       		.byte	0
 1535 0018 00       		.byte	0
 1536 0019 00       		.byte	0
 1537 001a F0       		.byte	-16
 1538 001b 0F       		.byte	15
 1539 001c 00       		.byte	0
 1540 001d 00       		.byte	0
 1541 001e 00       		.byte	0
 1542 001f FC       		.byte	-4
 1543 0020 FF       		.byte	-1
 1544 0021 FF       		.byte	-1
 1545 0022 3F       		.byte	63
 1546 0023 00       		.byte	0
 1547 0024 80       		.byte	-128
 1548 0025 FF       		.byte	-1
 1549 0026 FF       		.byte	-1
 1550 0027 FF       		.byte	-1
 1551 0028 FF       		.byte	-1
 1552 0029 01       		.byte	1
 1553 002a E0       		.byte	-32
 1554 002b 1F       		.byte	31
 1555 002c 00       		.byte	0
 1556 002d 80       		.byte	-128
 1557 002e FF       		.byte	-1
 1558 002f 07       		.byte	7
 1559 0030 E0       		.byte	-32
 1560 0031 01       		.byte	1
 1561 0032 00       		.byte	0
 1562 0033 80       		.byte	-128
 1563 0034 81       		.byte	-127
 1564 0035 07       		.byte	7
 1565 0036 E0       		.byte	-32
 1566 0037 01       		.byte	1
 1567 0038 00       		.byte	0
 1568 0039 80       		.byte	-128
 1569 003a 81       		.byte	-127
 1570 003b 07       		.byte	7
 1571 003c C0       		.byte	-64
 1572 003d E1       		.byte	-31
 1573 003e 07       		.byte	7
 1574 003f C0       		.byte	-64
 1575 0040 80       		.byte	-128
 1576 0041 03       		.byte	3
 1577 0042 00       		.byte	0
 1578 0043 FC       		.byte	-4
 1579 0044 1F       		.byte	31
 1580 0045 E0       		.byte	-32
 1581 0046 80       		.byte	-128
 1582 0047 03       		.byte	3
 1583 0048 00       		.byte	0
 1584 0049 FE       		.byte	-2
 1585 004a 7F       		.byte	127
 1586 004b 70       		.byte	112
 1587 004c C0       		.byte	-64
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 43


 1588 004d 01       		.byte	1
 1589 004e 00       		.byte	0
 1590 004f 0F       		.byte	15
 1591 0050 FE       		.byte	-2
 1592 0051 39       		.byte	57
 1593 0052 E0       		.byte	-32
 1594 0053 00       		.byte	0
 1595 0054 00       		.byte	0
 1596 0055 07       		.byte	7
 1597 0056 F8       		.byte	-8
 1598 0057 1F       		.byte	31
 1599 0058 F0       		.byte	-16
 1600 0059 00       		.byte	0
 1601 005a 00       		.byte	0
 1602 005b 0E       		.byte	14
 1603 005c E0       		.byte	-32
 1604 005d 1F       		.byte	31
 1605 005e 78       		.byte	120
 1606 005f 00       		.byte	0
 1607 0060 00       		.byte	0
 1608 0061 0C       		.byte	12
 1609 0062 C0       		.byte	-64
 1610 0063 FF       		.byte	-1
 1611 0064 3F       		.byte	63
 1612 0065 00       		.byte	0
 1613 0066 00       		.byte	0
 1614 0067 18       		.byte	24
 1615 0068 00       		.byte	0
 1616 0069 FF       		.byte	-1
 1617 006a 1F       		.byte	31
 1618 006b 00       		.byte	0
 1619 006c 00       		.byte	0
 1620 006d 38       		.byte	56
 1621 006e C0       		.byte	-64
 1622 006f FF       		.byte	-1
 1623 0070 0F       		.byte	15
 1624 0071 00       		.byte	0
 1625 0072 00       		.byte	0
 1626 0073 70       		.byte	112
 1627 0074 E0       		.byte	-32
 1628 0075 F1       		.byte	-15
 1629 0076 03       		.byte	3
 1630 0077 00       		.byte	0
 1631 0078 00       		.byte	0
 1632 0079 E0       		.byte	-32
 1633 007a 78       		.byte	120
 1634 007b 00       		.byte	0
 1635 007c 00       		.byte	0
 1636 007d 00       		.byte	0
 1637 007e 00       		.byte	0
 1638 007f C0       		.byte	-64
 1639 0080 3F       		.byte	63
 1640 0081 E0       		.byte	-32
 1641 0082 01       		.byte	1
 1642 0083 00       		.byte	0
 1643 0084 00       		.byte	0
 1644 0085 80       		.byte	-128
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 44


 1645 0086 1F       		.byte	31
 1646 0087 F0       		.byte	-16
 1647 0088 01       		.byte	1
 1648 0089 00       		.byte	0
 1649 008a 00       		.byte	0
 1650 008b 00       		.byte	0
 1651 008c 07       		.byte	7
 1652 008d F8       		.byte	-8
 1653 008e 00       		.byte	0
 1654 008f 00       		.byte	0
 1655 0090 00       		.byte	0
 1656 0091 00       		.byte	0
 1657 0092 1E       		.byte	30
 1658 0093 7C       		.byte	124
 1659 0094 00       		.byte	0
 1660 0095 00       		.byte	0
 1661 0096 00       		.byte	0
 1662 0097 00       		.byte	0
 1663 0098 F8       		.byte	-8
 1664 0099 1F       		.byte	31
 1665 009a 00       		.byte	0
 1666 009b 00       		.byte	0
 1667 009c 00       		.byte	0
 1668 009d 00       		.byte	0
 1669 009e F0       		.byte	-16
 1670 009f 0F       		.byte	15
 1671 00a0 00       		.byte	0
 1672 00a1 00       		.byte	0
 1673 00a2 00       		.byte	0
 1674 00a3 00       		.byte	0
 1675 00a4 80       		.byte	-128
 1676 00a5 01       		.byte	1
 1677 00a6 00       		.byte	0
 1678 00a7 00       		.byte	0
 1679 00a8 00       		.byte	0
 1680 00a9 00       		.byte	0
 1681 00aa 00       		.byte	0
 1682 00ab 00       		.byte	0
 1683 00ac 00       		.byte	0
 1684 00ad 00       		.byte	0
 1685 00ae 00       		.byte	0
 1686 00af 00       		.byte	0
 1687 00b0 00       		.byte	0
 1688 00b1 00       		.byte	0
 1689 00b2 00       		.byte	0
 1690 00b3 00       		.byte	0
 1691 00b4 00       		.byte	0
 1692 00b5 00       		.byte	0
 1693 00b6 00       		.byte	0
 1694 00b7 00       		.byte	0
 1695 00b8 00       		.byte	0
 1696 00b9 00       		.byte	0
 1697 00ba 00       		.byte	0
 1698 00bb 00       		.byte	0
 1699 00bc 00       		.byte	0
 1700 00bd 00       		.byte	0
 1701 00be 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 45


 1702 00bf 00       		.byte	0
 1703 00c0 00       		.byte	0
 1704 00c1 00       		.byte	0
 1705 00c2 00       		.byte	0
 1706 00c3 00       		.byte	0
 1707 00c4 00       		.byte	0
 1708 00c5 00       		.byte	0
 1709 00c6 00       		.byte	0
 1710 00c7 4C       		.byte	76
 1711 00c8 1C       		.byte	28
 1712 00c9 00       		.byte	0
 1713 00ca 00       		.byte	0
 1714 00cb 00       		.byte	0
 1715 00cc 00       		.byte	0
 1716 00cd 32       		.byte	50
 1717 00ce 0E       		.byte	14
 1718 00cf 00       		.byte	0
 1719 00d0 00       		.byte	0
 1720 00d1 00       		.byte	0
 1721 00d2 00       		.byte	0
 1722 00d3 00       		.byte	0
 1723 00d4 C6       		.byte	-58
 1724 00d5 00       		.byte	0
 1725 00d6 18       		.byte	24
 1726 00d7 00       		.byte	0
 1727 00d8 00       		.byte	0
 1728 00d9 7C       		.byte	124
 1729 00da EF       		.byte	-17
 1730 00db FC       		.byte	-4
 1731 00dc 39       		.byte	57
 1732 00dd 00       		.byte	0
 1733 00de 00       		.byte	0
 1734 00df 4E       		.byte	78
 1735 00e0 C6       		.byte	-58
 1736 00e1 B8       		.byte	-72
 1737 00e2 31       		.byte	49
 1738 00e3 00       		.byte	0
 1739 00e4 00       		.byte	0
 1740 00e5 3E       		.byte	62
 1741 00e6 C6       		.byte	-58
 1742 00e7 98       		.byte	-104
 1743 00e8 31       		.byte	49
 1744 00e9 00       		.byte	0
 1745 00ea 00       		.byte	0
 1746 00eb 3C       		.byte	60
 1747 00ec C6       		.byte	-58
 1748 00ed 98       		.byte	-104
 1749 00ee 31       		.byte	49
 1750 00ef 00       		.byte	0
 1751 00f0 00       		.byte	0
 1752 00f1 0E       		.byte	14
 1753 00f2 C6       		.byte	-58
 1754 00f3 98       		.byte	-104
 1755 00f4 31       		.byte	49
 1756 00f5 00       		.byte	0
 1757 00f6 00       		.byte	0
 1758 00f7 4E       		.byte	78
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 46


 1759 00f8 CE       		.byte	-50
 1760 00f9 99       		.byte	-103
 1761 00fa 31       		.byte	49
 1762 00fb 00       		.byte	0
 1763 00fc 00       		.byte	0
 1764 00fd 7C       		.byte	124
 1765 00fe EF       		.byte	-17
 1766 00ff FD       		.byte	-3
 1767 0100 7B       		.byte	123
 1768 0101 00       		.byte	0
 1769 0102 00       		.byte	0
 1770 0103 00       		.byte	0
 1771 0104 00       		.byte	0
 1772 0105 00       		.byte	0
 1773 0106 00       		.byte	0
 1774 0107 00       		.byte	0
 1775 0108 00       		.byte	0
 1776 0109 00       		.byte	0
 1777 010a 00       		.byte	0
 1778 010b 00       		.byte	0
 1779 010c 00       		.byte	0
 1780 010d 00       		.byte	0
 1781 010e 00       		.byte	0
 1782 010f 00       		.byte	0
 1783 0110 00       		.byte	0
 1784 0111 00       		.byte	0
 1785 0112 00       		.byte	0
 1786 0113 00       		.byte	0
 1787 0114 00       		.byte	0
 1788 0115 00       		.byte	0
 1789 0116 00       		.byte	0
 1790 0117 00       		.byte	0
 1791 0118 00       		.byte	0
 1792 0119 00       		.byte	0
 1793 011a 00       		.byte	0
 1794 011b 00       		.byte	0
 1795 011c 00       		.byte	0
 1796 011d 00       		.byte	0
 1797 011e 00       		.byte	0
 1798 011f 00       		.byte	0
 1799              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 1800              		.align	2
 1801              	.LC3:
 1802 0000 4D756C74 		.ascii	"Multi Function Meter\000"
 1802      69204675 
 1802      6E637469 
 1802      6F6E204D 
 1802      65746572 
 1803 0015 000000   		.space	3
 1804              	.LC4:
 1805 0018 5265762E 		.ascii	"Rev. 0.1a\000"
 1805      20302E31 
 1805      6100
 1806 0022 0000     		.space	2
 1807              	.LC5:
 1808 0024 48656C6C 		.ascii	"Hello. This is MFM.\012\000"
 1808      6F2E2054 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 47


 1808      68697320 
 1808      6973204D 
 1808      464D2E0A 
 1809 0039 000000   		.space	3
 1810              	.LC6:
 1811 003c 55502000 		.ascii	"UP \000"
 1812              	.LC7:
 1813 0040 444F574E 		.ascii	"DOWN \000"
 1813      2000
 1814 0046 0000     		.space	2
 1815              	.LC8:
 1816 0048 454E5445 		.ascii	"ENTER \000"
 1816      522000
 1817 004f 00       		.space	1
 1818              	.LC9:
 1819 0050 6B506100 		.ascii	"kPa\000"
 1820              	.LC10:
 1821 0054 4D415000 		.ascii	"MAP\000"
 1822              	.LC11:
 1823 0058 4D6F6465 		.ascii	"Mode Setting\000"
 1823      20536574 
 1823      74696E67 
 1823      00
 1824 0065 000000   		.space	3
 1825              	.LC12:
 1826 0068 3E00     		.ascii	">\000"
 1827 006a 0000     		.space	2
 1828              	.LC13:
 1829 006c 2000     		.ascii	" \000"
 1830 006e 0000     		.space	2
 1831              	.LC14:
 1832 0070 4D756C74 		.ascii	"Multi-Meter\000"
 1832      692D4D65 
 1832      74657200 
 1833              	.LC15:
 1834 007c 53636F70 		.ascii	"Scope\000"
 1834      6500
 1835              		.section	.rodata.meas_digit,"a",%progbits
 1836              		.align	2
 1837              		.set	.LANCHOR15,. + 0
 1840              	meas_digit:
 1841 0000 03       		.byte	3
 1842 0001 03       		.byte	3
 1843 0002 03       		.byte	3
 1844 0003 03       		.byte	3
 1845 0004 03       		.byte	3
 1846 0005 03       		.byte	3
 1847              		.section	.rodata.meas_frac,"a",%progbits
 1848              		.align	2
 1849              		.set	.LANCHOR14,. + 0
 1852              	meas_frac:
 1853 0000 02       		.byte	2
 1854 0001 02       		.byte	2
 1855 0002 01       		.byte	1
 1856 0003 00       		.byte	0
 1857 0004 00       		.byte	0
 1858 0005 02       		.byte	2
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 48


 1859              		.section	.rodata.meas_name,"a",%progbits
 1860              		.align	2
 1861              		.set	.LANCHOR2,. + 0
 1864              	meas_name:
 1865 0000 4D415000 		.ascii	"MAP\000"
 1866 0004 000000   		.space	3
 1867 0007 4F494C50 		.ascii	"OILP\000"
 1867      00
 1868 000c 0000     		.space	2
 1869 000e 4650564F 		.ascii	"FPVOLT\000"
 1869      4C5400
 1870 0015 45435400 		.ascii	"ECT\000"
 1871 0019 000000   		.space	3
 1872 001c 4F494C54 		.ascii	"OILT\000"
 1872      00
 1873 0021 0000     		.space	2
 1874 0023 4F3200   		.ascii	"O2\000"
 1875 0026 00000000 		.space	4
 1876              		.section	.rodata.meas_sign,"a",%progbits
 1877              		.align	2
 1878              		.set	.LANCHOR13,. + 0
 1881              	meas_sign:
 1882 0000 01       		.byte	1
 1883 0001 00       		.byte	0
 1884 0002 00       		.byte	0
 1885 0003 00       		.byte	0
 1886 0004 00       		.byte	0
 1887 0005 00       		.byte	0
 1888              		.section	.rodata.meas_unit,"a",%progbits
 1889              		.align	2
 1890              		.set	.LANCHOR3,. + 0
 1893              	meas_unit:
 1894 0000 6B706100 		.ascii	"kpa\000"
 1895 0004 00       		.space	1
 1896 0005 6B706100 		.ascii	"kpa\000"
 1897 0009 00       		.space	1
 1898 000a 56202000 		.ascii	"V  \000"
 1899 000e 00       		.space	1
 1900 000f B0       		.byte	-80
 1901 0010 43       		.byte	67
 1902 0011 00       		.byte	0
 1903 0012 0000     		.space	2
 1904 0014 B0       		.byte	-80
 1905 0015 43       		.byte	67
 1906 0016 00       		.byte	0
 1907 0017 0000     		.space	2
 1908 0019 5600     		.ascii	"V\000"
 1909 001b 000000   		.space	3
 1910              		.text
 1911              	.Letext0:
 1912              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 1913              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 1914              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 1915              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 1916              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 1917              		.file 7 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 1918              		.file 8 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 49


 1919              		.file 9 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 1920              		.file 10 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 1921              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 1922              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 1923              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 1924              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 1925              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 1926              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 1927              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 1928              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi.h"
 1929              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 1930              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 1931              		.file 21 "Inc/adc.h"
 1932              		.file 22 "Inc/can.h"
 1933              		.file 23 "Inc/spi.h"
 1934              		.file 24 "Inc/tim.h"
 1935              		.file 25 "Inc/usart.h"
 1936              		.file 26 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/math.h"
 1937              		.file 27 "/Users/imashio/Electronics/ARM/_Library/u8x8.h"
 1938              		.file 28 "/Users/imashio/Electronics/ARM/_Library/u8g2.h"
 1939              		.file 29 "Inc/flag.h"
 1940              		.file 30 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 1941              		.file 31 "/Users/imashio/Electronics/ARM/_Library/draw_Value.h"
 1942              		.file 32 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 1943              		.file 33 "Inc/gpio.h"
 1944              		.file 34 "Inc/dma.h"
 1945              		.file 35 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 1946              		.file 36 "/Users/imashio/Electronics/ARM/_Library/draw_BarGraph.h"
 1947              		.file 37 "/Users/imashio/Electronics/ARM/_Library/draw_IndicatorBox.h"
 1948              		.file 38 "<built-in>"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 50


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:18     .text.draw_indicators:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:25     .text.draw_indicators:0000000000000000 draw_indicators
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:84     .text.draw_indicators:0000000000000040 $d
                            *COM*:0000000000000080 u8g2
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:91     .text.draw_MeasLabels:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:98     .text.draw_MeasLabels:0000000000000000 draw_MeasLabels
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:241    .text.draw_MeasLabels:00000000000000d4 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:251    .text._Error_Handler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:258    .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:273    .text.SystemClock_Config:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:280    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:399    .text.SystemClock_Config:00000000000000a4 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:411    .text.main:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:418    .text.main:0000000000000000 main
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:814    .text.main:0000000000000270 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:849    .text.main:00000000000002f4 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1242   .text.main:00000000000005b0 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1272   .text.main:0000000000000618 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1354   .text.main:0000000000000698 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1366   .text.assert_failed:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1373   .text.assert_failed:0000000000000000 assert_failed
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1409   .bss.cursor:0000000000000000 cursor
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1434   .data.FP_duty:0000000000000000 FP_duty
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1441   .data.FP_volt:0000000000000000 FP_volt
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1464   .data.meas_value:0000000000000000 meas_value
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1881   .rodata.meas_sign:0000000000000000 meas_sign
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1852   .rodata.meas_frac:0000000000000000 meas_frac
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1840   .rodata.meas_digit:0000000000000000 meas_digit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1893   .rodata.meas_unit:0000000000000000 meas_unit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1864   .rodata.meas_name:0000000000000000 meas_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1502   .rodata.idct_status:0000000000000000 idct_status
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1493   .rodata.idct_name:0000000000000000 idct_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1448   .data.MT:0000000000000000 MT
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1415   .bss.gear:0000000000000000 gear
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1476   .data.speed:0000000000000000 speed
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1422   .bss.rpm:0000000000000000 rpm
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1510   .rodata.logo_bits:0000000000000000 logo_bits
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1427   .bss.update_display:0000000000000000 update_display
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1405   .bss.cursor:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1416   .bss.gear:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1418   .bss.rpm:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1428   .bss.update_display:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1430   .data.FP_duty:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1437   .data.FP_volt:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1444   .data.MT:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1460   .data.meas_value:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1472   .data.speed:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1479   .rodata.SystemClock_Config.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1483   .rodata.draw_MeasLabels.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1489   .rodata.idct_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1498   .rodata.idct_status:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1506   .rodata.logo_bits:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1800   .rodata.main.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1836   .rodata.meas_digit:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1848   .rodata.meas_frac:0000000000000000 $d
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 51


/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1860   .rodata.meas_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1877   .rodata.meas_sign:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s:1889   .rodata.meas_unit:0000000000000000 $d

UNDEFINED SYMBOLS
draw_IndicatorBox
draw_MeasLabelUnit
draw_Value
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
__aeabi_dmul
__aeabi_d2iz
__aeabi_ui2d
__aeabi_ddiv
__aeabi_d2uiz
__aeabi_i2d
HAL_Init
memset
MX_GPIO_Init
MX_DMA_Init
MX_USART2_UART_Init
MX_TIM1_Init
MX_USART1_UART_Init
MX_SPI1_Init
MX_ADC1_Init
MX_TIM2_Init
MX_ADC2_Init
MX_CAN_Init
MX_TIM6_Init
u8g2_Setup_ssd1309_128x64_noname2_f
HAL_GPIO_WritePin
u8x8_InitDisplay
u8x8_SetPowerSave
u8x8_SetContrast
u8g2_ClearDisplay
u8g2_DrawXBMP
u8g2_SetFont
u8g2_DrawStr
u8g2_SendBuffer
HAL_Delay
HAL_TIM_Base_Start_IT
HAL_ADC_Start_DMA
u8g2_ClearBuffer
HAL_UART_Transmit_printf
HAL_NVIC_DisableIRQ
u8x8_gpio_and_delay_STM32F303
u8x8_byte_4wire_hw_spi
u8g2_cb_r0
u8g2_font_5x7_tf
htim1
htim2
htim6
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccJlySCP.s 			page 52


hadc1
huart1
huart2
flag_meas_short
draw_Wave_axis
draw_BarGraph
draw_Wave
flag_sw
flag_disp
u8g2_font_7x14B_tf
