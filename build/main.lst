ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.ADXL345_RegWrite,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	ADXL345_RegWrite
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	ADXL345_RegWrite:
  27              	.LFB126:
  28              		.file 1 "Src/main.c"
   1:Src/main.c    **** /**
   2:Src/main.c    ****   ******************************************************************************
   3:Src/main.c    ****   * File Name          : main.c
   4:Src/main.c    ****   * Description        : Main program body
   5:Src/main.c    ****   ******************************************************************************
   6:Src/main.c    ****   ** This notice applies to any and all portions of this file
   7:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   8:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
   9:Src/main.c    ****   * inserted by the user or by software development tools
  10:Src/main.c    ****   * are owned by their respective copyright owners.
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  13:Src/main.c    ****   *
  14:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  15:Src/main.c    ****   * are permitted provided that the following conditions are met:
  16:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  17:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  18:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  19:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  20:Src/main.c    ****   *      and/or other materials provided with the distribution.
  21:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  22:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  23:Src/main.c    ****   *      without specific prior written permission.
  24:Src/main.c    ****   *
  25:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  26:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  27:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  28:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  29:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  30:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 2


  31:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  32:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  34:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:Src/main.c    ****   *
  36:Src/main.c    ****   ******************************************************************************
  37:Src/main.c    ****   */
  38:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  39:Src/main.c    **** #include "main.h"
  40:Src/main.c    **** #include "stm32f3xx_hal.h"
  41:Src/main.c    **** #include "adc.h"
  42:Src/main.c    **** #include "can.h"
  43:Src/main.c    **** #include "dma.h"
  44:Src/main.c    **** #include "i2c.h"
  45:Src/main.c    **** #include "spi.h"
  46:Src/main.c    **** #include "tim.h"
  47:Src/main.c    **** #include "usart.h"
  48:Src/main.c    **** #include "gpio.h"
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN Includes */
  51:Src/main.c    **** #include <stdio.h>
  52:Src/main.c    **** #include <math.h>
  53:Src/main.c    **** 
  54:Src/main.c    **** // #include "basic.h"  // original library
  55:Src/main.c    **** #include "usart_transmit_printf.h"
  56:Src/main.c    **** #include "u8g2.h"		// graphic display library
  57:Src/main.c    **** #include "u8x8_gpio_STM32F303.h"
  58:Src/main.c    **** #include "u8x8_byte_4wire_hw_spi.h"
  59:Src/main.c    **** #include "draw_Value.h"
  60:Src/main.c    **** #include "draw_BarGraph.h"
  61:Src/main.c    **** #include "draw_IndicatorBox.h"
  62:Src/main.c    **** //#include "draw_Rotary.h"
  63:Src/main.c    **** 
  64:Src/main.c    **** #include "flag.h"
  65:Src/main.c    **** #include "defi_decoder.h"
  66:Src/main.c    **** #include "pulse_counter.h"
  67:Src/main.c    **** 
  68:Src/main.c    **** /* USER CODE END Includes */
  69:Src/main.c    **** 
  70:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  71:Src/main.c    **** 
  72:Src/main.c    **** /* USER CODE BEGIN PV */
  73:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  74:Src/main.c    **** 
  75:Src/main.c    **** // mode definition
  76:Src/main.c    **** #define N_mode                5
  77:Src/main.c    **** 
  78:Src/main.c    **** #define MODE_BAR_METER        0
  79:Src/main.c    **** #define MODE_CIRCULAR_METER   1
  80:Src/main.c    **** //#define MODE_ROTARY           2
  81:Src/main.c    **** #define MODE_SCOPE_MAP        2
  82:Src/main.c    **** #define MODE_SCOPE_Gsens      3
  83:Src/main.c    **** #define MODE_SETTING          4
  84:Src/main.c    **** 
  85:Src/main.c    **** // RPM bar graph parameter definition
  86:Src/main.c    **** #define	rpmbar_x		  0
  87:Src/main.c    **** #define	rpmbar_y		  0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 3


  88:Src/main.c    **** #define	rpmbar_width	128
  89:Src/main.c    **** #define	rpmbar_height	14
  90:Src/main.c    **** #define	rpm_min			  0
  91:Src/main.c    **** #define	rpm_max			  9000
  92:Src/main.c    **** 
  93:Src/main.c    **** // measurements display parameter definition
  94:Src/main.c    **** // Bar graph
  95:Src/main.c    **** #define	N_meas			      6
  96:Src/main.c    **** #define	meas_x			      0
  97:Src/main.c    **** #define	meas_y			      16
  98:Src/main.c    **** #define	meas_x_offset   	2
  99:Src/main.c    **** #define	meas_width1		    70
 100:Src/main.c    **** #define	meas_width2		    56
 101:Src/main.c    **** #define	meas_height		    12
 102:Src/main.c    **** // Circular Meter
 103:Src/main.c    **** #define	N_meas_C			    4
 104:Src/main.c    **** #define	meas_C_x			    68
 105:Src/main.c    **** #define	meas_C_y			    2
 106:Src/main.c    **** #define	meas_C_x_offset		2
 107:Src/main.c    **** #define	meas_C_width		  60
 108:Src/main.c    **** #define	meas_C_height		  13
 109:Src/main.c    **** 
 110:Src/main.c    **** // indicators parameter definition
 111:Src/main.c    **** #define	N_idct			      2
 112:Src/main.c    **** #define	idct_x			      72
 113:Src/main.c    **** #define	idct_y			      53
 114:Src/main.c    **** #define	idct_width		    27
 115:Src/main.c    **** #define	idct_height		    9
 116:Src/main.c    **** 
 117:Src/main.c    **** //  Fuel Pump Voltage display parameter definition
 118:Src/main.c    **** #define	FP_x		    	    0
 119:Src/main.c    **** #define	FP_y              52
 120:Src/main.c    **** #define	FP_height	        12
 121:Src/main.c    **** #define	FP_volt_width	    45
 122:Src/main.c    **** #define	FP_duty_width	    70
 123:Src/main.c    **** 
 124:Src/main.c    **** // wave display parameter definition
 125:Src/main.c    **** #define	wave_x			      0
 126:Src/main.c    **** #define	wave_y			      13
 127:Src/main.c    **** #define	wave_width		    128
 128:Src/main.c    **** #define	wave_height		    52
 129:Src/main.c    **** #define	wave_value_min	  -100
 130:Src/main.c    **** #define	wave_value_max	  +200
 131:Src/main.c    **** 
 132:Src/main.c    **** // logo parameter definition (small 'enfini' logo)
 133:Src/main.c    **** #define logo_width        48
 134:Src/main.c    **** #define logo_height       48
 135:Src/main.c    **** 
 136:Src/main.c    **** const unsigned char logo_bits[] = {
 137:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 138:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 139:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0x3F, 0x00,
 140:Src/main.c    ****   0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0xE0, 0x1F, 0x00, 0x80, 0xFF, 0x07,
 141:Src/main.c    ****   0xE0, 0x01, 0x00, 0x80, 0x81, 0x07, 0xE0, 0x01, 0x00, 0x80, 0x81, 0x07,
 142:Src/main.c    ****   0xC0, 0xE1, 0x07, 0xC0, 0x80, 0x03, 0x00, 0xFC, 0x1F, 0xE0, 0x80, 0x03,
 143:Src/main.c    ****   0x00, 0xFE, 0x7F, 0x70, 0xC0, 0x01, 0x00, 0x0F, 0xFE, 0x39, 0xE0, 0x00,
 144:Src/main.c    ****   0x00, 0x07, 0xF8, 0x1F, 0xF0, 0x00, 0x00, 0x0E, 0xE0, 0x1F, 0x78, 0x00,
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 4


 145:Src/main.c    ****   0x00, 0x0C, 0xC0, 0xFF, 0x3F, 0x00, 0x00, 0x18, 0x00, 0xFF, 0x1F, 0x00,
 146:Src/main.c    ****   0x00, 0x38, 0xC0, 0xFF, 0x0F, 0x00, 0x00, 0x70, 0xE0, 0xF1, 0x03, 0x00,
 147:Src/main.c    ****   0x00, 0xE0, 0x78, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x3F, 0xE0, 0x01, 0x00,
 148:Src/main.c    ****   0x00, 0x80, 0x1F, 0xF0, 0x01, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00,
 149:Src/main.c    ****   0x00, 0x00, 0x1E, 0x7C, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1F, 0x00, 0x00,
 150:Src/main.c    ****   0x00, 0x00, 0xF0, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00,
 151:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 152:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 153:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4C, 0x1C, 0x00, 0x00, 0x00,
 154:Src/main.c    ****   0x00, 0x32, 0x0E, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x00, 0x18, 0x00,
 155:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFC, 0x39, 0x00, 0x00, 0x4E, 0xC6, 0xB8, 0x31, 0x00,
 156:Src/main.c    ****   0x00, 0x3E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x3C, 0xC6, 0x98, 0x31, 0x00,
 157:Src/main.c    ****   0x00, 0x0E, 0xC6, 0x98, 0x31, 0x00, 0x00, 0x4E, 0xCE, 0x99, 0x31, 0x00,
 158:Src/main.c    ****   0x00, 0x7C, 0xEF, 0xFD, 0x7B, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 159:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 160:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 161:Src/main.c    ****   };
 162:Src/main.c    **** 
 163:Src/main.c    **** /*
 164:Src/main.c    **** // logo parameter definition (meidium 'enfini' logo)
 165:Src/main.c    **** #define logo_width        54
 166:Src/main.c    **** #define logo_height       48
 167:Src/main.c    **** 
 168:Src/main.c    **** static unsigned char logo_bits[] = {
 169:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0xFF, 0x0F,
 170:Src/main.c    ****   0x00, 0x00, 0x00, 0xFC, 0xFF, 0xFF, 0xFF, 0x1F, 0x00, 0xE0, 0xFF, 0xFF,
 171:Src/main.c    ****   0xFF, 0xFF, 0xFF, 0x01, 0xF8, 0x3F, 0x00, 0x00, 0xF0, 0xFF, 0x07, 0xF8,
 172:Src/main.c    ****   0x01, 0x00, 0x00, 0x70, 0xE0, 0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x80,
 173:Src/main.c    ****   0x0F, 0x7C, 0x00, 0x00, 0x00, 0x70, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00,
 174:Src/main.c    ****   0x38, 0x80, 0x07, 0x00, 0xF8, 0x3F, 0x00, 0x38, 0x80, 0x07, 0x00, 0xFE,
 175:Src/main.c    ****   0xFF, 0x00, 0x1C, 0xC0, 0x03, 0x80, 0xFF, 0xFF, 0x01, 0x0E, 0xC0, 0x01,
 176:Src/main.c    ****   0xC0, 0x07, 0xFC, 0x07, 0x07, 0xE0, 0x01, 0x80, 0x03, 0xF0, 0x9F, 0x03,
 177:Src/main.c    ****   0xF0, 0x00, 0x80, 0x03, 0xC0, 0xFF, 0x03, 0x78, 0x00, 0x00, 0x07, 0x80,
 178:Src/main.c    ****   0xFF, 0x01, 0x3C, 0x00, 0x00, 0x06, 0x00, 0xFE, 0x87, 0x3F, 0x00, 0x00,
 179:Src/main.c    ****   0x0E, 0x00, 0xF8, 0xFF, 0x1F, 0x00, 0x00, 0x1C, 0x00, 0xF8, 0xFF, 0x07,
 180:Src/main.c    ****   0x00, 0x00, 0x38, 0x00, 0xDE, 0xFF, 0x03, 0x00, 0x00, 0x70, 0x00, 0x0F,
 181:Src/main.c    ****   0x7E, 0x00, 0x00, 0x00, 0xE0, 0xC0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xC0,
 182:Src/main.c    ****   0xF1, 0x01, 0x00, 0x00, 0x00, 0x00, 0x80, 0xFF, 0x00, 0x7C, 0x00, 0x00,
 183:Src/main.c    ****   0x00, 0x00, 0x3F, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x00, 0x1F,
 184:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x3C, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x78,
 185:Src/main.c    ****   0xE0, 0x07, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xFF, 0x03, 0x00, 0x00, 0x00,
 186:Src/main.c    ****   0x00, 0xC0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3E, 0x00, 0x00,
 187:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x00,
 188:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x4E, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39,
 189:Src/main.c    ****   0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x00, 0x00, 0x00,
 190:Src/main.c    ****   0x00, 0x7E, 0x3E, 0xC7, 0x3D, 0x1C, 0x00, 0x00, 0x6F, 0x3E, 0xC7, 0x7F,
 191:Src/main.c    ****   0x1C, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x73, 0x18, 0x00, 0x00, 0x07, 0x1C,
 192:Src/main.c    ****   0x86, 0x71, 0x18, 0x00, 0x00, 0x3E, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00,
 193:Src/main.c    ****   0x1F, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x03, 0x1C, 0x86, 0x71, 0x18,
 194:Src/main.c    ****   0x00, 0x00, 0x47, 0x1C, 0x86, 0x71, 0x18, 0x00, 0x00, 0x7F, 0x3E, 0xCF,
 195:Src/main.c    ****   0xFB, 0x3C, 0x00, 0x00, 0x3C, 0x3E, 0xCF, 0xFB, 0x3C, 0x00, 0x00, 0x00,
 196:Src/main.c    ****   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
 197:Src/main.c    ****   };
 198:Src/main.c    **** */
 199:Src/main.c    **** 
 200:Src/main.c    **** u8g2_t    u8g2; // a structure which will contain all the data for one display
 201:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 5


 202:Src/main.c    **** uint8_t   update_display = 0;
 203:Src/main.c    **** 
 204:Src/main.c    **** // uint16_t	rpm = 0;
 205:Src/main.c    **** uint16_t	speed = 240;
 206:Src/main.c    **** uint8_t		gear = 0;
 207:Src/main.c    **** double		MT[5] = {3.483, 2.015, 1.391, 1.000, 0.806};
 208:Src/main.c    **** 
 209:Src/main.c    **** // UI
 210:Src/main.c    **** uint8_t   mode;
 211:Src/main.c    **** uint8_t   setting;
 212:Src/main.c    **** uint8_t   cursor = 0;
 213:Src/main.c    **** 
 214:Src/main.c    **** /*
 215:Src/main.c    **** typedef struct {
 216:Src/main.c    **** 	unsigned char	name;
 217:Src/main.c    **** 	uint8_t			status;
 218:Src/main.c    **** } idct;
 219:Src/main.c    **** */
 220:Src/main.c    **** 
 221:Src/main.c    **** // variables for indicators
 222:Src/main.c    **** const unsigned char idct_name[N_idct][5] = { // length must be (text length + 1)
 223:Src/main.c    **** 		"CAN"	,
 224:Src/main.c    **** 		"O2FB"
 225:Src/main.c    **** };
 226:Src/main.c    **** 
 227:Src/main.c    **** const uint8_t	idct_status[N_idct] = {
 228:Src/main.c    **** 		1	,
 229:Src/main.c    **** 		1
 230:Src/main.c    **** };
 231:Src/main.c    **** 
 232:Src/main.c    **** // variables for measurement
 233:Src/main.c    **** const unsigned char meas_name[N_meas][7] = { // length must be (text length + 1)
 234:Src/main.c    **** 		"MAP"         ,
 235:Src/main.c    **** 		"OILP"        ,
 236:Src/main.c    **** 		"FPV"         ,
 237:Src/main.c    **** 		"ECT"         ,
 238:Src/main.c    **** 		"OILT"        ,
 239:Src/main.c    **** 		"O2"          
 240:Src/main.c    **** };
 241:Src/main.c    **** 
 242:Src/main.c    **** const unsigned char meas_unit[N_meas][5] = {
 243:Src/main.c    **** 		"kpa"			    ,	// MAP
 244:Src/main.c    **** 		"kpa"			    ,	// OILP
 245:Src/main.c    **** 		"V  "         ,	// FuelPump Voltage
 246:Src/main.c    **** 		{176, 67, 0}  ,	// ECT  degC...{176, 67, 0}
 247:Src/main.c    **** 		{176, 67, 0}	,	// OILT  degC...{176, 67, 0}
 248:Src/main.c    **** 		"V"					    // O2
 249:Src/main.c    **** };
 250:Src/main.c    **** 
 251:Src/main.c    **** const uint8_t	meas_digit[N_meas] = {
 252:Src/main.c    **** 		3	,	// MAP
 253:Src/main.c    **** 		3	,	// OILP
 254:Src/main.c    **** 		3	,	// FuelPump Voltage
 255:Src/main.c    **** 		3	,	// ECT
 256:Src/main.c    **** 		3	,	// OILT
 257:Src/main.c    **** 		3		// O2
 258:Src/main.c    **** };
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 6


 259:Src/main.c    **** 
 260:Src/main.c    **** const uint8_t	meas_frac[N_meas] = {
 261:Src/main.c    **** 		2	,	// MAP
 262:Src/main.c    **** 		1	,	// OILP
 263:Src/main.c    **** 		1	,	// FuelPump Voltage
 264:Src/main.c    **** 		0	,	// ECT
 265:Src/main.c    **** 		0	,	// OILT
 266:Src/main.c    **** 		2		// O2
 267:Src/main.c    **** };
 268:Src/main.c    **** 
 269:Src/main.c    **** const uint8_t	meas_sign[N_meas] = {
 270:Src/main.c    **** 		1	,	// MAP
 271:Src/main.c    **** 		0	,	// OILP
 272:Src/main.c    **** 		0	,	// FuelPump Voltage
 273:Src/main.c    **** 		0	,	// ECT
 274:Src/main.c    **** 		0	,	// OILT
 275:Src/main.c    **** 		0		// O2
 276:Src/main.c    **** };
 277:Src/main.c    **** 
 278:Src/main.c    **** int16_t	meas_value[N_meas] = {
 279:Src/main.c    **** 		105	,	// MAP
 280:Src/main.c    **** 		235	,	// OILP
 281:Src/main.c    **** 		645	,	// FuelPump Voltage
 282:Src/main.c    **** 		89	,	// ECT
 283:Src/main.c    **** 		73	,	// OILT
 284:Src/main.c    **** 		143		// O2
 285:Src/main.c    **** };
 286:Src/main.c    **** 
 287:Src/main.c    **** // O2 senser Voltage
 288:Src/main.c    **** int16_t   O2_volt = 330;
 289:Src/main.c    **** 
 290:Src/main.c    **** // Fuel Pump Voltage
 291:Src/main.c    **** int16_t   FP_volt = 330;
 292:Src/main.c    **** int16_t   FP_duty = 100;
 293:Src/main.c    **** 
 294:Src/main.c    **** // ADXL345 3-axis acceration sensor --------------------------------
 295:Src/main.c    **** uint8_t   Gsens_EN;
 296:Src/main.c    **** uint8_t   Gsens_X1;
 297:Src/main.c    **** uint8_t   Gsens_X0;
 298:Src/main.c    **** int16_t   Gsens_X;
 299:Src/main.c    **** uint8_t   Gsens_Y1;
 300:Src/main.c    **** uint8_t   Gsens_Y0;
 301:Src/main.c    **** int16_t   Gsens_Y;
 302:Src/main.c    **** uint8_t   Gsens_Z1;
 303:Src/main.c    **** uint8_t   Gsens_Z0;
 304:Src/main.c    **** int16_t   Gsens_Z;
 305:Src/main.c    **** 
 306:Src/main.c    **** #define ADXL0_ADDR 0x1D
 307:Src/main.c    **** // ADXL345     I2C
 308:Src/main.c    **** // SDO/ALT   Address
 309:Src/main.c    **** //    H        0x1D
 310:Src/main.c    **** //    L        0x53
 311:Src/main.c    **** 
 312:Src/main.c    **** void ADXL345_RegWrite(uint8_t slv_addr, uint8_t addr, uint8_t data){
  29              		.loc 1 312 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 7


  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              	.LVL0:
  34 0000 00B5     		push	{lr}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 14, -4
  38 0002 85B0     		sub	sp, sp, #20
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 24
 313:Src/main.c    ****   uint8_t i2c_buf[2];
 314:Src/main.c    ****   i2c_buf[0] = addr;
 315:Src/main.c    ****   i2c_buf[1] = data;  
 316:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1, slv_addr << 1, &i2c_buf, 2, 10);
  41              		.loc 1 316 0
  42 0004 0A23     		movs	r3, #10
 314:Src/main.c    ****   i2c_buf[1] = data;  
  43              		.loc 1 314 0
  44 0006 8DF80C10 		strb	r1, [sp, #12]
 315:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1, slv_addr << 1, &i2c_buf, 2, 10);
  45              		.loc 1 315 0
  46 000a 8DF80D20 		strb	r2, [sp, #13]
  47              		.loc 1 316 0
  48 000e 4100     		lsls	r1, r0, #1
  49              	.LVL1:
  50 0010 0093     		str	r3, [sp]
  51 0012 03AA     		add	r2, sp, #12
  52              	.LVL2:
  53 0014 0223     		movs	r3, #2
  54 0016 0348     		ldr	r0, .L4
  55              	.LVL3:
  56 0018 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
  57              	.LVL4:
 317:Src/main.c    **** }
  58              		.loc 1 317 0
  59 001c 05B0     		add	sp, sp, #20
  60              	.LCFI2:
  61              		.cfi_def_cfa_offset 4
  62              		@ sp needed
  63 001e 5DF804FB 		ldr	pc, [sp], #4
  64              	.L5:
  65 0022 00BF     		.align	2
  66              	.L4:
  67 0024 00000000 		.word	hi2c1
  68              		.cfi_endproc
  69              	.LFE126:
  71              		.section	.text.ADXL345_RegRead_1byte,"ax",%progbits
  72              		.align	1
  73              		.p2align 2,,3
  74              		.global	ADXL345_RegRead_1byte
  75              		.syntax unified
  76              		.thumb
  77              		.thumb_func
  78              		.fpu fpv4-sp-d16
  80              	ADXL345_RegRead_1byte:
  81              	.LFB127:
 318:Src/main.c    **** 
 319:Src/main.c    **** int8_t ADXL345_RegRead_1byte(uint8_t slv_addr, uint8_t addr){
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 8


  82              		.loc 1 319 0
  83              		.cfi_startproc
  84              		@ args = 0, pretend = 0, frame = 16
  85              		@ frame_needed = 0, uses_anonymous_args = 0
  86              	.LVL5:
  87 0000 70B5     		push	{r4, r5, r6, lr}
  88              	.LCFI3:
  89              		.cfi_def_cfa_offset 16
  90              		.cfi_offset 4, -16
  91              		.cfi_offset 5, -12
  92              		.cfi_offset 6, -8
  93              		.cfi_offset 14, -4
  94 0002 86B0     		sub	sp, sp, #24
  95              	.LCFI4:
  96              		.cfi_def_cfa_offset 40
  97              		.loc 1 319 0
  98 0004 06AA     		add	r2, sp, #24
 320:Src/main.c    ****   uint8_t data;
 321:Src/main.c    ****   HAL_I2C_Master_Transmit(&hi2c1, slv_addr << 1, &addr, 1, 10);
  99              		.loc 1 321 0
 100 0006 0B4C     		ldr	r4, .L8
 319:Src/main.c    ****   uint8_t data;
 101              		.loc 1 319 0
 102 0008 02F8091D 		strb	r1, [r2, #-9]!
 103              		.loc 1 321 0
 104 000c 4500     		lsls	r5, r0, #1
 105 000e 0A26     		movs	r6, #10
 106 0010 2946     		mov	r1, r5
 107              	.LVL6:
 108 0012 2046     		mov	r0, r4
 109              	.LVL7:
 110 0014 0096     		str	r6, [sp]
 111 0016 0123     		movs	r3, #1
 112 0018 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 113              	.LVL8:
 322:Src/main.c    ****   HAL_I2C_Master_Receive(&hi2c1, slv_addr << 1, &data, 1, 10);
 114              		.loc 1 322 0
 115 001c 0096     		str	r6, [sp]
 116 001e 2946     		mov	r1, r5
 117 0020 2046     		mov	r0, r4
 118 0022 0123     		movs	r3, #1
 119 0024 0DF11702 		add	r2, sp, #23
 120 0028 FFF7FEFF 		bl	HAL_I2C_Master_Receive
 121              	.LVL9:
 323:Src/main.c    ****   return data;
 324:Src/main.c    **** }
 122              		.loc 1 324 0
 123 002c 9DF91700 		ldrsb	r0, [sp, #23]
 124 0030 06B0     		add	sp, sp, #24
 125              	.LCFI5:
 126              		.cfi_def_cfa_offset 16
 127              		@ sp needed
 128 0032 70BD     		pop	{r4, r5, r6, pc}
 129              	.L9:
 130              		.align	2
 131              	.L8:
 132 0034 00000000 		.word	hi2c1
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 9


 133              		.cfi_endproc
 134              	.LFE127:
 136              		.section	.text.draw_indicators,"ax",%progbits
 137              		.align	1
 138              		.p2align 2,,3
 139              		.global	draw_indicators
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu fpv4-sp-d16
 145              	draw_indicators:
 146              	.LFB128:
 325:Src/main.c    **** 
 326:Src/main.c    **** 
 327:Src/main.c    **** /* USER CODE END PV */
 328:Src/main.c    **** 
 329:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 330:Src/main.c    **** void SystemClock_Config(void);
 331:Src/main.c    **** 
 332:Src/main.c    **** /* USER CODE BEGIN PFP */
 333:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
 334:Src/main.c    **** 
 335:Src/main.c    **** /* USER CODE END PFP */
 336:Src/main.c    **** 
 337:Src/main.c    **** /* USER CODE BEGIN 0 */
 338:Src/main.c    **** void draw_indicators(){
 147              		.loc 1 338 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151              	.LVL10:
 152 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 153              	.LCFI6:
 154              		.cfi_def_cfa_offset 20
 155              		.cfi_offset 4, -20
 156              		.cfi_offset 5, -16
 157              		.cfi_offset 6, -12
 158              		.cfi_offset 7, -8
 159              		.cfi_offset 14, -4
 339:Src/main.c    ****   uint8_t n;
 340:Src/main.c    ****   uint8_t x, y;
 341:Src/main.c    ****   // draw indicators
 342:Src/main.c    ****   for( n=0; n<N_idct; n++ ){
 343:Src/main.c    **** 	  draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_status[n
 160              		.loc 1 343 0
 161 0002 0D4D     		ldr	r5, .L12
 162 0004 0D4C     		ldr	r4, .L12+4
 338:Src/main.c    ****   uint8_t n;
 163              		.loc 1 338 0
 164 0006 85B0     		sub	sp, sp, #20
 165              	.LCFI7:
 166              		.cfi_def_cfa_offset 40
 167              		.loc 1 343 0
 168 0008 0127     		movs	r7, #1
 169 000a 0926     		movs	r6, #9
 170 000c 0294     		str	r4, [sp, #8]
 171 000e 2846     		mov	r0, r5
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 10


 172 0010 CDE90067 		strd	r6, r7, [sp]
 173 0014 1B23     		movs	r3, #27
 174 0016 3522     		movs	r2, #53
 175 0018 4821     		movs	r1, #72
 176 001a 0534     		adds	r4, r4, #5
 177 001c FFF7FEFF 		bl	draw_IndicatorBox
 178              	.LVL11:
 179 0020 CDE90174 		strd	r7, r4, [sp, #4]
 180 0024 0096     		str	r6, [sp]
 181 0026 2846     		mov	r0, r5
 182 0028 1B23     		movs	r3, #27
 183 002a 3522     		movs	r2, #53
 184 002c 6521     		movs	r1, #101
 185 002e FFF7FEFF 		bl	draw_IndicatorBox
 186              	.LVL12:
 344:Src/main.c    ****   }
 345:Src/main.c    **** }
 187              		.loc 1 345 0
 188 0032 05B0     		add	sp, sp, #20
 189              	.LCFI8:
 190              		.cfi_def_cfa_offset 20
 191              		@ sp needed
 192 0034 F0BD     		pop	{r4, r5, r6, r7, pc}
 193              	.L13:
 194 0036 00BF     		.align	2
 195              	.L12:
 196 0038 00000000 		.word	u8g2
 197 003c 00000000 		.word	.LANCHOR0
 198              		.cfi_endproc
 199              	.LFE128:
 201              		.section	.text.draw_MeasLabels,"ax",%progbits
 202              		.align	1
 203              		.p2align 2,,3
 204              		.global	draw_MeasLabels
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu fpv4-sp-d16
 210              	draw_MeasLabels:
 211              	.LFB129:
 346:Src/main.c    **** 
 347:Src/main.c    **** void draw_MeasLabels(){
 212              		.loc 1 347 0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216              	.LVL13:
 217 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 218              	.LCFI9:
 219              		.cfi_def_cfa_offset 20
 220              		.cfi_offset 4, -20
 221              		.cfi_offset 5, -16
 222              		.cfi_offset 6, -12
 223              		.cfi_offset 7, -8
 224              		.cfi_offset 14, -4
 348:Src/main.c    ****   uint8_t n;
 349:Src/main.c    ****   uint8_t x, y;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 11


 350:Src/main.c    ****   // draw measurements label & unit
 351:Src/main.c    ****   for( n=0; n<3; n++ ){
 352:Src/main.c    **** 	  x = meas_x;
 353:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 354:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width1, meas_height, meas_name[n], meas_unit[n]);
 225              		.loc 1 354 0
 226 0002 334C     		ldr	r4, .L16
 227 0004 334E     		ldr	r6, .L16+4
 228 0006 344F     		ldr	r7, .L16+8
 347:Src/main.c    ****   uint8_t n;
 229              		.loc 1 347 0
 230 0008 87B0     		sub	sp, sp, #28
 231              	.LCFI10:
 232              		.cfi_def_cfa_offset 48
 233              		.loc 1 354 0
 234 000a 0C25     		movs	r5, #12
 235 000c 0297     		str	r7, [sp, #8]
 236 000e 2046     		mov	r0, r4
 237 0010 CDE90056 		strd	r5, r6, [sp]
 238 0014 4623     		movs	r3, #70
 239 0016 1022     		movs	r2, #16
 240 0018 0021     		movs	r1, #0
 241 001a FFF7FEFF 		bl	draw_MeasLabelUnit
 242              	.LVL14:
 243 001e 7A1D     		adds	r2, r7, #5
 244 0020 F31D     		adds	r3, r6, #7
 245 0022 CDE90132 		strd	r3, r2, [sp, #4]
 246 0026 2046     		mov	r0, r4
 247 0028 0095     		str	r5, [sp]
 248 002a 4623     		movs	r3, #70
 249 002c 1C22     		movs	r2, #28
 250 002e 0021     		movs	r1, #0
 251 0030 FFF7FEFF 		bl	draw_MeasLabelUnit
 252              	.LVL15:
 253 0034 07F10A02 		add	r2, r7, #10
 254 0038 06F10E03 		add	r3, r6, #14
 255 003c CDE90132 		strd	r3, r2, [sp, #4]
 256 0040 2046     		mov	r0, r4
 257 0042 0095     		str	r5, [sp]
 258 0044 4623     		movs	r3, #70
 259 0046 2822     		movs	r2, #40
 260 0048 0021     		movs	r1, #0
 261 004a FFF7FEFF 		bl	draw_MeasLabelUnit
 262              	.LVL16:
 355:Src/main.c    ****   }
 356:Src/main.c    ****   for( n=3; n<N_meas; n++ ){
 357:Src/main.c    **** 	  x = meas_width1 + meas_x + meas_x_offset;
 358:Src/main.c    **** 	  y = (n % 3) * meas_height	+ meas_y;
 359:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width2, meas_height, meas_name[n], meas_unit[n]);
 263              		.loc 1 359 0
 264 004e 07F10F02 		add	r2, r7, #15
 265 0052 06F11503 		add	r3, r6, #21
 266 0056 CDE90132 		strd	r3, r2, [sp, #4]
 267 005a 2046     		mov	r0, r4
 268 005c 0095     		str	r5, [sp]
 269 005e 3823     		movs	r3, #56
 270 0060 1022     		movs	r2, #16
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 12


 271 0062 4821     		movs	r1, #72
 272 0064 FFF7FEFF 		bl	draw_MeasLabelUnit
 273              	.LVL17:
 274 0068 07F11402 		add	r2, r7, #20
 275 006c 06F11C03 		add	r3, r6, #28
 276 0070 CDE90132 		strd	r3, r2, [sp, #4]
 277 0074 2046     		mov	r0, r4
 278 0076 0095     		str	r5, [sp]
 279 0078 3823     		movs	r3, #56
 280 007a 1C22     		movs	r2, #28
 281 007c 4821     		movs	r1, #72
 282 007e 1937     		adds	r7, r7, #25
 283 0080 2336     		adds	r6, r6, #35
 284 0082 FFF7FEFF 		bl	draw_MeasLabelUnit
 285              	.LVL18:
 286 0086 CDE90167 		strd	r6, r7, [sp, #4]
 287 008a 2046     		mov	r0, r4
 288 008c 0095     		str	r5, [sp]
 289 008e 3823     		movs	r3, #56
 290 0090 2822     		movs	r2, #40
 291 0092 4821     		movs	r1, #72
 292 0094 FFF7FEFF 		bl	draw_MeasLabelUnit
 293              	.LVL19:
 360:Src/main.c    ****   }
 361:Src/main.c    **** 
 362:Src/main.c    ****   // Fuel Pump voltage & duty
 363:Src/main.c    ****   draw_MeasLabelUnit(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, "DUTY", "%  ");
 294              		.loc 1 363 0
 295 0098 104E     		ldr	r6, .L16+12
 296 009a 114B     		ldr	r3, .L16+16
 297 009c 0095     		str	r5, [sp]
 298 009e 2046     		mov	r0, r4
 299 00a0 CDE90136 		strd	r3, r6, [sp, #4]
 300 00a4 3422     		movs	r2, #52
 301 00a6 4623     		movs	r3, #70
 302 00a8 0021     		movs	r1, #0
 303 00aa FFF7FEFF 		bl	draw_MeasLabelUnit
 304              	.LVL20:
 364:Src/main.c    ****   draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, 100, 3, 0, 0, "%  ");
 305              		.loc 1 364 0
 306 00ae 0021     		movs	r1, #0
 307 00b0 0322     		movs	r2, #3
 308 00b2 6423     		movs	r3, #100
 309 00b4 CDE90132 		strd	r3, r2, [sp, #4]
 310 00b8 0596     		str	r6, [sp, #20]
 311 00ba 0095     		str	r5, [sp]
 312 00bc 2046     		mov	r0, r4
 313 00be CDE90311 		strd	r1, r1, [sp, #12]
 314 00c2 4623     		movs	r3, #70
 315 00c4 3422     		movs	r2, #52
 316 00c6 FFF7FEFF 		bl	draw_Value
 317              	.LVL21:
 365:Src/main.c    **** }
 318              		.loc 1 365 0
 319 00ca 07B0     		add	sp, sp, #28
 320              	.LCFI11:
 321              		.cfi_def_cfa_offset 20
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 13


 322              		@ sp needed
 323 00cc F0BD     		pop	{r4, r5, r6, r7, pc}
 324              	.L17:
 325 00ce 00BF     		.align	2
 326              	.L16:
 327 00d0 00000000 		.word	u8g2
 328 00d4 00000000 		.word	.LANCHOR2
 329 00d8 00000000 		.word	.LANCHOR1
 330 00dc 00000000 		.word	.LC0
 331 00e0 04000000 		.word	.LC1
 332              		.cfi_endproc
 333              	.LFE129:
 335              		.section	.text.draw_MeasLabels_Rotary,"ax",%progbits
 336              		.align	1
 337              		.p2align 2,,3
 338              		.global	draw_MeasLabels_Rotary
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 342              		.fpu fpv4-sp-d16
 344              	draw_MeasLabels_Rotary:
 345              	.LFB130:
 366:Src/main.c    **** 
 367:Src/main.c    **** void draw_MeasLabels_Rotary(){
 346              		.loc 1 367 0
 347              		.cfi_startproc
 348              		@ args = 0, pretend = 0, frame = 0
 349              		@ frame_needed = 0, uses_anonymous_args = 0
 350              	.LVL22:
 351 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 352              	.LCFI12:
 353              		.cfi_def_cfa_offset 24
 354              		.cfi_offset 4, -24
 355              		.cfi_offset 5, -20
 356              		.cfi_offset 6, -16
 357              		.cfi_offset 7, -12
 358              		.cfi_offset 8, -8
 359              		.cfi_offset 14, -4
 360 0004 0D4E     		ldr	r6, .L22
 361 0006 0E4D     		ldr	r5, .L22+4
 368:Src/main.c    ****   uint8_t n;
 369:Src/main.c    ****   uint8_t x, y;
 370:Src/main.c    ****   // draw measurements label & unit
 371:Src/main.c    ****   for( n=0; n<4; n++ ){
 372:Src/main.c    **** 	  x = meas_x;
 373:Src/main.c    **** 	  y = (n % 4) * meas_height	+ meas_y;
 374:Src/main.c    **** 	  draw_MeasLabelUnit(&u8g2, x, y, meas_width1, meas_height, meas_name[n], meas_unit[n]);
 362              		.loc 1 374 0
 363 0008 DFF83880 		ldr	r8, .L22+8
 367:Src/main.c    ****   uint8_t n;
 364              		.loc 1 367 0
 365 000c 84B0     		sub	sp, sp, #16
 366              	.LCFI13:
 367              		.cfi_def_cfa_offset 40
 367:Src/main.c    ****   uint8_t n;
 368              		.loc 1 367 0
 369 000e 1024     		movs	r4, #16
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 14


 370              		.loc 1 374 0
 371 0010 0C27     		movs	r7, #12
 372              	.LVL23:
 373              	.L19:
 374              		.loc 1 374 0 is_stmt 0 discriminator 3
 375 0012 2246     		mov	r2, r4
 376 0014 0C34     		adds	r4, r4, #12
 377              	.LVL24:
 378 0016 CDE90165 		strd	r6, r5, [sp, #4]
 379 001a 0097     		str	r7, [sp]
 380 001c 4623     		movs	r3, #70
 381 001e 0021     		movs	r1, #0
 382 0020 4046     		mov	r0, r8
 383 0022 E4B2     		uxtb	r4, r4
 384 0024 FFF7FEFF 		bl	draw_MeasLabelUnit
 385              	.LVL25:
 371:Src/main.c    **** 	  x = meas_x;
 386              		.loc 1 371 0 is_stmt 1 discriminator 3
 387 0028 402C     		cmp	r4, #64
 388 002a 06F10706 		add	r6, r6, #7
 389 002e 05F10505 		add	r5, r5, #5
 390 0032 EED1     		bne	.L19
 375:Src/main.c    ****   }
 376:Src/main.c    **** }
 391              		.loc 1 376 0
 392 0034 04B0     		add	sp, sp, #16
 393              	.LCFI14:
 394              		.cfi_def_cfa_offset 24
 395              		@ sp needed
 396 0036 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 397              	.L23:
 398 003a 00BF     		.align	2
 399              	.L22:
 400 003c 00000000 		.word	.LANCHOR2
 401 0040 00000000 		.word	.LANCHOR1
 402 0044 00000000 		.word	u8g2
 403              		.cfi_endproc
 404              	.LFE130:
 406              		.section	.text.HAL_ADC_ConvCpltCallback,"ax",%progbits
 407              		.align	1
 408              		.p2align 2,,3
 409              		.global	HAL_ADC_ConvCpltCallback
 410              		.syntax unified
 411              		.thumb
 412              		.thumb_func
 413              		.fpu fpv4-sp-d16
 415              	HAL_ADC_ConvCpltCallback:
 416              	.LFB131:
 377:Src/main.c    **** 
 378:Src/main.c    **** 
 379:Src/main.c    **** // ADC buffer definition
 380:Src/main.c    **** enum{ ADC_BUFFER_LENGTH = 10 };
 381:Src/main.c    **** uint16_t g_ADCBuffer[ADC_BUFFER_LENGTH];
 382:Src/main.c    **** uint16_t adc[ADC_BUFFER_LENGTH];  
 383:Src/main.c    **** 
 384:Src/main.c    **** void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef* hadc){
 417              		.loc 1 384 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 15


 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421              		@ link register save eliminated.
 422              	.LVL26:
 423 0000 054B     		ldr	r3, .L27
 424 0002 064A     		ldr	r2, .L27+4
 425 0004 03F11400 		add	r0, r3, #20
 426              	.LVL27:
 427              	.L25:
 428              	.LBB31:
 385:Src/main.c    **** 	for (unsigned int i =0; i<ADC_BUFFER_LENGTH; i++){
 386:Src/main.c    **** 	   adc[i] = g_ADCBuffer[i];  // store the values in adc[]
 429              		.loc 1 386 0 discriminator 3
 430 0008 33F8021B 		ldrh	r1, [r3], #2
 431 000c 22F8021B 		strh	r1, [r2], #2	@ movhi
 385:Src/main.c    **** 	for (unsigned int i =0; i<ADC_BUFFER_LENGTH; i++){
 432              		.loc 1 385 0 discriminator 3
 433 0010 8342     		cmp	r3, r0
 434 0012 F9D1     		bne	.L25
 435              	.LBE31:
 387:Src/main.c    **** 	}
 388:Src/main.c    **** }
 436              		.loc 1 388 0
 437 0014 7047     		bx	lr
 438              	.L28:
 439 0016 00BF     		.align	2
 440              	.L27:
 441 0018 00000000 		.word	g_ADCBuffer
 442 001c 00000000 		.word	adc
 443              		.cfi_endproc
 444              	.LFE131:
 446              		.section	.text.SystemClock_Config,"ax",%progbits
 447              		.align	1
 448              		.p2align 2,,3
 449              		.global	SystemClock_Config
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 453              		.fpu fpv4-sp-d16
 455              	SystemClock_Config:
 456              	.LFB133:
 389:Src/main.c    **** 
 390:Src/main.c    **** /* USER CODE END 0 */
 391:Src/main.c    **** 
 392:Src/main.c    **** int main(void)
 393:Src/main.c    **** {
 394:Src/main.c    **** 
 395:Src/main.c    ****   /* USER CODE BEGIN 1 */
 396:Src/main.c    **** 
 397:Src/main.c    ****   /* USER CODE END 1 */
 398:Src/main.c    **** 
 399:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
 400:Src/main.c    **** 
 401:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 402:Src/main.c    ****   HAL_Init();
 403:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 16


 404:Src/main.c    ****   /* USER CODE BEGIN Init */
 405:Src/main.c    ****   uint8_t n;
 406:Src/main.c    ****   uint8_t x, y;
 407:Src/main.c    **** 
 408:Src/main.c    ****   uint8_t a = 0; // for dummy data
 409:Src/main.c    ****   uint8_t b = 0; // for dummy data
 410:Src/main.c    **** 
 411:Src/main.c    ****   // ROTARY
 412:Src/main.c    ****   uint16_t rpm_integral;
 413:Src/main.c    ****   uint8_t index_animation;
 414:Src/main.c    **** 
 415:Src/main.c    ****   // circular buffer for ADC data
 416:Src/main.c    ****   uint16_t circular_buffer_index = 0;
 417:Src/main.c    ****   int16_t circular_buffer[128]={};
 418:Src/main.c    **** 
 419:Src/main.c    ****   /* USER CODE END Init */
 420:Src/main.c    **** 
 421:Src/main.c    ****   /* Configure the system clock */
 422:Src/main.c    ****   SystemClock_Config();
 423:Src/main.c    **** 
 424:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 425:Src/main.c    **** 
 426:Src/main.c    ****   /* USER CODE END SysInit */
 427:Src/main.c    **** 
 428:Src/main.c    ****   /* Initialize all configured peripherals */
 429:Src/main.c    ****   MX_GPIO_Init();
 430:Src/main.c    ****   MX_DMA_Init();
 431:Src/main.c    ****   MX_ADC1_Init();
 432:Src/main.c    ****   MX_CAN_Init();
 433:Src/main.c    ****   MX_I2C1_Init();
 434:Src/main.c    ****   MX_SPI1_Init();
 435:Src/main.c    ****   MX_TIM1_Init();
 436:Src/main.c    ****   MX_TIM2_Init();
 437:Src/main.c    ****   MX_TIM3_Init();
 438:Src/main.c    ****   MX_TIM6_Init();
 439:Src/main.c    ****   MX_USART1_UART_Init();
 440:Src/main.c    ****   MX_USART2_UART_Init();
 441:Src/main.c    **** 
 442:Src/main.c    ****   /* USER CODE BEGIN 2 */
 443:Src/main.c    **** 
 444:Src/main.c    ****   ///// PWM initialize ----------------------------------------------------------------
 445:Src/main.c    **** 
 446:Src/main.c    ****   ///// Timer /////
 447:Src/main.c    ****   // TIM1 - PWM for Fuel Pump Driver (Cycle 100kHz = 1MHz / 100count)
 448:Src/main.c    ****   /*
 449:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim1) != HAL_OK)
 450:Src/main.c    ****   {
 451:Src/main.c    ****     Error_Handler();
 452:Src/main.c    ****   }
 453:Src/main.c    ****   */
 454:Src/main.c    ****   // Start Timer1 / ch1
 455:Src/main.c    ****   if (HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1) != HAL_OK)
 456:Src/main.c    ****   {
 457:Src/main.c    ****     Error_Handler();
 458:Src/main.c    ****   }
 459:Src/main.c    **** 
 460:Src/main.c    ****   // TIM2 - display (Cycle 20ms = 1/100kHz x 2,000count)
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 17


 461:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim2) != HAL_OK)
 462:Src/main.c    ****   {
 463:Src/main.c    ****     Error_Handler();
 464:Src/main.c    ****   }
 465:Src/main.c    **** 
 466:Src/main.c    ****   // TIM3 - Pulse counter for Tacho (f 200kHz, count 65535)
 467:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim3) != HAL_OK)
 468:Src/main.c    ****   {
 469:Src/main.c    ****     Error_Handler();
 470:Src/main.c    ****   }
 471:Src/main.c    **** 
 472:Src/main.c    ****   // TIM6 - SW interrupt control (Cycle 100ms = 1/100kHz x 10,000count)
 473:Src/main.c    ****   if (HAL_TIM_Base_Start_IT(&htim6) != HAL_OK)
 474:Src/main.c    ****   {
 475:Src/main.c    ****     Error_Handler();
 476:Src/main.c    ****   }
 477:Src/main.c    **** 
 478:Src/main.c    ****   // ADC
 479:Src/main.c    ****   HAL_ADC_Start_DMA(&hadc1, g_ADCBuffer, ADC_BUFFER_LENGTH);
 480:Src/main.c    **** 
 481:Src/main.c    ****   // UART1 interrupt setup for DEFI decoder
 482:Src/main.c    ****   HAL_UART_Receive_IT(&huart1, &UART1_Data, 1);
 483:Src/main.c    ****   // variables is defined in 'defi.h'
 484:Src/main.c    **** 
 485:Src/main.c    **** 
 486:Src/main.c    ****   // OLED diaplay initialization
 487:Src/main.c    ****   u8g2_Setup_ssd1309_128x64_noname2_f(&u8g2, U8G2_R0, u8x8_byte_4wire_hw_spi, u8x8_gpio_and_delay_S
 488:Src/main.c    **** 
 489:Src/main.c    ****   // OLED display Reset (must be more than 3us!!)
 490:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 0); // Set RES=L (OLED Reset)
 491:Src/main.c    ****   HAL_Delay(5);
 492:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 493:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 494:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 495:Src/main.c    ****   u8g2_SetContrast(&u8g2, 255); // set contrast
 496:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 497:Src/main.c    **** 
 498:Src/main.c    ****   // draw opening
 499:Src/main.c    ****   u8g2_DrawXBMP(&u8g2, 40, 0, logo_width, logo_height, logo_bits );
 500:Src/main.c    **** 
 501:Src/main.c    ****   u8g2_SetFont(&u8g2, u8g2_font_5x7_tf);
 502:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 503:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.2a");
 504:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 505:Src/main.c    **** 
 506:Src/main.c    ****   HAL_Delay(1000);
 507:Src/main.c    **** 
 508:Src/main.c    ****   u8g2_ClearBuffer(&u8g2);
 509:Src/main.c    **** 
 510:Src/main.c    ****   HAL_UART_Transmit_printf(&huart2, "Hello. This is MFM.\n");
 511:Src/main.c    **** 
 512:Src/main.c    ****   // Set PWM Duty for Timer1 / Output1 (Asymmetric PWM2)
 513:Src/main.c    ****   TIM1->CCR1 = (100 - FP_duty);
 514:Src/main.c    **** 
 515:Src/main.c    ****   /* Infinite loop */
 516:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 517:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 18


 518:Src/main.c    ****   draw_MeasLabels();
 519:Src/main.c    ****   draw_indicators();
 520:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 521:Src/main.c    **** 
 522:Src/main.c    **** 
 523:Src/main.c    ****   // I2C communication to ADXL345(3-axis G-sensor)
 524:Src/main.c    **** 
 525:Src/main.c    ****   // DEIVID
 526:Src/main.c    ****   a = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x00);
 527:Src/main.c    ****   HAL_UART_Transmit_printf(&huart2, "ADXL324 DEVID %d\n", a); // debug
 528:Src/main.c    ****   if( a == 0xE5 ){
 529:Src/main.c    ****     Gsens_EN = 1;
 530:Src/main.c    ****   }else{
 531:Src/main.c    ****     Gsens_EN = 0;
 532:Src/main.c    ****   }
 533:Src/main.c    **** 
 534:Src/main.c    ****   // POWER_CTL
 535:Src/main.c    ****   ADXL345_RegWrite(ADXL0_ADDR, 0x2D, 0x08);
 536:Src/main.c    ****   // bit 3    Measure   1'b1
 537:Src/main.c    ****   a = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x2D); // Check
 538:Src/main.c    **** 
 539:Src/main.c    ****   // DATA_FORMAT
 540:Src/main.c    ****   ADXL345_RegWrite(ADXL0_ADDR, 0x31, 0x05);
 541:Src/main.c    ****   // bit 2    Justify   1'b1
 542:Src/main.c    ****   // bit 1:0  Range     2'b01
 543:Src/main.c    ****   a = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x31); // Check "POWER_CTL"
 544:Src/main.c    **** 
 545:Src/main.c    ****   /* USER CODE END 2 */
 546:Src/main.c    **** 
 547:Src/main.c    ****   /* Infinite loop */
 548:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 549:Src/main.c    **** 
 550:Src/main.c    ****   draw_MeasLabels();
 551:Src/main.c    ****   draw_indicators();
 552:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 553:Src/main.c    **** 
 554:Src/main.c    **** 
 555:Src/main.c    ****   // I2C communication to ADXL345(3-axis G-sensor)
 556:Src/main.c    **** 
 557:Src/main.c    ****   // DEIVID
 558:Src/main.c    ****   a = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x00);
 559:Src/main.c    ****   HAL_UART_Transmit_printf(&huart2, "ADXL324 DEVID %d\n", a); // debug
 560:Src/main.c    ****   if( a == 0xE5 ){
 561:Src/main.c    ****     Gsens_EN = 1;
 562:Src/main.c    ****   }else{
 563:Src/main.c    ****     Gsens_EN = 0;
 564:Src/main.c    ****   }
 565:Src/main.c    **** 
 566:Src/main.c    ****   // POWER_CTL
 567:Src/main.c    ****   ADXL345_RegWrite(ADXL0_ADDR, 0x2D, 0x08);
 568:Src/main.c    ****   // bit 3    Measure   1'b1
 569:Src/main.c    ****   a = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x2D); // Check
 570:Src/main.c    **** 
 571:Src/main.c    ****   // DATA_FORMAT
 572:Src/main.c    ****   ADXL345_RegWrite(ADXL0_ADDR, 0x31, 0x05);
 573:Src/main.c    ****   // bit 2    Justify   1'b1
 574:Src/main.c    ****   // bit 1:0  Range     2'b01
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 19


 575:Src/main.c    ****   a = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x31); // Check "POWER_CTL"
 576:Src/main.c    **** 
 577:Src/main.c    ****   /* USER CODE END 2 */
 578:Src/main.c    **** 
 579:Src/main.c    ****   while(1)
 580:Src/main.c    ****   {
 581:Src/main.c    ****   /* USER CODE END WHILE */
 582:Src/main.c    **** 
 583:Src/main.c    ****   /* USER CODE BEGIN 3 */
 584:Src/main.c    **** 
 585:Src/main.c    ****     ///// ADC ----------------------------------------------------------------
 586:Src/main.c    **** 
 587:Src/main.c    **** 		// read O2 sensor ADC output
 588:Src/main.c    **** //		O2_volt = (int16_t)(330 * (float)g_ADCBuffer[0]/255);
 589:Src/main.c    **** 		O2_volt = (int16_t)(330 * (float)adc[0]/255);
 590:Src/main.c    **** 
 591:Src/main.c    **** 		// read Fuel Pump Voltage ADC output
 592:Src/main.c    **** //		FP_volt = (int16_t)((165/33)*33*(float)g_ADCBuffer[1]/255);
 593:Src/main.c    **** 		FP_volt = (int16_t)((165/33)*33*(float)adc[1]/255);
 594:Src/main.c    ****     // Ressister attenation ratio '165/33'
 595:Src/main.c    ****     
 596:Src/main.c    ****     ///// Fuel Pump ----------------------------------------------------------------
 597:Src/main.c    ****     // Duty calculation
 598:Src/main.c    ****     if( (rpm >= 3000)|(DEFI_value[0] >= 0) ){
 599:Src/main.c    ****       FP_duty = 100;
 600:Src/main.c    ****     }else{
 601:Src/main.c    ****       FP_duty = (int16_t)(rpm/3000*100);
 602:Src/main.c    ****     }
 603:Src/main.c    ****     // Saturation process
 604:Src/main.c    ****     if( FP_duty > 100 ){
 605:Src/main.c    ****       FP_duty = 100;
 606:Src/main.c    ****     }else if( FP_duty < 60 ){
 607:Src/main.c    ****       FP_duty = 60;
 608:Src/main.c    ****     }
 609:Src/main.c    **** 
 610:Src/main.c    ****     ///// Measure data  ----------------------------------------------------------------
 611:Src/main.c    ****     defi_decoder(UART1_RxData); // DEFI decoder
 612:Src/main.c    **** 
 613:Src/main.c    ****     if( flag_meas == 1 ){
 614:Src/main.c    **** 
 615:Src/main.c    ****       // I2C communication to ADXL345(3-axis G-sensor)
 616:Src/main.c    ****       if( Gsens_EN == 1 ){
 617:Src/main.c    ****         /*
 618:Src/main.c    ****         // Justify = 0
 619:Src/main.c    ****         Gsens_X1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x33); // Check "DATAX1" (MSB side)
 620:Src/main.c    ****         Gsens_X0 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x32); // Check "DATAX0" (LSB side)
 621:Src/main.c    ****         Gsens_X = (Gsens_X1<<8) | Gsens_X0;
 622:Src/main.c    ****         Gsens_Y1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x35); // Check "DATAY1" (MSB side)
 623:Src/main.c    ****         Gsens_Y0 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x34); // Check "DATAY0" (LSB side)
 624:Src/main.c    ****         Gsens_Y = (Gsens_Y1<<8) | Gsens_Y0;
 625:Src/main.c    ****         Gsens_Z1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x37); // Check "DATAZ1" (MSB side)
 626:Src/main.c    ****         Gsens_Z0 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x36); // Check "DATAZ0" (LSB side)
 627:Src/main.c    ****         Gsens_Z = (Gsens_Z1<<8) | Gsens_Z0;
 628:Src/main.c    ****         HAL_UART_Transmit_printf(&huart2, "(%d,%d,%d)\n", Gsens_X, Gsens_Y, Gsens_Z); // debug
 629:Src/main.c    ****         */
 630:Src/main.c    **** 
 631:Src/main.c    ****         // Justify = 1
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 20


 632:Src/main.c    ****         Gsens_X1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x33); // Check "DATAX1" (MSB side)
 633:Src/main.c    ****         Gsens_Y1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x35); // Check "DATAY1" (MSB side)
 634:Src/main.c    ****         Gsens_Z1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x37); // Check "DATAZ1" (MSB side)
 635:Src/main.c    ****         // Acceration 1G = 100
 636:Src/main.c    ****         Gsens_X = 400 * (int8_t)Gsens_X1 / 128; // unsigned->signed & scaling
 637:Src/main.c    ****         Gsens_Y = 400 * (int8_t)Gsens_Y1 / 128; // unsigned->signed & scaling
 638:Src/main.c    ****         Gsens_Z = 400 * (int8_t)Gsens_Z1 / 128; // unsigned->signed & scaling
 639:Src/main.c    **** 
 640:Src/main.c    ****         HAL_UART_Transmit_printf(&huart2, "(%d,%d,%d)\n", Gsens_X, Gsens_Y, Gsens_Z); // debug
 641:Src/main.c    ****         
 642:Src/main.c    **** 
 643:Src/main.c    ****         /*
 644:Src/main.c    ****         ADXL345_G_struct ADXL345_G_data = ADXL345_Read_G(ADXL0_ADDR);
 645:Src/main.c    ****         HAL_UART_Transmit_printf(&huart2, "(%d,%d,%d)\n", ADXL345_G_data.X, ADXL345_G_data.Y, ADXL3
 646:Src/main.c    ****         */
 647:Src/main.c    ****       }
 648:Src/main.c    **** 
 649:Src/main.c    **** 
 650:Src/main.c    **** /*
 651:Src/main.c    ****   	  // start of create dummy data for debug
 652:Src/main.c    ****       if( rpm <= 8200 ){
 653:Src/main.c    ****           rpm = rpm + (int)(20*MT[gear]);
 654:Src/main.c    ****           //rpm=rpm+10;
 655:Src/main.c    ****       }else{
 656:Src/main.c    ****         if( gear < 4 ){
 657:Src/main.c    ****           gear++;
 658:Src/main.c    ****           rpm = (double)speed / (0.002*60.0) * (MT[gear]*4.1);
 659:Src/main.c    ****         }else{
 660:Src/main.c    ****           gear = 0;
 661:Src/main.c    ****           rpm = 1000;
 662:Src/main.c    ****         }
 663:Src/main.c    ****       }
 664:Src/main.c    ****       speed = (double)rpm*0.002*60.0/MT[gear]/4.1;
 665:Src/main.c    **** 
 666:Src/main.c    ****       if( a >= 150){
 667:Src/main.c    ****         a = 0;
 668:Src/main.c    ****       }else{
 669:Src/main.c    ****         a++;
 670:Src/main.c    ****       }
 671:Src/main.c    ****   	  // end of create dummy data for debug
 672:Src/main.c    **** */
 673:Src/main.c    ****       meas_value[0] = DEFI_value[0];  // MAP
 674:Src/main.c    **** 		  meas_value[1] = DEFI_value[2];  // OILP
 675:Src/main.c    **** 			meas_value[2] = FP_volt;        // FuelPump Voltage
 676:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 677:Src/main.c    **** 			meas_value[4] = DEFI_value[5];  // OILT
 678:Src/main.c    **** 		  meas_value[5] = O2_volt;        // O2
 679:Src/main.c    **** 
 680:Src/main.c    ****       flag_meas = 0; // enable again by TIM2 interrupt
 681:Src/main.c    ****     }
 682:Src/main.c    **** 
 683:Src/main.c    ****     ///// FP driver ----------------------------------------------------------------
 684:Src/main.c    ****     // Set PWM Duty for Timer1 / Output1 (Asymmetric PWM2)
 685:Src/main.c    ****     TIM1->CCR1 = (100 - FP_duty);
 686:Src/main.c    **** 
 687:Src/main.c    ****     ///// Switch ----------------------------------------------------------------
 688:Src/main.c    ****     if( flag_sw != 0 ){
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 21


 689:Src/main.c    ****       switch( flag_sw ){
 690:Src/main.c    ****         case 1:
 691:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "UP ");
 692:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 693:Src/main.c    ****           // SW "UP"
 694:Src/main.c    ****           if( setting == 0 ){
 695:Src/main.c    ****             if( mode == N_mode-1 ){
 696:Src/main.c    ****               mode = 0;
 697:Src/main.c    ****             }else{
 698:Src/main.c    ****               mode++;
 699:Src/main.c    ****             }
 700:Src/main.c    ****           }
 701:Src/main.c    ****           break;
 702:Src/main.c    ****         case 2:
 703:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "DOWN ");
 704:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 705:Src/main.c    ****           // SW "DOWN"
 706:Src/main.c    ****           if( setting == 0 ){
 707:Src/main.c    ****             if( mode == 0 ){
 708:Src/main.c    ****               mode = N_mode-1;
 709:Src/main.c    ****             }else{
 710:Src/main.c    ****               mode--;
 711:Src/main.c    ****             }
 712:Src/main.c    ****           }
 713:Src/main.c    ****           break;
 714:Src/main.c    ****         case 3:
 715:Src/main.c    ****           HAL_UART_Transmit_printf(&huart2, "ENTER ");
 716:Src/main.c    ****           HAL_NVIC_DisableIRQ (EXTI1_IRQn);
 717:Src/main.c    ****           // SW "ENTER"
 718:Src/main.c    **** 
 719:Src/main.c    ****           // if( setting == 0 ){
 720:Src/main.c    ****           //   mode = cursor;
 721:Src/main.c    ****           //   u8g2_ClearBuffer(&u8g2);
 722:Src/main.c    ****           // }else{
 723:Src/main.c    ****           //   mode = 10;
 724:Src/main.c    ****           // }
 725:Src/main.c    ****           // break;
 726:Src/main.c    **** 
 727:Src/main.c    ****         default:
 728:Src/main.c    ****           break;
 729:Src/main.c    ****       }
 730:Src/main.c    ****       u8g2_ClearBuffer(&u8g2);
 731:Src/main.c    ****       if( mode == MODE_BAR_METER ){
 732:Src/main.c    ****         draw_MeasLabels();
 733:Src/main.c    ****         draw_indicators();
 734:Src/main.c    **** 
 735:Src/main.c    ****       }else if( mode == MODE_CIRCULAR_METER ){
 736:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 737:Src/main.c    ****           x = meas_C_x;
 738:Src/main.c    ****           y = n * meas_C_height	+ meas_C_y;
 739:Src/main.c    ****           draw_MeasLabelUnit(&u8g2, x, y, meas_C_width, meas_C_height, meas_name[n], meas_unit[n]);
 740:Src/main.c    ****         }
 741:Src/main.c    ****         // draw indicators
 742:Src/main.c    ****         for( n=0; n<4; n++ ){
 743:Src/main.c    ****           draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_s
 744:Src/main.c    ****         }
 745:Src/main.c    ****         draw_CircularMeter_Init(32, 32, 31, 3, -60, 300, 10, 20, -1, -80, 120);
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 22


 746:Src/main.c    **** //        draw_CircularMeter_Init(26, 26, 26, 3, -60, 300, 10, 20, -1, -80, 120);
 747:Src/main.c    ****         draw_CircularMeter(&u8g2, 0);
 748:Src/main.c    **** /*
 749:Src/main.c    ****       }else if( mode == MODE_ROTARY ){
 750:Src/main.c    ****         draw_MeasLabels_Rotary();
 751:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 2, meas_width1, meas_height, "TACHO", "rpm");
 752:Src/main.c    **** */
 753:Src/main.c    ****       }else if( mode == MODE_SCOPE_MAP ){
 754:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_m
 755:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "MAP", "kPa");
 756:Src/main.c    **** 
 757:Src/main.c    ****       }else if( mode == MODE_SCOPE_Gsens ){
 758:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, -200, 200, 4);
 759:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "LatG", "G");
 760:Src/main.c    **** 
 761:Src/main.c    ****       }
 762:Src/main.c    ****       u8g2_SendBuffer(&u8g2);
 763:Src/main.c    ****       TIM6->CNT = 0;
 764:Src/main.c    ****       flag_sw = 0;
 765:Src/main.c    ****     }
 766:Src/main.c    **** 
 767:Src/main.c    ****     ///// Display sequence ----------------------------------------------------------------
 768:Src/main.c    ****     if( flag_disp ){
 769:Src/main.c    **** 
 770:Src/main.c    ****       ///// multi meter /////
 771:Src/main.c    ****       if( mode == MODE_BAR_METER ){
 772:Src/main.c    ****         // update Fuel Pump Voltage
 773:Src/main.c    ****         draw_Value(&u8g2, FP_x, FP_y, FP_duty_width, FP_height, FP_duty, 3, 0, 0, "%  ");
 774:Src/main.c    **** 
 775:Src/main.c    ****         // draw bar graph
 776:Src/main.c    ****         draw_BarGraph(&u8g2, rpmbar_x, rpmbar_y, rpmbar_width, rpmbar_height, rpm, rpm_min, rpm_max
 777:Src/main.c    **** 
 778:Src/main.c    ****         // draw measurement data
 779:Src/main.c    ****         for( n=0; n<3; n++ ){
 780:Src/main.c    ****           x = meas_x;
 781:Src/main.c    ****           y = (n % 3) * meas_height	+ meas_y;
 782:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac
 783:Src/main.c    ****         }
 784:Src/main.c    ****         for( n=3; n<N_meas; n++ ){
 785:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 786:Src/main.c    ****           y = (n % 3) * meas_height	+ meas_y;
 787:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 788:Src/main.c    ****         }
 789:Src/main.c    ****         
 790:Src/main.c    ****       ///// Circular Meter /////
 791:Src/main.c    ****       }else if( mode == MODE_CIRCULAR_METER ){
 792:Src/main.c    **** 
 793:Src/main.c    ****         draw_CircularMeter(&u8g2, meas_value[0]);
 794:Src/main.c    ****         
 795:Src/main.c    ****         draw_Value(&u8g2, 36, 33, 30, 16, meas_value[0], 3, 2, 1, "");
 796:Src/main.c    ****         draw_MeasUnit(&u8g2, 38, 40, 28, 16, "kPa");
 797:Src/main.c    **** /*        
 798:Src/main.c    ****         draw_Value(&u8g2, 34, 28, 30, 16, meas_value[0], 3, 2, 1, "");
 799:Src/main.c    ****         draw_MeasUnit(&u8g2, 36, 36, 28, 16, "kPa");
 800:Src/main.c    **** */
 801:Src/main.c    **** 
 802:Src/main.c    ****         // draw measurement data
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 23


 803:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 804:Src/main.c    ****           x = meas_C_x;
 805:Src/main.c    ****           y = n * meas_C_height	+ meas_C_y;
 806:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_C_width, meas_C_height, meas_value[n], meas_digit[n], meas_f
 807:Src/main.c    ****         }
 808:Src/main.c    **** 
 809:Src/main.c    **** /*
 810:Src/main.c    ****       }else if( mode == MODE_ROTARY ){
 811:Src/main.c    **** 
 812:Src/main.c    ****         rpm_integral = rpm_integral + rpm;
 813:Src/main.c    ****         if( rpm_integral > 4000 ){
 814:Src/main.c    ****           rpm_integral = rpm_integral - 4000;
 815:Src/main.c    ****         }
 816:Src/main.c    ****         index_animation = (uint8_t)( (float)rpm_integral / 1000.0 );
 817:Src/main.c    **** 
 818:Src/main.c    ****         draw_Rotary(&u8g2, 58, 2, index_animation);
 819:Src/main.c    **** 
 820:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 2, meas_width1, meas_height, "TACHO", "rpm");
 821:Src/main.c    ****         draw_Value(&u8g2, 0, 2, meas_width1, meas_height, rpm, 4, 0, 0, "rpm");
 822:Src/main.c    **** 
 823:Src/main.c    ****         draw_MeasLabels_Rotary();
 824:Src/main.c    ****         // draw measurement data
 825:Src/main.c    ****         for( n=0; n<4; n++ ){
 826:Src/main.c    ****           x = meas_x;
 827:Src/main.c    ****           y = (n % 4) * meas_height	+ meas_y;
 828:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width1, meas_height, meas_value[n], meas_digit[n], meas_frac
 829:Src/main.c    ****         }
 830:Src/main.c    **** */
 831:Src/main.c    **** 
 832:Src/main.c    ****       ///// Scope /////
 833:Src/main.c    ****       }else if( mode == MODE_SCOPE_MAP ){
 834:Src/main.c    **** 
 835:Src/main.c    ****         if( circular_buffer_index > 0 ){
 836:Src/main.c    ****           circular_buffer_index--;
 837:Src/main.c    ****         }else{
 838:Src/main.c    ****           circular_buffer_index = 128;
 839:Src/main.c    ****         }
 840:Src/main.c    ****         circular_buffer[circular_buffer_index] = meas_value[0];
 841:Src/main.c    **** 
 842:Src/main.c    ****         // draw wave
 843:Src/main.c    ****         draw_Wave(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_max, c
 844:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 845:Src/main.c    **** 
 846:Src/main.c    ****       ///// G-Scope /////
 847:Src/main.c    ****       }else if( mode == MODE_SCOPE_Gsens ){
 848:Src/main.c    **** 
 849:Src/main.c    ****         if( circular_buffer_index > 0 ){
 850:Src/main.c    ****           circular_buffer_index--;
 851:Src/main.c    ****         }else{
 852:Src/main.c    ****           circular_buffer_index = 128;
 853:Src/main.c    ****         }
 854:Src/main.c    ****         circular_buffer[circular_buffer_index] = Gsens_Y;
 855:Src/main.c    **** 
 856:Src/main.c    ****         // draw wave
 857:Src/main.c    ****         draw_Wave(&u8g2, wave_x, wave_y, wave_width, wave_height, -200, +200, circular_buffer, circ
 858:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 859:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 24


 860:Src/main.c    ****       // mode setting
 861:Src/main.c    ****       }else if( mode == MODE_SETTING ){
 862:Src/main.c    **** 
 863:Src/main.c    ****         u8g2_ClearBuffer(&u8g2);
 864:Src/main.c    ****         u8g2_SetFont(&u8g2, u8g2_font_7x14B_tf);
 865:Src/main.c    ****         u8g2_DrawStr(&u8g2, 2, 15, "Mode Setting" );
 866:Src/main.c    ****         if( cursor == 0 ){
 867:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, ">" );
 868:Src/main.c    ****         }else{
 869:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, " " );
 870:Src/main.c    ****         }
 871:Src/main.c    ****         u8g2_DrawStr(&u8g2,10, 30, "Multi-Meter" );
 872:Src/main.c    ****         if( cursor == 1 ){
 873:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 874:Src/main.c    ****         }else{
 875:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, " " );
 876:Src/main.c    ****         }
 877:Src/main.c    ****         u8g2_DrawStr(&u8g2,10, 45, "Scope" );
 878:Src/main.c    ****         u8g2_SendBuffer(&u8g2);
 879:Src/main.c    ****       }
 880:Src/main.c    ****       // send buffer
 881:Src/main.c    ****       u8g2_SendBuffer(&u8g2);
 882:Src/main.c    **** 
 883:Src/main.c    ****       flag_disp = 0; // enable again by TIM2 interrupt
 884:Src/main.c    ****     }
 885:Src/main.c    **** 
 886:Src/main.c    ****   }
 887:Src/main.c    ****   /* USER CODE END 3 */
 888:Src/main.c    **** 
 889:Src/main.c    **** }
 890:Src/main.c    **** 
 891:Src/main.c    **** /** System Clock Configuration
 892:Src/main.c    **** */
 893:Src/main.c    **** void SystemClock_Config(void)
 894:Src/main.c    **** {
 457              		.loc 1 894 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 88
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461 0000 30B5     		push	{r4, r5, lr}
 462              	.LCFI15:
 463              		.cfi_def_cfa_offset 12
 464              		.cfi_offset 4, -12
 465              		.cfi_offset 5, -8
 466              		.cfi_offset 14, -4
 467 0002 97B0     		sub	sp, sp, #92
 468              	.LCFI16:
 469              		.cfi_def_cfa_offset 104
 895:Src/main.c    **** 
 896:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 897:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 898:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
 899:Src/main.c    **** 
 900:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 901:Src/main.c    ****     */
 902:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI|RCC_OSCILLATORTYPE_HSE;
 470              		.loc 1 902 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 25


 471 0004 0322     		movs	r2, #3
 903:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 472              		.loc 1 903 0
 473 0006 4FF4A023 		mov	r3, #327680
 904:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 474              		.loc 1 904 0
 475 000a 0020     		movs	r0, #0
 905:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 476              		.loc 1 905 0
 477 000c 0125     		movs	r5, #1
 906:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = 16;
 478              		.loc 1 906 0
 479 000e 1021     		movs	r1, #16
 907:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 480              		.loc 1 907 0
 481 0010 0224     		movs	r4, #2
 902:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_BYPASS;
 482              		.loc 1 902 0
 483 0012 0C92     		str	r2, [sp, #48]
 903:Src/main.c    ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 484              		.loc 1 903 0
 485 0014 0D93     		str	r3, [sp, #52]
 908:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 486              		.loc 1 908 0
 487 0016 4FF48032 		mov	r2, #65536
 909:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 488              		.loc 1 909 0
 489 001a 4FF4E013 		mov	r3, #1835008
 904:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 490              		.loc 1 904 0
 491 001e 0E90     		str	r0, [sp, #56]
 910:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 492              		.loc 1 910 0
 493 0020 0CA8     		add	r0, sp, #48
 906:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 494              		.loc 1 906 0
 495 0022 CDE91051 		strd	r5, r1, [sp, #64]
 908:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 496              		.loc 1 908 0
 497 0026 CDE91342 		strd	r4, r2, [sp, #76]
 909:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 498              		.loc 1 909 0
 499 002a 1593     		str	r3, [sp, #84]
 500              		.loc 1 910 0
 501 002c FFF7FEFF 		bl	HAL_RCC_OscConfig
 502              	.LVL28:
 503 0030 00B1     		cbz	r0, .L30
 504              	.L31:
 505 0032 FEE7     		b	.L31
 506              	.L30:
 507 0034 0346     		mov	r3, r0
 911:Src/main.c    ****   {
 912:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 913:Src/main.c    ****   }
 914:Src/main.c    **** 
 915:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 916:Src/main.c    ****     */
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 26


 917:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 918:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 919:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 920:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 921:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 508              		.loc 1 921 0
 509 0036 4FF48062 		mov	r2, #1024
 922:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 923:Src/main.c    **** 
 924:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 510              		.loc 1 924 0
 511 003a 2146     		mov	r1, r4
 917:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 512              		.loc 1 917 0
 513 003c 0F25     		movs	r5, #15
 514              		.loc 1 924 0
 515 003e 01A8     		add	r0, sp, #4
 920:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 516              		.loc 1 920 0
 517 0040 CDE90243 		strd	r4, r3, [sp, #8]
 922:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 518              		.loc 1 922 0
 519 0044 0593     		str	r3, [sp, #20]
 917:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 520              		.loc 1 917 0
 521 0046 0195     		str	r5, [sp, #4]
 921:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 522              		.loc 1 921 0
 523 0048 0492     		str	r2, [sp, #16]
 524              		.loc 1 924 0
 525 004a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 526              	.LVL29:
 527 004e 0346     		mov	r3, r0
 528 0050 00B1     		cbz	r0, .L32
 529              	.L33:
 530 0052 FEE7     		b	.L33
 531              	.L32:
 925:Src/main.c    ****   {
 926:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 927:Src/main.c    ****   }
 928:Src/main.c    **** 
 929:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_I2C1
 532              		.loc 1 929 0
 533 0054 41F22102 		movw	r2, #4129
 930:Src/main.c    ****                               |RCC_PERIPHCLK_TIM1;
 931:Src/main.c    ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 932:Src/main.c    ****   PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_HSI;
 933:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 934:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 534              		.loc 1 934 0
 535 0058 06A8     		add	r0, sp, #24
 932:Src/main.c    ****   PeriphClkInit.Tim1ClockSelection = RCC_TIM1CLK_HCLK;
 536              		.loc 1 932 0
 537 005a CDE90833 		strd	r3, r3, [sp, #32]
 933:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 538              		.loc 1 933 0
 539 005e 0B93     		str	r3, [sp, #44]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 27


 929:Src/main.c    ****                               |RCC_PERIPHCLK_TIM1;
 540              		.loc 1 929 0
 541 0060 0692     		str	r2, [sp, #24]
 542              		.loc 1 934 0
 543 0062 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 544              	.LVL30:
 545 0066 0446     		mov	r4, r0
 546 0068 00B1     		cbz	r0, .L34
 547              	.L35:
 548 006a FEE7     		b	.L35
 549              	.L34:
 935:Src/main.c    ****   {
 936:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 937:Src/main.c    ****   }
 938:Src/main.c    **** 
 939:Src/main.c    ****     /**Configure the Systick interrupt time 
 940:Src/main.c    ****     */
 941:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 550              		.loc 1 941 0
 551 006c FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 552              	.LVL31:
 553 0070 4FF47A73 		mov	r3, #1000
 554 0074 B0FBF3F0 		udiv	r0, r0, r3
 555 0078 FFF7FEFF 		bl	HAL_SYSTICK_Config
 556              	.LVL32:
 942:Src/main.c    **** 
 943:Src/main.c    ****     /**Configure the Systick 
 944:Src/main.c    ****     */
 945:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 557              		.loc 1 945 0
 558 007c 0420     		movs	r0, #4
 559 007e FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 560              	.LVL33:
 946:Src/main.c    **** 
 947:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 948:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 561              		.loc 1 948 0
 562 0082 2246     		mov	r2, r4
 563 0084 2146     		mov	r1, r4
 564 0086 4FF0FF30 		mov	r0, #-1
 565 008a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 566              	.LVL34:
 949:Src/main.c    **** }
 567              		.loc 1 949 0
 568 008e 17B0     		add	sp, sp, #92
 569              	.LCFI17:
 570              		.cfi_def_cfa_offset 12
 571              		@ sp needed
 572 0090 30BD     		pop	{r4, r5, pc}
 573              		.cfi_endproc
 574              	.LFE133:
 576 0092 00BF     		.section	.text.startup.main,"ax",%progbits
 577              		.align	1
 578              		.p2align 2,,3
 579              		.global	main
 580              		.syntax unified
 581              		.thumb
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 28


 582              		.thumb_func
 583              		.fpu fpv4-sp-d16
 585              	main:
 586              	.LFB132:
 393:Src/main.c    **** 
 587              		.loc 1 393 0
 588              		.cfi_startproc
 589              		@ args = 0, pretend = 0, frame = 280
 590              		@ frame_needed = 0, uses_anonymous_args = 0
 591 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 592              	.LCFI18:
 593              		.cfi_def_cfa_offset 36
 594              		.cfi_offset 4, -36
 595              		.cfi_offset 5, -32
 596              		.cfi_offset 6, -28
 597              		.cfi_offset 7, -24
 598              		.cfi_offset 8, -20
 599              		.cfi_offset 9, -16
 600              		.cfi_offset 10, -12
 601              		.cfi_offset 11, -8
 602              		.cfi_offset 14, -4
 603 0004 2DED048B 		vpush.64	{d8, d9}
 604              	.LCFI19:
 605              		.cfi_def_cfa_offset 52
 606              		.cfi_offset 80, -52
 607              		.cfi_offset 81, -48
 608              		.cfi_offset 82, -44
 609              		.cfi_offset 83, -40
 610 0008 CFB0     		sub	sp, sp, #316
 611              	.LCFI20:
 612              		.cfi_def_cfa_offset 368
 402:Src/main.c    **** 
 613              		.loc 1 402 0
 614 000a FFF7FEFF 		bl	HAL_Init
 615              	.LVL35:
 417:Src/main.c    **** 
 616              		.loc 1 417 0
 617 000e 0021     		movs	r1, #0
 618 0010 4FF48072 		mov	r2, #256
 619 0014 0EA8     		add	r0, sp, #56
 620 0016 FFF7FEFF 		bl	memset
 621              	.LVL36:
 422:Src/main.c    **** 
 622              		.loc 1 422 0
 623 001a FFF7FEFF 		bl	SystemClock_Config
 624              	.LVL37:
 429:Src/main.c    ****   MX_DMA_Init();
 625              		.loc 1 429 0
 626 001e FFF7FEFF 		bl	MX_GPIO_Init
 627              	.LVL38:
 430:Src/main.c    ****   MX_ADC1_Init();
 628              		.loc 1 430 0
 629 0022 FFF7FEFF 		bl	MX_DMA_Init
 630              	.LVL39:
 431:Src/main.c    ****   MX_CAN_Init();
 631              		.loc 1 431 0
 632 0026 FFF7FEFF 		bl	MX_ADC1_Init
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 29


 633              	.LVL40:
 432:Src/main.c    ****   MX_I2C1_Init();
 634              		.loc 1 432 0
 635 002a FFF7FEFF 		bl	MX_CAN_Init
 636              	.LVL41:
 433:Src/main.c    ****   MX_SPI1_Init();
 637              		.loc 1 433 0
 638 002e FFF7FEFF 		bl	MX_I2C1_Init
 639              	.LVL42:
 434:Src/main.c    ****   MX_TIM1_Init();
 640              		.loc 1 434 0
 641 0032 FFF7FEFF 		bl	MX_SPI1_Init
 642              	.LVL43:
 435:Src/main.c    ****   MX_TIM2_Init();
 643              		.loc 1 435 0
 644 0036 FFF7FEFF 		bl	MX_TIM1_Init
 645              	.LVL44:
 436:Src/main.c    ****   MX_TIM3_Init();
 646              		.loc 1 436 0
 647 003a FFF7FEFF 		bl	MX_TIM2_Init
 648              	.LVL45:
 437:Src/main.c    ****   MX_TIM6_Init();
 649              		.loc 1 437 0
 650 003e FFF7FEFF 		bl	MX_TIM3_Init
 651              	.LVL46:
 438:Src/main.c    ****   MX_USART1_UART_Init();
 652              		.loc 1 438 0
 653 0042 FFF7FEFF 		bl	MX_TIM6_Init
 654              	.LVL47:
 439:Src/main.c    ****   MX_USART2_UART_Init();
 655              		.loc 1 439 0
 656 0046 FFF7FEFF 		bl	MX_USART1_UART_Init
 657              	.LVL48:
 440:Src/main.c    **** 
 658              		.loc 1 440 0
 659 004a FFF7FEFF 		bl	MX_USART2_UART_Init
 660              	.LVL49:
 455:Src/main.c    ****   {
 661              		.loc 1 455 0
 662 004e 0021     		movs	r1, #0
 663 0050 7548     		ldr	r0, .L122
 664 0052 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 665              	.LVL50:
 666 0056 00B1     		cbz	r0, .L38
 667              	.L39:
 668 0058 FEE7     		b	.L39
 669              	.L38:
 461:Src/main.c    ****   {
 670              		.loc 1 461 0
 671 005a 7448     		ldr	r0, .L122+4
 672 005c FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 673              	.LVL51:
 674 0060 00B1     		cbz	r0, .L40
 675              	.L41:
 676 0062 FEE7     		b	.L41
 677              	.L40:
 467:Src/main.c    ****   {
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 30


 678              		.loc 1 467 0
 679 0064 7248     		ldr	r0, .L122+8
 680 0066 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 681              	.LVL52:
 682 006a 00B1     		cbz	r0, .L42
 683              	.L43:
 684 006c FEE7     		b	.L43
 685              	.L42:
 473:Src/main.c    ****   {
 686              		.loc 1 473 0
 687 006e 7148     		ldr	r0, .L122+12
 688 0070 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 689              	.LVL53:
 690 0074 0546     		mov	r5, r0
 691 0076 00B1     		cbz	r0, .L44
 692              	.L45:
 693 0078 FEE7     		b	.L45
 694              	.L44:
 479:Src/main.c    **** 
 695              		.loc 1 479 0
 696 007a 0A22     		movs	r2, #10
 697 007c 6E49     		ldr	r1, .L122+16
 698 007e 6F48     		ldr	r0, .L122+20
 513:Src/main.c    **** 
 699              		.loc 1 513 0
 700 0080 6F4C     		ldr	r4, .L122+24
 479:Src/main.c    **** 
 701              		.loc 1 479 0
 702 0082 FFF7FEFF 		bl	HAL_ADC_Start_DMA
 703              	.LVL54:
 482:Src/main.c    ****   // variables is defined in 'defi.h'
 704              		.loc 1 482 0
 705 0086 0122     		movs	r2, #1
 706 0088 6E49     		ldr	r1, .L122+28
 707 008a 6F48     		ldr	r0, .L122+32
 708 008c FFF7FEFF 		bl	HAL_UART_Receive_IT
 709              	.LVL55:
 487:Src/main.c    **** 
 710              		.loc 1 487 0
 711 0090 6E4B     		ldr	r3, .L122+36
 712 0092 6F4A     		ldr	r2, .L122+40
 713 0094 6F49     		ldr	r1, .L122+44
 714 0096 7048     		ldr	r0, .L122+48
 715 0098 FFF7FEFF 		bl	u8g2_Setup_ssd1309_128x64_noname2_f
 716              	.LVL56:
 490:Src/main.c    ****   HAL_Delay(5);
 717              		.loc 1 490 0
 718 009c 2A46     		mov	r2, r5
 719 009e 0821     		movs	r1, #8
 720 00a0 6E48     		ldr	r0, .L122+52
 721 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 722              	.LVL57:
 491:Src/main.c    ****   HAL_GPIO_WritePin( GPIOB, GPIO_PIN_3, 1); // Set RES=H (OLED activate)
 723              		.loc 1 491 0
 724 00a6 0520     		movs	r0, #5
 725 00a8 FFF7FEFF 		bl	HAL_Delay
 726              	.LVL58:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 31


 492:Src/main.c    ****   u8g2_InitDisplay(&u8g2); // send init sequence to the display, display is in sleep mode after thi
 727              		.loc 1 492 0
 728 00ac 0122     		movs	r2, #1
 729 00ae 0821     		movs	r1, #8
 730 00b0 6A48     		ldr	r0, .L122+52
 731 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 732              	.LVL59:
 493:Src/main.c    ****   u8g2_SetPowerSave(&u8g2, 0); // wake up display
 733              		.loc 1 493 0
 734 00b6 6848     		ldr	r0, .L122+48
 735 00b8 FFF7FEFF 		bl	u8x8_InitDisplay
 736              	.LVL60:
 494:Src/main.c    ****   u8g2_SetContrast(&u8g2, 255); // set contrast
 737              		.loc 1 494 0
 738 00bc 2946     		mov	r1, r5
 739 00be 6648     		ldr	r0, .L122+48
 740 00c0 FFF7FEFF 		bl	u8x8_SetPowerSave
 741              	.LVL61:
 495:Src/main.c    ****   u8g2_ClearDisplay(&u8g2);
 742              		.loc 1 495 0
 743 00c4 FF21     		movs	r1, #255
 744 00c6 6448     		ldr	r0, .L122+48
 745 00c8 FFF7FEFF 		bl	u8x8_SetContrast
 746              	.LVL62:
 496:Src/main.c    **** 
 747              		.loc 1 496 0
 748 00cc 6248     		ldr	r0, .L122+48
 749 00ce FFF7FEFF 		bl	u8g2_ClearDisplay
 750              	.LVL63:
 499:Src/main.c    **** 
 751              		.loc 1 499 0
 752 00d2 634B     		ldr	r3, .L122+56
 753 00d4 0193     		str	r3, [sp, #4]
 754 00d6 3023     		movs	r3, #48
 755 00d8 0093     		str	r3, [sp]
 756 00da 2A46     		mov	r2, r5
 757 00dc 2821     		movs	r1, #40
 758 00de 5E48     		ldr	r0, .L122+48
 759 00e0 FFF7FEFF 		bl	u8g2_DrawXBMP
 760              	.LVL64:
 501:Src/main.c    ****   u8g2_DrawStr(&u8g2, 16, 63 - 8, "Multi Function Meter");
 761              		.loc 1 501 0
 762 00e4 5F49     		ldr	r1, .L122+60
 763 00e6 5C48     		ldr	r0, .L122+48
 764 00e8 FFF7FEFF 		bl	u8g2_SetFont
 765              	.LVL65:
 502:Src/main.c    ****   u8g2_DrawStr(&u8g2, 40, 64, "Rev. 0.2a");
 766              		.loc 1 502 0
 767 00ec 5E4B     		ldr	r3, .L122+64
 768 00ee 5A48     		ldr	r0, .L122+48
 769 00f0 3722     		movs	r2, #55
 770 00f2 1021     		movs	r1, #16
 771 00f4 FFF7FEFF 		bl	u8g2_DrawStr
 772              	.LVL66:
 503:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 773              		.loc 1 503 0
 774 00f8 5C4B     		ldr	r3, .L122+68
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 32


 775 00fa 5748     		ldr	r0, .L122+48
 776 00fc 4022     		movs	r2, #64
 777 00fe 2821     		movs	r1, #40
 778 0100 FFF7FEFF 		bl	u8g2_DrawStr
 779              	.LVL67:
 504:Src/main.c    **** 
 780              		.loc 1 504 0
 781 0104 5448     		ldr	r0, .L122+48
 782 0106 FFF7FEFF 		bl	u8g2_SendBuffer
 783              	.LVL68:
 506:Src/main.c    **** 
 784              		.loc 1 506 0
 785 010a 4FF47A70 		mov	r0, #1000
 786 010e FFF7FEFF 		bl	HAL_Delay
 787              	.LVL69:
 508:Src/main.c    **** 
 788              		.loc 1 508 0
 789 0112 5148     		ldr	r0, .L122+48
 790 0114 FFF7FEFF 		bl	u8g2_ClearBuffer
 791              	.LVL70:
 510:Src/main.c    **** 
 792              		.loc 1 510 0
 793 0118 5549     		ldr	r1, .L122+72
 794 011a 5648     		ldr	r0, .L122+76
 795 011c FFF7FEFF 		bl	HAL_UART_Transmit_printf
 796              	.LVL71:
 513:Src/main.c    **** 
 797              		.loc 1 513 0
 798 0120 B4F90030 		ldrsh	r3, [r4]
 799 0124 544A     		ldr	r2, .L122+80
 800 0126 C3F16403 		rsb	r3, r3, #100
 801 012a 5363     		str	r3, [r2, #52]
 518:Src/main.c    ****   draw_indicators();
 802              		.loc 1 518 0
 803 012c FFF7FEFF 		bl	draw_MeasLabels
 804              	.LVL72:
 519:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 805              		.loc 1 519 0
 806 0130 FFF7FEFF 		bl	draw_indicators
 807              	.LVL73:
 520:Src/main.c    **** 
 808              		.loc 1 520 0
 809 0134 4848     		ldr	r0, .L122+48
 810 0136 FFF7FEFF 		bl	u8g2_SendBuffer
 811              	.LVL74:
 526:Src/main.c    ****   HAL_UART_Transmit_printf(&huart2, "ADXL324 DEVID %d\n", a); // debug
 812              		.loc 1 526 0
 813 013a 2946     		mov	r1, r5
 814 013c 1D20     		movs	r0, #29
 815 013e FFF7FEFF 		bl	ADXL345_RegRead_1byte
 816              	.LVL75:
 817 0142 C6B2     		uxtb	r6, r0
 818              	.LVL76:
 527:Src/main.c    ****   if( a == 0xE5 ){
 819              		.loc 1 527 0
 820 0144 3246     		mov	r2, r6
 821 0146 4D49     		ldr	r1, .L122+84
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 33


 822 0148 4A48     		ldr	r0, .L122+76
 823 014a FFF7FEFF 		bl	HAL_UART_Transmit_printf
 824              	.LVL77:
 528:Src/main.c    ****     Gsens_EN = 1;
 825              		.loc 1 528 0
 826 014e E52E     		cmp	r6, #229
 529:Src/main.c    ****   }else{
 827              		.loc 1 529 0
 828 0150 4B4B     		ldr	r3, .L122+88
 528:Src/main.c    ****     Gsens_EN = 1;
 829              		.loc 1 528 0
 830 0152 00F00784 		beq	.L108
 531:Src/main.c    ****   }
 831              		.loc 1 531 0
 832 0156 0993     		str	r3, [sp, #36]
 833 0158 1D70     		strb	r5, [r3]
 834              	.L47:
 835              	.LVL78:
 836              	.LBB32:
 837              	.LBB33:
 316:Src/main.c    **** }
 838              		.loc 1 316 0
 839 015a 0A25     		movs	r5, #10
 840 015c 0DAA     		add	r2, sp, #52
 841 015e 0223     		movs	r3, #2
 314:Src/main.c    ****   i2c_buf[1] = data;  
 842              		.loc 1 314 0
 843 0160 40F62D06 		movw	r6, #2093
 844              	.LVL79:
 316:Src/main.c    **** }
 845              		.loc 1 316 0
 846 0164 0095     		str	r5, [sp]
 847 0166 3A21     		movs	r1, #58
 848 0168 4648     		ldr	r0, .L122+92
 314:Src/main.c    ****   i2c_buf[1] = data;  
 849              		.loc 1 314 0
 850 016a ADF83460 		strh	r6, [sp, #52]	@ movhi
 316:Src/main.c    **** }
 851              		.loc 1 316 0
 852 016e FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 853              	.LVL80:
 854              	.LBE33:
 855              	.LBE32:
 537:Src/main.c    **** 
 856              		.loc 1 537 0
 857 0172 2D21     		movs	r1, #45
 858 0174 1D20     		movs	r0, #29
 859 0176 FFF7FEFF 		bl	ADXL345_RegRead_1byte
 860              	.LVL81:
 861              	.LBB34:
 862              	.LBB35:
 316:Src/main.c    **** }
 863              		.loc 1 316 0
 864 017a 0223     		movs	r3, #2
 865 017c 0DAA     		add	r2, sp, #52
 866 017e 0095     		str	r5, [sp]
 867 0180 3A21     		movs	r1, #58
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 34


 314:Src/main.c    ****   i2c_buf[1] = data;  
 868              		.loc 1 314 0
 869 0182 40F23155 		movw	r5, #1329
 316:Src/main.c    **** }
 870              		.loc 1 316 0
 871 0186 3F48     		ldr	r0, .L122+92
 314:Src/main.c    ****   i2c_buf[1] = data;  
 872              		.loc 1 314 0
 873 0188 ADF83450 		strh	r5, [sp, #52]	@ movhi
 316:Src/main.c    **** }
 874              		.loc 1 316 0
 875 018c FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 876              	.LVL82:
 877              	.LBE35:
 878              	.LBE34:
 543:Src/main.c    **** 
 879              		.loc 1 543 0
 880 0190 3121     		movs	r1, #49
 881 0192 1D20     		movs	r0, #29
 882 0194 FFF7FEFF 		bl	ADXL345_RegRead_1byte
 883              	.LVL83:
 550:Src/main.c    ****   draw_indicators();
 884              		.loc 1 550 0
 885 0198 FFF7FEFF 		bl	draw_MeasLabels
 886              	.LVL84:
 551:Src/main.c    ****   u8g2_SendBuffer(&u8g2);
 887              		.loc 1 551 0
 888 019c FFF7FEFF 		bl	draw_indicators
 889              	.LVL85:
 552:Src/main.c    **** 
 890              		.loc 1 552 0
 891 01a0 2D48     		ldr	r0, .L122+48
 892 01a2 DFF8F480 		ldr	r8, .L122+112
 893 01a6 DFF8F4A0 		ldr	r10, .L122+116
 894 01aa DFF8F490 		ldr	r9, .L122+120
 895 01ae DFF8F4B0 		ldr	fp, .L122+124
 896              	.LBB36:
 589:Src/main.c    **** 
 897              		.loc 1 589 0
 898 01b2 9FED359A 		vldr.32	s18, .L122+96
 899 01b6 9FED358A 		vldr.32	s16, .L122+100
 593:Src/main.c    ****     // Ressister attenation ratio '165/33'
 900              		.loc 1 593 0
 901 01ba DFED358A 		vldr.32	s17, .L122+104
 902              	.LBE36:
 552:Src/main.c    **** 
 903              		.loc 1 552 0
 904 01be FFF7FEFF 		bl	u8g2_SendBuffer
 905              	.LVL86:
 558:Src/main.c    ****   HAL_UART_Transmit_printf(&huart2, "ADXL324 DEVID %d\n", a); // debug
 906              		.loc 1 558 0
 907 01c2 0021     		movs	r1, #0
 908 01c4 1D20     		movs	r0, #29
 909 01c6 FFF7FEFF 		bl	ADXL345_RegRead_1byte
 910              	.LVL87:
 911 01ca C5B2     		uxtb	r5, r0
 912              	.LVL88:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 35


 559:Src/main.c    ****   if( a == 0xE5 ){
 913              		.loc 1 559 0
 914 01cc 2A46     		mov	r2, r5
 915 01ce 2B49     		ldr	r1, .L122+84
 916 01d0 2848     		ldr	r0, .L122+76
 917 01d2 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 918              	.LVL89:
 560:Src/main.c    ****     Gsens_EN = 1;
 919              		.loc 1 560 0
 920 01d6 E52D     		cmp	r5, #229
 563:Src/main.c    ****   }
 921              		.loc 1 563 0
 922 01d8 099A     		ldr	r2, [sp, #36]
 923              	.LBB47:
 924              	.LBB48:
 316:Src/main.c    **** }
 925              		.loc 1 316 0
 926 01da 2A48     		ldr	r0, .L122+92
 927              	.LBE48:
 928              	.LBE47:
 561:Src/main.c    ****   }else{
 929              		.loc 1 561 0
 930 01dc 0CBF     		ite	eq
 931 01de 0123     		moveq	r3, #1
 563:Src/main.c    ****   }
 932              		.loc 1 563 0
 933 01e0 0023     		movne	r3, #0
 934              	.LBB51:
 935              	.LBB49:
 316:Src/main.c    **** }
 936              		.loc 1 316 0
 937 01e2 0A25     		movs	r5, #10
 938              	.LVL90:
 939              	.LBE49:
 940              	.LBE51:
 563:Src/main.c    ****   }
 941              		.loc 1 563 0
 942 01e4 1370     		strb	r3, [r2]
 943              	.LVL91:
 944              	.LBB52:
 945              	.LBB50:
 316:Src/main.c    **** }
 946              		.loc 1 316 0
 947 01e6 3A21     		movs	r1, #58
 948 01e8 0223     		movs	r3, #2
 949 01ea 0DAA     		add	r2, sp, #52
 950 01ec 0095     		str	r5, [sp]
 314:Src/main.c    ****   i2c_buf[1] = data;  
 951              		.loc 1 314 0
 952 01ee 40F62D06 		movw	r6, #2093
 953 01f2 ADF83460 		strh	r6, [sp, #52]	@ movhi
 316:Src/main.c    **** }
 954              		.loc 1 316 0
 955 01f6 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 956              	.LVL92:
 957              	.LBE50:
 958              	.LBE52:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 36


 569:Src/main.c    **** 
 959              		.loc 1 569 0
 960 01fa 2D21     		movs	r1, #45
 961 01fc 1D20     		movs	r0, #29
 962 01fe FFF7FEFF 		bl	ADXL345_RegRead_1byte
 963              	.LVL93:
 964              	.LBB53:
 965              	.LBB54:
 316:Src/main.c    **** }
 966              		.loc 1 316 0
 967 0202 0223     		movs	r3, #2
 968 0204 0095     		str	r5, [sp]
 969 0206 0DAA     		add	r2, sp, #52
 314:Src/main.c    ****   i2c_buf[1] = data;  
 970              		.loc 1 314 0
 971 0208 40F23155 		movw	r5, #1329
 316:Src/main.c    **** }
 972              		.loc 1 316 0
 973 020c 3A21     		movs	r1, #58
 974 020e 1D48     		ldr	r0, .L122+92
 314:Src/main.c    ****   i2c_buf[1] = data;  
 975              		.loc 1 314 0
 976 0210 ADF83450 		strh	r5, [sp, #52]	@ movhi
 316:Src/main.c    **** }
 977              		.loc 1 316 0
 978 0214 FFF7FEFF 		bl	HAL_I2C_Master_Transmit
 979              	.LVL94:
 980              	.LBE54:
 981              	.LBE53:
 575:Src/main.c    **** 
 982              		.loc 1 575 0
 983 0218 3121     		movs	r1, #49
 984 021a 1D20     		movs	r0, #29
 985 021c FFF7FEFF 		bl	ADXL345_RegRead_1byte
 986              	.LVL95:
 416:Src/main.c    ****   int16_t circular_buffer[128]={};
 987              		.loc 1 416 0
 988 0220 0023     		movs	r3, #0
 989 0222 1C4D     		ldr	r5, .L122+108
 990 0224 0A93     		str	r3, [sp, #40]
 991 0226 6DE0     		b	.L75
 992              	.L123:
 993              		.align	2
 994              	.L122:
 995 0228 00000000 		.word	htim1
 996 022c 00000000 		.word	htim2
 997 0230 00000000 		.word	htim3
 998 0234 00000000 		.word	htim6
 999 0238 00000000 		.word	g_ADCBuffer
 1000 023c 00000000 		.word	hadc1
 1001 0240 00000000 		.word	.LANCHOR4
 1002 0244 00000000 		.word	UART1_Data
 1003 0248 00000000 		.word	huart1
 1004 024c 00000000 		.word	u8x8_gpio_and_delay_STM32F303
 1005 0250 00000000 		.word	u8x8_byte_4wire_hw_spi
 1006 0254 00000000 		.word	u8g2_cb_r0
 1007 0258 00000000 		.word	u8g2
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 37


 1008 025c 00040048 		.word	1207960576
 1009 0260 00000000 		.word	.LANCHOR3
 1010 0264 00000000 		.word	u8g2_font_5x7_tf
 1011 0268 00000000 		.word	.LC2
 1012 026c 18000000 		.word	.LC3
 1013 0270 24000000 		.word	.LC4
 1014 0274 00000000 		.word	huart2
 1015 0278 002C0140 		.word	1073818624
 1016 027c 3C000000 		.word	.LC5
 1017 0280 00000000 		.word	Gsens_EN
 1018 0284 00000000 		.word	hi2c1
 1019 0288 0000A543 		.word	1134886912
 1020 028c 00007F43 		.word	1132396544
 1021 0290 00002543 		.word	1126498304
 1022 0294 00000000 		.word	DEFI_value
 1023 0298 00000000 		.word	adc
 1024 029c 00000000 		.word	flag_meas
 1025 02a0 00000000 		.word	.LANCHOR7
 1026 02a4 00000000 		.word	flag_disp
 1027              	.LVL96:
 1028              	.L54:
 1029              	.LBB55:
 685:Src/main.c    **** 
 1030              		.loc 1 685 0
 1031 02a8 B4F90030 		ldrsh	r3, [r4]
 1032 02ac B34A     		ldr	r2, .L124
 1033 02ae C3F16403 		rsb	r3, r3, #100
 1034 02b2 5363     		str	r3, [r2, #52]
 688:Src/main.c    ****       switch( flag_sw ){
 1035              		.loc 1 688 0
 1036 02b4 B24B     		ldr	r3, .L124+4
 1037 02b6 1B68     		ldr	r3, [r3]
 1038 02b8 03B3     		cbz	r3, .L59
 689:Src/main.c    ****         case 1:
 1039              		.loc 1 689 0
 1040 02ba 022B     		cmp	r3, #2
 1041 02bc 00F0C080 		beq	.L61
 1042 02c0 032B     		cmp	r3, #3
 1043 02c2 00F0A080 		beq	.L62
 1044 02c6 012B     		cmp	r3, #1
 1045 02c8 00F0A580 		beq	.L109
 1046              	.L60:
 730:Src/main.c    ****       if( mode == MODE_BAR_METER ){
 1047              		.loc 1 730 0
 1048 02cc AD48     		ldr	r0, .L124+8
 1049 02ce FFF7FEFF 		bl	u8g2_ClearBuffer
 1050              	.LVL97:
 731:Src/main.c    ****         draw_MeasLabels();
 1051              		.loc 1 731 0
 1052 02d2 AD4B     		ldr	r3, .L124+12
 1053 02d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1054 02d6 002B     		cmp	r3, #0
 1055 02d8 78D0     		beq	.L110
 735:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 1056              		.loc 1 735 0
 1057 02da 012B     		cmp	r3, #1
 1058 02dc 00F0C480 		beq	.L111
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 38


 753:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, wave_value_min, wave_value_m
 1059              		.loc 1 753 0
 1060 02e0 022B     		cmp	r3, #2
 1061 02e2 00F07F81 		beq	.L112
 757:Src/main.c    ****         draw_Wave_axis(&u8g2, wave_x, wave_y, wave_width, wave_height, -200, 200, 4);
 1062              		.loc 1 757 0
 1063 02e6 032B     		cmp	r3, #3
 1064 02e8 00F09A81 		beq	.L113
 1065              	.L69:
 762:Src/main.c    ****       TIM6->CNT = 0;
 1066              		.loc 1 762 0
 1067 02ec A548     		ldr	r0, .L124+8
 1068 02ee FFF7FEFF 		bl	u8g2_SendBuffer
 1069              	.LVL98:
 763:Src/main.c    ****       flag_sw = 0;
 1070              		.loc 1 763 0
 1071 02f2 A64A     		ldr	r2, .L124+16
 1072 02f4 0023     		movs	r3, #0
 1073 02f6 5362     		str	r3, [r2, #36]
 764:Src/main.c    ****     }
 1074              		.loc 1 764 0
 1075 02f8 A14A     		ldr	r2, .L124+4
 1076 02fa 1360     		str	r3, [r2]
 1077              	.L59:
 768:Src/main.c    **** 
 1078              		.loc 1 768 0
 1079 02fc DBF80030 		ldr	r3, [fp]
 1080 0300 002B     		cmp	r3, #0
 1081 0302 68D1     		bne	.L114
 1082              	.L75:
 589:Src/main.c    **** 
 1083              		.loc 1 589 0
 1084 0304 B8F80030 		ldrh	r3, [r8]
 1085 0308 A148     		ldr	r0, .L124+20
 1086 030a 07EE103A 		vmov	s14, r3	@ int
 593:Src/main.c    ****     // Ressister attenation ratio '165/33'
 1087              		.loc 1 593 0
 1088 030e B8F80230 		ldrh	r3, [r8, #2]
 589:Src/main.c    **** 
 1089              		.loc 1 589 0
 1090 0312 B8EE477A 		vcvt.f32.u32	s14, s14
 593:Src/main.c    ****     // Ressister attenation ratio '165/33'
 1091              		.loc 1 593 0
 1092 0316 07EE903A 		vmov	s15, r3	@ int
 589:Src/main.c    **** 
 1093              		.loc 1 589 0
 1094 031a 27EE097A 		vmul.f32	s14, s14, s18
 593:Src/main.c    ****     // Ressister attenation ratio '165/33'
 1095              		.loc 1 593 0
 1096 031e F8EE677A 		vcvt.f32.u32	s15, s15
 589:Src/main.c    **** 
 1097              		.loc 1 589 0
 1098 0322 C7EE086A 		vdiv.f32	s13, s14, s16
 598:Src/main.c    ****       FP_duty = 100;
 1099              		.loc 1 598 0
 1100 0326 9B4B     		ldr	r3, .L124+24
 1101 0328 1B88     		ldrh	r3, [r3]
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 39


 1102 032a 2A88     		ldrh	r2, [r5]
 1103 032c 1BB2     		sxth	r3, r3
 1104 032e 40F6B731 		movw	r1, #2999
 1105 0332 8B42     		cmp	r3, r1
 1106 0334 12B2     		sxth	r2, r2
 593:Src/main.c    ****     // Ressister attenation ratio '165/33'
 1107              		.loc 1 593 0
 1108 0336 67EEA87A 		vmul.f32	s15, s15, s17
 589:Src/main.c    **** 
 1109              		.loc 1 589 0
 1110 033a FDEEE66A 		vcvt.s32.f32	s13, s13
 593:Src/main.c    ****     // Ressister attenation ratio '165/33'
 1111              		.loc 1 593 0
 1112 033e 87EE887A 		vdiv.f32	s14, s15, s16
 589:Src/main.c    **** 
 1113              		.loc 1 589 0
 1114 0342 16EE906A 		vmov	r6, s13	@ int
 593:Src/main.c    ****     // Ressister attenation ratio '165/33'
 1115              		.loc 1 593 0
 1116 0346 BDEEC77A 		vcvt.s32.f32	s14, s14
 589:Src/main.c    **** 
 1117              		.loc 1 589 0
 1118 034a 0680     		strh	r6, [r0]	@ movhi
 593:Src/main.c    ****     // Ressister attenation ratio '165/33'
 1119              		.loc 1 593 0
 1120 034c 9248     		ldr	r0, .L124+28
 1121 034e 17EE106A 		vmov	r6, s14	@ int
 1122 0352 0680     		strh	r6, [r0]	@ movhi
 598:Src/main.c    ****       FP_duty = 100;
 1123              		.loc 1 598 0
 1124 0354 14DC     		bgt	.L53
 1125 0356 002A     		cmp	r2, #0
 1126 0358 12DA     		bge	.L53
 601:Src/main.c    ****     }
 1127              		.loc 1 601 0
 1128 035a 8E4B     		ldr	r3, .L124+24
 1129 035c 8F4A     		ldr	r2, .L124+32
 1130 035e 1B88     		ldrh	r3, [r3]
 1131 0360 1BB2     		sxth	r3, r3
 1132 0362 82FB0312 		smull	r1, r2, r2, r3
 1133 0366 DB17     		asrs	r3, r3, #31
 1134 0368 C3EBA213 		rsb	r3, r3, r2, asr #6
 1135 036c 03EB8303 		add	r3, r3, r3, lsl #2
 1136 0370 03EB8303 		add	r3, r3, r3, lsl #2
 1137 0374 9B00     		lsls	r3, r3, #2
 1138 0376 1BB2     		sxth	r3, r3
 604:Src/main.c    ****       FP_duty = 100;
 1139              		.loc 1 604 0
 1140 0378 642B     		cmp	r3, #100
 601:Src/main.c    ****     }
 1141              		.loc 1 601 0
 1142 037a 2380     		strh	r3, [r4]	@ movhi
 604:Src/main.c    ****       FP_duty = 100;
 1143              		.loc 1 604 0
 1144 037c 40F3F882 		ble	.L115
 1145              	.L53:
 599:Src/main.c    ****     }else{
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 40


 1146              		.loc 1 599 0
 1147 0380 6423     		movs	r3, #100
 1148 0382 2380     		strh	r3, [r4]	@ movhi
 1149              	.L52:
 611:Src/main.c    **** 
 1150              		.loc 1 611 0
 1151 0384 8648     		ldr	r0, .L124+36
 1152 0386 FFF7FEFF 		bl	defi_decoder
 1153              	.LVL99:
 613:Src/main.c    **** 
 1154              		.loc 1 613 0
 1155 038a DAF80030 		ldr	r3, [r10]
 1156 038e 012B     		cmp	r3, #1
 1157 0390 8AD1     		bne	.L54
 616:Src/main.c    ****         /*
 1158              		.loc 1 616 0
 1159 0392 099B     		ldr	r3, [sp, #36]
 1160 0394 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1161 0396 012B     		cmp	r3, #1
 1162 0398 00F0B580 		beq	.L116
 1163              	.L55:
 675:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 1164              		.loc 1 675 0
 1165 039c 7E4A     		ldr	r2, .L124+28
 673:Src/main.c    **** 		  meas_value[1] = DEFI_value[2];  // OILP
 1166              		.loc 1 673 0
 1167 039e 2B88     		ldrh	r3, [r5]
 675:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 1168              		.loc 1 675 0
 1169 03a0 1288     		ldrh	r2, [r2]
 673:Src/main.c    **** 		  meas_value[1] = DEFI_value[2];  // OILP
 1170              		.loc 1 673 0
 1171 03a2 A9F80030 		strh	r3, [r9]	@ movhi
 674:Src/main.c    **** 			meas_value[2] = FP_volt;        // FuelPump Voltage
 1172              		.loc 1 674 0
 1173 03a6 AB88     		ldrh	r3, [r5, #4]
 1174 03a8 A9F80230 		strh	r3, [r9, #2]	@ movhi
 675:Src/main.c    **** 		  meas_value[3] = DEFI_value[6];  // ECT
 1175              		.loc 1 675 0
 1176 03ac A9F80420 		strh	r2, [r9, #4]	@ movhi
 676:Src/main.c    **** 			meas_value[4] = DEFI_value[5];  // OILT
 1177              		.loc 1 676 0
 1178 03b0 AB89     		ldrh	r3, [r5, #12]
 678:Src/main.c    **** 
 1179              		.loc 1 678 0
 1180 03b2 774A     		ldr	r2, .L124+20
 676:Src/main.c    **** 			meas_value[4] = DEFI_value[5];  // OILT
 1181              		.loc 1 676 0
 1182 03b4 A9F80630 		strh	r3, [r9, #6]	@ movhi
 677:Src/main.c    **** 		  meas_value[5] = O2_volt;        // O2
 1183              		.loc 1 677 0
 1184 03b8 6B89     		ldrh	r3, [r5, #10]
 678:Src/main.c    **** 
 1185              		.loc 1 678 0
 1186 03ba 1288     		ldrh	r2, [r2]
 677:Src/main.c    **** 		  meas_value[5] = O2_volt;        // O2
 1187              		.loc 1 677 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 41


 1188 03bc A9F80830 		strh	r3, [r9, #8]	@ movhi
 680:Src/main.c    ****     }
 1189              		.loc 1 680 0
 1190 03c0 0023     		movs	r3, #0
 678:Src/main.c    **** 
 1191              		.loc 1 678 0
 1192 03c2 A9F80A20 		strh	r2, [r9, #10]	@ movhi
 680:Src/main.c    ****     }
 1193              		.loc 1 680 0
 1194 03c6 CAF80030 		str	r3, [r10]
 1195 03ca 6DE7     		b	.L54
 1196              	.L110:
 732:Src/main.c    ****         draw_indicators();
 1197              		.loc 1 732 0
 1198 03cc FFF7FEFF 		bl	draw_MeasLabels
 1199              	.LVL100:
 733:Src/main.c    **** 
 1200              		.loc 1 733 0
 1201 03d0 FFF7FEFF 		bl	draw_indicators
 1202              	.LVL101:
 1203 03d4 8AE7     		b	.L69
 1204              	.L114:
 771:Src/main.c    ****         // update Fuel Pump Voltage
 1205              		.loc 1 771 0
 1206 03d6 6C4B     		ldr	r3, .L124+12
 1207 03d8 1E78     		ldrb	r6, [r3]	@ zero_extendqisi2
 1208 03da 002E     		cmp	r6, #0
 1209 03dc 00F06581 		beq	.L117
 791:Src/main.c    **** 
 1210              		.loc 1 791 0
 1211 03e0 012E     		cmp	r6, #1
 1212 03e2 00F01382 		beq	.L118
 833:Src/main.c    **** 
 1213              		.loc 1 833 0
 1214 03e6 022E     		cmp	r6, #2
 1215 03e8 00F02D81 		beq	.L119
 847:Src/main.c    **** 
 1216              		.loc 1 847 0
 1217 03ec 032E     		cmp	r6, #3
 1218 03ee 00F0E281 		beq	.L120
 861:Src/main.c    **** 
 1219              		.loc 1 861 0
 1220 03f2 042E     		cmp	r6, #4
 1221 03f4 00F07E82 		beq	.L121
 1222              	.L77:
 1223              	.LVL102:
 881:Src/main.c    **** 
 1224              		.loc 1 881 0
 1225 03f8 6248     		ldr	r0, .L124+8
 1226 03fa FFF7FEFF 		bl	u8g2_SendBuffer
 1227              	.LVL103:
 883:Src/main.c    ****     }
 1228              		.loc 1 883 0
 1229 03fe 0023     		movs	r3, #0
 1230 0400 CBF80030 		str	r3, [fp]
 1231 0404 7EE7     		b	.L75
 1232              	.LVL104:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 42


 1233              	.L62:
 715:Src/main.c    ****           HAL_NVIC_DisableIRQ (EXTI1_IRQn);
 1234              		.loc 1 715 0
 1235 0406 6749     		ldr	r1, .L124+40
 1236 0408 6748     		ldr	r0, .L124+44
 1237 040a FFF7FEFF 		bl	HAL_UART_Transmit_printf
 1238              	.LVL105:
 716:Src/main.c    ****           // SW "ENTER"
 1239              		.loc 1 716 0
 1240 040e 0720     		movs	r0, #7
 1241 0410 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1242              	.LVL106:
 1243 0414 5AE7     		b	.L60
 1244              	.L109:
 691:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 1245              		.loc 1 691 0
 1246 0416 6549     		ldr	r1, .L124+48
 1247 0418 6348     		ldr	r0, .L124+44
 1248 041a FFF7FEFF 		bl	HAL_UART_Transmit_printf
 1249              	.LVL107:
 692:Src/main.c    ****           // SW "UP"
 1250              		.loc 1 692 0
 1251 041e 1720     		movs	r0, #23
 1252 0420 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1253              	.LVL108:
 694:Src/main.c    ****             if( mode == N_mode-1 ){
 1254              		.loc 1 694 0
 1255 0424 624B     		ldr	r3, .L124+52
 1256 0426 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1257 0428 002B     		cmp	r3, #0
 1258 042a 7FF44FAF 		bne	.L60
 695:Src/main.c    ****               mode = 0;
 1259              		.loc 1 695 0
 1260 042e 564A     		ldr	r2, .L124+12
 1261 0430 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1262 0432 042A     		cmp	r2, #4
 1263 0434 00F0F180 		beq	.L105
 698:Src/main.c    ****             }
 1264              		.loc 1 698 0
 1265 0438 534B     		ldr	r3, .L124+12
 1266 043a 0132     		adds	r2, r2, #1
 1267 043c 1A70     		strb	r2, [r3]
 1268 043e 45E7     		b	.L60
 1269              	.L61:
 703:Src/main.c    ****           HAL_NVIC_DisableIRQ(EXTI9_5_IRQn);
 1270              		.loc 1 703 0
 1271 0440 5C49     		ldr	r1, .L124+56
 1272 0442 5948     		ldr	r0, .L124+44
 1273 0444 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 1274              	.LVL109:
 704:Src/main.c    ****           // SW "DOWN"
 1275              		.loc 1 704 0
 1276 0448 1720     		movs	r0, #23
 1277 044a FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 1278              	.LVL110:
 706:Src/main.c    ****             if( mode == 0 ){
 1279              		.loc 1 706 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 43


 1280 044e 584B     		ldr	r3, .L124+52
 1281 0450 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1282 0452 002B     		cmp	r3, #0
 1283 0454 7FF43AAF 		bne	.L60
 707:Src/main.c    ****               mode = N_mode-1;
 1284              		.loc 1 707 0
 1285 0458 4B4A     		ldr	r2, .L124+12
 1286 045a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1287 045c 002B     		cmp	r3, #0
 1288 045e 40F0DB80 		bne	.L67
 708:Src/main.c    ****             }else{
 1289              		.loc 1 708 0
 1290 0462 0423     		movs	r3, #4
 1291 0464 1370     		strb	r3, [r2]
 1292 0466 31E7     		b	.L60
 1293              	.L111:
 1294 0468 534B     		ldr	r3, .L124+60
 1295 046a 544F     		ldr	r7, .L124+64
 1296 046c 0893     		str	r3, [sp, #32]
 735:Src/main.c    ****         for( n=0; n<N_meas_C; n++ ){
 1297              		.loc 1 735 0
 1298 046e 0226     		movs	r6, #2
 1299              	.L71:
 1300              	.LVL111:
 1301              	.LBB37:
 739:Src/main.c    ****         }
 1302              		.loc 1 739 0 discriminator 3
 1303 0470 089B     		ldr	r3, [sp, #32]
 1304 0472 0297     		str	r7, [sp, #8]
 1305 0474 0D22     		movs	r2, #13
 1306 0476 0193     		str	r3, [sp, #4]
 1307 0478 0092     		str	r2, [sp]
 1308 047a 3C23     		movs	r3, #60
 1309 047c 3246     		mov	r2, r6
 1310 047e 4421     		movs	r1, #68
 1311 0480 4048     		ldr	r0, .L124+8
 1312 0482 FFF7FEFF 		bl	draw_MeasLabelUnit
 1313              	.LVL112:
 1314 0486 0D36     		adds	r6, r6, #13
 1315              	.LVL113:
 1316 0488 089B     		ldr	r3, [sp, #32]
 1317 048a F6B2     		uxtb	r6, r6
 1318 048c 0733     		adds	r3, r3, #7
 736:Src/main.c    ****           x = meas_C_x;
 1319              		.loc 1 736 0 discriminator 3
 1320 048e 362E     		cmp	r6, #54
 1321 0490 0893     		str	r3, [sp, #32]
 1322 0492 07F10507 		add	r7, r7, #5
 1323 0496 EBD1     		bne	.L71
 1324 0498 494B     		ldr	r3, .L124+68
 1325 049a 4A4F     		ldr	r7, .L124+72
 1326 049c 0893     		str	r3, [sp, #32]
 736:Src/main.c    ****           x = meas_C_x;
 1327              		.loc 1 736 0 is_stmt 0
 1328 049e 4826     		movs	r6, #72
 1329 04a0 0123     		movs	r3, #1
 1330              	.L73:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 44


 1331              	.LVL114:
 743:Src/main.c    ****         }
 1332              		.loc 1 743 0 is_stmt 1 discriminator 3
 1333 04a2 CDE90137 		strd	r3, r7, [sp, #4]
 1334 04a6 3146     		mov	r1, r6
 1335 04a8 0923     		movs	r3, #9
 1336 04aa 1D36     		adds	r6, r6, #29
 1337 04ac 0093     		str	r3, [sp]
 1338 04ae 3522     		movs	r2, #53
 1339 04b0 1B23     		movs	r3, #27
 1340 04b2 3448     		ldr	r0, .L124+8
 1341 04b4 F6B2     		uxtb	r6, r6
 1342 04b6 FFF7FEFF 		bl	draw_IndicatorBox
 1343              	.LVL115:
 742:Src/main.c    ****           draw_IndicatorBox(&u8g2, idct_x+(idct_width+2)*n, idct_y, idct_width, idct_height, idct_s
 1344              		.loc 1 742 0 discriminator 3
 1345 04ba BC2E     		cmp	r6, #188
 1346 04bc 07F10507 		add	r7, r7, #5
 1347 04c0 04D0     		beq	.L72
 1348 04c2 089A     		ldr	r2, [sp, #32]
 1349 04c4 12F8013B 		ldrb	r3, [r2], #1	@ zero_extendqisi2
 1350 04c8 0892     		str	r2, [sp, #32]
 1351              	.LVL116:
 1352 04ca EAE7     		b	.L73
 1353              	.LVL117:
 1354              	.L72:
 745:Src/main.c    **** //        draw_CircularMeter_Init(26, 26, 26, 3, -60, 300, 10, 20, -1, -80, 120);
 1355              		.loc 1 745 0
 1356 04cc 7822     		movs	r2, #120
 1357 04ce 6FF04F03 		mvn	r3, #79
 1358 04d2 4FF0FF31 		mov	r1, #-1
 1359 04d6 0692     		str	r2, [sp, #24]
 1360 04d8 0593     		str	r3, [sp, #20]
 1361 04da 0491     		str	r1, [sp, #16]
 1362 04dc 1426     		movs	r6, #20
 1363 04de 2021     		movs	r1, #32
 1364 04e0 0A20     		movs	r0, #10
 1365 04e2 4FF49672 		mov	r2, #300
 1366 04e6 6FF03B03 		mvn	r3, #59
 1367 04ea CDE90032 		strd	r3, r2, [sp]
 1368 04ee CDE90206 		strd	r0, r6, [sp, #8]
 1369 04f2 0323     		movs	r3, #3
 1370 04f4 0846     		mov	r0, r1
 1371 04f6 1F22     		movs	r2, #31
 1372 04f8 FFF7FEFF 		bl	draw_CircularMeter_Init
 1373              	.LVL118:
 747:Src/main.c    **** /*
 1374              		.loc 1 747 0
 1375 04fc 0021     		movs	r1, #0
 1376 04fe 2148     		ldr	r0, .L124+8
 1377 0500 FFF7FEFF 		bl	draw_CircularMeter
 1378              	.LVL119:
 1379              	.LBE37:
 1380 0504 F2E6     		b	.L69
 1381              	.LVL120:
 1382              	.L116:
 632:Src/main.c    ****         Gsens_Y1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x35); // Check "DATAY1" (MSB side)
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 45


 1383              		.loc 1 632 0
 1384 0506 3321     		movs	r1, #51
 1385 0508 1D20     		movs	r0, #29
 1386 050a FFF7FEFF 		bl	ADXL345_RegRead_1byte
 1387              	.LVL121:
 1388 050e 2E4E     		ldr	r6, .L124+76
 638:Src/main.c    **** 
 1389              		.loc 1 638 0
 1390 0510 2E4F     		ldr	r7, .L124+80
 632:Src/main.c    ****         Gsens_Y1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x35); // Check "DATAY1" (MSB side)
 1391              		.loc 1 632 0
 1392 0512 3070     		strb	r0, [r6]
 633:Src/main.c    ****         Gsens_Z1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x37); // Check "DATAZ1" (MSB side)
 1393              		.loc 1 633 0
 1394 0514 3521     		movs	r1, #53
 1395 0516 1D20     		movs	r0, #29
 1396 0518 FFF7FEFF 		bl	ADXL345_RegRead_1byte
 1397              	.LVL122:
 1398 051c 2C4B     		ldr	r3, .L124+84
 634:Src/main.c    ****         // Acceration 1G = 100
 1399              		.loc 1 634 0
 1400 051e 3721     		movs	r1, #55
 633:Src/main.c    ****         Gsens_Z1 = ADXL345_RegRead_1byte(ADXL0_ADDR, 0x37); // Check "DATAZ1" (MSB side)
 1401              		.loc 1 633 0
 1402 0520 1870     		strb	r0, [r3]
 634:Src/main.c    ****         // Acceration 1G = 100
 1403              		.loc 1 634 0
 1404 0522 1D20     		movs	r0, #29
 1405 0524 FFF7FEFF 		bl	ADXL345_RegRead_1byte
 1406              	.LVL123:
 1407 0528 2A4A     		ldr	r2, .L124+88
 636:Src/main.c    ****         Gsens_Y = 400 * (int8_t)Gsens_Y1 / 128; // unsigned->signed & scaling
 1408              		.loc 1 636 0
 1409 052a 96F90030 		ldrsb	r3, [r6]
 634:Src/main.c    ****         // Acceration 1G = 100
 1410              		.loc 1 634 0
 1411 052e 1070     		strb	r0, [r2]
 636:Src/main.c    ****         Gsens_Y = 400 * (int8_t)Gsens_Y1 / 128; // unsigned->signed & scaling
 1412              		.loc 1 636 0
 1413 0530 4FF4C872 		mov	r2, #400
 1414 0534 02FB03F2 		mul	r2, r2, r3
 637:Src/main.c    ****         Gsens_Z = 400 * (int8_t)Gsens_Z1 / 128; // unsigned->signed & scaling
 1415              		.loc 1 637 0
 1416 0538 254B     		ldr	r3, .L124+84
 1417 053a 93F90010 		ldrsb	r1, [r3]
 636:Src/main.c    ****         Gsens_Y = 400 * (int8_t)Gsens_Y1 / 128; // unsigned->signed & scaling
 1418              		.loc 1 636 0
 1419 053e 002A     		cmp	r2, #0
 637:Src/main.c    ****         Gsens_Z = 400 * (int8_t)Gsens_Z1 / 128; // unsigned->signed & scaling
 1420              		.loc 1 637 0
 1421 0540 4FF4C873 		mov	r3, #400
 1422 0544 03FB01F3 		mul	r3, r3, r1
 636:Src/main.c    ****         Gsens_Y = 400 * (int8_t)Gsens_Y1 / 128; // unsigned->signed & scaling
 1423              		.loc 1 636 0
 1424 0548 B8BF     		it	lt
 1425 054a 7F32     		addlt	r2, r2, #127
 1426 054c 2249     		ldr	r1, .L124+92
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 46


 1427 054e D211     		asrs	r2, r2, #7
 1428 0550 0A80     		strh	r2, [r1]	@ movhi
 638:Src/main.c    **** 
 1429              		.loc 1 638 0
 1430 0552 4FF4C871 		mov	r1, #400
 1431 0556 01FB00F1 		mul	r1, r1, r0
 637:Src/main.c    ****         Gsens_Z = 400 * (int8_t)Gsens_Z1 / 128; // unsigned->signed & scaling
 1432              		.loc 1 637 0
 1433 055a 002B     		cmp	r3, #0
 1434 055c B8BF     		it	lt
 1435 055e 7F33     		addlt	r3, r3, #127
 638:Src/main.c    **** 
 1436              		.loc 1 638 0
 1437 0560 0029     		cmp	r1, #0
 1438 0562 B8BF     		it	lt
 1439 0564 7F31     		addlt	r1, r1, #127
 637:Src/main.c    ****         Gsens_Z = 400 * (int8_t)Gsens_Z1 / 128; // unsigned->signed & scaling
 1440              		.loc 1 637 0
 1441 0566 1D48     		ldr	r0, .L124+96
 638:Src/main.c    **** 
 1442              		.loc 1 638 0
 1443 0568 CE11     		asrs	r6, r1, #7
 637:Src/main.c    ****         Gsens_Z = 400 * (int8_t)Gsens_Z1 / 128; // unsigned->signed & scaling
 1444              		.loc 1 637 0
 1445 056a DB11     		asrs	r3, r3, #7
 1446 056c 0380     		strh	r3, [r0]	@ movhi
 640:Src/main.c    ****         
 1447              		.loc 1 640 0
 1448 056e 1C49     		ldr	r1, .L124+100
 1449 0570 0096     		str	r6, [sp]
 1450 0572 0D48     		ldr	r0, .L124+44
 638:Src/main.c    **** 
 1451              		.loc 1 638 0
 1452 0574 3E80     		strh	r6, [r7]	@ movhi
 640:Src/main.c    ****         
 1453              		.loc 1 640 0
 1454 0576 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 1455              	.LVL124:
 1456 057a 0FE7     		b	.L55
 1457              	.L125:
 1458              		.align	2
 1459              	.L124:
 1460 057c 002C0140 		.word	1073818624
 1461 0580 00000000 		.word	flag_sw
 1462 0584 00000000 		.word	u8g2
 1463 0588 00000000 		.word	mode
 1464 058c 00100040 		.word	1073745920
 1465 0590 00000000 		.word	.LANCHOR5
 1466 0594 00000000 		.word	rpm
 1467 0598 00000000 		.word	.LANCHOR6
 1468 059c F1197605 		.word	91625969
 1469 05a0 00000000 		.word	UART1_RxData
 1470 05a4 68000000 		.word	.LC9
 1471 05a8 00000000 		.word	huart2
 1472 05ac 5C000000 		.word	.LC7
 1473 05b0 00000000 		.word	setting
 1474 05b4 60000000 		.word	.LC8
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 47


 1475 05b8 00000000 		.word	.LANCHOR2
 1476 05bc 00000000 		.word	.LANCHOR1
 1477 05c0 01000000 		.word	.LANCHOR8+1
 1478 05c4 00000000 		.word	.LANCHOR0
 1479 05c8 00000000 		.word	Gsens_X1
 1480 05cc 00000000 		.word	Gsens_Z
 1481 05d0 00000000 		.word	Gsens_Y1
 1482 05d4 00000000 		.word	Gsens_Z1
 1483 05d8 00000000 		.word	Gsens_X
 1484 05dc 00000000 		.word	Gsens_Y
 1485 05e0 50000000 		.word	.LC6
 1486              	.L112:
 1487              	.LBB38:
 754:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "MAP", "kPa");
 1488              		.loc 1 754 0
 1489 05e4 3420     		movs	r0, #52
 1490 05e6 6FF06301 		mvn	r1, #99
 1491 05ea C822     		movs	r2, #200
 1492 05ec 0323     		movs	r3, #3
 1493 05ee 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1494 05f2 8023     		movs	r3, #128
 1495 05f4 0D22     		movs	r2, #13
 1496 05f6 0021     		movs	r1, #0
 1497 05f8 AD48     		ldr	r0, .L126
 1498 05fa FFF7FEFF 		bl	draw_Wave_axis
 1499              	.LVL125:
 755:Src/main.c    **** 
 1500              		.loc 1 755 0
 1501 05fe AD49     		ldr	r1, .L126+4
 1502 0600 0291     		str	r1, [sp, #8]
 1503 0602 AD49     		ldr	r1, .L126+8
 1504 0604 0D23     		movs	r3, #13
 1505 0606 0022     		movs	r2, #0
 1506              	.L106:
 1507              	.LBE38:
 1508              	.LBB39:
 759:Src/main.c    **** 
 1509              		.loc 1 759 0
 1510 0608 CDE90031 		strd	r3, r1, [sp]
 1511 060c A848     		ldr	r0, .L126
 1512 060e 1146     		mov	r1, r2
 1513 0610 4023     		movs	r3, #64
 1514 0612 FFF7FEFF 		bl	draw_MeasLabelUnit
 1515              	.LVL126:
 1516 0616 69E6     		b	.L69
 1517              	.L67:
 1518              	.LBE39:
 710:Src/main.c    ****             }
 1519              		.loc 1 710 0
 1520 0618 013B     		subs	r3, r3, #1
 1521              	.L105:
 1522 061a A84A     		ldr	r2, .L126+12
 1523 061c 1370     		strb	r3, [r2]
 1524 061e 55E6     		b	.L60
 1525              	.L113:
 1526              	.LBB40:
 758:Src/main.c    ****         draw_MeasLabelUnit(&u8g2, 0, 0, 64, 13, "LatG", "G");
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 48


 1527              		.loc 1 758 0
 1528 0620 3420     		movs	r0, #52
 1529 0622 6FF0C701 		mvn	r1, #199
 1530 0626 C822     		movs	r2, #200
 1531 0628 0423     		movs	r3, #4
 1532 062a 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1533 062e 8023     		movs	r3, #128
 1534 0630 0D22     		movs	r2, #13
 1535 0632 0021     		movs	r1, #0
 1536 0634 9E48     		ldr	r0, .L126
 1537 0636 FFF7FEFF 		bl	draw_Wave_axis
 1538              	.LVL127:
 759:Src/main.c    **** 
 1539              		.loc 1 759 0
 1540 063a A149     		ldr	r1, .L126+16
 1541 063c 0291     		str	r1, [sp, #8]
 1542 063e 0D23     		movs	r3, #13
 1543 0640 0022     		movs	r2, #0
 1544 0642 A049     		ldr	r1, .L126+20
 1545 0644 E0E7     		b	.L106
 1546              	.L119:
 1547              	.LBE40:
 1548              	.LBB41:
 835:Src/main.c    ****           circular_buffer_index--;
 1549              		.loc 1 835 0
 1550 0646 0A9B     		ldr	r3, [sp, #40]
 1551 0648 002B     		cmp	r3, #0
 1552 064a 00F0DB80 		beq	.L90
 836:Src/main.c    ****         }else{
 1553              		.loc 1 836 0
 1554 064e 013B     		subs	r3, r3, #1
 1555 0650 9BB2     		uxth	r3, r3
 1556 0652 0A93     		str	r3, [sp, #40]
 1557              	.LVL128:
 1558 0654 1E46     		mov	r6, r3
 1559              	.LVL129:
 1560              	.L82:
 843:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 1561              		.loc 1 843 0
 1562 0656 6FF06302 		mvn	r2, #99
 1563 065a 3423     		movs	r3, #52
 1564 065c CDE90032 		strd	r3, r2, [sp]
 840:Src/main.c    **** 
 1565              		.loc 1 840 0
 1566 0660 0EAA     		add	r2, sp, #56
 1567 0662 B9F80030 		ldrh	r3, [r9]
 843:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 1568              		.loc 1 843 0
 1569 0666 0496     		str	r6, [sp, #16]
 1570 0668 C821     		movs	r1, #200
 1571 066a 0EA8     		add	r0, sp, #56
 1572 066c CDE90210 		strd	r1, r0, [sp, #8]
 840:Src/main.c    **** 
 1573              		.loc 1 840 0
 1574 0670 22F81630 		strh	r3, [r2, r6, lsl #1]	@ movhi
 843:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 1575              		.loc 1 843 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 49


 1576 0674 0021     		movs	r1, #0
 1577 0676 8023     		movs	r3, #128
 1578 0678 0D22     		movs	r2, #13
 1579 067a 8D48     		ldr	r0, .L126
 844:Src/main.c    **** 
 1580              		.loc 1 844 0
 1581 067c 8D4F     		ldr	r7, .L126+4
 843:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "kPa");
 1582              		.loc 1 843 0
 1583 067e FFF7FEFF 		bl	draw_Wave
 1584              	.LVL130:
 844:Src/main.c    **** 
 1585              		.loc 1 844 0
 1586 0682 0EAB     		add	r3, sp, #56
 1587 0684 0220     		movs	r0, #2
 1588 0686 33F91630 		ldrsh	r3, [r3, r6, lsl #1]
 1589 068a 0193     		str	r3, [sp, #4]
 1590 068c 0126     		movs	r6, #1
 1591 068e 0321     		movs	r1, #3
 1592 0690 0D23     		movs	r3, #13
 1593 0692 0022     		movs	r2, #0
 1594              	.L107:
 1595              	.LBE41:
 1596              	.LBB42:
 858:Src/main.c    **** 
 1597              		.loc 1 858 0
 1598 0694 CDE90210 		strd	r1, r0, [sp, #8]
 1599 0698 0093     		str	r3, [sp]
 1600 069a CDE90467 		strd	r6, r7, [sp, #16]
 1601 069e 1146     		mov	r1, r2
 1602 06a0 4023     		movs	r3, #64
 1603 06a2 8348     		ldr	r0, .L126
 1604 06a4 FFF7FEFF 		bl	draw_Value
 1605              	.LVL131:
 1606              	.LBE42:
 1607 06a8 A6E6     		b	.L77
 1608              	.LVL132:
 1609              	.L117:
 773:Src/main.c    **** 
 1610              		.loc 1 773 0
 1611 06aa B4F90030 		ldrsh	r3, [r4]
 1612 06ae 864A     		ldr	r2, .L126+24
 1613 06b0 0193     		str	r3, [sp, #4]
 1614 06b2 0327     		movs	r7, #3
 1615 06b4 0C23     		movs	r3, #12
 1616 06b6 CDE90462 		strd	r6, r2, [sp, #16]
 1617 06ba CDE90276 		strd	r7, r6, [sp, #8]
 1618 06be 0093     		str	r3, [sp]
 1619 06c0 3422     		movs	r2, #52
 1620 06c2 4623     		movs	r3, #70
 1621 06c4 3146     		mov	r1, r6
 1622 06c6 7A48     		ldr	r0, .L126
 1623 06c8 FFF7FEFF 		bl	draw_Value
 1624              	.LVL133:
 776:Src/main.c    **** 
 1625              		.loc 1 776 0
 1626 06cc 7F4B     		ldr	r3, .L126+28
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 50


 1627 06ce 7848     		ldr	r0, .L126
 1628 06d0 1988     		ldrh	r1, [r3]
 1629 06d2 0191     		str	r1, [sp, #4]
 1630 06d4 42F22832 		movw	r2, #9000
 1631 06d8 0E23     		movs	r3, #14
 1632 06da 0392     		str	r2, [sp, #12]
 1633 06dc 0093     		str	r3, [sp]
 1634 06de 3246     		mov	r2, r6
 1635 06e0 8023     		movs	r3, #128
 1636 06e2 3146     		mov	r1, r6
 1637 06e4 0296     		str	r6, [sp, #8]
 1638 06e6 FFF7FEFF 		bl	draw_BarGraph
 1639              	.LVL134:
 782:Src/main.c    ****         }
 1640              		.loc 1 782 0
 1641 06ea 0C21     		movs	r1, #12
 1642 06ec 0091     		str	r1, [sp]
 1643 06ee 7849     		ldr	r1, .L126+32
 1644 06f0 B9F90030 		ldrsh	r3, [r9]
 1645 06f4 0591     		str	r1, [sp, #20]
 1646 06f6 0222     		movs	r2, #2
 1647 06f8 0121     		movs	r1, #1
 1648 06fa CDE90321 		strd	r2, r1, [sp, #12]
 1649 06fe 0297     		str	r7, [sp, #8]
 1650 0700 0193     		str	r3, [sp, #4]
 1651 0702 1022     		movs	r2, #16
 1652 0704 4623     		movs	r3, #70
 1653 0706 3146     		mov	r1, r6
 1654 0708 6948     		ldr	r0, .L126
 1655 070a FFF7FEFF 		bl	draw_Value
 1656              	.LVL135:
 1657 070e 0122     		movs	r2, #1
 1658 0710 CDE90272 		strd	r7, r2, [sp, #8]
 1659 0714 0C22     		movs	r2, #12
 1660 0716 0092     		str	r2, [sp]
 1661 0718 6E4A     		ldr	r2, .L126+36
 1662 071a B9F90230 		ldrsh	r3, [r9, #2]
 1663 071e 0193     		str	r3, [sp, #4]
 1664 0720 CDE90462 		strd	r6, r2, [sp, #16]
 1665 0724 4623     		movs	r3, #70
 1666 0726 1C22     		movs	r2, #28
 1667 0728 3146     		mov	r1, r6
 1668 072a 6148     		ldr	r0, .L126
 1669 072c FFF7FEFF 		bl	draw_Value
 1670              	.LVL136:
 1671 0730 0122     		movs	r2, #1
 1672 0732 CDE90272 		strd	r7, r2, [sp, #8]
 1673 0736 0C22     		movs	r2, #12
 1674 0738 0092     		str	r2, [sp]
 1675 073a 674A     		ldr	r2, .L126+40
 1676 073c B9F90430 		ldrsh	r3, [r9, #4]
 1677 0740 0B97     		str	r7, [sp, #44]
 1678 0742 CDE90462 		strd	r6, r2, [sp, #16]
 1679 0746 0193     		str	r3, [sp, #4]
 1680 0748 3146     		mov	r1, r6
 1681 074a 5948     		ldr	r0, .L126
 787:Src/main.c    ****         }
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 51


 1682              		.loc 1 787 0
 1683 074c 0C27     		movs	r7, #12
 782:Src/main.c    ****         }
 1684              		.loc 1 782 0
 1685 074e 4623     		movs	r3, #70
 1686 0750 2822     		movs	r2, #40
 787:Src/main.c    ****         }
 1687              		.loc 1 787 0
 1688 0752 0897     		str	r7, [sp, #32]
 782:Src/main.c    ****         }
 1689              		.loc 1 782 0
 1690 0754 FFF7FEFF 		bl	draw_Value
 1691              	.LVL137:
 1692 0758 0B98     		ldr	r0, [sp, #44]
 1693 075a 3146     		mov	r1, r6
 1694 075c 0746     		mov	r7, r0
 1695              	.LVL138:
 1696              	.L78:
 786:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 1697              		.loc 1 786 0 discriminator 3
 1698 075e 5F4A     		ldr	r2, .L126+44
 787:Src/main.c    ****         }
 1699              		.loc 1 787 0 discriminator 3
 1700 0760 0491     		str	r1, [sp, #16]
 786:Src/main.c    ****           draw_Value(&u8g2, x, y, meas_width2, meas_height, meas_value[n], meas_digit[n], meas_frac
 1701              		.loc 1 786 0 discriminator 3
 1702 0762 FBB2     		uxtb	r3, r7
 1703 0764 A2FB03C2 		umull	ip, r2, r2, r3
 1704 0768 5208     		lsrs	r2, r2, #1
 1705 076a 02EB4202 		add	r2, r2, r2, lsl #1
 1706 076e 9B1A     		subs	r3, r3, r2
 1707 0770 03EB4303 		add	r3, r3, r3, lsl #1
 1708 0774 9A00     		lsls	r2, r3, #2
 1709 0776 02F1100C 		add	ip, r2, #16
 787:Src/main.c    ****         }
 1710              		.loc 1 787 0 discriminator 3
 1711 077a 554A     		ldr	r2, .L126+32
 1712 077c 39F91710 		ldrsh	r1, [r9, r7, lsl #1]
 1713 0780 0191     		str	r1, [sp, #4]
 1714 0782 07EB8703 		add	r3, r7, r7, lsl #2
 1715 0786 1344     		add	r3, r3, r2
 1716 0788 089A     		ldr	r2, [sp, #32]
 1717 078a 0092     		str	r2, [sp]
 1718 078c CDE90206 		strd	r0, r6, [sp, #8]
 1719 0790 0593     		str	r3, [sp, #20]
 1720 0792 0CF0FC02 		and	r2, ip, #252
 1721 0796 0137     		adds	r7, r7, #1
 1722              	.LVL139:
 1723 0798 3823     		movs	r3, #56
 1724 079a 4821     		movs	r1, #72
 1725 079c 4448     		ldr	r0, .L126
 1726 079e FFF7FEFF 		bl	draw_Value
 1727              	.LVL140:
 784:Src/main.c    ****           x = meas_width1 + meas_x + meas_x_offset;
 1728              		.loc 1 784 0 discriminator 3
 1729 07a2 062F     		cmp	r7, #6
 1730 07a4 3FF428AE 		beq	.L77
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 52


 1731 07a8 4D4B     		ldr	r3, .L126+48
 1732 07aa D85D     		ldrb	r0, [r3, r7]	@ zero_extendqisi2
 1733 07ac 4D4B     		ldr	r3, .L126+52
 1734 07ae DE5D     		ldrb	r6, [r3, r7]	@ zero_extendqisi2
 1735 07b0 4D4B     		ldr	r3, .L126+56
 1736 07b2 D95D     		ldrb	r1, [r3, r7]	@ zero_extendqisi2
 1737 07b4 D3E7     		b	.L78
 1738              	.LVL141:
 1739              	.L120:
 1740              	.LBB43:
 849:Src/main.c    ****           circular_buffer_index--;
 1741              		.loc 1 849 0
 1742 07b6 0A9B     		ldr	r3, [sp, #40]
 1743 07b8 002B     		cmp	r3, #0
 1744 07ba 74D0     		beq	.L91
 850:Src/main.c    ****         }else{
 1745              		.loc 1 850 0
 1746 07bc 013B     		subs	r3, r3, #1
 1747 07be 9BB2     		uxth	r3, r3
 1748 07c0 0A93     		str	r3, [sp, #40]
 1749              	.LVL142:
 1750 07c2 1E46     		mov	r6, r3
 1751              	.LVL143:
 1752              	.L84:
 857:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 1753              		.loc 1 857 0
 1754 07c4 C821     		movs	r1, #200
 1755 07c6 6FF0C702 		mvn	r2, #199
 1756 07ca 3423     		movs	r3, #52
 1757 07cc 0EA8     		add	r0, sp, #56
 1758 07ce CDE90210 		strd	r1, r0, [sp, #8]
 1759 07d2 CDE90032 		strd	r3, r2, [sp]
 854:Src/main.c    **** 
 1760              		.loc 1 854 0
 1761 07d6 454B     		ldr	r3, .L126+60
 857:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 1762              		.loc 1 857 0
 1763 07d8 0496     		str	r6, [sp, #16]
 854:Src/main.c    **** 
 1764              		.loc 1 854 0
 1765 07da 0EAA     		add	r2, sp, #56
 1766 07dc 1B88     		ldrh	r3, [r3]
 1767 07de 22F81630 		strh	r3, [r2, r6, lsl #1]	@ movhi
 857:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 1768              		.loc 1 857 0
 1769 07e2 0021     		movs	r1, #0
 1770 07e4 8023     		movs	r3, #128
 1771 07e6 0D22     		movs	r2, #13
 1772 07e8 3148     		ldr	r0, .L126
 858:Src/main.c    **** 
 1773              		.loc 1 858 0
 1774 07ea 354F     		ldr	r7, .L126+16
 857:Src/main.c    ****         draw_Value(&u8g2, 0, 0, 64, 13, circular_buffer[circular_buffer_index], 3, 2, 1, "G");
 1775              		.loc 1 857 0
 1776 07ec FFF7FEFF 		bl	draw_Wave
 1777              	.LVL144:
 858:Src/main.c    **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 53


 1778              		.loc 1 858 0
 1779 07f0 0EAB     		add	r3, sp, #56
 1780 07f2 0220     		movs	r0, #2
 1781 07f4 33F91630 		ldrsh	r3, [r3, r6, lsl #1]
 1782 07f8 0193     		str	r3, [sp, #4]
 1783 07fa 0126     		movs	r6, #1
 1784 07fc 0321     		movs	r1, #3
 1785 07fe 0D23     		movs	r3, #13
 1786 0800 0022     		movs	r2, #0
 1787 0802 47E7     		b	.L107
 1788              	.LVL145:
 1789              	.L90:
 1790              	.LBE43:
 1791              	.LBB44:
 1792 0804 8023     		movs	r3, #128
 1793 0806 0A93     		str	r3, [sp, #40]
 838:Src/main.c    ****         }
 1794              		.loc 1 838 0
 1795 0808 1E46     		mov	r6, r3
 1796 080a 24E7     		b	.L82
 1797              	.L118:
 1798              	.LBE44:
 1799              	.LBB45:
 793:Src/main.c    ****         
 1800              		.loc 1 793 0
 1801 080c B9F90010 		ldrsh	r1, [r9]
 1802 0810 2748     		ldr	r0, .L126
 1803 0812 FFF7FEFF 		bl	draw_CircularMeter
 1804              	.LVL146:
 795:Src/main.c    ****         draw_MeasUnit(&u8g2, 38, 40, 28, 16, "kPa");
 1805              		.loc 1 795 0
 1806 0816 B9F90030 		ldrsh	r3, [r9]
 1807 081a 354A     		ldr	r2, .L126+64
 1808 081c 0592     		str	r2, [sp, #20]
 1809 081e 4FF0020C 		mov	ip, #2
 1810 0822 1027     		movs	r7, #16
 1811 0824 0322     		movs	r2, #3
 1812 0826 CDE903C6 		strd	ip, r6, [sp, #12]
 1813 082a CDE90132 		strd	r3, r2, [sp, #4]
 1814 082e 0097     		str	r7, [sp]
 1815 0830 1E23     		movs	r3, #30
 1816 0832 2122     		movs	r2, #33
 1817 0834 2421     		movs	r1, #36
 1818 0836 1E48     		ldr	r0, .L126
 796:Src/main.c    **** /*        
 1819              		.loc 1 796 0
 1820 0838 CDF820C0 		str	ip, [sp, #32]
 795:Src/main.c    ****         draw_MeasUnit(&u8g2, 38, 40, 28, 16, "kPa");
 1821              		.loc 1 795 0
 1822 083c FFF7FEFF 		bl	draw_Value
 1823              	.LVL147:
 796:Src/main.c    **** /*        
 1824              		.loc 1 796 0
 1825 0840 1C4B     		ldr	r3, .L126+4
 1826 0842 0097     		str	r7, [sp]
 1827 0844 0193     		str	r3, [sp, #4]
 1828 0846 2822     		movs	r2, #40
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 54


 1829 0848 2621     		movs	r1, #38
 1830 084a 1948     		ldr	r0, .L126
 1831 084c 1C23     		movs	r3, #28
 1832 084e FFF7FEFF 		bl	draw_MeasUnit
 1833              	.LVL148:
 1834 0852 0899     		ldr	r1, [sp, #32]
 1835 0854 3046     		mov	r0, r6
 1836 0856 0322     		movs	r2, #3
 806:Src/main.c    ****         }
 1837              		.loc 1 806 0
 1838 0858 8446     		mov	ip, r0
 796:Src/main.c    **** /*        
 1839              		.loc 1 796 0
 1840 085a 0027     		movs	r7, #0
 806:Src/main.c    ****         }
 1841              		.loc 1 806 0
 1842 085c 0846     		mov	r0, r1
 1843 085e 0D26     		movs	r6, #13
 1844 0860 1146     		mov	r1, r2
 1845              	.LVL149:
 1846              	.L80:
 806:Src/main.c    ****         }
 1847              		.loc 1 806 0 is_stmt 0 discriminator 3
 1848 0862 1B4A     		ldr	r2, .L126+32
 1849 0864 0291     		str	r1, [sp, #8]
 1850 0866 07EB8703 		add	r3, r7, r7, lsl #2
 1851 086a 1344     		add	r3, r3, r2
 1852 086c 39F91720 		ldrsh	r2, [r9, r7, lsl #1]
 1853 0870 0593     		str	r3, [sp, #20]
 1854 0872 CDE9030C 		strd	r0, ip, [sp, #12]
 1855 0876 0192     		str	r2, [sp, #4]
 1856 0878 3C23     		movs	r3, #60
 1857 087a 0096     		str	r6, [sp]
 1858 087c 089A     		ldr	r2, [sp, #32]
 1859 087e 0C48     		ldr	r0, .L126
 1860 0880 4421     		movs	r1, #68
 1861 0882 FFF7FEFF 		bl	draw_Value
 1862              	.LVL150:
 1863 0886 089B     		ldr	r3, [sp, #32]
 1864 0888 0137     		adds	r7, r7, #1
 1865 088a 0D33     		adds	r3, r3, #13
 1866 088c DBB2     		uxtb	r3, r3
 803:Src/main.c    ****           x = meas_C_x;
 1867              		.loc 1 803 0 is_stmt 1 discriminator 3
 1868 088e 042F     		cmp	r7, #4
 1869 0890 0893     		str	r3, [sp, #32]
 1870              	.LVL151:
 1871 0892 3FF4B1AD 		beq	.L77
 1872 0896 124B     		ldr	r3, .L126+48
 1873 0898 D95D     		ldrb	r1, [r3, r7]	@ zero_extendqisi2
 1874 089a 124B     		ldr	r3, .L126+52
 1875 089c D85D     		ldrb	r0, [r3, r7]	@ zero_extendqisi2
 1876 089e 124B     		ldr	r3, .L126+56
 1877 08a0 13F807C0 		ldrb	ip, [r3, r7]	@ zero_extendqisi2
 1878 08a4 DDE7     		b	.L80
 1879              	.LVL152:
 1880              	.L91:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 55


 1881              	.LBE45:
 1882              	.LBB46:
 1883 08a6 8023     		movs	r3, #128
 1884 08a8 0A93     		str	r3, [sp, #40]
 852:Src/main.c    ****         }
 1885              		.loc 1 852 0
 1886 08aa 1E46     		mov	r6, r3
 1887 08ac 8AE7     		b	.L84
 1888              	.L127:
 1889 08ae 00BF     		.align	2
 1890              	.L126:
 1891 08b0 00000000 		.word	u8g2
 1892 08b4 70000000 		.word	.LC10
 1893 08b8 74000000 		.word	.LC11
 1894 08bc 00000000 		.word	mode
 1895 08c0 78000000 		.word	.LC12
 1896 08c4 7C000000 		.word	.LC13
 1897 08c8 00000000 		.word	.LC0
 1898 08cc 00000000 		.word	rpm
 1899 08d0 00000000 		.word	.LANCHOR1
 1900 08d4 05000000 		.word	.LANCHOR1+5
 1901 08d8 0A000000 		.word	.LANCHOR1+10
 1902 08dc ABAAAAAA 		.word	-1431655765
 1903 08e0 00000000 		.word	.LANCHOR9
 1904 08e4 00000000 		.word	.LANCHOR10
 1905 08e8 00000000 		.word	.LANCHOR11
 1906 08ec 00000000 		.word	Gsens_Y
 1907 08f0 84000000 		.word	.LC14
 1908              	.L121:
 1909              	.LBE46:
 863:Src/main.c    ****         u8g2_SetFont(&u8g2, u8g2_font_7x14B_tf);
 1910              		.loc 1 863 0
 1911 08f4 2148     		ldr	r0, .L128
 1912 08f6 FFF7FEFF 		bl	u8g2_ClearBuffer
 1913              	.LVL153:
 864:Src/main.c    ****         u8g2_DrawStr(&u8g2, 2, 15, "Mode Setting" );
 1914              		.loc 1 864 0
 1915 08fa 2149     		ldr	r1, .L128+4
 1916 08fc 1F48     		ldr	r0, .L128
 1917 08fe FFF7FEFF 		bl	u8g2_SetFont
 1918              	.LVL154:
 865:Src/main.c    ****         if( cursor == 0 ){
 1919              		.loc 1 865 0
 1920 0902 204B     		ldr	r3, .L128+8
 1921 0904 1D48     		ldr	r0, .L128
 1922 0906 0F22     		movs	r2, #15
 1923 0908 0221     		movs	r1, #2
 1924 090a FFF7FEFF 		bl	u8g2_DrawStr
 1925              	.LVL155:
 866:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 30, ">" );
 1926              		.loc 1 866 0
 1927 090e 1E4B     		ldr	r3, .L128+12
 1928 0910 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1929 0912 03BB     		cbnz	r3, .L85
 867:Src/main.c    ****         }else{
 1930              		.loc 1 867 0
 1931 0914 1D4B     		ldr	r3, .L128+16
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 56


 1932 0916 1948     		ldr	r0, .L128
 1933 0918 1E22     		movs	r2, #30
 1934 091a 0221     		movs	r1, #2
 1935 091c FFF7FEFF 		bl	u8g2_DrawStr
 1936              	.LVL156:
 1937              	.L86:
 871:Src/main.c    ****         if( cursor == 1 ){
 1938              		.loc 1 871 0
 1939 0920 1B4B     		ldr	r3, .L128+20
 1940 0922 1648     		ldr	r0, .L128
 1941 0924 1E22     		movs	r2, #30
 1942 0926 0A21     		movs	r1, #10
 1943 0928 FFF7FEFF 		bl	u8g2_DrawStr
 1944              	.LVL157:
 872:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 1945              		.loc 1 872 0
 1946 092c 164B     		ldr	r3, .L128+12
 875:Src/main.c    ****         }
 1947              		.loc 1 875 0
 1948 092e 1348     		ldr	r0, .L128
 872:Src/main.c    ****           u8g2_DrawStr(&u8g2, 2, 45, ">" );
 1949              		.loc 1 872 0
 1950 0930 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1951 0932 012B     		cmp	r3, #1
 873:Src/main.c    ****         }else{
 1952              		.loc 1 873 0
 1953 0934 0CBF     		ite	eq
 1954 0936 154B     		ldreq	r3, .L128+16
 875:Src/main.c    ****         }
 1955              		.loc 1 875 0
 1956 0938 164B     		ldrne	r3, .L128+24
 1957 093a 2D22     		movs	r2, #45
 1958 093c 0221     		movs	r1, #2
 1959 093e FFF7FEFF 		bl	u8g2_DrawStr
 1960              	.LVL158:
 877:Src/main.c    ****         u8g2_SendBuffer(&u8g2);
 1961              		.loc 1 877 0
 1962 0942 154B     		ldr	r3, .L128+28
 1963 0944 0D48     		ldr	r0, .L128
 1964 0946 2D22     		movs	r2, #45
 1965 0948 0A21     		movs	r1, #10
 1966 094a FFF7FEFF 		bl	u8g2_DrawStr
 1967              	.LVL159:
 878:Src/main.c    ****       }
 1968              		.loc 1 878 0
 1969 094e 0B48     		ldr	r0, .L128
 1970 0950 FFF7FEFF 		bl	u8g2_SendBuffer
 1971              	.LVL160:
 1972 0954 50E5     		b	.L77
 1973              	.L85:
 869:Src/main.c    ****         }
 1974              		.loc 1 869 0
 1975 0956 0F4B     		ldr	r3, .L128+24
 1976 0958 0848     		ldr	r0, .L128
 1977 095a 1E22     		movs	r2, #30
 1978 095c 0221     		movs	r1, #2
 1979 095e FFF7FEFF 		bl	u8g2_DrawStr
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 57


 1980              	.LVL161:
 1981 0962 DDE7     		b	.L86
 1982              	.LVL162:
 1983              	.L108:
 1984              	.LBE55:
 529:Src/main.c    ****   }else{
 1985              		.loc 1 529 0
 1986 0964 1A46     		mov	r2, r3
 1987 0966 0993     		str	r3, [sp, #36]
 1988 0968 0123     		movs	r3, #1
 1989 096a 1370     		strb	r3, [r2]
 1990 096c FFF7F5BB 		b	.L47
 1991              	.LVL163:
 1992              	.L115:
 1993              	.LBB56:
 606:Src/main.c    ****       FP_duty = 60;
 1994              		.loc 1 606 0
 1995 0970 3B2B     		cmp	r3, #59
 607:Src/main.c    ****     }
 1996              		.loc 1 607 0
 1997 0972 DCBF     		itt	le
 1998 0974 3C23     		movle	r3, #60
 1999 0976 2380     		strhle	r3, [r4]	@ movhi
 2000 0978 04E5     		b	.L52
 2001              	.L129:
 2002 097a 00BF     		.align	2
 2003              	.L128:
 2004 097c 00000000 		.word	u8g2
 2005 0980 00000000 		.word	u8g2_font_7x14B_tf
 2006 0984 88000000 		.word	.LC15
 2007 0988 00000000 		.word	.LANCHOR12
 2008 098c 98000000 		.word	.LC16
 2009 0990 A0000000 		.word	.LC18
 2010 0994 9C000000 		.word	.LC17
 2011 0998 AC000000 		.word	.LC19
 2012              	.LBE56:
 2013              		.cfi_endproc
 2014              	.LFE132:
 2016              		.section	.text._Error_Handler,"ax",%progbits
 2017              		.align	1
 2018              		.p2align 2,,3
 2019              		.global	_Error_Handler
 2020              		.syntax unified
 2021              		.thumb
 2022              		.thumb_func
 2023              		.fpu fpv4-sp-d16
 2025              	_Error_Handler:
 2026              	.LFB134:
 950:Src/main.c    **** 
 951:Src/main.c    **** /* USER CODE BEGIN 4 */
 952:Src/main.c    **** 
 953:Src/main.c    **** /* USER CODE END 4 */
 954:Src/main.c    **** 
 955:Src/main.c    **** /**
 956:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 957:Src/main.c    ****   * @param  None
 958:Src/main.c    ****   * @retval None
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 58


 959:Src/main.c    ****   */
 960:Src/main.c    **** void _Error_Handler(char * file, int line)
 961:Src/main.c    **** {
 2027              		.loc 1 961 0
 2028              		.cfi_startproc
 2029              		@ Volatile: function does not return.
 2030              		@ args = 0, pretend = 0, frame = 0
 2031              		@ frame_needed = 0, uses_anonymous_args = 0
 2032              		@ link register save eliminated.
 2033              	.LVL164:
 2034              	.L131:
 2035 0000 FEE7     		b	.L131
 2036              		.cfi_endproc
 2037              	.LFE134:
 2039 0002 00BF     		.section	.text.assert_failed,"ax",%progbits
 2040              		.align	1
 2041              		.p2align 2,,3
 2042              		.global	assert_failed
 2043              		.syntax unified
 2044              		.thumb
 2045              		.thumb_func
 2046              		.fpu fpv4-sp-d16
 2048              	assert_failed:
 2049              	.LFB135:
 962:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 963:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 964:Src/main.c    ****   while(1) 
 965:Src/main.c    ****   {
 966:Src/main.c    ****   }
 967:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */ 
 968:Src/main.c    **** }
 969:Src/main.c    **** 
 970:Src/main.c    **** #ifdef USE_FULL_ASSERT
 971:Src/main.c    **** 
 972:Src/main.c    **** /**
 973:Src/main.c    ****    * @brief Reports the name of the source file and the source line number
 974:Src/main.c    ****    * where the assert_param error has occurred.
 975:Src/main.c    ****    * @param file: pointer to the source file name
 976:Src/main.c    ****    * @param line: assert_param error line source number
 977:Src/main.c    ****    * @retval None
 978:Src/main.c    ****    */
 979:Src/main.c    **** void assert_failed(uint8_t* file, uint32_t line)
 980:Src/main.c    **** {
 2050              		.loc 1 980 0
 2051              		.cfi_startproc
 2052              		@ args = 0, pretend = 0, frame = 0
 2053              		@ frame_needed = 0, uses_anonymous_args = 0
 2054              		@ link register save eliminated.
 2055              	.LVL165:
 981:Src/main.c    ****   /* USER CODE BEGIN 6 */
 982:Src/main.c    ****   /* User can add his own implementation to report the file name and line number,
 983:Src/main.c    ****     ex: printf("Wrong parameters value: file %s on line %d¥r¥n", file, line) */
 984:Src/main.c    ****   /* USER CODE END 6 */
 985:Src/main.c    **** 
 986:Src/main.c    **** }
 2056              		.loc 1 986 0
 2057 0000 7047     		bx	lr
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 59


 2058              		.cfi_endproc
 2059              	.LFE135:
 2061              		.comm	adc,20,4
 2062              		.comm	g_ADCBuffer,20,4
 2063              		.comm	Gsens_Z,2,2
 2064              		.comm	Gsens_Z0,1,1
 2065              		.comm	Gsens_Z1,1,1
 2066              		.comm	Gsens_Y,2,2
 2067              		.comm	Gsens_Y0,1,1
 2068              		.comm	Gsens_Y1,1,1
 2069              		.comm	Gsens_X,2,2
 2070              		.comm	Gsens_X0,1,1
 2071              		.comm	Gsens_X1,1,1
 2072              		.comm	Gsens_EN,1,1
 2073              		.global	FP_duty
 2074              		.global	FP_volt
 2075              		.global	O2_volt
 2076              		.global	meas_value
 2077              		.global	meas_sign
 2078              		.global	meas_frac
 2079              		.global	meas_digit
 2080              		.global	meas_unit
 2081              		.global	meas_name
 2082              		.global	idct_status
 2083              		.global	idct_name
 2084              		.global	cursor
 2085              		.comm	setting,1,1
 2086              		.comm	mode,1,1
 2087              		.global	MT
 2088              		.global	gear
 2089              		.global	speed
 2090              		.global	update_display
 2091              		.comm	u8g2,128,4
 2092              		.global	logo_bits
 2093 0002 00BF     		.section	.bss.cursor,"aw",%nobits
 2094              		.set	.LANCHOR12,. + 0
 2097              	cursor:
 2098 0000 00       		.space	1
 2099              		.section	.bss.gear,"aw",%nobits
 2102              	gear:
 2103 0000 00       		.space	1
 2104              		.section	.bss.update_display,"aw",%nobits
 2107              	update_display:
 2108 0000 00       		.space	1
 2109              		.section	.data.FP_duty,"aw",%progbits
 2110              		.align	1
 2111              		.set	.LANCHOR4,. + 0
 2114              	FP_duty:
 2115 0000 6400     		.short	100
 2116              		.section	.data.FP_volt,"aw",%progbits
 2117              		.align	1
 2118              		.set	.LANCHOR6,. + 0
 2121              	FP_volt:
 2122 0000 4A01     		.short	330
 2123              		.section	.data.MT,"aw",%progbits
 2124              		.align	3
 2127              	MT:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 60


 2128 0000 77BE9F1A 		.word	446676599
 2129 0004 2FDD0B40 		.word	1074519343
 2130 0008 1F85EB51 		.word	1374389535
 2131 000c B81E0040 		.word	1073749688
 2132 0010 A8C64B37 		.word	927712936
 2133 0014 8941F63F 		.word	1073103241
 2134 0018 00000000 		.word	0
 2135 001c 0000F03F 		.word	1072693248
 2136 0020 986E1283 		.word	2199023256
 2137 0024 C0CAE93F 		.word	1072286400
 2138              		.section	.data.O2_volt,"aw",%progbits
 2139              		.align	1
 2140              		.set	.LANCHOR5,. + 0
 2143              	O2_volt:
 2144 0000 4A01     		.short	330
 2145              		.section	.data.meas_value,"aw",%progbits
 2146              		.align	2
 2147              		.set	.LANCHOR7,. + 0
 2150              	meas_value:
 2151 0000 6900     		.short	105
 2152 0002 EB00     		.short	235
 2153 0004 8502     		.short	645
 2154 0006 5900     		.short	89
 2155 0008 4900     		.short	73
 2156 000a 8F00     		.short	143
 2157              		.section	.data.speed,"aw",%progbits
 2158              		.align	1
 2161              	speed:
 2162 0000 F000     		.short	240
 2163              		.section	.rodata.draw_MeasLabels.str1.4,"aMS",%progbits,1
 2164              		.align	2
 2165              	.LC0:
 2166 0000 25202000 		.ascii	"%  \000"
 2167              	.LC1:
 2168 0004 44555459 		.ascii	"DUTY\000"
 2168      00
 2169              		.section	.rodata.idct_name,"a",%progbits
 2170              		.align	2
 2171              		.set	.LANCHOR0,. + 0
 2174              	idct_name:
 2175 0000 43414E00 		.ascii	"CAN\000"
 2176 0004 00       		.space	1
 2177 0005 4F324642 		.ascii	"O2FB\000"
 2177      00
 2178              		.section	.rodata.idct_status,"a",%progbits
 2179              		.align	2
 2180              		.set	.LANCHOR8,. + 0
 2183              	idct_status:
 2184 0000 01       		.byte	1
 2185 0001 01       		.byte	1
 2186              		.section	.rodata.logo_bits,"a",%progbits
 2187              		.align	2
 2188              		.set	.LANCHOR3,. + 0
 2191              	logo_bits:
 2192 0000 00       		.byte	0
 2193 0001 00       		.byte	0
 2194 0002 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 61


 2195 0003 00       		.byte	0
 2196 0004 00       		.byte	0
 2197 0005 00       		.byte	0
 2198 0006 00       		.byte	0
 2199 0007 00       		.byte	0
 2200 0008 00       		.byte	0
 2201 0009 00       		.byte	0
 2202 000a 00       		.byte	0
 2203 000b 00       		.byte	0
 2204 000c 00       		.byte	0
 2205 000d 00       		.byte	0
 2206 000e 00       		.byte	0
 2207 000f 00       		.byte	0
 2208 0010 00       		.byte	0
 2209 0011 00       		.byte	0
 2210 0012 00       		.byte	0
 2211 0013 00       		.byte	0
 2212 0014 00       		.byte	0
 2213 0015 00       		.byte	0
 2214 0016 00       		.byte	0
 2215 0017 00       		.byte	0
 2216 0018 00       		.byte	0
 2217 0019 00       		.byte	0
 2218 001a F0       		.byte	-16
 2219 001b 0F       		.byte	15
 2220 001c 00       		.byte	0
 2221 001d 00       		.byte	0
 2222 001e 00       		.byte	0
 2223 001f FC       		.byte	-4
 2224 0020 FF       		.byte	-1
 2225 0021 FF       		.byte	-1
 2226 0022 3F       		.byte	63
 2227 0023 00       		.byte	0
 2228 0024 80       		.byte	-128
 2229 0025 FF       		.byte	-1
 2230 0026 FF       		.byte	-1
 2231 0027 FF       		.byte	-1
 2232 0028 FF       		.byte	-1
 2233 0029 01       		.byte	1
 2234 002a E0       		.byte	-32
 2235 002b 1F       		.byte	31
 2236 002c 00       		.byte	0
 2237 002d 80       		.byte	-128
 2238 002e FF       		.byte	-1
 2239 002f 07       		.byte	7
 2240 0030 E0       		.byte	-32
 2241 0031 01       		.byte	1
 2242 0032 00       		.byte	0
 2243 0033 80       		.byte	-128
 2244 0034 81       		.byte	-127
 2245 0035 07       		.byte	7
 2246 0036 E0       		.byte	-32
 2247 0037 01       		.byte	1
 2248 0038 00       		.byte	0
 2249 0039 80       		.byte	-128
 2250 003a 81       		.byte	-127
 2251 003b 07       		.byte	7
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 62


 2252 003c C0       		.byte	-64
 2253 003d E1       		.byte	-31
 2254 003e 07       		.byte	7
 2255 003f C0       		.byte	-64
 2256 0040 80       		.byte	-128
 2257 0041 03       		.byte	3
 2258 0042 00       		.byte	0
 2259 0043 FC       		.byte	-4
 2260 0044 1F       		.byte	31
 2261 0045 E0       		.byte	-32
 2262 0046 80       		.byte	-128
 2263 0047 03       		.byte	3
 2264 0048 00       		.byte	0
 2265 0049 FE       		.byte	-2
 2266 004a 7F       		.byte	127
 2267 004b 70       		.byte	112
 2268 004c C0       		.byte	-64
 2269 004d 01       		.byte	1
 2270 004e 00       		.byte	0
 2271 004f 0F       		.byte	15
 2272 0050 FE       		.byte	-2
 2273 0051 39       		.byte	57
 2274 0052 E0       		.byte	-32
 2275 0053 00       		.byte	0
 2276 0054 00       		.byte	0
 2277 0055 07       		.byte	7
 2278 0056 F8       		.byte	-8
 2279 0057 1F       		.byte	31
 2280 0058 F0       		.byte	-16
 2281 0059 00       		.byte	0
 2282 005a 00       		.byte	0
 2283 005b 0E       		.byte	14
 2284 005c E0       		.byte	-32
 2285 005d 1F       		.byte	31
 2286 005e 78       		.byte	120
 2287 005f 00       		.byte	0
 2288 0060 00       		.byte	0
 2289 0061 0C       		.byte	12
 2290 0062 C0       		.byte	-64
 2291 0063 FF       		.byte	-1
 2292 0064 3F       		.byte	63
 2293 0065 00       		.byte	0
 2294 0066 00       		.byte	0
 2295 0067 18       		.byte	24
 2296 0068 00       		.byte	0
 2297 0069 FF       		.byte	-1
 2298 006a 1F       		.byte	31
 2299 006b 00       		.byte	0
 2300 006c 00       		.byte	0
 2301 006d 38       		.byte	56
 2302 006e C0       		.byte	-64
 2303 006f FF       		.byte	-1
 2304 0070 0F       		.byte	15
 2305 0071 00       		.byte	0
 2306 0072 00       		.byte	0
 2307 0073 70       		.byte	112
 2308 0074 E0       		.byte	-32
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 63


 2309 0075 F1       		.byte	-15
 2310 0076 03       		.byte	3
 2311 0077 00       		.byte	0
 2312 0078 00       		.byte	0
 2313 0079 E0       		.byte	-32
 2314 007a 78       		.byte	120
 2315 007b 00       		.byte	0
 2316 007c 00       		.byte	0
 2317 007d 00       		.byte	0
 2318 007e 00       		.byte	0
 2319 007f C0       		.byte	-64
 2320 0080 3F       		.byte	63
 2321 0081 E0       		.byte	-32
 2322 0082 01       		.byte	1
 2323 0083 00       		.byte	0
 2324 0084 00       		.byte	0
 2325 0085 80       		.byte	-128
 2326 0086 1F       		.byte	31
 2327 0087 F0       		.byte	-16
 2328 0088 01       		.byte	1
 2329 0089 00       		.byte	0
 2330 008a 00       		.byte	0
 2331 008b 00       		.byte	0
 2332 008c 07       		.byte	7
 2333 008d F8       		.byte	-8
 2334 008e 00       		.byte	0
 2335 008f 00       		.byte	0
 2336 0090 00       		.byte	0
 2337 0091 00       		.byte	0
 2338 0092 1E       		.byte	30
 2339 0093 7C       		.byte	124
 2340 0094 00       		.byte	0
 2341 0095 00       		.byte	0
 2342 0096 00       		.byte	0
 2343 0097 00       		.byte	0
 2344 0098 F8       		.byte	-8
 2345 0099 1F       		.byte	31
 2346 009a 00       		.byte	0
 2347 009b 00       		.byte	0
 2348 009c 00       		.byte	0
 2349 009d 00       		.byte	0
 2350 009e F0       		.byte	-16
 2351 009f 0F       		.byte	15
 2352 00a0 00       		.byte	0
 2353 00a1 00       		.byte	0
 2354 00a2 00       		.byte	0
 2355 00a3 00       		.byte	0
 2356 00a4 80       		.byte	-128
 2357 00a5 01       		.byte	1
 2358 00a6 00       		.byte	0
 2359 00a7 00       		.byte	0
 2360 00a8 00       		.byte	0
 2361 00a9 00       		.byte	0
 2362 00aa 00       		.byte	0
 2363 00ab 00       		.byte	0
 2364 00ac 00       		.byte	0
 2365 00ad 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 64


 2366 00ae 00       		.byte	0
 2367 00af 00       		.byte	0
 2368 00b0 00       		.byte	0
 2369 00b1 00       		.byte	0
 2370 00b2 00       		.byte	0
 2371 00b3 00       		.byte	0
 2372 00b4 00       		.byte	0
 2373 00b5 00       		.byte	0
 2374 00b6 00       		.byte	0
 2375 00b7 00       		.byte	0
 2376 00b8 00       		.byte	0
 2377 00b9 00       		.byte	0
 2378 00ba 00       		.byte	0
 2379 00bb 00       		.byte	0
 2380 00bc 00       		.byte	0
 2381 00bd 00       		.byte	0
 2382 00be 00       		.byte	0
 2383 00bf 00       		.byte	0
 2384 00c0 00       		.byte	0
 2385 00c1 00       		.byte	0
 2386 00c2 00       		.byte	0
 2387 00c3 00       		.byte	0
 2388 00c4 00       		.byte	0
 2389 00c5 00       		.byte	0
 2390 00c6 00       		.byte	0
 2391 00c7 4C       		.byte	76
 2392 00c8 1C       		.byte	28
 2393 00c9 00       		.byte	0
 2394 00ca 00       		.byte	0
 2395 00cb 00       		.byte	0
 2396 00cc 00       		.byte	0
 2397 00cd 32       		.byte	50
 2398 00ce 0E       		.byte	14
 2399 00cf 00       		.byte	0
 2400 00d0 00       		.byte	0
 2401 00d1 00       		.byte	0
 2402 00d2 00       		.byte	0
 2403 00d3 00       		.byte	0
 2404 00d4 C6       		.byte	-58
 2405 00d5 00       		.byte	0
 2406 00d6 18       		.byte	24
 2407 00d7 00       		.byte	0
 2408 00d8 00       		.byte	0
 2409 00d9 7C       		.byte	124
 2410 00da EF       		.byte	-17
 2411 00db FC       		.byte	-4
 2412 00dc 39       		.byte	57
 2413 00dd 00       		.byte	0
 2414 00de 00       		.byte	0
 2415 00df 4E       		.byte	78
 2416 00e0 C6       		.byte	-58
 2417 00e1 B8       		.byte	-72
 2418 00e2 31       		.byte	49
 2419 00e3 00       		.byte	0
 2420 00e4 00       		.byte	0
 2421 00e5 3E       		.byte	62
 2422 00e6 C6       		.byte	-58
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 65


 2423 00e7 98       		.byte	-104
 2424 00e8 31       		.byte	49
 2425 00e9 00       		.byte	0
 2426 00ea 00       		.byte	0
 2427 00eb 3C       		.byte	60
 2428 00ec C6       		.byte	-58
 2429 00ed 98       		.byte	-104
 2430 00ee 31       		.byte	49
 2431 00ef 00       		.byte	0
 2432 00f0 00       		.byte	0
 2433 00f1 0E       		.byte	14
 2434 00f2 C6       		.byte	-58
 2435 00f3 98       		.byte	-104
 2436 00f4 31       		.byte	49
 2437 00f5 00       		.byte	0
 2438 00f6 00       		.byte	0
 2439 00f7 4E       		.byte	78
 2440 00f8 CE       		.byte	-50
 2441 00f9 99       		.byte	-103
 2442 00fa 31       		.byte	49
 2443 00fb 00       		.byte	0
 2444 00fc 00       		.byte	0
 2445 00fd 7C       		.byte	124
 2446 00fe EF       		.byte	-17
 2447 00ff FD       		.byte	-3
 2448 0100 7B       		.byte	123
 2449 0101 00       		.byte	0
 2450 0102 00       		.byte	0
 2451 0103 00       		.byte	0
 2452 0104 00       		.byte	0
 2453 0105 00       		.byte	0
 2454 0106 00       		.byte	0
 2455 0107 00       		.byte	0
 2456 0108 00       		.byte	0
 2457 0109 00       		.byte	0
 2458 010a 00       		.byte	0
 2459 010b 00       		.byte	0
 2460 010c 00       		.byte	0
 2461 010d 00       		.byte	0
 2462 010e 00       		.byte	0
 2463 010f 00       		.byte	0
 2464 0110 00       		.byte	0
 2465 0111 00       		.byte	0
 2466 0112 00       		.byte	0
 2467 0113 00       		.byte	0
 2468 0114 00       		.byte	0
 2469 0115 00       		.byte	0
 2470 0116 00       		.byte	0
 2471 0117 00       		.byte	0
 2472 0118 00       		.byte	0
 2473 0119 00       		.byte	0
 2474 011a 00       		.byte	0
 2475 011b 00       		.byte	0
 2476 011c 00       		.byte	0
 2477 011d 00       		.byte	0
 2478 011e 00       		.byte	0
 2479 011f 00       		.byte	0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 66


 2480              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 2481              		.align	2
 2482              	.LC2:
 2483 0000 4D756C74 		.ascii	"Multi Function Meter\000"
 2483      69204675 
 2483      6E637469 
 2483      6F6E204D 
 2483      65746572 
 2484 0015 000000   		.space	3
 2485              	.LC3:
 2486 0018 5265762E 		.ascii	"Rev. 0.2a\000"
 2486      20302E32 
 2486      6100
 2487 0022 0000     		.space	2
 2488              	.LC4:
 2489 0024 48656C6C 		.ascii	"Hello. This is MFM.\012\000"
 2489      6F2E2054 
 2489      68697320 
 2489      6973204D 
 2489      464D2E0A 
 2490 0039 000000   		.space	3
 2491              	.LC5:
 2492 003c 4144584C 		.ascii	"ADXL324 DEVID %d\012\000"
 2492      33323420 
 2492      44455649 
 2492      44202564 
 2492      0A00
 2493 004e 0000     		.space	2
 2494              	.LC6:
 2495 0050 2825642C 		.ascii	"(%d,%d,%d)\012\000"
 2495      25642C25 
 2495      64290A00 
 2496              	.LC7:
 2497 005c 55502000 		.ascii	"UP \000"
 2498              	.LC8:
 2499 0060 444F574E 		.ascii	"DOWN \000"
 2499      2000
 2500 0066 0000     		.space	2
 2501              	.LC9:
 2502 0068 454E5445 		.ascii	"ENTER \000"
 2502      522000
 2503 006f 00       		.space	1
 2504              	.LC10:
 2505 0070 6B506100 		.ascii	"kPa\000"
 2506              	.LC11:
 2507 0074 4D415000 		.ascii	"MAP\000"
 2508              	.LC12:
 2509 0078 4700     		.ascii	"G\000"
 2510 007a 0000     		.space	2
 2511              	.LC13:
 2512 007c 4C617447 		.ascii	"LatG\000"
 2512      00
 2513 0081 000000   		.space	3
 2514              	.LC14:
 2515 0084 00       		.ascii	"\000"
 2516 0085 000000   		.space	3
 2517              	.LC15:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 67


 2518 0088 4D6F6465 		.ascii	"Mode Setting\000"
 2518      20536574 
 2518      74696E67 
 2518      00
 2519 0095 000000   		.space	3
 2520              	.LC16:
 2521 0098 3E00     		.ascii	">\000"
 2522 009a 0000     		.space	2
 2523              	.LC17:
 2524 009c 2000     		.ascii	" \000"
 2525 009e 0000     		.space	2
 2526              	.LC18:
 2527 00a0 4D756C74 		.ascii	"Multi-Meter\000"
 2527      692D4D65 
 2527      74657200 
 2528              	.LC19:
 2529 00ac 53636F70 		.ascii	"Scope\000"
 2529      6500
 2530              		.section	.rodata.meas_digit,"a",%progbits
 2531              		.align	2
 2532              		.set	.LANCHOR9,. + 0
 2535              	meas_digit:
 2536 0000 03       		.byte	3
 2537 0001 03       		.byte	3
 2538 0002 03       		.byte	3
 2539 0003 03       		.byte	3
 2540 0004 03       		.byte	3
 2541 0005 03       		.byte	3
 2542              		.section	.rodata.meas_frac,"a",%progbits
 2543              		.align	2
 2544              		.set	.LANCHOR10,. + 0
 2547              	meas_frac:
 2548 0000 02       		.byte	2
 2549 0001 01       		.byte	1
 2550 0002 01       		.byte	1
 2551 0003 00       		.byte	0
 2552 0004 00       		.byte	0
 2553 0005 02       		.byte	2
 2554              		.section	.rodata.meas_name,"a",%progbits
 2555              		.align	2
 2556              		.set	.LANCHOR2,. + 0
 2559              	meas_name:
 2560 0000 4D415000 		.ascii	"MAP\000"
 2561 0004 000000   		.space	3
 2562 0007 4F494C50 		.ascii	"OILP\000"
 2562      00
 2563 000c 0000     		.space	2
 2564 000e 46505600 		.ascii	"FPV\000"
 2565 0012 000000   		.space	3
 2566 0015 45435400 		.ascii	"ECT\000"
 2567 0019 000000   		.space	3
 2568 001c 4F494C54 		.ascii	"OILT\000"
 2568      00
 2569 0021 0000     		.space	2
 2570 0023 4F3200   		.ascii	"O2\000"
 2571 0026 00000000 		.space	4
 2572              		.section	.rodata.meas_sign,"a",%progbits
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 68


 2573              		.align	2
 2574              		.set	.LANCHOR11,. + 0
 2577              	meas_sign:
 2578 0000 01       		.byte	1
 2579 0001 00       		.byte	0
 2580 0002 00       		.byte	0
 2581 0003 00       		.byte	0
 2582 0004 00       		.byte	0
 2583 0005 00       		.byte	0
 2584              		.section	.rodata.meas_unit,"a",%progbits
 2585              		.align	2
 2586              		.set	.LANCHOR1,. + 0
 2589              	meas_unit:
 2590 0000 6B706100 		.ascii	"kpa\000"
 2591 0004 00       		.space	1
 2592 0005 6B706100 		.ascii	"kpa\000"
 2593 0009 00       		.space	1
 2594 000a 56202000 		.ascii	"V  \000"
 2595 000e 00       		.space	1
 2596 000f B0       		.byte	-80
 2597 0010 43       		.byte	67
 2598 0011 00       		.byte	0
 2599 0012 0000     		.space	2
 2600 0014 B0       		.byte	-80
 2601 0015 43       		.byte	67
 2602 0016 00       		.byte	0
 2603 0017 0000     		.space	2
 2604 0019 5600     		.ascii	"V\000"
 2605 001b 000000   		.space	3
 2606              		.text
 2607              	.Letext0:
 2608              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 2609              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 2610              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 2611              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 2612              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 2613              		.file 7 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 2614              		.file 8 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 2615              		.file 9 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 2616              		.file 10 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 2617              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2618              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 2619              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc_ex.h"
 2620              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 2621              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc_ex.h"
 2622              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_adc.h"
 2623              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 2624              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2c.h"
 2625              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_spi.h"
 2626              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 2627              		.file 21 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 2628              		.file 22 "Inc/adc.h"
 2629              		.file 23 "Inc/can.h"
 2630              		.file 24 "Inc/i2c.h"
 2631              		.file 25 "Inc/spi.h"
 2632              		.file 26 "Inc/tim.h"
 2633              		.file 27 "Inc/usart.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 69


 2634              		.file 28 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/math.h"
 2635              		.file 29 "/Users/imashio/Electronics/ARM/_Library/u8x8.h"
 2636              		.file 30 "/Users/imashio/Electronics/ARM/_Library/u8g2.h"
 2637              		.file 31 "/Users/imashio/Electronics/ARM/_Library/flag.h"
 2638              		.file 32 "Inc/defi_decoder.h"
 2639              		.file 33 "Src/pulse_counter.h"
 2640              		.file 34 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 2641              		.file 35 "/Users/imashio/Electronics/ARM/_Library/draw_Value.h"
 2642              		.file 36 "/Users/imashio/Electronics/ARM/_Library/draw_IndicatorBox.h"
 2643              		.file 37 "/Users/imashio/Electronics/ARM/_Library/usart_transmit_printf.h"
 2644              		.file 38 "/Users/imashio/Electronics/ARM/_Library/draw_BarGraph.h"
 2645              		.file 39 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 2646              		.file 40 "Inc/gpio.h"
 2647              		.file 41 "Inc/dma.h"
 2648              		.file 42 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 2649              		.file 43 "<built-in>"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 70


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:18     .text.ADXL345_RegWrite:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:26     .text.ADXL345_RegWrite:0000000000000000 ADXL345_RegWrite
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:67     .text.ADXL345_RegWrite:0000000000000024 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:72     .text.ADXL345_RegRead_1byte:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:80     .text.ADXL345_RegRead_1byte:0000000000000000 ADXL345_RegRead_1byte
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:132    .text.ADXL345_RegRead_1byte:0000000000000034 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:137    .text.draw_indicators:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:145    .text.draw_indicators:0000000000000000 draw_indicators
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:196    .text.draw_indicators:0000000000000038 $d
                            *COM*:0000000000000080 u8g2
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:202    .text.draw_MeasLabels:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:210    .text.draw_MeasLabels:0000000000000000 draw_MeasLabels
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:327    .text.draw_MeasLabels:00000000000000d0 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:336    .text.draw_MeasLabels_Rotary:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:344    .text.draw_MeasLabels_Rotary:0000000000000000 draw_MeasLabels_Rotary
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:400    .text.draw_MeasLabels_Rotary:000000000000003c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:407    .text.HAL_ADC_ConvCpltCallback:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:415    .text.HAL_ADC_ConvCpltCallback:0000000000000000 HAL_ADC_ConvCpltCallback
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:441    .text.HAL_ADC_ConvCpltCallback:0000000000000018 $d
                            *COM*:0000000000000014 g_ADCBuffer
                            *COM*:0000000000000014 adc
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:447    .text.SystemClock_Config:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:455    .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:577    .text.startup.main:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:585    .text.startup.main:0000000000000000 main
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:995    .text.startup.main:0000000000000228 $d
                            *COM*:0000000000000001 Gsens_EN
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:1031   .text.startup.main:00000000000002a8 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:1460   .text.startup.main:000000000000057c $d
                            *COM*:0000000000000001 mode
                            *COM*:0000000000000001 setting
                            *COM*:0000000000000001 Gsens_X1
                            *COM*:0000000000000002 Gsens_Z
                            *COM*:0000000000000001 Gsens_Y1
                            *COM*:0000000000000001 Gsens_Z1
                            *COM*:0000000000000002 Gsens_X
                            *COM*:0000000000000002 Gsens_Y
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:1489   .text.startup.main:00000000000005e4 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:1891   .text.startup.main:00000000000008b0 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:1911   .text.startup.main:00000000000008f4 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2004   .text.startup.main:000000000000097c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2017   .text._Error_Handler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2025   .text._Error_Handler:0000000000000000 _Error_Handler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2040   .text.assert_failed:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2048   .text.assert_failed:0000000000000000 assert_failed
                            *COM*:0000000000000001 Gsens_Z0
                            *COM*:0000000000000001 Gsens_Y0
                            *COM*:0000000000000001 Gsens_X0
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2114   .data.FP_duty:0000000000000000 FP_duty
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2121   .data.FP_volt:0000000000000000 FP_volt
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2143   .data.O2_volt:0000000000000000 O2_volt
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2150   .data.meas_value:0000000000000000 meas_value
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2577   .rodata.meas_sign:0000000000000000 meas_sign
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2547   .rodata.meas_frac:0000000000000000 meas_frac
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2535   .rodata.meas_digit:0000000000000000 meas_digit
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 71


/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2589   .rodata.meas_unit:0000000000000000 meas_unit
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2559   .rodata.meas_name:0000000000000000 meas_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2183   .rodata.idct_status:0000000000000000 idct_status
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2174   .rodata.idct_name:0000000000000000 idct_name
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2097   .bss.cursor:0000000000000000 cursor
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2127   .data.MT:0000000000000000 MT
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2102   .bss.gear:0000000000000000 gear
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2161   .data.speed:0000000000000000 speed
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2107   .bss.update_display:0000000000000000 update_display
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2191   .rodata.logo_bits:0000000000000000 logo_bits
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2098   .bss.cursor:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2103   .bss.gear:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2108   .bss.update_display:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2110   .data.FP_duty:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2117   .data.FP_volt:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2124   .data.MT:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2139   .data.O2_volt:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2146   .data.meas_value:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2158   .data.speed:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2164   .rodata.draw_MeasLabels.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2170   .rodata.idct_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2179   .rodata.idct_status:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2187   .rodata.logo_bits:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2481   .rodata.main.str1.4:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2531   .rodata.meas_digit:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2543   .rodata.meas_frac:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2555   .rodata.meas_name:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2573   .rodata.meas_sign:0000000000000000 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s:2585   .rodata.meas_unit:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_I2C_Master_Transmit
hi2c1
HAL_I2C_Master_Receive
draw_IndicatorBox
draw_MeasLabelUnit
draw_Value
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
memset
MX_GPIO_Init
MX_DMA_Init
MX_ADC1_Init
MX_CAN_Init
MX_I2C1_Init
MX_SPI1_Init
MX_TIM1_Init
MX_TIM2_Init
MX_TIM3_Init
MX_TIM6_Init
MX_USART1_UART_Init
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctOITU9.s 			page 72


MX_USART2_UART_Init
HAL_TIM_PWM_Start
HAL_TIM_Base_Start_IT
HAL_ADC_Start_DMA
HAL_UART_Receive_IT
u8g2_Setup_ssd1309_128x64_noname2_f
HAL_GPIO_WritePin
HAL_Delay
u8x8_InitDisplay
u8x8_SetPowerSave
u8x8_SetContrast
u8g2_ClearDisplay
u8g2_DrawXBMP
u8g2_SetFont
u8g2_DrawStr
u8g2_SendBuffer
u8g2_ClearBuffer
HAL_UART_Transmit_printf
htim1
htim2
htim3
htim6
hadc1
UART1_Data
huart1
u8x8_gpio_and_delay_STM32F303
u8x8_byte_4wire_hw_spi
u8g2_cb_r0
u8g2_font_5x7_tf
huart2
DEFI_value
flag_meas
flag_disp
defi_decoder
HAL_NVIC_DisableIRQ
draw_CircularMeter_Init
draw_CircularMeter
flag_sw
rpm
UART1_RxData
draw_Wave_axis
draw_Wave
draw_BarGraph
draw_MeasUnit
u8g2_font_7x14B_tf
