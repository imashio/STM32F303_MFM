ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SysTick_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	SysTick_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	SysTick_Handler:
  26              	.LFB126:
  27              		.file 1 "Src/stm32f3xx_it.c"
   1:Src/stm32f3xx_it.c **** /**
   2:Src/stm32f3xx_it.c ****   ******************************************************************************
   3:Src/stm32f3xx_it.c ****   * @file    stm32f3xx_it.c
   4:Src/stm32f3xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f3xx_it.c ****   ******************************************************************************
   6:Src/stm32f3xx_it.c ****   *
   7:Src/stm32f3xx_it.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
   8:Src/stm32f3xx_it.c ****   *
   9:Src/stm32f3xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f3xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f3xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f3xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f3xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f3xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f3xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f3xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f3xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f3xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f3xx_it.c ****   *
  20:Src/stm32f3xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f3xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f3xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f3xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f3xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f3xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f3xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f3xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f3xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f3xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f3xx_it.c ****   *
  31:Src/stm32f3xx_it.c ****   ******************************************************************************
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s 			page 2


  32:Src/stm32f3xx_it.c ****   */
  33:Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f3xx_it.c **** #include "stm32f3xx_hal.h"
  35:Src/stm32f3xx_it.c **** #include "stm32f3xx.h"
  36:Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  37:Src/stm32f3xx_it.c **** 
  38:Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f3xx_it.c **** #include "usart.h"
  40:Src/stm32f3xx_it.c **** #include "flag.h"
  41:Src/stm32f3xx_it.c **** #include "pulse_counter.h"
  42:Src/stm32f3xx_it.c **** 
  43:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart2;
  44:Src/stm32f3xx_it.c **** 
  45:Src/stm32f3xx_it.c **** 
  46:Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  47:Src/stm32f3xx_it.c **** 
  48:Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  49:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  50:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim1;
  51:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim2;
  52:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim3;
  53:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim6;
  54:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart1;
  55:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart2;
  56:Src/stm32f3xx_it.c **** 
  57:Src/stm32f3xx_it.c **** /******************************************************************************/
  58:Src/stm32f3xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  59:Src/stm32f3xx_it.c **** /******************************************************************************/
  60:Src/stm32f3xx_it.c **** 
  61:Src/stm32f3xx_it.c **** /**
  62:Src/stm32f3xx_it.c **** * @brief This function handles System tick timer.
  63:Src/stm32f3xx_it.c **** */
  64:Src/stm32f3xx_it.c **** void SysTick_Handler(void)
  65:Src/stm32f3xx_it.c **** {
  28              		.loc 1 65 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  66:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
  67:Src/stm32f3xx_it.c **** 
  68:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
  69:Src/stm32f3xx_it.c ****   HAL_IncTick();
  37              		.loc 1 69 0
  38 0002 FFF7FEFF 		bl	HAL_IncTick
  39              	.LVL0:
  70:Src/stm32f3xx_it.c ****   HAL_SYSTICK_IRQHandler();
  40              		.loc 1 70 0
  41 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
  42              	.LVL1:
  71:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
  72:Src/stm32f3xx_it.c **** 
  73:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s 			page 3


  74:Src/stm32f3xx_it.c **** }
  43              		.loc 1 74 0
  44 000a 08BD     		pop	{r3, pc}
  45              		.cfi_endproc
  46              	.LFE126:
  48              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
  49              		.align	1
  50              		.global	EXTI1_IRQHandler
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  54              		.fpu fpv4-sp-d16
  56              	EXTI1_IRQHandler:
  57              	.LFB127:
  75:Src/stm32f3xx_it.c **** 
  76:Src/stm32f3xx_it.c **** /******************************************************************************/
  77:Src/stm32f3xx_it.c **** /* STM32F3xx Peripheral Interrupt Handlers                                    */
  78:Src/stm32f3xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
  79:Src/stm32f3xx_it.c **** /* For the available peripheral interrupt handler names,                      */
  80:Src/stm32f3xx_it.c **** /* please refer to the startup file (startup_stm32f3xx.s).                    */
  81:Src/stm32f3xx_it.c **** /******************************************************************************/
  82:Src/stm32f3xx_it.c **** 
  83:Src/stm32f3xx_it.c **** /**
  84:Src/stm32f3xx_it.c **** * @brief This function handles EXTI line 1 interrupt.
  85:Src/stm32f3xx_it.c **** */
  86:Src/stm32f3xx_it.c **** void EXTI1_IRQHandler(void)
  87:Src/stm32f3xx_it.c **** {
  58              		.loc 1 87 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62 0000 08B5     		push	{r3, lr}
  63              	.LCFI1:
  64              		.cfi_def_cfa_offset 8
  65              		.cfi_offset 3, -8
  66              		.cfi_offset 14, -4
  88:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 0 */
  89:Src/stm32f3xx_it.c **** 
  90:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI1_IRQn 0 */
  91:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
  67              		.loc 1 91 0
  68 0002 0220     		movs	r0, #2
  69 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
  70              	.LVL2:
  92:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 1 */
  93:Src/stm32f3xx_it.c ****   // SW Enter input
  94:Src/stm32f3xx_it.c ****   if(HAL_GPIO_ReadPin( GPIOF, GPIO_PIN_1 ) == 0 ){
  71              		.loc 1 94 0
  72 0008 0221     		movs	r1, #2
  73 000a 0448     		ldr	r0, .L6
  74 000c FFF7FEFF 		bl	HAL_GPIO_ReadPin
  75              	.LVL3:
  76 0010 10B9     		cbnz	r0, .L3
  95:Src/stm32f3xx_it.c ****     flag_sw = 3;
  77              		.loc 1 95 0
  78 0012 034B     		ldr	r3, .L6+4
  79 0014 0322     		movs	r2, #3
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s 			page 4


  80 0016 1A60     		str	r2, [r3]
  81              	.L3:
  96:Src/stm32f3xx_it.c ****   }
  97:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI1_IRQn 1 */
  98:Src/stm32f3xx_it.c **** }
  82              		.loc 1 98 0
  83 0018 08BD     		pop	{r3, pc}
  84              	.L7:
  85 001a 00BF     		.align	2
  86              	.L6:
  87 001c 00140048 		.word	1207964672
  88 0020 00000000 		.word	flag_sw
  89              		.cfi_endproc
  90              	.LFE127:
  92              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
  93              		.align	1
  94              		.global	EXTI4_IRQHandler
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv4-sp-d16
 100              	EXTI4_IRQHandler:
 101              	.LFB128:
  99:Src/stm32f3xx_it.c **** 
 100:Src/stm32f3xx_it.c **** /**
 101:Src/stm32f3xx_it.c **** * @brief This function handles EXTI line 4 interrupt.
 102:Src/stm32f3xx_it.c **** */
 103:Src/stm32f3xx_it.c **** void EXTI4_IRQHandler(void)
 104:Src/stm32f3xx_it.c **** {
 102              		.loc 1 104 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106 0000 08B5     		push	{r3, lr}
 107              	.LCFI2:
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 3, -8
 110              		.cfi_offset 14, -4
 105:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 0 */
 106:Src/stm32f3xx_it.c **** 
 107:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI4_IRQn 0 */
 108:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_4);
 111              		.loc 1 108 0
 112 0002 1020     		movs	r0, #16
 113 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 114              	.LVL4:
 109:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 1 */
 110:Src/stm32f3xx_it.c ****   if(HAL_GPIO_ReadPin( GPIOB, GPIO_PIN_4 ) == 0 ){ // Tacho input
 115              		.loc 1 110 0
 116 0008 1021     		movs	r1, #16
 117 000a 0448     		ldr	r0, .L12
 118 000c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 119              	.LVL5:
 120 0010 00B1     		cbz	r0, .L11
 121              	.L8:
 111:Src/stm32f3xx_it.c ****     tacho();
 112:Src/stm32f3xx_it.c ****   }
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s 			page 5


 113:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI4_IRQn 1 */
 114:Src/stm32f3xx_it.c **** }
 122              		.loc 1 114 0
 123 0012 08BD     		pop	{r3, pc}
 124              	.L11:
 111:Src/stm32f3xx_it.c ****     tacho();
 125              		.loc 1 111 0
 126 0014 FFF7FEFF 		bl	tacho
 127              	.LVL6:
 128              		.loc 1 114 0
 129 0018 FBE7     		b	.L8
 130              	.L13:
 131 001a 00BF     		.align	2
 132              	.L12:
 133 001c 00040048 		.word	1207960576
 134              		.cfi_endproc
 135              	.LFE128:
 137              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 138              		.align	1
 139              		.global	DMA1_Channel1_IRQHandler
 140              		.syntax unified
 141              		.thumb
 142              		.thumb_func
 143              		.fpu fpv4-sp-d16
 145              	DMA1_Channel1_IRQHandler:
 146              	.LFB129:
 115:Src/stm32f3xx_it.c **** 
 116:Src/stm32f3xx_it.c **** /**
 117:Src/stm32f3xx_it.c **** * @brief This function handles DMA1 channel1 global interrupt.
 118:Src/stm32f3xx_it.c **** */
 119:Src/stm32f3xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 120:Src/stm32f3xx_it.c **** {
 147              		.loc 1 120 0
 148              		.cfi_startproc
 149              		@ args = 0, pretend = 0, frame = 0
 150              		@ frame_needed = 0, uses_anonymous_args = 0
 151 0000 08B5     		push	{r3, lr}
 152              	.LCFI3:
 153              		.cfi_def_cfa_offset 8
 154              		.cfi_offset 3, -8
 155              		.cfi_offset 14, -4
 121:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 122:Src/stm32f3xx_it.c **** 
 123:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 124:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 156              		.loc 1 124 0
 157 0002 0248     		ldr	r0, .L16
 158 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 159              	.LVL7:
 125:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 126:Src/stm32f3xx_it.c **** 
 127:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 128:Src/stm32f3xx_it.c **** }
 160              		.loc 1 128 0
 161 0008 08BD     		pop	{r3, pc}
 162              	.L17:
 163 000a 00BF     		.align	2
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s 			page 6


 164              	.L16:
 165 000c 00000000 		.word	hdma_adc1
 166              		.cfi_endproc
 167              	.LFE129:
 169              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 170              		.align	1
 171              		.global	EXTI9_5_IRQHandler
 172              		.syntax unified
 173              		.thumb
 174              		.thumb_func
 175              		.fpu fpv4-sp-d16
 177              	EXTI9_5_IRQHandler:
 178              	.LFB130:
 129:Src/stm32f3xx_it.c **** 
 130:Src/stm32f3xx_it.c **** /**
 131:Src/stm32f3xx_it.c **** * @brief This function handles EXTI line[9:5] interrupts.
 132:Src/stm32f3xx_it.c **** */
 133:Src/stm32f3xx_it.c **** void EXTI9_5_IRQHandler(void)
 134:Src/stm32f3xx_it.c **** {
 179              		.loc 1 134 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183 0000 08B5     		push	{r3, lr}
 184              	.LCFI4:
 185              		.cfi_def_cfa_offset 8
 186              		.cfi_offset 3, -8
 187              		.cfi_offset 14, -4
 135:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 0 */
 136:Src/stm32f3xx_it.c **** 
 137:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 0 */
 138:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_5);
 188              		.loc 1 138 0
 189 0002 2020     		movs	r0, #32
 190 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 191              	.LVL8:
 139:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_6);
 192              		.loc 1 139 0
 193 0008 4020     		movs	r0, #64
 194 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 195              	.LVL9:
 140:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 1 */
 141:Src/stm32f3xx_it.c ****   // SW "Up"/"Down" input
 142:Src/stm32f3xx_it.c ****   // UP key : PB5
 143:Src/stm32f3xx_it.c ****   if(HAL_GPIO_ReadPin( GPIOB, GPIO_PIN_5 ) == 0 ){
 196              		.loc 1 143 0
 197 000e 2021     		movs	r1, #32
 198 0010 0948     		ldr	r0, .L22
 199 0012 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 200              	.LVL10:
 201 0016 18B9     		cbnz	r0, .L19
 144:Src/stm32f3xx_it.c ****     flag_sw = 1;
 202              		.loc 1 144 0
 203 0018 084B     		ldr	r3, .L22+4
 204 001a 0122     		movs	r2, #1
 205 001c 1A60     		str	r2, [r3]
 206              	.L18:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s 			page 7


 145:Src/stm32f3xx_it.c ****   // DOWN key : PA6
 146:Src/stm32f3xx_it.c ****   }else if(HAL_GPIO_ReadPin( GPIOA, GPIO_PIN_6 ) == 0 ){
 147:Src/stm32f3xx_it.c ****     flag_sw = 2;
 148:Src/stm32f3xx_it.c ****   }
 149:Src/stm32f3xx_it.c **** 
 150:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 1 */
 151:Src/stm32f3xx_it.c **** }
 207              		.loc 1 151 0
 208 001e 08BD     		pop	{r3, pc}
 209              	.L19:
 146:Src/stm32f3xx_it.c ****     flag_sw = 2;
 210              		.loc 1 146 0
 211 0020 4021     		movs	r1, #64
 212 0022 4FF09040 		mov	r0, #1207959552
 213 0026 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 214              	.LVL11:
 215 002a 0028     		cmp	r0, #0
 216 002c F7D1     		bne	.L18
 147:Src/stm32f3xx_it.c ****   }
 217              		.loc 1 147 0
 218 002e 034B     		ldr	r3, .L22+4
 219 0030 0222     		movs	r2, #2
 220 0032 1A60     		str	r2, [r3]
 221              		.loc 1 151 0
 222 0034 F3E7     		b	.L18
 223              	.L23:
 224 0036 00BF     		.align	2
 225              	.L22:
 226 0038 00040048 		.word	1207960576
 227 003c 00000000 		.word	flag_sw
 228              		.cfi_endproc
 229              	.LFE130:
 231              		.section	.text.TIM1_UP_TIM16_IRQHandler,"ax",%progbits
 232              		.align	1
 233              		.global	TIM1_UP_TIM16_IRQHandler
 234              		.syntax unified
 235              		.thumb
 236              		.thumb_func
 237              		.fpu fpv4-sp-d16
 239              	TIM1_UP_TIM16_IRQHandler:
 240              	.LFB131:
 152:Src/stm32f3xx_it.c **** 
 153:Src/stm32f3xx_it.c **** /**
 154:Src/stm32f3xx_it.c **** * @brief This function handles TIM1 update and TIM16 interrupts.
 155:Src/stm32f3xx_it.c **** */
 156:Src/stm32f3xx_it.c **** void TIM1_UP_TIM16_IRQHandler(void)
 157:Src/stm32f3xx_it.c **** {
 241              		.loc 1 157 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245 0000 08B5     		push	{r3, lr}
 246              	.LCFI5:
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 3, -8
 249              		.cfi_offset 14, -4
 158:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 0 */
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s 			page 8


 159:Src/stm32f3xx_it.c **** 
 160:Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_UP_TIM16_IRQn 0 */
 161:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 250              		.loc 1 161 0
 251 0002 0248     		ldr	r0, .L26
 252 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 253              	.LVL12:
 162:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 1 */
 163:Src/stm32f3xx_it.c **** 
 164:Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_UP_TIM16_IRQn 1 */
 165:Src/stm32f3xx_it.c **** }
 254              		.loc 1 165 0
 255 0008 08BD     		pop	{r3, pc}
 256              	.L27:
 257 000a 00BF     		.align	2
 258              	.L26:
 259 000c 00000000 		.word	htim1
 260              		.cfi_endproc
 261              	.LFE131:
 263              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 264              		.align	1
 265              		.global	TIM2_IRQHandler
 266              		.syntax unified
 267              		.thumb
 268              		.thumb_func
 269              		.fpu fpv4-sp-d16
 271              	TIM2_IRQHandler:
 272              	.LFB132:
 166:Src/stm32f3xx_it.c **** 
 167:Src/stm32f3xx_it.c **** /**
 168:Src/stm32f3xx_it.c **** * @brief This function handles TIM2 global interrupt.
 169:Src/stm32f3xx_it.c **** */
 170:Src/stm32f3xx_it.c **** void TIM2_IRQHandler(void)
 171:Src/stm32f3xx_it.c **** {
 273              		.loc 1 171 0
 274              		.cfi_startproc
 275              		@ args = 0, pretend = 0, frame = 0
 276              		@ frame_needed = 0, uses_anonymous_args = 0
 277 0000 08B5     		push	{r3, lr}
 278              	.LCFI6:
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 3, -8
 281              		.cfi_offset 14, -4
 172:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 173:Src/stm32f3xx_it.c **** 
 174:Src/stm32f3xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 175:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 282              		.loc 1 175 0
 283 0002 0448     		ldr	r0, .L30
 284 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 285              	.LVL13:
 176:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 177:Src/stm32f3xx_it.c ****   // 20ms timer for diaplay update
 178:Src/stm32f3xx_it.c ****   flag_disp = 1;
 286              		.loc 1 178 0
 287 0008 0123     		movs	r3, #1
 288 000a 034A     		ldr	r2, .L30+4
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s 			page 9


 289 000c 1360     		str	r3, [r2]
 179:Src/stm32f3xx_it.c ****   flag_meas = 1;
 290              		.loc 1 179 0
 291 000e 034A     		ldr	r2, .L30+8
 292 0010 1360     		str	r3, [r2]
 180:Src/stm32f3xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 181:Src/stm32f3xx_it.c **** }
 293              		.loc 1 181 0
 294 0012 08BD     		pop	{r3, pc}
 295              	.L31:
 296              		.align	2
 297              	.L30:
 298 0014 00000000 		.word	htim2
 299 0018 00000000 		.word	flag_disp
 300 001c 00000000 		.word	flag_meas
 301              		.cfi_endproc
 302              	.LFE132:
 304              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 305              		.align	1
 306              		.global	TIM3_IRQHandler
 307              		.syntax unified
 308              		.thumb
 309              		.thumb_func
 310              		.fpu fpv4-sp-d16
 312              	TIM3_IRQHandler:
 313              	.LFB133:
 182:Src/stm32f3xx_it.c **** 
 183:Src/stm32f3xx_it.c **** /**
 184:Src/stm32f3xx_it.c **** * @brief This function handles TIM3 global interrupt.
 185:Src/stm32f3xx_it.c **** */
 186:Src/stm32f3xx_it.c **** void TIM3_IRQHandler(void)
 187:Src/stm32f3xx_it.c **** {
 314              		.loc 1 187 0
 315              		.cfi_startproc
 316              		@ args = 0, pretend = 0, frame = 0
 317              		@ frame_needed = 0, uses_anonymous_args = 0
 318 0000 08B5     		push	{r3, lr}
 319              	.LCFI7:
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 3, -8
 322              		.cfi_offset 14, -4
 188:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 189:Src/stm32f3xx_it.c **** 
 190:Src/stm32f3xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 191:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 323              		.loc 1 191 0
 324 0002 0348     		ldr	r0, .L34
 325 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 326              	.LVL14:
 192:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 193:Src/stm32f3xx_it.c ****   tacho_overflow();
 327              		.loc 1 193 0
 328 0008 FFF7FEFF 		bl	tacho_overflow
 329              	.LVL15:
 194:Src/stm32f3xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 195:Src/stm32f3xx_it.c **** }
 330              		.loc 1 195 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s 			page 10


 331 000c 08BD     		pop	{r3, pc}
 332              	.L35:
 333 000e 00BF     		.align	2
 334              	.L34:
 335 0010 00000000 		.word	htim3
 336              		.cfi_endproc
 337              	.LFE133:
 339              		.section	.text.USART1_IRQHandler,"ax",%progbits
 340              		.align	1
 341              		.global	USART1_IRQHandler
 342              		.syntax unified
 343              		.thumb
 344              		.thumb_func
 345              		.fpu fpv4-sp-d16
 347              	USART1_IRQHandler:
 348              	.LFB134:
 196:Src/stm32f3xx_it.c **** 
 197:Src/stm32f3xx_it.c **** /**
 198:Src/stm32f3xx_it.c **** * @brief This function handles USART1 global interrupt / USART1 wake-up interrupt through EXT line 
 199:Src/stm32f3xx_it.c **** */
 200:Src/stm32f3xx_it.c **** void USART1_IRQHandler(void)
 201:Src/stm32f3xx_it.c **** {
 349              		.loc 1 201 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353 0000 08B5     		push	{r3, lr}
 354              	.LCFI8:
 355              		.cfi_def_cfa_offset 8
 356              		.cfi_offset 3, -8
 357              		.cfi_offset 14, -4
 202:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 203:Src/stm32f3xx_it.c **** 
 204:Src/stm32f3xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 205:Src/stm32f3xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 358              		.loc 1 205 0
 359 0002 0248     		ldr	r0, .L38
 360 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 361              	.LVL16:
 206:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 207:Src/stm32f3xx_it.c **** 
 208:Src/stm32f3xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 209:Src/stm32f3xx_it.c **** }
 362              		.loc 1 209 0
 363 0008 08BD     		pop	{r3, pc}
 364              	.L39:
 365 000a 00BF     		.align	2
 366              	.L38:
 367 000c 00000000 		.word	huart1
 368              		.cfi_endproc
 369              	.LFE134:
 371              		.section	.text.USART2_IRQHandler,"ax",%progbits
 372              		.align	1
 373              		.global	USART2_IRQHandler
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s 			page 11


 377              		.fpu fpv4-sp-d16
 379              	USART2_IRQHandler:
 380              	.LFB135:
 210:Src/stm32f3xx_it.c **** 
 211:Src/stm32f3xx_it.c **** /**
 212:Src/stm32f3xx_it.c **** * @brief This function handles USART2 global interrupt / USART2 wake-up interrupt through EXT line 
 213:Src/stm32f3xx_it.c **** */
 214:Src/stm32f3xx_it.c **** void USART2_IRQHandler(void)
 215:Src/stm32f3xx_it.c **** {
 381              		.loc 1 215 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385 0000 08B5     		push	{r3, lr}
 386              	.LCFI9:
 387              		.cfi_def_cfa_offset 8
 388              		.cfi_offset 3, -8
 389              		.cfi_offset 14, -4
 216:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 217:Src/stm32f3xx_it.c **** 
 218:Src/stm32f3xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 219:Src/stm32f3xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 390              		.loc 1 219 0
 391 0002 0248     		ldr	r0, .L42
 392 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 393              	.LVL17:
 220:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 221:Src/stm32f3xx_it.c **** 
 222:Src/stm32f3xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 223:Src/stm32f3xx_it.c **** }
 394              		.loc 1 223 0
 395 0008 08BD     		pop	{r3, pc}
 396              	.L43:
 397 000a 00BF     		.align	2
 398              	.L42:
 399 000c 00000000 		.word	huart2
 400              		.cfi_endproc
 401              	.LFE135:
 403              		.section	.text.TIM6_DAC1_IRQHandler,"ax",%progbits
 404              		.align	1
 405              		.global	TIM6_DAC1_IRQHandler
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 409              		.fpu fpv4-sp-d16
 411              	TIM6_DAC1_IRQHandler:
 412              	.LFB136:
 224:Src/stm32f3xx_it.c **** 
 225:Src/stm32f3xx_it.c **** /**
 226:Src/stm32f3xx_it.c **** * @brief This function handles TIM6 global and DAC1 underrun error interrupts.
 227:Src/stm32f3xx_it.c **** */
 228:Src/stm32f3xx_it.c **** void TIM6_DAC1_IRQHandler(void)
 229:Src/stm32f3xx_it.c **** {
 413              		.loc 1 229 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s 			page 12


 417 0000 08B5     		push	{r3, lr}
 418              	.LCFI10:
 419              		.cfi_def_cfa_offset 8
 420              		.cfi_offset 3, -8
 421              		.cfi_offset 14, -4
 230:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM6_DAC1_IRQn 0 */
 231:Src/stm32f3xx_it.c **** 
 232:Src/stm32f3xx_it.c **** 
 233:Src/stm32f3xx_it.c ****   /* USER CODE END TIM6_DAC1_IRQn 0 */
 234:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 422              		.loc 1 234 0
 423 0002 0548     		ldr	r0, .L46
 424 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 425              	.LVL18:
 235:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM6_DAC1_IRQn 1 */
 236:Src/stm32f3xx_it.c **** 
 237:Src/stm32f3xx_it.c **** 
 238:Src/stm32f3xx_it.c ****   // SW external interrupt
 239:Src/stm32f3xx_it.c ****   HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 426              		.loc 1 239 0
 427 0008 0720     		movs	r0, #7
 428 000a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 429              	.LVL19:
 240:Src/stm32f3xx_it.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 430              		.loc 1 240 0
 431 000e 1720     		movs	r0, #23
 432 0010 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 433              	.LVL20:
 241:Src/stm32f3xx_it.c **** 
 242:Src/stm32f3xx_it.c **** 
 243:Src/stm32f3xx_it.c ****   /* USER CODE END TIM6_DAC1_IRQn 1 */
 244:Src/stm32f3xx_it.c **** }
 434              		.loc 1 244 0
 435 0014 08BD     		pop	{r3, pc}
 436              	.L47:
 437 0016 00BF     		.align	2
 438              	.L46:
 439 0018 00000000 		.word	htim6
 440              		.cfi_endproc
 441              	.LFE136:
 443              		.text
 444              	.Letext0:
 445              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 446              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 447              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 448              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 449              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 450              		.file 7 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 451              		.file 8 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 452              		.file 9 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 453              		.file 10 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 454              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 455              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 456              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 457              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 458              		.file 15 "Inc/usart.h"
 459              		.file 16 "/Users/imashio/Electronics/ARM/_Library/flag.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s 			page 13


 460              		.file 17 "Src/pulse_counter.h"
 461              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 462              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 463              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_it.c
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:18     .text.SysTick_Handler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:25     .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:49     .text.EXTI1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:56     .text.EXTI1_IRQHandler:0000000000000000 EXTI1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:87     .text.EXTI1_IRQHandler:000000000000001c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:93     .text.EXTI4_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:100    .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:133    .text.EXTI4_IRQHandler:000000000000001c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:138    .text.DMA1_Channel1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:145    .text.DMA1_Channel1_IRQHandler:0000000000000000 DMA1_Channel1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:165    .text.DMA1_Channel1_IRQHandler:000000000000000c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:170    .text.EXTI9_5_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:177    .text.EXTI9_5_IRQHandler:0000000000000000 EXTI9_5_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:226    .text.EXTI9_5_IRQHandler:0000000000000038 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:232    .text.TIM1_UP_TIM16_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:239    .text.TIM1_UP_TIM16_IRQHandler:0000000000000000 TIM1_UP_TIM16_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:259    .text.TIM1_UP_TIM16_IRQHandler:000000000000000c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:264    .text.TIM2_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:271    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:298    .text.TIM2_IRQHandler:0000000000000014 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:305    .text.TIM3_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:312    .text.TIM3_IRQHandler:0000000000000000 TIM3_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:335    .text.TIM3_IRQHandler:0000000000000010 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:340    .text.USART1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:347    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:367    .text.USART1_IRQHandler:000000000000000c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:372    .text.USART2_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:379    .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:399    .text.USART2_IRQHandler:000000000000000c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:404    .text.TIM6_DAC1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:411    .text.TIM6_DAC1_IRQHandler:0000000000000000 TIM6_DAC1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc3BqgcO.s:439    .text.TIM6_DAC1_IRQHandler:0000000000000018 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_GPIO_EXTI_IRQHandler
HAL_GPIO_ReadPin
flag_sw
tacho
HAL_DMA_IRQHandler
hdma_adc1
HAL_TIM_IRQHandler
htim1
htim2
flag_disp
flag_meas
tacho_overflow
htim3
HAL_UART_IRQHandler
huart1
huart2
HAL_NVIC_EnableIRQ
htim6
