ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SysTick_Handler,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	SysTick_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SysTick_Handler:
  27              	.LFB123:
  28              		.file 1 "Src/stm32f3xx_it.c"
   1:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f3xx_it.c **** /**
   3:Src/stm32f3xx_it.c ****   ******************************************************************************
   4:Src/stm32f3xx_it.c ****   * @file    stm32f3xx_it.c
   5:Src/stm32f3xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f3xx_it.c ****   ******************************************************************************
   7:Src/stm32f3xx_it.c ****   * @attention
   8:Src/stm32f3xx_it.c ****   *
   9:Src/stm32f3xx_it.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/stm32f3xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f3xx_it.c ****   *
  12:Src/stm32f3xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f3xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f3xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f3xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f3xx_it.c ****   *
  17:Src/stm32f3xx_it.c ****   ******************************************************************************
  18:Src/stm32f3xx_it.c ****   */
  19:Src/stm32f3xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f3xx_it.c **** 
  21:Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f3xx_it.c **** #include "main.h"
  23:Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  24:Src/stm32f3xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f3xx_it.c **** #include "can_obd.h"
  27:Src/stm32f3xx_it.c **** 
  28:Src/stm32f3xx_it.c **** /* USER CODE END Includes */
  29:Src/stm32f3xx_it.c **** 
  30:Src/stm32f3xx_it.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s 			page 2


  31:Src/stm32f3xx_it.c **** /* USER CODE BEGIN TD */
  32:Src/stm32f3xx_it.c **** 
  33:Src/stm32f3xx_it.c **** /* USER CODE END TD */
  34:Src/stm32f3xx_it.c **** 
  35:Src/stm32f3xx_it.c **** /* Private define ------------------------------------------------------------*/
  36:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PD */
  37:Src/stm32f3xx_it.c ****  
  38:Src/stm32f3xx_it.c **** /* USER CODE END PD */
  39:Src/stm32f3xx_it.c **** 
  40:Src/stm32f3xx_it.c **** /* Private macro -------------------------------------------------------------*/
  41:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PM */
  42:Src/stm32f3xx_it.c **** 
  43:Src/stm32f3xx_it.c **** /* USER CODE END PM */
  44:Src/stm32f3xx_it.c **** 
  45:Src/stm32f3xx_it.c **** /* Private variables ---------------------------------------------------------*/
  46:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PV */
  47:Src/stm32f3xx_it.c **** 
  48:Src/stm32f3xx_it.c **** /* USER CODE END PV */
  49:Src/stm32f3xx_it.c **** 
  50:Src/stm32f3xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  51:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PFP */
  52:Src/stm32f3xx_it.c **** 
  53:Src/stm32f3xx_it.c **** /* USER CODE END PFP */
  54:Src/stm32f3xx_it.c **** 
  55:Src/stm32f3xx_it.c **** /* Private user code ---------------------------------------------------------*/
  56:Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  57:Src/stm32f3xx_it.c **** #include "usart.h"
  58:Src/stm32f3xx_it.c **** #include "flag.h"
  59:Src/stm32f3xx_it.c **** #include "pulse_counter.h"
  60:Src/stm32f3xx_it.c **** 
  61:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart2;
  62:Src/stm32f3xx_it.c **** 
  63:Src/stm32f3xx_it.c **** 
  64:Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  65:Src/stm32f3xx_it.c **** 
  66:Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  67:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  68:Src/stm32f3xx_it.c **** extern CAN_HandleTypeDef hcan;
  69:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim2;
  70:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim3;
  71:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim6;
  72:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart1;
  73:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart2;
  74:Src/stm32f3xx_it.c **** /* USER CODE BEGIN EV */
  75:Src/stm32f3xx_it.c **** 
  76:Src/stm32f3xx_it.c **** /* USER CODE END EV */
  77:Src/stm32f3xx_it.c **** 
  78:Src/stm32f3xx_it.c **** /******************************************************************************/
  79:Src/stm32f3xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  80:Src/stm32f3xx_it.c **** /******************************************************************************/
  81:Src/stm32f3xx_it.c **** /**
  82:Src/stm32f3xx_it.c ****   * @brief This function handles System tick timer.
  83:Src/stm32f3xx_it.c ****   */
  84:Src/stm32f3xx_it.c **** void SysTick_Handler(void)
  85:Src/stm32f3xx_it.c **** {
  29              		.loc 1 85 0
  30              		.cfi_startproc
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s 			page 3


  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  86:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
  87:Src/stm32f3xx_it.c **** 
  88:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
  89:Src/stm32f3xx_it.c ****   HAL_IncTick();
  34              		.loc 1 89 0
  35 0000 FFF7FEBF 		b	HAL_IncTick
  36              	.LVL0:
  37              		.cfi_endproc
  38              	.LFE123:
  40              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
  41              		.align	1
  42              		.p2align 2,,3
  43              		.global	EXTI1_IRQHandler
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	EXTI1_IRQHandler:
  50              	.LFB124:
  90:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
  91:Src/stm32f3xx_it.c **** 
  92:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
  93:Src/stm32f3xx_it.c **** }
  94:Src/stm32f3xx_it.c **** 
  95:Src/stm32f3xx_it.c **** /******************************************************************************/
  96:Src/stm32f3xx_it.c **** /* STM32F3xx Peripheral Interrupt Handlers                                    */
  97:Src/stm32f3xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
  98:Src/stm32f3xx_it.c **** /* For the available peripheral interrupt handler names,                      */
  99:Src/stm32f3xx_it.c **** /* please refer to the startup file (startup_stm32f3xx.s).                    */
 100:Src/stm32f3xx_it.c **** /******************************************************************************/
 101:Src/stm32f3xx_it.c **** 
 102:Src/stm32f3xx_it.c **** /**
 103:Src/stm32f3xx_it.c ****   * @brief This function handles EXTI line 1 interrupt.
 104:Src/stm32f3xx_it.c ****   */
 105:Src/stm32f3xx_it.c **** void EXTI1_IRQHandler(void)
 106:Src/stm32f3xx_it.c **** {
  51              		.loc 1 106 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55 0000 08B5     		push	{r3, lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 3, -8
  59              		.cfi_offset 14, -4
 107:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 0 */
 108:Src/stm32f3xx_it.c **** 
 109:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI1_IRQn 0 */
 110:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
  60              		.loc 1 110 0
  61 0002 0220     		movs	r0, #2
  62 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
  63              	.LVL1:
 111:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 1 */
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s 			page 4


 112:Src/stm32f3xx_it.c ****   // SW Enter input
 113:Src/stm32f3xx_it.c ****   if(HAL_GPIO_ReadPin( GPIOF, GPIO_PIN_1 ) == 0 ){
  64              		.loc 1 113 0
  65 0008 0221     		movs	r1, #2
  66 000a 0448     		ldr	r0, .L6
  67 000c FFF7FEFF 		bl	HAL_GPIO_ReadPin
  68              	.LVL2:
  69 0010 10B9     		cbnz	r0, .L3
 114:Src/stm32f3xx_it.c ****     flag_sw = 3;
  70              		.loc 1 114 0
  71 0012 034B     		ldr	r3, .L6+4
  72 0014 0322     		movs	r2, #3
  73 0016 1A60     		str	r2, [r3]
  74              	.L3:
 115:Src/stm32f3xx_it.c ****   }
 116:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI1_IRQn 1 */
 117:Src/stm32f3xx_it.c **** }
  75              		.loc 1 117 0
  76 0018 08BD     		pop	{r3, pc}
  77              	.L7:
  78 001a 00BF     		.align	2
  79              	.L6:
  80 001c 00140048 		.word	1207964672
  81 0020 00000000 		.word	flag_sw
  82              		.cfi_endproc
  83              	.LFE124:
  85              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
  86              		.align	1
  87              		.p2align 2,,3
  88              		.global	EXTI4_IRQHandler
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu fpv4-sp-d16
  94              	EXTI4_IRQHandler:
  95              	.LFB125:
 118:Src/stm32f3xx_it.c **** 
 119:Src/stm32f3xx_it.c **** /**
 120:Src/stm32f3xx_it.c ****   * @brief This function handles EXTI line 4 interrupt.
 121:Src/stm32f3xx_it.c ****   */
 122:Src/stm32f3xx_it.c **** void EXTI4_IRQHandler(void)
 123:Src/stm32f3xx_it.c **** {
  96              		.loc 1 123 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100 0000 08B5     		push	{r3, lr}
 101              	.LCFI1:
 102              		.cfi_def_cfa_offset 8
 103              		.cfi_offset 3, -8
 104              		.cfi_offset 14, -4
 124:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 0 */
 125:Src/stm32f3xx_it.c **** 
 126:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI4_IRQn 0 */
 127:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_4);
 105              		.loc 1 127 0
 106 0002 1020     		movs	r0, #16
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s 			page 5


 107 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 108              	.LVL3:
 128:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 1 */
 129:Src/stm32f3xx_it.c ****   if(HAL_GPIO_ReadPin( GPIOB, GPIO_PIN_4 ) == 0 ){ // Tacho input
 109              		.loc 1 129 0
 110 0008 1021     		movs	r1, #16
 111 000a 0448     		ldr	r0, .L12
 112 000c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 113              	.LVL4:
 114 0010 00B1     		cbz	r0, .L11
 130:Src/stm32f3xx_it.c ****     tacho();
 131:Src/stm32f3xx_it.c ****   }
 132:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI4_IRQn 1 */
 133:Src/stm32f3xx_it.c **** }
 115              		.loc 1 133 0
 116 0012 08BD     		pop	{r3, pc}
 117              	.L11:
 118 0014 BDE80840 		pop	{r3, lr}
 119              	.LCFI2:
 120              		.cfi_restore 14
 121              		.cfi_restore 3
 122              		.cfi_def_cfa_offset 0
 130:Src/stm32f3xx_it.c ****     tacho();
 123              		.loc 1 130 0
 124 0018 FFF7FEBF 		b	tacho
 125              	.LVL5:
 126              	.L13:
 127              		.align	2
 128              	.L12:
 129 001c 00040048 		.word	1207960576
 130              		.cfi_endproc
 131              	.LFE125:
 133              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 134              		.align	1
 135              		.p2align 2,,3
 136              		.global	DMA1_Channel1_IRQHandler
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 140              		.fpu fpv4-sp-d16
 142              	DMA1_Channel1_IRQHandler:
 143              	.LFB126:
 134:Src/stm32f3xx_it.c **** 
 135:Src/stm32f3xx_it.c **** /**
 136:Src/stm32f3xx_it.c ****   * @brief This function handles DMA1 channel1 global interrupt.
 137:Src/stm32f3xx_it.c ****   */
 138:Src/stm32f3xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 139:Src/stm32f3xx_it.c **** {
 144              		.loc 1 139 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 140:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 141:Src/stm32f3xx_it.c **** 
 142:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 143:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s 			page 6


 149              		.loc 1 143 0
 150 0000 0148     		ldr	r0, .L15
 151 0002 FFF7FEBF 		b	HAL_DMA_IRQHandler
 152              	.LVL6:
 153              	.L16:
 154 0006 00BF     		.align	2
 155              	.L15:
 156 0008 00000000 		.word	hdma_adc1
 157              		.cfi_endproc
 158              	.LFE126:
 160              		.section	.text.CAN_TX_IRQHandler,"ax",%progbits
 161              		.align	1
 162              		.p2align 2,,3
 163              		.global	CAN_TX_IRQHandler
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu fpv4-sp-d16
 169              	CAN_TX_IRQHandler:
 170              	.LFB127:
 144:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 145:Src/stm32f3xx_it.c **** 
 146:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 147:Src/stm32f3xx_it.c **** }
 148:Src/stm32f3xx_it.c **** 
 149:Src/stm32f3xx_it.c **** /**
 150:Src/stm32f3xx_it.c ****   * @brief This function handles CAN TX interrupt.
 151:Src/stm32f3xx_it.c ****   */
 152:Src/stm32f3xx_it.c **** void CAN_TX_IRQHandler(void)
 153:Src/stm32f3xx_it.c **** {
 171              		.loc 1 153 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		@ link register save eliminated.
 154:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_TX_IRQn 0 */
 155:Src/stm32f3xx_it.c **** 
 156:Src/stm32f3xx_it.c ****   /* USER CODE END CAN_TX_IRQn 0 */
 157:Src/stm32f3xx_it.c ****   HAL_CAN_IRQHandler(&hcan);
 176              		.loc 1 157 0
 177 0000 0148     		ldr	r0, .L18
 178 0002 FFF7FEBF 		b	HAL_CAN_IRQHandler
 179              	.LVL7:
 180              	.L19:
 181 0006 00BF     		.align	2
 182              	.L18:
 183 0008 00000000 		.word	hcan
 184              		.cfi_endproc
 185              	.LFE127:
 187              		.section	.text.CAN_RX0_IRQHandler,"ax",%progbits
 188              		.align	1
 189              		.p2align 2,,3
 190              		.global	CAN_RX0_IRQHandler
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s 			page 7


 196              	CAN_RX0_IRQHandler:
 197              	.LFB128:
 158:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_TX_IRQn 1 */
 159:Src/stm32f3xx_it.c **** 
 160:Src/stm32f3xx_it.c ****   /* USER CODE END CAN_TX_IRQn 1 */
 161:Src/stm32f3xx_it.c **** }
 162:Src/stm32f3xx_it.c **** 
 163:Src/stm32f3xx_it.c **** /**
 164:Src/stm32f3xx_it.c ****   * @brief This function handles CAN RX0 interrupt.
 165:Src/stm32f3xx_it.c ****   */
 166:Src/stm32f3xx_it.c **** void CAN_RX0_IRQHandler(void)
 167:Src/stm32f3xx_it.c **** {
 198              		.loc 1 167 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202 0000 10B5     		push	{r4, lr}
 203              	.LCFI3:
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 4, -8
 206              		.cfi_offset 14, -4
 168:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_RX0_IRQn 0 */
 169:Src/stm32f3xx_it.c **** 
 170:Src/stm32f3xx_it.c ****   /* USER CODE END CAN_RX0_IRQn 0 */
 171:Src/stm32f3xx_it.c ****   HAL_CAN_IRQHandler(&hcan);
 207              		.loc 1 171 0
 208 0002 074C     		ldr	r4, .L22
 209 0004 2046     		mov	r0, r4
 210 0006 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 211              	.LVL8:
 172:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_RX0_IRQn 1 */
 173:Src/stm32f3xx_it.c ****   HAL_CAN_GetRxMessage(&hcan, CAN_RX_FIFO0, &CAN_RxHeader, CAN_RxData);
 212              		.loc 1 173 0
 213 000a 064B     		ldr	r3, .L22+4
 214 000c 064A     		ldr	r2, .L22+8
 215 000e 2046     		mov	r0, r4
 216 0010 0021     		movs	r1, #0
 217 0012 FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 218              	.LVL9:
 174:Src/stm32f3xx_it.c ****   CAN_Received = 1;
 219              		.loc 1 174 0
 220 0016 054B     		ldr	r3, .L22+12
 221 0018 0122     		movs	r2, #1
 222 001a 1A70     		strb	r2, [r3]
 175:Src/stm32f3xx_it.c **** 
 176:Src/stm32f3xx_it.c ****   /* USER CODE END CAN_RX0_IRQn 1 */
 177:Src/stm32f3xx_it.c **** }
 223              		.loc 1 177 0
 224 001c 10BD     		pop	{r4, pc}
 225              	.L23:
 226 001e 00BF     		.align	2
 227              	.L22:
 228 0020 00000000 		.word	hcan
 229 0024 00000000 		.word	CAN_RxData
 230 0028 00000000 		.word	CAN_RxHeader
 231 002c 00000000 		.word	CAN_Received
 232              		.cfi_endproc
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s 			page 8


 233              	.LFE128:
 235              		.section	.text.CAN_RX1_IRQHandler,"ax",%progbits
 236              		.align	1
 237              		.p2align 2,,3
 238              		.global	CAN_RX1_IRQHandler
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 242              		.fpu fpv4-sp-d16
 244              	CAN_RX1_IRQHandler:
 245              	.LFB137:
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 250 0000 FFF7FEBF 		b	CAN_TX_IRQHandler
 251              		.cfi_endproc
 252              	.LFE137:
 254              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 255              		.align	1
 256              		.p2align 2,,3
 257              		.global	EXTI9_5_IRQHandler
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 261              		.fpu fpv4-sp-d16
 263              	EXTI9_5_IRQHandler:
 264              	.LFB130:
 178:Src/stm32f3xx_it.c **** 
 179:Src/stm32f3xx_it.c **** /**
 180:Src/stm32f3xx_it.c ****   * @brief This function handles CAN RX1 interrupt.
 181:Src/stm32f3xx_it.c ****   */
 182:Src/stm32f3xx_it.c **** void CAN_RX1_IRQHandler(void)
 183:Src/stm32f3xx_it.c **** {
 184:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_RX1_IRQn 0 */
 185:Src/stm32f3xx_it.c **** 
 186:Src/stm32f3xx_it.c ****   /* USER CODE END CAN_RX1_IRQn 0 */
 187:Src/stm32f3xx_it.c ****   HAL_CAN_IRQHandler(&hcan);
 188:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_RX1_IRQn 1 */
 189:Src/stm32f3xx_it.c **** 
 190:Src/stm32f3xx_it.c ****   /* USER CODE END CAN_RX1_IRQn 1 */
 191:Src/stm32f3xx_it.c **** }
 192:Src/stm32f3xx_it.c **** 
 193:Src/stm32f3xx_it.c **** /**
 194:Src/stm32f3xx_it.c ****   * @brief This function handles EXTI line[9:5] interrupts.
 195:Src/stm32f3xx_it.c ****   */
 196:Src/stm32f3xx_it.c **** void EXTI9_5_IRQHandler(void)
 197:Src/stm32f3xx_it.c **** {
 265              		.loc 1 197 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		.loc 1 197 0
 270 0000 08B5     		push	{r3, lr}
 271              	.LCFI4:
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 3, -8
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s 			page 9


 274              		.cfi_offset 14, -4
 198:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 0 */
 199:Src/stm32f3xx_it.c **** 
 200:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 0 */
 201:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_5);
 275              		.loc 1 201 0
 276 0002 2020     		movs	r0, #32
 277 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 278              	.LVL10:
 202:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_6);
 279              		.loc 1 202 0
 280 0008 4020     		movs	r0, #64
 281 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 282              	.LVL11:
 203:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 1 */
 204:Src/stm32f3xx_it.c ****   // SW "Up"/"Down" input
 205:Src/stm32f3xx_it.c ****   // UP key : PB5
 206:Src/stm32f3xx_it.c ****   if(HAL_GPIO_ReadPin( GPIOB, GPIO_PIN_5 ) == 0 ){
 283              		.loc 1 206 0
 284 000e 2021     		movs	r1, #32
 285 0010 0948     		ldr	r0, .L29
 286 0012 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 287              	.LVL12:
 288 0016 18B9     		cbnz	r0, .L26
 207:Src/stm32f3xx_it.c ****     flag_sw = 1;
 289              		.loc 1 207 0
 290 0018 084B     		ldr	r3, .L29+4
 291 001a 0122     		movs	r2, #1
 292 001c 1A60     		str	r2, [r3]
 293              	.L25:
 208:Src/stm32f3xx_it.c ****   // DOWN key : PA6
 209:Src/stm32f3xx_it.c ****   }else if(HAL_GPIO_ReadPin( GPIOA, GPIO_PIN_6 ) == 0 ){
 210:Src/stm32f3xx_it.c ****     flag_sw = 2;
 211:Src/stm32f3xx_it.c ****   }
 212:Src/stm32f3xx_it.c **** 
 213:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 1 */
 214:Src/stm32f3xx_it.c **** }
 294              		.loc 1 214 0
 295 001e 08BD     		pop	{r3, pc}
 296              	.L26:
 209:Src/stm32f3xx_it.c ****     flag_sw = 2;
 297              		.loc 1 209 0
 298 0020 4021     		movs	r1, #64
 299 0022 4FF09040 		mov	r0, #1207959552
 300 0026 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 301              	.LVL13:
 302 002a 0028     		cmp	r0, #0
 303 002c F7D1     		bne	.L25
 210:Src/stm32f3xx_it.c ****   }
 304              		.loc 1 210 0
 305 002e 034B     		ldr	r3, .L29+4
 306 0030 0222     		movs	r2, #2
 307 0032 1A60     		str	r2, [r3]
 308              		.loc 1 214 0
 309 0034 08BD     		pop	{r3, pc}
 310              	.L30:
 311 0036 00BF     		.align	2
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s 			page 10


 312              	.L29:
 313 0038 00040048 		.word	1207960576
 314 003c 00000000 		.word	flag_sw
 315              		.cfi_endproc
 316              	.LFE130:
 318              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 319              		.align	1
 320              		.p2align 2,,3
 321              		.global	TIM2_IRQHandler
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 325              		.fpu fpv4-sp-d16
 327              	TIM2_IRQHandler:
 328              	.LFB131:
 215:Src/stm32f3xx_it.c **** 
 216:Src/stm32f3xx_it.c **** /**
 217:Src/stm32f3xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 218:Src/stm32f3xx_it.c ****   */
 219:Src/stm32f3xx_it.c **** void TIM2_IRQHandler(void)
 220:Src/stm32f3xx_it.c **** {
 329              		.loc 1 220 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333 0000 08B5     		push	{r3, lr}
 334              	.LCFI5:
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 3, -8
 337              		.cfi_offset 14, -4
 221:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 222:Src/stm32f3xx_it.c **** 
 223:Src/stm32f3xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 224:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 338              		.loc 1 224 0
 339 0002 0448     		ldr	r0, .L33
 340 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 341              	.LVL14:
 225:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 226:Src/stm32f3xx_it.c ****   // 20ms timer for diaplay update
 227:Src/stm32f3xx_it.c ****   flag_disp = 1;
 342              		.loc 1 227 0
 343 0008 0349     		ldr	r1, .L33+4
 228:Src/stm32f3xx_it.c ****   flag_meas = 1;
 344              		.loc 1 228 0
 345 000a 044A     		ldr	r2, .L33+8
 227:Src/stm32f3xx_it.c ****   flag_meas = 1;
 346              		.loc 1 227 0
 347 000c 0123     		movs	r3, #1
 348 000e 0B60     		str	r3, [r1]
 349              		.loc 1 228 0
 350 0010 1360     		str	r3, [r2]
 229:Src/stm32f3xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 230:Src/stm32f3xx_it.c **** }
 351              		.loc 1 230 0
 352 0012 08BD     		pop	{r3, pc}
 353              	.L34:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s 			page 11


 354              		.align	2
 355              	.L33:
 356 0014 00000000 		.word	htim2
 357 0018 00000000 		.word	flag_disp
 358 001c 00000000 		.word	flag_meas
 359              		.cfi_endproc
 360              	.LFE131:
 362              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 363              		.align	1
 364              		.p2align 2,,3
 365              		.global	TIM3_IRQHandler
 366              		.syntax unified
 367              		.thumb
 368              		.thumb_func
 369              		.fpu fpv4-sp-d16
 371              	TIM3_IRQHandler:
 372              	.LFB132:
 231:Src/stm32f3xx_it.c **** 
 232:Src/stm32f3xx_it.c **** /**
 233:Src/stm32f3xx_it.c ****   * @brief This function handles TIM3 global interrupt.
 234:Src/stm32f3xx_it.c ****   */
 235:Src/stm32f3xx_it.c **** void TIM3_IRQHandler(void)
 236:Src/stm32f3xx_it.c **** {
 373              		.loc 1 236 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 0
 376              		@ frame_needed = 0, uses_anonymous_args = 0
 377 0000 08B5     		push	{r3, lr}
 378              	.LCFI6:
 379              		.cfi_def_cfa_offset 8
 380              		.cfi_offset 3, -8
 381              		.cfi_offset 14, -4
 237:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 238:Src/stm32f3xx_it.c **** 
 239:Src/stm32f3xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 240:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 382              		.loc 1 240 0
 383 0002 0348     		ldr	r0, .L37
 384 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 385              	.LVL15:
 241:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 242:Src/stm32f3xx_it.c ****   tacho_overflow();
 243:Src/stm32f3xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 244:Src/stm32f3xx_it.c **** }
 386              		.loc 1 244 0
 387 0008 BDE80840 		pop	{r3, lr}
 388              	.LCFI7:
 389              		.cfi_restore 14
 390              		.cfi_restore 3
 391              		.cfi_def_cfa_offset 0
 242:Src/stm32f3xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 392              		.loc 1 242 0
 393 000c FFF7FEBF 		b	tacho_overflow
 394              	.LVL16:
 395              	.L38:
 396              		.align	2
 397              	.L37:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s 			page 12


 398 0010 00000000 		.word	htim3
 399              		.cfi_endproc
 400              	.LFE132:
 402              		.section	.text.USART1_IRQHandler,"ax",%progbits
 403              		.align	1
 404              		.p2align 2,,3
 405              		.global	USART1_IRQHandler
 406              		.syntax unified
 407              		.thumb
 408              		.thumb_func
 409              		.fpu fpv4-sp-d16
 411              	USART1_IRQHandler:
 412              	.LFB133:
 245:Src/stm32f3xx_it.c **** 
 246:Src/stm32f3xx_it.c **** /**
 247:Src/stm32f3xx_it.c ****   * @brief This function handles USART1 global interrupt / USART1 wake-up interrupt through EXT lin
 248:Src/stm32f3xx_it.c ****   */
 249:Src/stm32f3xx_it.c **** void USART1_IRQHandler(void)
 250:Src/stm32f3xx_it.c **** {
 413              		.loc 1 250 0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 417              		@ link register save eliminated.
 251:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 252:Src/stm32f3xx_it.c **** 
 253:Src/stm32f3xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 254:Src/stm32f3xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 418              		.loc 1 254 0
 419 0000 0148     		ldr	r0, .L40
 420 0002 FFF7FEBF 		b	HAL_UART_IRQHandler
 421              	.LVL17:
 422              	.L41:
 423 0006 00BF     		.align	2
 424              	.L40:
 425 0008 00000000 		.word	huart1
 426              		.cfi_endproc
 427              	.LFE133:
 429              		.section	.text.USART2_IRQHandler,"ax",%progbits
 430              		.align	1
 431              		.p2align 2,,3
 432              		.global	USART2_IRQHandler
 433              		.syntax unified
 434              		.thumb
 435              		.thumb_func
 436              		.fpu fpv4-sp-d16
 438              	USART2_IRQHandler:
 439              	.LFB134:
 255:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 256:Src/stm32f3xx_it.c **** 
 257:Src/stm32f3xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 258:Src/stm32f3xx_it.c **** }
 259:Src/stm32f3xx_it.c **** 
 260:Src/stm32f3xx_it.c **** /**
 261:Src/stm32f3xx_it.c ****   * @brief This function handles USART2 global interrupt / USART2 wake-up interrupt through EXT lin
 262:Src/stm32f3xx_it.c ****   */
 263:Src/stm32f3xx_it.c **** void USART2_IRQHandler(void)
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s 			page 13


 264:Src/stm32f3xx_it.c **** {
 440              		.loc 1 264 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 265:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 266:Src/stm32f3xx_it.c **** 
 267:Src/stm32f3xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 268:Src/stm32f3xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 445              		.loc 1 268 0
 446 0000 0148     		ldr	r0, .L43
 447 0002 FFF7FEBF 		b	HAL_UART_IRQHandler
 448              	.LVL18:
 449              	.L44:
 450 0006 00BF     		.align	2
 451              	.L43:
 452 0008 00000000 		.word	huart2
 453              		.cfi_endproc
 454              	.LFE134:
 456              		.section	.text.TIM6_DAC1_IRQHandler,"ax",%progbits
 457              		.align	1
 458              		.p2align 2,,3
 459              		.global	TIM6_DAC1_IRQHandler
 460              		.syntax unified
 461              		.thumb
 462              		.thumb_func
 463              		.fpu fpv4-sp-d16
 465              	TIM6_DAC1_IRQHandler:
 466              	.LFB135:
 269:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 270:Src/stm32f3xx_it.c **** 
 271:Src/stm32f3xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 272:Src/stm32f3xx_it.c **** }
 273:Src/stm32f3xx_it.c **** 
 274:Src/stm32f3xx_it.c **** /**
 275:Src/stm32f3xx_it.c ****   * @brief This function handles TIM6 global and DAC1 underrun error interrupts.
 276:Src/stm32f3xx_it.c ****   */
 277:Src/stm32f3xx_it.c **** void TIM6_DAC1_IRQHandler(void)
 278:Src/stm32f3xx_it.c **** {
 467              		.loc 1 278 0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471 0000 08B5     		push	{r3, lr}
 472              	.LCFI8:
 473              		.cfi_def_cfa_offset 8
 474              		.cfi_offset 3, -8
 475              		.cfi_offset 14, -4
 279:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM6_DAC1_IRQn 0 */
 280:Src/stm32f3xx_it.c **** 
 281:Src/stm32f3xx_it.c **** 
 282:Src/stm32f3xx_it.c ****   /* USER CODE END TIM6_DAC1_IRQn 0 */
 283:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 476              		.loc 1 283 0
 477 0002 0548     		ldr	r0, .L47
 478 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s 			page 14


 479              	.LVL19:
 284:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM6_DAC1_IRQn 1 */
 285:Src/stm32f3xx_it.c **** 
 286:Src/stm32f3xx_it.c **** 
 287:Src/stm32f3xx_it.c ****   // SW external interrupt
 288:Src/stm32f3xx_it.c ****   HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 480              		.loc 1 288 0
 481 0008 0720     		movs	r0, #7
 482 000a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 483              	.LVL20:
 289:Src/stm32f3xx_it.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 484              		.loc 1 289 0
 485 000e 1720     		movs	r0, #23
 290:Src/stm32f3xx_it.c **** 
 291:Src/stm32f3xx_it.c **** 
 292:Src/stm32f3xx_it.c ****   /* USER CODE END TIM6_DAC1_IRQn 1 */
 293:Src/stm32f3xx_it.c **** }
 486              		.loc 1 293 0
 487 0010 BDE80840 		pop	{r3, lr}
 488              	.LCFI9:
 489              		.cfi_restore 14
 490              		.cfi_restore 3
 491              		.cfi_def_cfa_offset 0
 289:Src/stm32f3xx_it.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 492              		.loc 1 289 0
 493 0014 FFF7FEBF 		b	HAL_NVIC_EnableIRQ
 494              	.LVL21:
 495              	.L48:
 496              		.align	2
 497              	.L47:
 498 0018 00000000 		.word	htim6
 499              		.cfi_endproc
 500              	.LFE135:
 502              		.text
 503              	.Letext0:
 504              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 505              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 506              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 507              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 508              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 509              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 510              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 511              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 512              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 513              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 514              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 515              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 516              		.file 14 "Inc/can_obd.h"
 517              		.file 15 "Inc/usart.h"
 518              		.file 16 "/Users/imashio/Electronics/ARM/_Library/flag.h"
 519              		.file 17 "Inc/pulse_counter.h"
 520              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 521              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_it.c
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:18     .text.SysTick_Handler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:26     .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:41     .text.EXTI1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:49     .text.EXTI1_IRQHandler:0000000000000000 EXTI1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:80     .text.EXTI1_IRQHandler:000000000000001c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:86     .text.EXTI4_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:94     .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:129    .text.EXTI4_IRQHandler:000000000000001c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:134    .text.DMA1_Channel1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:142    .text.DMA1_Channel1_IRQHandler:0000000000000000 DMA1_Channel1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:156    .text.DMA1_Channel1_IRQHandler:0000000000000008 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:161    .text.CAN_TX_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:169    .text.CAN_TX_IRQHandler:0000000000000000 CAN_TX_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:183    .text.CAN_TX_IRQHandler:0000000000000008 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:188    .text.CAN_RX0_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:196    .text.CAN_RX0_IRQHandler:0000000000000000 CAN_RX0_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:228    .text.CAN_RX0_IRQHandler:0000000000000020 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:236    .text.CAN_RX1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:244    .text.CAN_RX1_IRQHandler:0000000000000000 CAN_RX1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:255    .text.EXTI9_5_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:263    .text.EXTI9_5_IRQHandler:0000000000000000 EXTI9_5_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:313    .text.EXTI9_5_IRQHandler:0000000000000038 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:319    .text.TIM2_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:327    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:356    .text.TIM2_IRQHandler:0000000000000014 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:363    .text.TIM3_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:371    .text.TIM3_IRQHandler:0000000000000000 TIM3_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:398    .text.TIM3_IRQHandler:0000000000000010 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:403    .text.USART1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:411    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:425    .text.USART1_IRQHandler:0000000000000008 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:430    .text.USART2_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:438    .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:452    .text.USART2_IRQHandler:0000000000000008 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:457    .text.TIM6_DAC1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:465    .text.TIM6_DAC1_IRQHandler:0000000000000000 TIM6_DAC1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s:498    .text.TIM6_DAC1_IRQHandler:0000000000000018 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_GPIO_EXTI_IRQHandler
HAL_GPIO_ReadPin
flag_sw
tacho
HAL_DMA_IRQHandler
hdma_adc1
HAL_CAN_IRQHandler
hcan
HAL_CAN_GetRxMessage
CAN_RxData
CAN_RxHeader
CAN_Received
HAL_TIM_IRQHandler
htim2
flag_disp
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cciUk2xA.s 			page 16


flag_meas
tacho_overflow
htim3
HAL_UART_IRQHandler
huart1
huart2
HAL_NVIC_EnableIRQ
htim6
