ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SysTick_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	SysTick_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	SysTick_Handler:
  26              	.LFB126:
  27              		.file 1 "Src/stm32f3xx_it.c"
   1:Src/stm32f3xx_it.c **** /**
   2:Src/stm32f3xx_it.c ****   ******************************************************************************
   3:Src/stm32f3xx_it.c ****   * @file    stm32f3xx_it.c
   4:Src/stm32f3xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f3xx_it.c ****   ******************************************************************************
   6:Src/stm32f3xx_it.c ****   *
   7:Src/stm32f3xx_it.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
   8:Src/stm32f3xx_it.c ****   *
   9:Src/stm32f3xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f3xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f3xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f3xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f3xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f3xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f3xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f3xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f3xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f3xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f3xx_it.c ****   *
  20:Src/stm32f3xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f3xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f3xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f3xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f3xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f3xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f3xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f3xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f3xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f3xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f3xx_it.c ****   *
  31:Src/stm32f3xx_it.c ****   ******************************************************************************
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s 			page 2


  32:Src/stm32f3xx_it.c ****   */
  33:Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f3xx_it.c **** #include "stm32f3xx_hal.h"
  35:Src/stm32f3xx_it.c **** #include "stm32f3xx.h"
  36:Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  37:Src/stm32f3xx_it.c **** 
  38:Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f3xx_it.c **** #include "usart.h"
  40:Src/stm32f3xx_it.c **** #include "flag.h"
  41:Src/stm32f3xx_it.c **** 
  42:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart2;
  43:Src/stm32f3xx_it.c **** 
  44:Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  45:Src/stm32f3xx_it.c **** 
  46:Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  47:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  48:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim1;
  49:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim2;
  50:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim6;
  51:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart1;
  52:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart2;
  53:Src/stm32f3xx_it.c **** 
  54:Src/stm32f3xx_it.c **** /******************************************************************************/
  55:Src/stm32f3xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  56:Src/stm32f3xx_it.c **** /******************************************************************************/
  57:Src/stm32f3xx_it.c **** 
  58:Src/stm32f3xx_it.c **** /**
  59:Src/stm32f3xx_it.c **** * @brief This function handles System tick timer.
  60:Src/stm32f3xx_it.c **** */
  61:Src/stm32f3xx_it.c **** void SysTick_Handler(void)
  62:Src/stm32f3xx_it.c **** {
  28              		.loc 1 62 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  63:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
  64:Src/stm32f3xx_it.c **** 
  65:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
  66:Src/stm32f3xx_it.c ****   HAL_IncTick();
  37              		.loc 1 66 0
  38 0002 FFF7FEFF 		bl	HAL_IncTick
  39              	.LVL0:
  67:Src/stm32f3xx_it.c ****   HAL_SYSTICK_IRQHandler();
  40              		.loc 1 67 0
  41 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
  42              	.LVL1:
  68:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
  69:Src/stm32f3xx_it.c **** 
  70:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
  71:Src/stm32f3xx_it.c **** }
  43              		.loc 1 71 0
  44 000a 08BD     		pop	{r3, pc}
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s 			page 3


  45              		.cfi_endproc
  46              	.LFE126:
  48              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
  49              		.align	1
  50              		.global	EXTI1_IRQHandler
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  54              		.fpu fpv4-sp-d16
  56              	EXTI1_IRQHandler:
  57              	.LFB127:
  72:Src/stm32f3xx_it.c **** 
  73:Src/stm32f3xx_it.c **** /******************************************************************************/
  74:Src/stm32f3xx_it.c **** /* STM32F3xx Peripheral Interrupt Handlers                                    */
  75:Src/stm32f3xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
  76:Src/stm32f3xx_it.c **** /* For the available peripheral interrupt handler names,                      */
  77:Src/stm32f3xx_it.c **** /* please refer to the startup file (startup_stm32f3xx.s).                    */
  78:Src/stm32f3xx_it.c **** /******************************************************************************/
  79:Src/stm32f3xx_it.c **** 
  80:Src/stm32f3xx_it.c **** /**
  81:Src/stm32f3xx_it.c **** * @brief This function handles EXTI line 1 interrupt.
  82:Src/stm32f3xx_it.c **** */
  83:Src/stm32f3xx_it.c **** void EXTI1_IRQHandler(void)
  84:Src/stm32f3xx_it.c **** {
  58              		.loc 1 84 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62 0000 08B5     		push	{r3, lr}
  63              	.LCFI1:
  64              		.cfi_def_cfa_offset 8
  65              		.cfi_offset 3, -8
  66              		.cfi_offset 14, -4
  85:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 0 */
  86:Src/stm32f3xx_it.c **** 
  87:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI1_IRQn 0 */
  88:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
  67              		.loc 1 88 0
  68 0002 0220     		movs	r0, #2
  69 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
  70              	.LVL2:
  89:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 1 */
  90:Src/stm32f3xx_it.c ****   // SW Enter input
  91:Src/stm32f3xx_it.c ****   if(HAL_GPIO_ReadPin( GPIOF, GPIO_PIN_1 ) == 0 ){
  71              		.loc 1 91 0
  72 0008 0221     		movs	r1, #2
  73 000a 0448     		ldr	r0, .L6
  74 000c FFF7FEFF 		bl	HAL_GPIO_ReadPin
  75              	.LVL3:
  76 0010 10B9     		cbnz	r0, .L3
  92:Src/stm32f3xx_it.c ****     flag_sw = 3;
  77              		.loc 1 92 0
  78 0012 034B     		ldr	r3, .L6+4
  79 0014 0322     		movs	r2, #3
  80 0016 1A60     		str	r2, [r3]
  81              	.L3:
  93:Src/stm32f3xx_it.c ****   }
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s 			page 4


  94:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI1_IRQn 1 */
  95:Src/stm32f3xx_it.c **** }
  82              		.loc 1 95 0
  83 0018 08BD     		pop	{r3, pc}
  84              	.L7:
  85 001a 00BF     		.align	2
  86              	.L6:
  87 001c 00140048 		.word	1207964672
  88 0020 00000000 		.word	flag_sw
  89              		.cfi_endproc
  90              	.LFE127:
  92              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
  93              		.align	1
  94              		.global	EXTI4_IRQHandler
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv4-sp-d16
 100              	EXTI4_IRQHandler:
 101              	.LFB128:
  96:Src/stm32f3xx_it.c **** 
  97:Src/stm32f3xx_it.c **** /**
  98:Src/stm32f3xx_it.c **** * @brief This function handles EXTI line 4 interrupt.
  99:Src/stm32f3xx_it.c **** */
 100:Src/stm32f3xx_it.c **** void EXTI4_IRQHandler(void)
 101:Src/stm32f3xx_it.c **** {
 102              		.loc 1 101 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106 0000 08B5     		push	{r3, lr}
 107              	.LCFI2:
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 3, -8
 110              		.cfi_offset 14, -4
 102:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 0 */
 103:Src/stm32f3xx_it.c **** 
 104:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI4_IRQn 0 */
 105:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_4);
 111              		.loc 1 105 0
 112 0002 1020     		movs	r0, #16
 113 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 114              	.LVL4:
 106:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 1 */
 107:Src/stm32f3xx_it.c ****   if(HAL_GPIO_ReadPin( GPIOB, GPIO_PIN_4 ) == 0 ){ // Tacho input
 115              		.loc 1 107 0
 116 0008 1021     		movs	r1, #16
 117 000a 0548     		ldr	r0, .L12
 118 000c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 119              	.LVL5:
 120 0010 00B1     		cbz	r0, .L11
 121              	.L8:
 108:Src/stm32f3xx_it.c ****     HAL_UART_Transmit_printf(&huart2, "Tacho "); // USB
 109:Src/stm32f3xx_it.c ****   }
 110:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI4_IRQn 1 */
 111:Src/stm32f3xx_it.c **** }
 122              		.loc 1 111 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s 			page 5


 123 0012 08BD     		pop	{r3, pc}
 124              	.L11:
 125              	.LBB2:
 108:Src/stm32f3xx_it.c ****     HAL_UART_Transmit_printf(&huart2, "Tacho "); // USB
 126              		.loc 1 108 0
 127 0014 0349     		ldr	r1, .L12+4
 128 0016 0448     		ldr	r0, .L12+8
 129 0018 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 130              	.LVL6:
 131              	.LBE2:
 132              		.loc 1 111 0
 133 001c F9E7     		b	.L8
 134              	.L13:
 135 001e 00BF     		.align	2
 136              	.L12:
 137 0020 00040048 		.word	1207960576
 138 0024 00000000 		.word	.LC0
 139 0028 00000000 		.word	huart2
 140              		.cfi_endproc
 141              	.LFE128:
 143              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 144              		.align	1
 145              		.global	DMA1_Channel1_IRQHandler
 146              		.syntax unified
 147              		.thumb
 148              		.thumb_func
 149              		.fpu fpv4-sp-d16
 151              	DMA1_Channel1_IRQHandler:
 152              	.LFB129:
 112:Src/stm32f3xx_it.c **** 
 113:Src/stm32f3xx_it.c **** /**
 114:Src/stm32f3xx_it.c **** * @brief This function handles DMA1 channel1 global interrupt.
 115:Src/stm32f3xx_it.c **** */
 116:Src/stm32f3xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 117:Src/stm32f3xx_it.c **** {
 153              		.loc 1 117 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157 0000 08B5     		push	{r3, lr}
 158              	.LCFI3:
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 3, -8
 161              		.cfi_offset 14, -4
 118:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 119:Src/stm32f3xx_it.c **** 
 120:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 121:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 162              		.loc 1 121 0
 163 0002 0248     		ldr	r0, .L16
 164 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 165              	.LVL7:
 122:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 123:Src/stm32f3xx_it.c **** 
 124:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 125:Src/stm32f3xx_it.c **** }
 166              		.loc 1 125 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s 			page 6


 167 0008 08BD     		pop	{r3, pc}
 168              	.L17:
 169 000a 00BF     		.align	2
 170              	.L16:
 171 000c 00000000 		.word	hdma_adc1
 172              		.cfi_endproc
 173              	.LFE129:
 175              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 176              		.align	1
 177              		.global	EXTI9_5_IRQHandler
 178              		.syntax unified
 179              		.thumb
 180              		.thumb_func
 181              		.fpu fpv4-sp-d16
 183              	EXTI9_5_IRQHandler:
 184              	.LFB130:
 126:Src/stm32f3xx_it.c **** 
 127:Src/stm32f3xx_it.c **** /**
 128:Src/stm32f3xx_it.c **** * @brief This function handles EXTI line[9:5] interrupts.
 129:Src/stm32f3xx_it.c **** */
 130:Src/stm32f3xx_it.c **** void EXTI9_5_IRQHandler(void)
 131:Src/stm32f3xx_it.c **** {
 185              		.loc 1 131 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189 0000 08B5     		push	{r3, lr}
 190              	.LCFI4:
 191              		.cfi_def_cfa_offset 8
 192              		.cfi_offset 3, -8
 193              		.cfi_offset 14, -4
 132:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 0 */
 133:Src/stm32f3xx_it.c **** 
 134:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 0 */
 135:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_5);
 194              		.loc 1 135 0
 195 0002 2020     		movs	r0, #32
 196 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 197              	.LVL8:
 136:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_6);
 198              		.loc 1 136 0
 199 0008 4020     		movs	r0, #64
 200 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 201              	.LVL9:
 137:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 1 */
 138:Src/stm32f3xx_it.c ****   // SW "Up"/"Down" input
 139:Src/stm32f3xx_it.c ****   // UP key : PB5
 140:Src/stm32f3xx_it.c ****   if(HAL_GPIO_ReadPin( GPIOB, GPIO_PIN_5 ) == 0 ){
 202              		.loc 1 140 0
 203 000e 2021     		movs	r1, #32
 204 0010 0948     		ldr	r0, .L22
 205 0012 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 206              	.LVL10:
 207 0016 18B9     		cbnz	r0, .L19
 141:Src/stm32f3xx_it.c ****     flag_sw = 1;
 208              		.loc 1 141 0
 209 0018 084B     		ldr	r3, .L22+4
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s 			page 7


 210 001a 0122     		movs	r2, #1
 211 001c 1A60     		str	r2, [r3]
 212              	.L18:
 142:Src/stm32f3xx_it.c ****   // DOWN key : PA6
 143:Src/stm32f3xx_it.c ****   }else if(HAL_GPIO_ReadPin( GPIOA, GPIO_PIN_6 ) == 0 ){
 144:Src/stm32f3xx_it.c ****     flag_sw = 2;
 145:Src/stm32f3xx_it.c ****   }
 146:Src/stm32f3xx_it.c **** 
 147:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 1 */
 148:Src/stm32f3xx_it.c **** }
 213              		.loc 1 148 0
 214 001e 08BD     		pop	{r3, pc}
 215              	.L19:
 143:Src/stm32f3xx_it.c ****     flag_sw = 2;
 216              		.loc 1 143 0
 217 0020 4021     		movs	r1, #64
 218 0022 4FF09040 		mov	r0, #1207959552
 219 0026 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 220              	.LVL11:
 221 002a 0028     		cmp	r0, #0
 222 002c F7D1     		bne	.L18
 144:Src/stm32f3xx_it.c ****   }
 223              		.loc 1 144 0
 224 002e 034B     		ldr	r3, .L22+4
 225 0030 0222     		movs	r2, #2
 226 0032 1A60     		str	r2, [r3]
 227              		.loc 1 148 0
 228 0034 F3E7     		b	.L18
 229              	.L23:
 230 0036 00BF     		.align	2
 231              	.L22:
 232 0038 00040048 		.word	1207960576
 233 003c 00000000 		.word	flag_sw
 234              		.cfi_endproc
 235              	.LFE130:
 237              		.section	.text.TIM1_UP_TIM16_IRQHandler,"ax",%progbits
 238              		.align	1
 239              		.global	TIM1_UP_TIM16_IRQHandler
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 243              		.fpu fpv4-sp-d16
 245              	TIM1_UP_TIM16_IRQHandler:
 246              	.LFB131:
 149:Src/stm32f3xx_it.c **** 
 150:Src/stm32f3xx_it.c **** /**
 151:Src/stm32f3xx_it.c **** * @brief This function handles TIM1 update and TIM16 interrupts.
 152:Src/stm32f3xx_it.c **** */
 153:Src/stm32f3xx_it.c **** void TIM1_UP_TIM16_IRQHandler(void)
 154:Src/stm32f3xx_it.c **** {
 247              		.loc 1 154 0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251 0000 08B5     		push	{r3, lr}
 252              	.LCFI5:
 253              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s 			page 8


 254              		.cfi_offset 3, -8
 255              		.cfi_offset 14, -4
 155:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 0 */
 156:Src/stm32f3xx_it.c **** 
 157:Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_UP_TIM16_IRQn 0 */
 158:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 256              		.loc 1 158 0
 257 0002 0248     		ldr	r0, .L26
 258 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 259              	.LVL12:
 159:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 1 */
 160:Src/stm32f3xx_it.c **** 
 161:Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_UP_TIM16_IRQn 1 */
 162:Src/stm32f3xx_it.c **** }
 260              		.loc 1 162 0
 261 0008 08BD     		pop	{r3, pc}
 262              	.L27:
 263 000a 00BF     		.align	2
 264              	.L26:
 265 000c 00000000 		.word	htim1
 266              		.cfi_endproc
 267              	.LFE131:
 269              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 270              		.align	1
 271              		.global	TIM2_IRQHandler
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 275              		.fpu fpv4-sp-d16
 277              	TIM2_IRQHandler:
 278              	.LFB132:
 163:Src/stm32f3xx_it.c **** 
 164:Src/stm32f3xx_it.c **** /**
 165:Src/stm32f3xx_it.c **** * @brief This function handles TIM2 global interrupt.
 166:Src/stm32f3xx_it.c **** */
 167:Src/stm32f3xx_it.c **** void TIM2_IRQHandler(void)
 168:Src/stm32f3xx_it.c **** {
 279              		.loc 1 168 0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 0
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283 0000 08B5     		push	{r3, lr}
 284              	.LCFI6:
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 3, -8
 287              		.cfi_offset 14, -4
 169:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 170:Src/stm32f3xx_it.c **** 
 171:Src/stm32f3xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 172:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 288              		.loc 1 172 0
 289 0002 0448     		ldr	r0, .L30
 290 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 291              	.LVL13:
 173:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 174:Src/stm32f3xx_it.c ****   // 20ms timer for diaplay update
 175:Src/stm32f3xx_it.c ****   flag_disp = 1;
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s 			page 9


 292              		.loc 1 175 0
 293 0008 0123     		movs	r3, #1
 294 000a 034A     		ldr	r2, .L30+4
 295 000c 1360     		str	r3, [r2]
 176:Src/stm32f3xx_it.c ****   flag_meas = 1;
 296              		.loc 1 176 0
 297 000e 034A     		ldr	r2, .L30+8
 298 0010 1360     		str	r3, [r2]
 177:Src/stm32f3xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 178:Src/stm32f3xx_it.c **** }
 299              		.loc 1 178 0
 300 0012 08BD     		pop	{r3, pc}
 301              	.L31:
 302              		.align	2
 303              	.L30:
 304 0014 00000000 		.word	htim2
 305 0018 00000000 		.word	flag_disp
 306 001c 00000000 		.word	flag_meas
 307              		.cfi_endproc
 308              	.LFE132:
 310              		.section	.text.USART1_IRQHandler,"ax",%progbits
 311              		.align	1
 312              		.global	USART1_IRQHandler
 313              		.syntax unified
 314              		.thumb
 315              		.thumb_func
 316              		.fpu fpv4-sp-d16
 318              	USART1_IRQHandler:
 319              	.LFB133:
 179:Src/stm32f3xx_it.c **** 
 180:Src/stm32f3xx_it.c **** /**
 181:Src/stm32f3xx_it.c **** * @brief This function handles USART1 global interrupt / USART1 wake-up interrupt through EXT line 
 182:Src/stm32f3xx_it.c **** */
 183:Src/stm32f3xx_it.c **** void USART1_IRQHandler(void)
 184:Src/stm32f3xx_it.c **** {
 320              		.loc 1 184 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324 0000 08B5     		push	{r3, lr}
 325              	.LCFI7:
 326              		.cfi_def_cfa_offset 8
 327              		.cfi_offset 3, -8
 328              		.cfi_offset 14, -4
 185:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 186:Src/stm32f3xx_it.c **** 
 187:Src/stm32f3xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 188:Src/stm32f3xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 329              		.loc 1 188 0
 330 0002 0248     		ldr	r0, .L34
 331 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 332              	.LVL14:
 189:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 190:Src/stm32f3xx_it.c **** 
 191:Src/stm32f3xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 192:Src/stm32f3xx_it.c **** }
 333              		.loc 1 192 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s 			page 10


 334 0008 08BD     		pop	{r3, pc}
 335              	.L35:
 336 000a 00BF     		.align	2
 337              	.L34:
 338 000c 00000000 		.word	huart1
 339              		.cfi_endproc
 340              	.LFE133:
 342              		.section	.text.USART2_IRQHandler,"ax",%progbits
 343              		.align	1
 344              		.global	USART2_IRQHandler
 345              		.syntax unified
 346              		.thumb
 347              		.thumb_func
 348              		.fpu fpv4-sp-d16
 350              	USART2_IRQHandler:
 351              	.LFB134:
 193:Src/stm32f3xx_it.c **** 
 194:Src/stm32f3xx_it.c **** /**
 195:Src/stm32f3xx_it.c **** * @brief This function handles USART2 global interrupt / USART2 wake-up interrupt through EXT line 
 196:Src/stm32f3xx_it.c **** */
 197:Src/stm32f3xx_it.c **** void USART2_IRQHandler(void)
 198:Src/stm32f3xx_it.c **** {
 352              		.loc 1 198 0
 353              		.cfi_startproc
 354              		@ args = 0, pretend = 0, frame = 0
 355              		@ frame_needed = 0, uses_anonymous_args = 0
 356 0000 08B5     		push	{r3, lr}
 357              	.LCFI8:
 358              		.cfi_def_cfa_offset 8
 359              		.cfi_offset 3, -8
 360              		.cfi_offset 14, -4
 199:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 200:Src/stm32f3xx_it.c **** 
 201:Src/stm32f3xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 202:Src/stm32f3xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 361              		.loc 1 202 0
 362 0002 0248     		ldr	r0, .L38
 363 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 364              	.LVL15:
 203:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 204:Src/stm32f3xx_it.c **** 
 205:Src/stm32f3xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 206:Src/stm32f3xx_it.c **** }
 365              		.loc 1 206 0
 366 0008 08BD     		pop	{r3, pc}
 367              	.L39:
 368 000a 00BF     		.align	2
 369              	.L38:
 370 000c 00000000 		.word	huart2
 371              		.cfi_endproc
 372              	.LFE134:
 374              		.section	.text.TIM6_DAC1_IRQHandler,"ax",%progbits
 375              		.align	1
 376              		.global	TIM6_DAC1_IRQHandler
 377              		.syntax unified
 378              		.thumb
 379              		.thumb_func
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s 			page 11


 380              		.fpu fpv4-sp-d16
 382              	TIM6_DAC1_IRQHandler:
 383              	.LFB135:
 207:Src/stm32f3xx_it.c **** 
 208:Src/stm32f3xx_it.c **** /**
 209:Src/stm32f3xx_it.c **** * @brief This function handles TIM6 global and DAC1 underrun error interrupts.
 210:Src/stm32f3xx_it.c **** */
 211:Src/stm32f3xx_it.c **** void TIM6_DAC1_IRQHandler(void)
 212:Src/stm32f3xx_it.c **** {
 384              		.loc 1 212 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 0, uses_anonymous_args = 0
 388 0000 08B5     		push	{r3, lr}
 389              	.LCFI9:
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 3, -8
 392              		.cfi_offset 14, -4
 213:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM6_DAC1_IRQn 0 */
 214:Src/stm32f3xx_it.c **** 
 215:Src/stm32f3xx_it.c **** 
 216:Src/stm32f3xx_it.c ****   /* USER CODE END TIM6_DAC1_IRQn 0 */
 217:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 393              		.loc 1 217 0
 394 0002 0548     		ldr	r0, .L42
 395 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 396              	.LVL16:
 218:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM6_DAC1_IRQn 1 */
 219:Src/stm32f3xx_it.c **** 
 220:Src/stm32f3xx_it.c **** 
 221:Src/stm32f3xx_it.c ****   // SW external interrupt
 222:Src/stm32f3xx_it.c ****   HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 397              		.loc 1 222 0
 398 0008 0720     		movs	r0, #7
 399 000a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 400              	.LVL17:
 223:Src/stm32f3xx_it.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 401              		.loc 1 223 0
 402 000e 1720     		movs	r0, #23
 403 0010 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 404              	.LVL18:
 224:Src/stm32f3xx_it.c **** 
 225:Src/stm32f3xx_it.c **** 
 226:Src/stm32f3xx_it.c ****   /* USER CODE END TIM6_DAC1_IRQn 1 */
 227:Src/stm32f3xx_it.c **** }
 405              		.loc 1 227 0
 406 0014 08BD     		pop	{r3, pc}
 407              	.L43:
 408 0016 00BF     		.align	2
 409              	.L42:
 410 0018 00000000 		.word	htim6
 411              		.cfi_endproc
 412              	.LFE135:
 414              		.section	.rodata.EXTI4_IRQHandler.str1.4,"aMS",%progbits,1
 415              		.align	2
 416              	.LC0:
 417 0000 54616368 		.ascii	"Tacho \000"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s 			page 12


 417      6F2000
 418              		.text
 419              	.Letext0:
 420              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 421              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 422              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 423              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 424              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 425              		.file 7 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 426              		.file 8 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 427              		.file 9 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 428              		.file 10 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 429              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 430              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 431              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 432              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 433              		.file 15 "Inc/usart.h"
 434              		.file 16 "/Users/imashio/Electronics/ARM/_Library/flag.h"
 435              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 436              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 437              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_it.c
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:18     .text.SysTick_Handler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:25     .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:49     .text.EXTI1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:56     .text.EXTI1_IRQHandler:0000000000000000 EXTI1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:87     .text.EXTI1_IRQHandler:000000000000001c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:93     .text.EXTI4_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:100    .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:137    .text.EXTI4_IRQHandler:0000000000000020 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:144    .text.DMA1_Channel1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:151    .text.DMA1_Channel1_IRQHandler:0000000000000000 DMA1_Channel1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:171    .text.DMA1_Channel1_IRQHandler:000000000000000c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:176    .text.EXTI9_5_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:183    .text.EXTI9_5_IRQHandler:0000000000000000 EXTI9_5_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:232    .text.EXTI9_5_IRQHandler:0000000000000038 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:238    .text.TIM1_UP_TIM16_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:245    .text.TIM1_UP_TIM16_IRQHandler:0000000000000000 TIM1_UP_TIM16_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:265    .text.TIM1_UP_TIM16_IRQHandler:000000000000000c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:270    .text.TIM2_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:277    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:304    .text.TIM2_IRQHandler:0000000000000014 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:311    .text.USART1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:318    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:338    .text.USART1_IRQHandler:000000000000000c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:343    .text.USART2_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:350    .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:370    .text.USART2_IRQHandler:000000000000000c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:375    .text.TIM6_DAC1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:382    .text.TIM6_DAC1_IRQHandler:0000000000000000 TIM6_DAC1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:410    .text.TIM6_DAC1_IRQHandler:0000000000000018 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc08Dq77.s:415    .rodata.EXTI4_IRQHandler.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_GPIO_EXTI_IRQHandler
HAL_GPIO_ReadPin
flag_sw
HAL_UART_Transmit_printf
huart2
HAL_DMA_IRQHandler
hdma_adc1
HAL_TIM_IRQHandler
htim1
htim2
flag_disp
flag_meas
HAL_UART_IRQHandler
huart1
HAL_NVIC_EnableIRQ
htim6
