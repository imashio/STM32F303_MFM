ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SysTick_Handler,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	SysTick_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SysTick_Handler:
  27              	.LFB123:
  28              		.file 1 "Src/stm32f3xx_it.c"
   1:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f3xx_it.c **** /**
   3:Src/stm32f3xx_it.c ****   ******************************************************************************
   4:Src/stm32f3xx_it.c ****   * @file    stm32f3xx_it.c
   5:Src/stm32f3xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f3xx_it.c ****   ******************************************************************************
   7:Src/stm32f3xx_it.c ****   * @attention
   8:Src/stm32f3xx_it.c ****   *
   9:Src/stm32f3xx_it.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/stm32f3xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f3xx_it.c ****   *
  12:Src/stm32f3xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f3xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f3xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f3xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f3xx_it.c ****   *
  17:Src/stm32f3xx_it.c ****   ******************************************************************************
  18:Src/stm32f3xx_it.c ****   */
  19:Src/stm32f3xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f3xx_it.c **** 
  21:Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f3xx_it.c **** #include "main.h"
  23:Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  24:Src/stm32f3xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f3xx_it.c **** /* USER CODE END Includes */
  27:Src/stm32f3xx_it.c **** 
  28:Src/stm32f3xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Src/stm32f3xx_it.c **** /* USER CODE BEGIN TD */
  30:Src/stm32f3xx_it.c **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s 			page 2


  31:Src/stm32f3xx_it.c **** /* USER CODE END TD */
  32:Src/stm32f3xx_it.c **** 
  33:Src/stm32f3xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PD */
  35:Src/stm32f3xx_it.c ****  
  36:Src/stm32f3xx_it.c **** /* USER CODE END PD */
  37:Src/stm32f3xx_it.c **** 
  38:Src/stm32f3xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PM */
  40:Src/stm32f3xx_it.c **** 
  41:Src/stm32f3xx_it.c **** /* USER CODE END PM */
  42:Src/stm32f3xx_it.c **** 
  43:Src/stm32f3xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PV */
  45:Src/stm32f3xx_it.c **** 
  46:Src/stm32f3xx_it.c **** /* USER CODE END PV */
  47:Src/stm32f3xx_it.c **** 
  48:Src/stm32f3xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PFP */
  50:Src/stm32f3xx_it.c **** 
  51:Src/stm32f3xx_it.c **** /* USER CODE END PFP */
  52:Src/stm32f3xx_it.c **** 
  53:Src/stm32f3xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  55:Src/stm32f3xx_it.c **** #include "usart.h"
  56:Src/stm32f3xx_it.c **** #include "flag.h"
  57:Src/stm32f3xx_it.c **** #include "pulse_counter.h"
  58:Src/stm32f3xx_it.c **** 
  59:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart2;
  60:Src/stm32f3xx_it.c **** 
  61:Src/stm32f3xx_it.c **** 
  62:Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  63:Src/stm32f3xx_it.c **** 
  64:Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  65:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  66:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim1;
  67:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim2;
  68:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim3;
  69:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim6;
  70:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart1;
  71:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart2;
  72:Src/stm32f3xx_it.c **** /* USER CODE BEGIN EV */
  73:Src/stm32f3xx_it.c **** 
  74:Src/stm32f3xx_it.c **** /* USER CODE END EV */
  75:Src/stm32f3xx_it.c **** 
  76:Src/stm32f3xx_it.c **** /******************************************************************************/
  77:Src/stm32f3xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  78:Src/stm32f3xx_it.c **** /******************************************************************************/
  79:Src/stm32f3xx_it.c **** /**
  80:Src/stm32f3xx_it.c ****   * @brief This function handles System tick timer.
  81:Src/stm32f3xx_it.c ****   */
  82:Src/stm32f3xx_it.c **** void SysTick_Handler(void)
  83:Src/stm32f3xx_it.c **** {
  29              		.loc 1 83 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s 			page 3


  33              		@ link register save eliminated.
  84:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
  85:Src/stm32f3xx_it.c **** 
  86:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
  87:Src/stm32f3xx_it.c ****   HAL_IncTick();
  34              		.loc 1 87 0
  35 0000 FFF7FEBF 		b	HAL_IncTick
  36              	.LVL0:
  37              		.cfi_endproc
  38              	.LFE123:
  40              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
  41              		.align	1
  42              		.p2align 2,,3
  43              		.global	EXTI1_IRQHandler
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	EXTI1_IRQHandler:
  50              	.LFB124:
  88:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
  89:Src/stm32f3xx_it.c **** 
  90:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
  91:Src/stm32f3xx_it.c **** }
  92:Src/stm32f3xx_it.c **** 
  93:Src/stm32f3xx_it.c **** /******************************************************************************/
  94:Src/stm32f3xx_it.c **** /* STM32F3xx Peripheral Interrupt Handlers                                    */
  95:Src/stm32f3xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
  96:Src/stm32f3xx_it.c **** /* For the available peripheral interrupt handler names,                      */
  97:Src/stm32f3xx_it.c **** /* please refer to the startup file (startup_stm32f3xx.s).                    */
  98:Src/stm32f3xx_it.c **** /******************************************************************************/
  99:Src/stm32f3xx_it.c **** 
 100:Src/stm32f3xx_it.c **** /**
 101:Src/stm32f3xx_it.c ****   * @brief This function handles EXTI line 1 interrupt.
 102:Src/stm32f3xx_it.c ****   */
 103:Src/stm32f3xx_it.c **** void EXTI1_IRQHandler(void)
 104:Src/stm32f3xx_it.c **** {
  51              		.loc 1 104 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55 0000 08B5     		push	{r3, lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 3, -8
  59              		.cfi_offset 14, -4
 105:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 0 */
 106:Src/stm32f3xx_it.c **** 
 107:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI1_IRQn 0 */
 108:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
  60              		.loc 1 108 0
  61 0002 0220     		movs	r0, #2
  62 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
  63              	.LVL1:
 109:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 1 */
 110:Src/stm32f3xx_it.c ****   // SW Enter input
 111:Src/stm32f3xx_it.c ****   if(HAL_GPIO_ReadPin( GPIOF, GPIO_PIN_1 ) == 0 ){
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s 			page 4


  64              		.loc 1 111 0
  65 0008 0221     		movs	r1, #2
  66 000a 0448     		ldr	r0, .L6
  67 000c FFF7FEFF 		bl	HAL_GPIO_ReadPin
  68              	.LVL2:
  69 0010 10B9     		cbnz	r0, .L3
 112:Src/stm32f3xx_it.c ****     flag_sw = 3;
  70              		.loc 1 112 0
  71 0012 034B     		ldr	r3, .L6+4
  72 0014 0322     		movs	r2, #3
  73 0016 1A60     		str	r2, [r3]
  74              	.L3:
 113:Src/stm32f3xx_it.c ****   }
 114:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI1_IRQn 1 */
 115:Src/stm32f3xx_it.c **** }
  75              		.loc 1 115 0
  76 0018 08BD     		pop	{r3, pc}
  77              	.L7:
  78 001a 00BF     		.align	2
  79              	.L6:
  80 001c 00140048 		.word	1207964672
  81 0020 00000000 		.word	flag_sw
  82              		.cfi_endproc
  83              	.LFE124:
  85              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
  86              		.align	1
  87              		.p2align 2,,3
  88              		.global	EXTI4_IRQHandler
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu fpv4-sp-d16
  94              	EXTI4_IRQHandler:
  95              	.LFB125:
 116:Src/stm32f3xx_it.c **** 
 117:Src/stm32f3xx_it.c **** /**
 118:Src/stm32f3xx_it.c ****   * @brief This function handles EXTI line 4 interrupt.
 119:Src/stm32f3xx_it.c ****   */
 120:Src/stm32f3xx_it.c **** void EXTI4_IRQHandler(void)
 121:Src/stm32f3xx_it.c **** {
  96              		.loc 1 121 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100 0000 08B5     		push	{r3, lr}
 101              	.LCFI1:
 102              		.cfi_def_cfa_offset 8
 103              		.cfi_offset 3, -8
 104              		.cfi_offset 14, -4
 122:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 0 */
 123:Src/stm32f3xx_it.c **** 
 124:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI4_IRQn 0 */
 125:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_4);
 105              		.loc 1 125 0
 106 0002 1020     		movs	r0, #16
 107 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 108              	.LVL3:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s 			page 5


 126:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 1 */
 127:Src/stm32f3xx_it.c ****   if(HAL_GPIO_ReadPin( GPIOB, GPIO_PIN_4 ) == 0 ){ // Tacho input
 109              		.loc 1 127 0
 110 0008 1021     		movs	r1, #16
 111 000a 0448     		ldr	r0, .L12
 112 000c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 113              	.LVL4:
 114 0010 00B1     		cbz	r0, .L11
 128:Src/stm32f3xx_it.c ****     tacho();
 129:Src/stm32f3xx_it.c ****   }
 130:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI4_IRQn 1 */
 131:Src/stm32f3xx_it.c **** }
 115              		.loc 1 131 0
 116 0012 08BD     		pop	{r3, pc}
 117              	.L11:
 118 0014 BDE80840 		pop	{r3, lr}
 119              	.LCFI2:
 120              		.cfi_restore 14
 121              		.cfi_restore 3
 122              		.cfi_def_cfa_offset 0
 128:Src/stm32f3xx_it.c ****     tacho();
 123              		.loc 1 128 0
 124 0018 FFF7FEBF 		b	tacho
 125              	.LVL5:
 126              	.L13:
 127              		.align	2
 128              	.L12:
 129 001c 00040048 		.word	1207960576
 130              		.cfi_endproc
 131              	.LFE125:
 133              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 134              		.align	1
 135              		.p2align 2,,3
 136              		.global	DMA1_Channel1_IRQHandler
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 140              		.fpu fpv4-sp-d16
 142              	DMA1_Channel1_IRQHandler:
 143              	.LFB126:
 132:Src/stm32f3xx_it.c **** 
 133:Src/stm32f3xx_it.c **** /**
 134:Src/stm32f3xx_it.c ****   * @brief This function handles DMA1 channel1 global interrupt.
 135:Src/stm32f3xx_it.c ****   */
 136:Src/stm32f3xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 137:Src/stm32f3xx_it.c **** {
 144              		.loc 1 137 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 138:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 139:Src/stm32f3xx_it.c **** 
 140:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 141:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 149              		.loc 1 141 0
 150 0000 0148     		ldr	r0, .L15
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s 			page 6


 151 0002 FFF7FEBF 		b	HAL_DMA_IRQHandler
 152              	.LVL6:
 153              	.L16:
 154 0006 00BF     		.align	2
 155              	.L15:
 156 0008 00000000 		.word	hdma_adc1
 157              		.cfi_endproc
 158              	.LFE126:
 160              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 161              		.align	1
 162              		.p2align 2,,3
 163              		.global	EXTI9_5_IRQHandler
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu fpv4-sp-d16
 169              	EXTI9_5_IRQHandler:
 170              	.LFB127:
 142:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 143:Src/stm32f3xx_it.c **** 
 144:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 145:Src/stm32f3xx_it.c **** }
 146:Src/stm32f3xx_it.c **** 
 147:Src/stm32f3xx_it.c **** /**
 148:Src/stm32f3xx_it.c ****   * @brief This function handles EXTI line[9:5] interrupts.
 149:Src/stm32f3xx_it.c ****   */
 150:Src/stm32f3xx_it.c **** void EXTI9_5_IRQHandler(void)
 151:Src/stm32f3xx_it.c **** {
 171              		.loc 1 151 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175 0000 08B5     		push	{r3, lr}
 176              	.LCFI3:
 177              		.cfi_def_cfa_offset 8
 178              		.cfi_offset 3, -8
 179              		.cfi_offset 14, -4
 152:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 0 */
 153:Src/stm32f3xx_it.c **** 
 154:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 0 */
 155:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_5);
 180              		.loc 1 155 0
 181 0002 2020     		movs	r0, #32
 182 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 183              	.LVL7:
 156:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_6);
 184              		.loc 1 156 0
 185 0008 4020     		movs	r0, #64
 186 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 187              	.LVL8:
 157:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 1 */
 158:Src/stm32f3xx_it.c ****   // SW "Up"/"Down" input
 159:Src/stm32f3xx_it.c ****   // UP key : PB5
 160:Src/stm32f3xx_it.c ****   if(HAL_GPIO_ReadPin( GPIOB, GPIO_PIN_5 ) == 0 ){
 188              		.loc 1 160 0
 189 000e 2021     		movs	r1, #32
 190 0010 0948     		ldr	r0, .L21
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s 			page 7


 191 0012 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 192              	.LVL9:
 193 0016 18B9     		cbnz	r0, .L18
 161:Src/stm32f3xx_it.c ****     flag_sw = 1;
 194              		.loc 1 161 0
 195 0018 084B     		ldr	r3, .L21+4
 196 001a 0122     		movs	r2, #1
 197 001c 1A60     		str	r2, [r3]
 198              	.L17:
 162:Src/stm32f3xx_it.c ****   // DOWN key : PA6
 163:Src/stm32f3xx_it.c ****   }else if(HAL_GPIO_ReadPin( GPIOA, GPIO_PIN_6 ) == 0 ){
 164:Src/stm32f3xx_it.c ****     flag_sw = 2;
 165:Src/stm32f3xx_it.c ****   }
 166:Src/stm32f3xx_it.c **** 
 167:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 1 */
 168:Src/stm32f3xx_it.c **** }
 199              		.loc 1 168 0
 200 001e 08BD     		pop	{r3, pc}
 201              	.L18:
 163:Src/stm32f3xx_it.c ****     flag_sw = 2;
 202              		.loc 1 163 0
 203 0020 4021     		movs	r1, #64
 204 0022 4FF09040 		mov	r0, #1207959552
 205 0026 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 206              	.LVL10:
 207 002a 0028     		cmp	r0, #0
 208 002c F7D1     		bne	.L17
 164:Src/stm32f3xx_it.c ****   }
 209              		.loc 1 164 0
 210 002e 034B     		ldr	r3, .L21+4
 211 0030 0222     		movs	r2, #2
 212 0032 1A60     		str	r2, [r3]
 213              		.loc 1 168 0
 214 0034 08BD     		pop	{r3, pc}
 215              	.L22:
 216 0036 00BF     		.align	2
 217              	.L21:
 218 0038 00040048 		.word	1207960576
 219 003c 00000000 		.word	flag_sw
 220              		.cfi_endproc
 221              	.LFE127:
 223              		.section	.text.TIM1_UP_TIM16_IRQHandler,"ax",%progbits
 224              		.align	1
 225              		.p2align 2,,3
 226              		.global	TIM1_UP_TIM16_IRQHandler
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
 230              		.fpu fpv4-sp-d16
 232              	TIM1_UP_TIM16_IRQHandler:
 233              	.LFB128:
 169:Src/stm32f3xx_it.c **** 
 170:Src/stm32f3xx_it.c **** /**
 171:Src/stm32f3xx_it.c ****   * @brief This function handles TIM1 update and TIM16 interrupts.
 172:Src/stm32f3xx_it.c ****   */
 173:Src/stm32f3xx_it.c **** void TIM1_UP_TIM16_IRQHandler(void)
 174:Src/stm32f3xx_it.c **** {
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s 			page 8


 234              		.loc 1 174 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 175:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 0 */
 176:Src/stm32f3xx_it.c **** 
 177:Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_UP_TIM16_IRQn 0 */
 178:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 239              		.loc 1 178 0
 240 0000 0148     		ldr	r0, .L24
 241 0002 FFF7FEBF 		b	HAL_TIM_IRQHandler
 242              	.LVL11:
 243              	.L25:
 244 0006 00BF     		.align	2
 245              	.L24:
 246 0008 00000000 		.word	htim1
 247              		.cfi_endproc
 248              	.LFE128:
 250              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 251              		.align	1
 252              		.p2align 2,,3
 253              		.global	TIM2_IRQHandler
 254              		.syntax unified
 255              		.thumb
 256              		.thumb_func
 257              		.fpu fpv4-sp-d16
 259              	TIM2_IRQHandler:
 260              	.LFB129:
 179:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 1 */
 180:Src/stm32f3xx_it.c **** 
 181:Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_UP_TIM16_IRQn 1 */
 182:Src/stm32f3xx_it.c **** }
 183:Src/stm32f3xx_it.c **** 
 184:Src/stm32f3xx_it.c **** /**
 185:Src/stm32f3xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 186:Src/stm32f3xx_it.c ****   */
 187:Src/stm32f3xx_it.c **** void TIM2_IRQHandler(void)
 188:Src/stm32f3xx_it.c **** {
 261              		.loc 1 188 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265 0000 08B5     		push	{r3, lr}
 266              	.LCFI4:
 267              		.cfi_def_cfa_offset 8
 268              		.cfi_offset 3, -8
 269              		.cfi_offset 14, -4
 189:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 190:Src/stm32f3xx_it.c **** 
 191:Src/stm32f3xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 192:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 270              		.loc 1 192 0
 271 0002 0448     		ldr	r0, .L28
 272 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 273              	.LVL12:
 193:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s 			page 9


 194:Src/stm32f3xx_it.c ****   // 20ms timer for diaplay update
 195:Src/stm32f3xx_it.c ****   flag_disp = 1;
 274              		.loc 1 195 0
 275 0008 0349     		ldr	r1, .L28+4
 196:Src/stm32f3xx_it.c ****   flag_meas = 1;
 276              		.loc 1 196 0
 277 000a 044A     		ldr	r2, .L28+8
 195:Src/stm32f3xx_it.c ****   flag_meas = 1;
 278              		.loc 1 195 0
 279 000c 0123     		movs	r3, #1
 280 000e 0B60     		str	r3, [r1]
 281              		.loc 1 196 0
 282 0010 1360     		str	r3, [r2]
 197:Src/stm32f3xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 198:Src/stm32f3xx_it.c **** }
 283              		.loc 1 198 0
 284 0012 08BD     		pop	{r3, pc}
 285              	.L29:
 286              		.align	2
 287              	.L28:
 288 0014 00000000 		.word	htim2
 289 0018 00000000 		.word	flag_disp
 290 001c 00000000 		.word	flag_meas
 291              		.cfi_endproc
 292              	.LFE129:
 294              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 295              		.align	1
 296              		.p2align 2,,3
 297              		.global	TIM3_IRQHandler
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 301              		.fpu fpv4-sp-d16
 303              	TIM3_IRQHandler:
 304              	.LFB130:
 199:Src/stm32f3xx_it.c **** 
 200:Src/stm32f3xx_it.c **** /**
 201:Src/stm32f3xx_it.c ****   * @brief This function handles TIM3 global interrupt.
 202:Src/stm32f3xx_it.c ****   */
 203:Src/stm32f3xx_it.c **** void TIM3_IRQHandler(void)
 204:Src/stm32f3xx_it.c **** {
 305              		.loc 1 204 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309 0000 08B5     		push	{r3, lr}
 310              	.LCFI5:
 311              		.cfi_def_cfa_offset 8
 312              		.cfi_offset 3, -8
 313              		.cfi_offset 14, -4
 205:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 206:Src/stm32f3xx_it.c **** 
 207:Src/stm32f3xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 208:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 314              		.loc 1 208 0
 315 0002 0348     		ldr	r0, .L32
 316 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s 			page 10


 317              	.LVL13:
 209:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 210:Src/stm32f3xx_it.c ****   tacho_overflow();
 211:Src/stm32f3xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 212:Src/stm32f3xx_it.c **** }
 318              		.loc 1 212 0
 319 0008 BDE80840 		pop	{r3, lr}
 320              	.LCFI6:
 321              		.cfi_restore 14
 322              		.cfi_restore 3
 323              		.cfi_def_cfa_offset 0
 210:Src/stm32f3xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 324              		.loc 1 210 0
 325 000c FFF7FEBF 		b	tacho_overflow
 326              	.LVL14:
 327              	.L33:
 328              		.align	2
 329              	.L32:
 330 0010 00000000 		.word	htim3
 331              		.cfi_endproc
 332              	.LFE130:
 334              		.section	.text.USART1_IRQHandler,"ax",%progbits
 335              		.align	1
 336              		.p2align 2,,3
 337              		.global	USART1_IRQHandler
 338              		.syntax unified
 339              		.thumb
 340              		.thumb_func
 341              		.fpu fpv4-sp-d16
 343              	USART1_IRQHandler:
 344              	.LFB131:
 213:Src/stm32f3xx_it.c **** 
 214:Src/stm32f3xx_it.c **** /**
 215:Src/stm32f3xx_it.c ****   * @brief This function handles USART1 global interrupt / USART1 wake-up interrupt through EXT lin
 216:Src/stm32f3xx_it.c ****   */
 217:Src/stm32f3xx_it.c **** void USART1_IRQHandler(void)
 218:Src/stm32f3xx_it.c **** {
 345              		.loc 1 218 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
 219:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 220:Src/stm32f3xx_it.c **** 
 221:Src/stm32f3xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 222:Src/stm32f3xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 350              		.loc 1 222 0
 351 0000 0148     		ldr	r0, .L35
 352 0002 FFF7FEBF 		b	HAL_UART_IRQHandler
 353              	.LVL15:
 354              	.L36:
 355 0006 00BF     		.align	2
 356              	.L35:
 357 0008 00000000 		.word	huart1
 358              		.cfi_endproc
 359              	.LFE131:
 361              		.section	.text.USART2_IRQHandler,"ax",%progbits
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s 			page 11


 362              		.align	1
 363              		.p2align 2,,3
 364              		.global	USART2_IRQHandler
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 368              		.fpu fpv4-sp-d16
 370              	USART2_IRQHandler:
 371              	.LFB132:
 223:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 224:Src/stm32f3xx_it.c **** 
 225:Src/stm32f3xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 226:Src/stm32f3xx_it.c **** }
 227:Src/stm32f3xx_it.c **** 
 228:Src/stm32f3xx_it.c **** /**
 229:Src/stm32f3xx_it.c ****   * @brief This function handles USART2 global interrupt / USART2 wake-up interrupt through EXT lin
 230:Src/stm32f3xx_it.c ****   */
 231:Src/stm32f3xx_it.c **** void USART2_IRQHandler(void)
 232:Src/stm32f3xx_it.c **** {
 372              		.loc 1 232 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              		@ link register save eliminated.
 233:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 234:Src/stm32f3xx_it.c **** 
 235:Src/stm32f3xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 236:Src/stm32f3xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 377              		.loc 1 236 0
 378 0000 0148     		ldr	r0, .L38
 379 0002 FFF7FEBF 		b	HAL_UART_IRQHandler
 380              	.LVL16:
 381              	.L39:
 382 0006 00BF     		.align	2
 383              	.L38:
 384 0008 00000000 		.word	huart2
 385              		.cfi_endproc
 386              	.LFE132:
 388              		.section	.text.TIM6_DAC1_IRQHandler,"ax",%progbits
 389              		.align	1
 390              		.p2align 2,,3
 391              		.global	TIM6_DAC1_IRQHandler
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 395              		.fpu fpv4-sp-d16
 397              	TIM6_DAC1_IRQHandler:
 398              	.LFB133:
 237:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 238:Src/stm32f3xx_it.c **** 
 239:Src/stm32f3xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 240:Src/stm32f3xx_it.c **** }
 241:Src/stm32f3xx_it.c **** 
 242:Src/stm32f3xx_it.c **** /**
 243:Src/stm32f3xx_it.c ****   * @brief This function handles TIM6 global and DAC1 underrun error interrupts.
 244:Src/stm32f3xx_it.c ****   */
 245:Src/stm32f3xx_it.c **** void TIM6_DAC1_IRQHandler(void)
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s 			page 12


 246:Src/stm32f3xx_it.c **** {
 399              		.loc 1 246 0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403 0000 08B5     		push	{r3, lr}
 404              	.LCFI7:
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 3, -8
 407              		.cfi_offset 14, -4
 247:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM6_DAC1_IRQn 0 */
 248:Src/stm32f3xx_it.c **** 
 249:Src/stm32f3xx_it.c **** 
 250:Src/stm32f3xx_it.c ****   /* USER CODE END TIM6_DAC1_IRQn 0 */
 251:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 408              		.loc 1 251 0
 409 0002 0548     		ldr	r0, .L42
 410 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 411              	.LVL17:
 252:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM6_DAC1_IRQn 1 */
 253:Src/stm32f3xx_it.c **** 
 254:Src/stm32f3xx_it.c **** 
 255:Src/stm32f3xx_it.c ****   // SW external interrupt
 256:Src/stm32f3xx_it.c ****   HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 412              		.loc 1 256 0
 413 0008 0720     		movs	r0, #7
 414 000a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 415              	.LVL18:
 257:Src/stm32f3xx_it.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 416              		.loc 1 257 0
 417 000e 1720     		movs	r0, #23
 258:Src/stm32f3xx_it.c **** 
 259:Src/stm32f3xx_it.c **** 
 260:Src/stm32f3xx_it.c ****   /* USER CODE END TIM6_DAC1_IRQn 1 */
 261:Src/stm32f3xx_it.c **** }
 418              		.loc 1 261 0
 419 0010 BDE80840 		pop	{r3, lr}
 420              	.LCFI8:
 421              		.cfi_restore 14
 422              		.cfi_restore 3
 423              		.cfi_def_cfa_offset 0
 257:Src/stm32f3xx_it.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 424              		.loc 1 257 0
 425 0014 FFF7FEBF 		b	HAL_NVIC_EnableIRQ
 426              	.LVL19:
 427              	.L43:
 428              		.align	2
 429              	.L42:
 430 0018 00000000 		.word	htim6
 431              		.cfi_endproc
 432              	.LFE133:
 434              		.text
 435              	.Letext0:
 436              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 437              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 438              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 439              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s 			page 13


 440              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 441              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 442              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 443              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 444              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 445              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 446              		.file 12 "Inc/usart.h"
 447              		.file 13 "/Users/imashio/Electronics/ARM/_Library/flag.h"
 448              		.file 14 "Src/pulse_counter.h"
 449              		.file 15 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 450              		.file 16 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_it.c
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:18     .text.SysTick_Handler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:26     .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:41     .text.EXTI1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:49     .text.EXTI1_IRQHandler:0000000000000000 EXTI1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:80     .text.EXTI1_IRQHandler:000000000000001c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:86     .text.EXTI4_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:94     .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:129    .text.EXTI4_IRQHandler:000000000000001c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:134    .text.DMA1_Channel1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:142    .text.DMA1_Channel1_IRQHandler:0000000000000000 DMA1_Channel1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:156    .text.DMA1_Channel1_IRQHandler:0000000000000008 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:161    .text.EXTI9_5_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:169    .text.EXTI9_5_IRQHandler:0000000000000000 EXTI9_5_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:218    .text.EXTI9_5_IRQHandler:0000000000000038 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:224    .text.TIM1_UP_TIM16_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:232    .text.TIM1_UP_TIM16_IRQHandler:0000000000000000 TIM1_UP_TIM16_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:246    .text.TIM1_UP_TIM16_IRQHandler:0000000000000008 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:251    .text.TIM2_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:259    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:288    .text.TIM2_IRQHandler:0000000000000014 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:295    .text.TIM3_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:303    .text.TIM3_IRQHandler:0000000000000000 TIM3_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:330    .text.TIM3_IRQHandler:0000000000000010 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:335    .text.USART1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:343    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:357    .text.USART1_IRQHandler:0000000000000008 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:362    .text.USART2_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:370    .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:384    .text.USART2_IRQHandler:0000000000000008 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:389    .text.TIM6_DAC1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:397    .text.TIM6_DAC1_IRQHandler:0000000000000000 TIM6_DAC1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cctkqQS0.s:430    .text.TIM6_DAC1_IRQHandler:0000000000000018 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_GPIO_EXTI_IRQHandler
HAL_GPIO_ReadPin
flag_sw
tacho
HAL_DMA_IRQHandler
hdma_adc1
HAL_TIM_IRQHandler
htim1
htim2
flag_disp
flag_meas
tacho_overflow
htim3
HAL_UART_IRQHandler
huart1
huart2
HAL_NVIC_EnableIRQ
htim6
