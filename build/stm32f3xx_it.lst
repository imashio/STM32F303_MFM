ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SysTick_Handler,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	SysTick_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SysTick_Handler:
  27              	.LFB126:
  28              		.file 1 "Src/stm32f3xx_it.c"
   1:Src/stm32f3xx_it.c **** /**
   2:Src/stm32f3xx_it.c ****   ******************************************************************************
   3:Src/stm32f3xx_it.c ****   * @file    stm32f3xx_it.c
   4:Src/stm32f3xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f3xx_it.c ****   ******************************************************************************
   6:Src/stm32f3xx_it.c ****   *
   7:Src/stm32f3xx_it.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
   8:Src/stm32f3xx_it.c ****   *
   9:Src/stm32f3xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f3xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f3xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f3xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f3xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f3xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f3xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f3xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f3xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f3xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f3xx_it.c ****   *
  20:Src/stm32f3xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f3xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f3xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f3xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f3xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f3xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f3xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f3xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f3xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f3xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f3xx_it.c ****   *
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s 			page 2


  31:Src/stm32f3xx_it.c ****   ******************************************************************************
  32:Src/stm32f3xx_it.c ****   */
  33:Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f3xx_it.c **** #include "stm32f3xx_hal.h"
  35:Src/stm32f3xx_it.c **** #include "stm32f3xx.h"
  36:Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  37:Src/stm32f3xx_it.c **** 
  38:Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f3xx_it.c **** #include "usart.h"
  40:Src/stm32f3xx_it.c **** #include "flag.h"
  41:Src/stm32f3xx_it.c **** #include "pulse_counter.h"
  42:Src/stm32f3xx_it.c **** 
  43:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart2;
  44:Src/stm32f3xx_it.c **** 
  45:Src/stm32f3xx_it.c **** 
  46:Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  47:Src/stm32f3xx_it.c **** 
  48:Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  49:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  50:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim1;
  51:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim2;
  52:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim3;
  53:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim6;
  54:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart1;
  55:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart2;
  56:Src/stm32f3xx_it.c **** 
  57:Src/stm32f3xx_it.c **** /******************************************************************************/
  58:Src/stm32f3xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  59:Src/stm32f3xx_it.c **** /******************************************************************************/
  60:Src/stm32f3xx_it.c **** 
  61:Src/stm32f3xx_it.c **** /**
  62:Src/stm32f3xx_it.c **** * @brief This function handles System tick timer.
  63:Src/stm32f3xx_it.c **** */
  64:Src/stm32f3xx_it.c **** void SysTick_Handler(void)
  65:Src/stm32f3xx_it.c **** {
  29              		.loc 1 65 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  66:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
  67:Src/stm32f3xx_it.c **** 
  68:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
  69:Src/stm32f3xx_it.c ****   HAL_IncTick();
  38              		.loc 1 69 0
  39 0002 FFF7FEFF 		bl	HAL_IncTick
  40              	.LVL0:
  70:Src/stm32f3xx_it.c ****   HAL_SYSTICK_IRQHandler();
  71:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
  72:Src/stm32f3xx_it.c **** 
  73:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
  74:Src/stm32f3xx_it.c **** }
  41              		.loc 1 74 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s 			page 3


  42 0006 BDE80840 		pop	{r3, lr}
  43              	.LCFI1:
  44              		.cfi_restore 14
  45              		.cfi_restore 3
  46              		.cfi_def_cfa_offset 0
  70:Src/stm32f3xx_it.c ****   HAL_SYSTICK_IRQHandler();
  47              		.loc 1 70 0
  48 000a FFF7FEBF 		b	HAL_SYSTICK_IRQHandler
  49              	.LVL1:
  50              		.cfi_endproc
  51              	.LFE126:
  53 000e 00BF     		.section	.text.EXTI1_IRQHandler,"ax",%progbits
  54              		.align	1
  55              		.p2align 2,,3
  56              		.global	EXTI1_IRQHandler
  57              		.syntax unified
  58              		.thumb
  59              		.thumb_func
  60              		.fpu fpv4-sp-d16
  62              	EXTI1_IRQHandler:
  63              	.LFB127:
  75:Src/stm32f3xx_it.c **** 
  76:Src/stm32f3xx_it.c **** /******************************************************************************/
  77:Src/stm32f3xx_it.c **** /* STM32F3xx Peripheral Interrupt Handlers                                    */
  78:Src/stm32f3xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
  79:Src/stm32f3xx_it.c **** /* For the available peripheral interrupt handler names,                      */
  80:Src/stm32f3xx_it.c **** /* please refer to the startup file (startup_stm32f3xx.s).                    */
  81:Src/stm32f3xx_it.c **** /******************************************************************************/
  82:Src/stm32f3xx_it.c **** 
  83:Src/stm32f3xx_it.c **** /**
  84:Src/stm32f3xx_it.c **** * @brief This function handles EXTI line 1 interrupt.
  85:Src/stm32f3xx_it.c **** */
  86:Src/stm32f3xx_it.c **** void EXTI1_IRQHandler(void)
  87:Src/stm32f3xx_it.c **** {
  64              		.loc 1 87 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68 0000 08B5     		push	{r3, lr}
  69              	.LCFI2:
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 3, -8
  72              		.cfi_offset 14, -4
  88:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 0 */
  89:Src/stm32f3xx_it.c **** 
  90:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI1_IRQn 0 */
  91:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
  73              		.loc 1 91 0
  74 0002 0220     		movs	r0, #2
  75 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
  76              	.LVL2:
  92:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 1 */
  93:Src/stm32f3xx_it.c ****   // SW Enter input
  94:Src/stm32f3xx_it.c ****   if(HAL_GPIO_ReadPin( GPIOF, GPIO_PIN_1 ) == 0 ){
  77              		.loc 1 94 0
  78 0008 0221     		movs	r1, #2
  79 000a 0448     		ldr	r0, .L7
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s 			page 4


  80 000c FFF7FEFF 		bl	HAL_GPIO_ReadPin
  81              	.LVL3:
  82 0010 10B9     		cbnz	r0, .L4
  95:Src/stm32f3xx_it.c ****     flag_sw = 3;
  83              		.loc 1 95 0
  84 0012 034B     		ldr	r3, .L7+4
  85 0014 0322     		movs	r2, #3
  86 0016 1A60     		str	r2, [r3]
  87              	.L4:
  96:Src/stm32f3xx_it.c ****   }
  97:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI1_IRQn 1 */
  98:Src/stm32f3xx_it.c **** }
  88              		.loc 1 98 0
  89 0018 08BD     		pop	{r3, pc}
  90              	.L8:
  91 001a 00BF     		.align	2
  92              	.L7:
  93 001c 00140048 		.word	1207964672
  94 0020 00000000 		.word	flag_sw
  95              		.cfi_endproc
  96              	.LFE127:
  98              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
  99              		.align	1
 100              		.p2align 2,,3
 101              		.global	EXTI4_IRQHandler
 102              		.syntax unified
 103              		.thumb
 104              		.thumb_func
 105              		.fpu fpv4-sp-d16
 107              	EXTI4_IRQHandler:
 108              	.LFB128:
  99:Src/stm32f3xx_it.c **** 
 100:Src/stm32f3xx_it.c **** /**
 101:Src/stm32f3xx_it.c **** * @brief This function handles EXTI line 4 interrupt.
 102:Src/stm32f3xx_it.c **** */
 103:Src/stm32f3xx_it.c **** void EXTI4_IRQHandler(void)
 104:Src/stm32f3xx_it.c **** {
 109              		.loc 1 104 0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113 0000 08B5     		push	{r3, lr}
 114              	.LCFI3:
 115              		.cfi_def_cfa_offset 8
 116              		.cfi_offset 3, -8
 117              		.cfi_offset 14, -4
 105:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 0 */
 106:Src/stm32f3xx_it.c **** 
 107:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI4_IRQn 0 */
 108:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_4);
 118              		.loc 1 108 0
 119 0002 1020     		movs	r0, #16
 120 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 121              	.LVL4:
 109:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 1 */
 110:Src/stm32f3xx_it.c ****   if(HAL_GPIO_ReadPin( GPIOB, GPIO_PIN_4 ) == 0 ){ // Tacho input
 122              		.loc 1 110 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s 			page 5


 123 0008 1021     		movs	r1, #16
 124 000a 0448     		ldr	r0, .L13
 125 000c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 126              	.LVL5:
 127 0010 00B1     		cbz	r0, .L12
 111:Src/stm32f3xx_it.c ****     tacho();
 112:Src/stm32f3xx_it.c ****   }
 113:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI4_IRQn 1 */
 114:Src/stm32f3xx_it.c **** }
 128              		.loc 1 114 0
 129 0012 08BD     		pop	{r3, pc}
 130              	.L12:
 131 0014 BDE80840 		pop	{r3, lr}
 132              	.LCFI4:
 133              		.cfi_restore 14
 134              		.cfi_restore 3
 135              		.cfi_def_cfa_offset 0
 111:Src/stm32f3xx_it.c ****     tacho();
 136              		.loc 1 111 0
 137 0018 FFF7FEBF 		b	tacho
 138              	.LVL6:
 139              	.L14:
 140              		.align	2
 141              	.L13:
 142 001c 00040048 		.word	1207960576
 143              		.cfi_endproc
 144              	.LFE128:
 146              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 147              		.align	1
 148              		.p2align 2,,3
 149              		.global	DMA1_Channel1_IRQHandler
 150              		.syntax unified
 151              		.thumb
 152              		.thumb_func
 153              		.fpu fpv4-sp-d16
 155              	DMA1_Channel1_IRQHandler:
 156              	.LFB129:
 115:Src/stm32f3xx_it.c **** 
 116:Src/stm32f3xx_it.c **** /**
 117:Src/stm32f3xx_it.c **** * @brief This function handles DMA1 channel1 global interrupt.
 118:Src/stm32f3xx_it.c **** */
 119:Src/stm32f3xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 120:Src/stm32f3xx_it.c **** {
 157              		.loc 1 120 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 121:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 122:Src/stm32f3xx_it.c **** 
 123:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 124:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 162              		.loc 1 124 0
 163 0000 0148     		ldr	r0, .L16
 164 0002 FFF7FEBF 		b	HAL_DMA_IRQHandler
 165              	.LVL7:
 166              	.L17:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s 			page 6


 167 0006 00BF     		.align	2
 168              	.L16:
 169 0008 00000000 		.word	hdma_adc1
 170              		.cfi_endproc
 171              	.LFE129:
 173              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 174              		.align	1
 175              		.p2align 2,,3
 176              		.global	EXTI9_5_IRQHandler
 177              		.syntax unified
 178              		.thumb
 179              		.thumb_func
 180              		.fpu fpv4-sp-d16
 182              	EXTI9_5_IRQHandler:
 183              	.LFB130:
 125:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 126:Src/stm32f3xx_it.c **** 
 127:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 128:Src/stm32f3xx_it.c **** }
 129:Src/stm32f3xx_it.c **** 
 130:Src/stm32f3xx_it.c **** /**
 131:Src/stm32f3xx_it.c **** * @brief This function handles EXTI line[9:5] interrupts.
 132:Src/stm32f3xx_it.c **** */
 133:Src/stm32f3xx_it.c **** void EXTI9_5_IRQHandler(void)
 134:Src/stm32f3xx_it.c **** {
 184              		.loc 1 134 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188 0000 08B5     		push	{r3, lr}
 189              	.LCFI5:
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 3, -8
 192              		.cfi_offset 14, -4
 135:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 0 */
 136:Src/stm32f3xx_it.c **** 
 137:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 0 */
 138:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_5);
 193              		.loc 1 138 0
 194 0002 2020     		movs	r0, #32
 195 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 196              	.LVL8:
 139:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_6);
 197              		.loc 1 139 0
 198 0008 4020     		movs	r0, #64
 199 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 200              	.LVL9:
 140:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 1 */
 141:Src/stm32f3xx_it.c ****   // SW "Up"/"Down" input
 142:Src/stm32f3xx_it.c ****   // UP key : PB5
 143:Src/stm32f3xx_it.c ****   if(HAL_GPIO_ReadPin( GPIOB, GPIO_PIN_5 ) == 0 ){
 201              		.loc 1 143 0
 202 000e 2021     		movs	r1, #32
 203 0010 0948     		ldr	r0, .L22
 204 0012 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 205              	.LVL10:
 206 0016 18B9     		cbnz	r0, .L19
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s 			page 7


 144:Src/stm32f3xx_it.c ****     flag_sw = 1;
 207              		.loc 1 144 0
 208 0018 084B     		ldr	r3, .L22+4
 209 001a 0122     		movs	r2, #1
 210 001c 1A60     		str	r2, [r3]
 211              	.L18:
 145:Src/stm32f3xx_it.c ****   // DOWN key : PA6
 146:Src/stm32f3xx_it.c ****   }else if(HAL_GPIO_ReadPin( GPIOA, GPIO_PIN_6 ) == 0 ){
 147:Src/stm32f3xx_it.c ****     flag_sw = 2;
 148:Src/stm32f3xx_it.c ****   }
 149:Src/stm32f3xx_it.c **** 
 150:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 1 */
 151:Src/stm32f3xx_it.c **** }
 212              		.loc 1 151 0
 213 001e 08BD     		pop	{r3, pc}
 214              	.L19:
 146:Src/stm32f3xx_it.c ****     flag_sw = 2;
 215              		.loc 1 146 0
 216 0020 4021     		movs	r1, #64
 217 0022 4FF09040 		mov	r0, #1207959552
 218 0026 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 219              	.LVL11:
 220 002a 0028     		cmp	r0, #0
 221 002c F7D1     		bne	.L18
 147:Src/stm32f3xx_it.c ****   }
 222              		.loc 1 147 0
 223 002e 034B     		ldr	r3, .L22+4
 224 0030 0222     		movs	r2, #2
 225 0032 1A60     		str	r2, [r3]
 226              		.loc 1 151 0
 227 0034 08BD     		pop	{r3, pc}
 228              	.L23:
 229 0036 00BF     		.align	2
 230              	.L22:
 231 0038 00040048 		.word	1207960576
 232 003c 00000000 		.word	flag_sw
 233              		.cfi_endproc
 234              	.LFE130:
 236              		.section	.text.TIM1_UP_TIM16_IRQHandler,"ax",%progbits
 237              		.align	1
 238              		.p2align 2,,3
 239              		.global	TIM1_UP_TIM16_IRQHandler
 240              		.syntax unified
 241              		.thumb
 242              		.thumb_func
 243              		.fpu fpv4-sp-d16
 245              	TIM1_UP_TIM16_IRQHandler:
 246              	.LFB131:
 152:Src/stm32f3xx_it.c **** 
 153:Src/stm32f3xx_it.c **** /**
 154:Src/stm32f3xx_it.c **** * @brief This function handles TIM1 update and TIM16 interrupts.
 155:Src/stm32f3xx_it.c **** */
 156:Src/stm32f3xx_it.c **** void TIM1_UP_TIM16_IRQHandler(void)
 157:Src/stm32f3xx_it.c **** {
 247              		.loc 1 157 0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s 			page 8


 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251              		@ link register save eliminated.
 158:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 0 */
 159:Src/stm32f3xx_it.c **** 
 160:Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_UP_TIM16_IRQn 0 */
 161:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 252              		.loc 1 161 0
 253 0000 0148     		ldr	r0, .L25
 254 0002 FFF7FEBF 		b	HAL_TIM_IRQHandler
 255              	.LVL12:
 256              	.L26:
 257 0006 00BF     		.align	2
 258              	.L25:
 259 0008 00000000 		.word	htim1
 260              		.cfi_endproc
 261              	.LFE131:
 263              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 264              		.align	1
 265              		.p2align 2,,3
 266              		.global	TIM2_IRQHandler
 267              		.syntax unified
 268              		.thumb
 269              		.thumb_func
 270              		.fpu fpv4-sp-d16
 272              	TIM2_IRQHandler:
 273              	.LFB132:
 162:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 1 */
 163:Src/stm32f3xx_it.c **** 
 164:Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_UP_TIM16_IRQn 1 */
 165:Src/stm32f3xx_it.c **** }
 166:Src/stm32f3xx_it.c **** 
 167:Src/stm32f3xx_it.c **** /**
 168:Src/stm32f3xx_it.c **** * @brief This function handles TIM2 global interrupt.
 169:Src/stm32f3xx_it.c **** */
 170:Src/stm32f3xx_it.c **** void TIM2_IRQHandler(void)
 171:Src/stm32f3xx_it.c **** {
 274              		.loc 1 171 0
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 0
 277              		@ frame_needed = 0, uses_anonymous_args = 0
 278 0000 08B5     		push	{r3, lr}
 279              	.LCFI6:
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 3, -8
 282              		.cfi_offset 14, -4
 172:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 173:Src/stm32f3xx_it.c **** 
 174:Src/stm32f3xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 175:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 283              		.loc 1 175 0
 284 0002 0448     		ldr	r0, .L29
 285 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 286              	.LVL13:
 176:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 177:Src/stm32f3xx_it.c ****   // 20ms timer for diaplay update
 178:Src/stm32f3xx_it.c ****   flag_disp = 1;
 287              		.loc 1 178 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s 			page 9


 288 0008 0349     		ldr	r1, .L29+4
 179:Src/stm32f3xx_it.c ****   flag_meas = 1;
 289              		.loc 1 179 0
 290 000a 044A     		ldr	r2, .L29+8
 178:Src/stm32f3xx_it.c ****   flag_meas = 1;
 291              		.loc 1 178 0
 292 000c 0123     		movs	r3, #1
 293 000e 0B60     		str	r3, [r1]
 294              		.loc 1 179 0
 295 0010 1360     		str	r3, [r2]
 180:Src/stm32f3xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 181:Src/stm32f3xx_it.c **** }
 296              		.loc 1 181 0
 297 0012 08BD     		pop	{r3, pc}
 298              	.L30:
 299              		.align	2
 300              	.L29:
 301 0014 00000000 		.word	htim2
 302 0018 00000000 		.word	flag_disp
 303 001c 00000000 		.word	flag_meas
 304              		.cfi_endproc
 305              	.LFE132:
 307              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 308              		.align	1
 309              		.p2align 2,,3
 310              		.global	TIM3_IRQHandler
 311              		.syntax unified
 312              		.thumb
 313              		.thumb_func
 314              		.fpu fpv4-sp-d16
 316              	TIM3_IRQHandler:
 317              	.LFB133:
 182:Src/stm32f3xx_it.c **** 
 183:Src/stm32f3xx_it.c **** /**
 184:Src/stm32f3xx_it.c **** * @brief This function handles TIM3 global interrupt.
 185:Src/stm32f3xx_it.c **** */
 186:Src/stm32f3xx_it.c **** void TIM3_IRQHandler(void)
 187:Src/stm32f3xx_it.c **** {
 318              		.loc 1 187 0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322 0000 08B5     		push	{r3, lr}
 323              	.LCFI7:
 324              		.cfi_def_cfa_offset 8
 325              		.cfi_offset 3, -8
 326              		.cfi_offset 14, -4
 188:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 189:Src/stm32f3xx_it.c **** 
 190:Src/stm32f3xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 191:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 327              		.loc 1 191 0
 328 0002 0348     		ldr	r0, .L33
 329 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 330              	.LVL14:
 192:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 193:Src/stm32f3xx_it.c ****   tacho_overflow();
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s 			page 10


 194:Src/stm32f3xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 195:Src/stm32f3xx_it.c **** }
 331              		.loc 1 195 0
 332 0008 BDE80840 		pop	{r3, lr}
 333              	.LCFI8:
 334              		.cfi_restore 14
 335              		.cfi_restore 3
 336              		.cfi_def_cfa_offset 0
 193:Src/stm32f3xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 337              		.loc 1 193 0
 338 000c FFF7FEBF 		b	tacho_overflow
 339              	.LVL15:
 340              	.L34:
 341              		.align	2
 342              	.L33:
 343 0010 00000000 		.word	htim3
 344              		.cfi_endproc
 345              	.LFE133:
 347              		.section	.text.USART1_IRQHandler,"ax",%progbits
 348              		.align	1
 349              		.p2align 2,,3
 350              		.global	USART1_IRQHandler
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
 354              		.fpu fpv4-sp-d16
 356              	USART1_IRQHandler:
 357              	.LFB134:
 196:Src/stm32f3xx_it.c **** 
 197:Src/stm32f3xx_it.c **** /**
 198:Src/stm32f3xx_it.c **** * @brief This function handles USART1 global interrupt / USART1 wake-up interrupt through EXT line 
 199:Src/stm32f3xx_it.c **** */
 200:Src/stm32f3xx_it.c **** void USART1_IRQHandler(void)
 201:Src/stm32f3xx_it.c **** {
 358              		.loc 1 201 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
 362              		@ link register save eliminated.
 202:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 203:Src/stm32f3xx_it.c **** 
 204:Src/stm32f3xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 205:Src/stm32f3xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 363              		.loc 1 205 0
 364 0000 0148     		ldr	r0, .L36
 365 0002 FFF7FEBF 		b	HAL_UART_IRQHandler
 366              	.LVL16:
 367              	.L37:
 368 0006 00BF     		.align	2
 369              	.L36:
 370 0008 00000000 		.word	huart1
 371              		.cfi_endproc
 372              	.LFE134:
 374              		.section	.text.USART2_IRQHandler,"ax",%progbits
 375              		.align	1
 376              		.p2align 2,,3
 377              		.global	USART2_IRQHandler
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s 			page 11


 378              		.syntax unified
 379              		.thumb
 380              		.thumb_func
 381              		.fpu fpv4-sp-d16
 383              	USART2_IRQHandler:
 384              	.LFB135:
 206:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 207:Src/stm32f3xx_it.c **** 
 208:Src/stm32f3xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 209:Src/stm32f3xx_it.c **** }
 210:Src/stm32f3xx_it.c **** 
 211:Src/stm32f3xx_it.c **** /**
 212:Src/stm32f3xx_it.c **** * @brief This function handles USART2 global interrupt / USART2 wake-up interrupt through EXT line 
 213:Src/stm32f3xx_it.c **** */
 214:Src/stm32f3xx_it.c **** void USART2_IRQHandler(void)
 215:Src/stm32f3xx_it.c **** {
 385              		.loc 1 215 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389              		@ link register save eliminated.
 216:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 217:Src/stm32f3xx_it.c **** 
 218:Src/stm32f3xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 219:Src/stm32f3xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 390              		.loc 1 219 0
 391 0000 0148     		ldr	r0, .L39
 392 0002 FFF7FEBF 		b	HAL_UART_IRQHandler
 393              	.LVL17:
 394              	.L40:
 395 0006 00BF     		.align	2
 396              	.L39:
 397 0008 00000000 		.word	huart2
 398              		.cfi_endproc
 399              	.LFE135:
 401              		.section	.text.TIM6_DAC1_IRQHandler,"ax",%progbits
 402              		.align	1
 403              		.p2align 2,,3
 404              		.global	TIM6_DAC1_IRQHandler
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 408              		.fpu fpv4-sp-d16
 410              	TIM6_DAC1_IRQHandler:
 411              	.LFB136:
 220:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 221:Src/stm32f3xx_it.c **** 
 222:Src/stm32f3xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 223:Src/stm32f3xx_it.c **** }
 224:Src/stm32f3xx_it.c **** 
 225:Src/stm32f3xx_it.c **** /**
 226:Src/stm32f3xx_it.c **** * @brief This function handles TIM6 global and DAC1 underrun error interrupts.
 227:Src/stm32f3xx_it.c **** */
 228:Src/stm32f3xx_it.c **** void TIM6_DAC1_IRQHandler(void)
 229:Src/stm32f3xx_it.c **** {
 412              		.loc 1 229 0
 413              		.cfi_startproc
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s 			page 12


 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416 0000 08B5     		push	{r3, lr}
 417              	.LCFI9:
 418              		.cfi_def_cfa_offset 8
 419              		.cfi_offset 3, -8
 420              		.cfi_offset 14, -4
 230:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM6_DAC1_IRQn 0 */
 231:Src/stm32f3xx_it.c **** 
 232:Src/stm32f3xx_it.c **** 
 233:Src/stm32f3xx_it.c ****   /* USER CODE END TIM6_DAC1_IRQn 0 */
 234:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 421              		.loc 1 234 0
 422 0002 0548     		ldr	r0, .L43
 423 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 424              	.LVL18:
 235:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM6_DAC1_IRQn 1 */
 236:Src/stm32f3xx_it.c **** 
 237:Src/stm32f3xx_it.c **** 
 238:Src/stm32f3xx_it.c ****   // SW external interrupt
 239:Src/stm32f3xx_it.c ****   HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 425              		.loc 1 239 0
 426 0008 0720     		movs	r0, #7
 427 000a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 428              	.LVL19:
 240:Src/stm32f3xx_it.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 429              		.loc 1 240 0
 430 000e 1720     		movs	r0, #23
 241:Src/stm32f3xx_it.c **** 
 242:Src/stm32f3xx_it.c **** 
 243:Src/stm32f3xx_it.c ****   /* USER CODE END TIM6_DAC1_IRQn 1 */
 244:Src/stm32f3xx_it.c **** }
 431              		.loc 1 244 0
 432 0010 BDE80840 		pop	{r3, lr}
 433              	.LCFI10:
 434              		.cfi_restore 14
 435              		.cfi_restore 3
 436              		.cfi_def_cfa_offset 0
 240:Src/stm32f3xx_it.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 437              		.loc 1 240 0
 438 0014 FFF7FEBF 		b	HAL_NVIC_EnableIRQ
 439              	.LVL20:
 440              	.L44:
 441              		.align	2
 442              	.L43:
 443 0018 00000000 		.word	htim6
 444              		.cfi_endproc
 445              	.LFE136:
 447              		.text
 448              	.Letext0:
 449              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 450              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 451              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 452              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 453              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 454              		.file 7 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 455              		.file 8 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s 			page 13


 456              		.file 9 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 457              		.file 10 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 458              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 459              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 460              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 461              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 462              		.file 15 "Inc/usart.h"
 463              		.file 16 "/Users/imashio/Electronics/ARM/_Library/flag.h"
 464              		.file 17 "Src/pulse_counter.h"
 465              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 466              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 467              		.file 20 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_it.c
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:18     .text.SysTick_Handler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:26     .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:54     .text.EXTI1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:62     .text.EXTI1_IRQHandler:0000000000000000 EXTI1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:93     .text.EXTI1_IRQHandler:000000000000001c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:99     .text.EXTI4_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:107    .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:142    .text.EXTI4_IRQHandler:000000000000001c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:147    .text.DMA1_Channel1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:155    .text.DMA1_Channel1_IRQHandler:0000000000000000 DMA1_Channel1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:169    .text.DMA1_Channel1_IRQHandler:0000000000000008 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:174    .text.EXTI9_5_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:182    .text.EXTI9_5_IRQHandler:0000000000000000 EXTI9_5_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:231    .text.EXTI9_5_IRQHandler:0000000000000038 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:237    .text.TIM1_UP_TIM16_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:245    .text.TIM1_UP_TIM16_IRQHandler:0000000000000000 TIM1_UP_TIM16_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:259    .text.TIM1_UP_TIM16_IRQHandler:0000000000000008 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:264    .text.TIM2_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:272    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:301    .text.TIM2_IRQHandler:0000000000000014 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:308    .text.TIM3_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:316    .text.TIM3_IRQHandler:0000000000000000 TIM3_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:343    .text.TIM3_IRQHandler:0000000000000010 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:348    .text.USART1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:356    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:370    .text.USART1_IRQHandler:0000000000000008 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:375    .text.USART2_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:383    .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:397    .text.USART2_IRQHandler:0000000000000008 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:402    .text.TIM6_DAC1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:410    .text.TIM6_DAC1_IRQHandler:0000000000000000 TIM6_DAC1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccR1AI5a.s:443    .text.TIM6_DAC1_IRQHandler:0000000000000018 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_GPIO_EXTI_IRQHandler
HAL_GPIO_ReadPin
flag_sw
tacho
HAL_DMA_IRQHandler
hdma_adc1
HAL_TIM_IRQHandler
htim1
htim2
flag_disp
flag_meas
tacho_overflow
htim3
HAL_UART_IRQHandler
huart1
huart2
HAL_NVIC_EnableIRQ
htim6
