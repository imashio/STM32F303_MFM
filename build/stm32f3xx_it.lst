ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 2
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SysTick_Handler,"ax",%progbits
  18              		.align	1
  19              		.p2align 2,,3
  20              		.global	SysTick_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv4-sp-d16
  26              	SysTick_Handler:
  27              	.LFB123:
  28              		.file 1 "Src/stm32f3xx_it.c"
   1:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f3xx_it.c **** /**
   3:Src/stm32f3xx_it.c ****   ******************************************************************************
   4:Src/stm32f3xx_it.c ****   * @file    stm32f3xx_it.c
   5:Src/stm32f3xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f3xx_it.c ****   ******************************************************************************
   7:Src/stm32f3xx_it.c ****   * @attention
   8:Src/stm32f3xx_it.c ****   *
   9:Src/stm32f3xx_it.c ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/stm32f3xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f3xx_it.c ****   *
  12:Src/stm32f3xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f3xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f3xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f3xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f3xx_it.c ****   *
  17:Src/stm32f3xx_it.c ****   ******************************************************************************
  18:Src/stm32f3xx_it.c ****   */
  19:Src/stm32f3xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f3xx_it.c **** 
  21:Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f3xx_it.c **** #include "main.h"
  23:Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  24:Src/stm32f3xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Src/stm32f3xx_it.c **** /* USER CODE BEGIN Includes */
  26:Src/stm32f3xx_it.c **** #include "can_obd.h"
  27:Src/stm32f3xx_it.c **** 
  28:Src/stm32f3xx_it.c **** /* USER CODE END Includes */
  29:Src/stm32f3xx_it.c **** 
  30:Src/stm32f3xx_it.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s 			page 2


  31:Src/stm32f3xx_it.c **** /* USER CODE BEGIN TD */
  32:Src/stm32f3xx_it.c **** 
  33:Src/stm32f3xx_it.c **** /* USER CODE END TD */
  34:Src/stm32f3xx_it.c **** 
  35:Src/stm32f3xx_it.c **** /* Private define ------------------------------------------------------------*/
  36:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PD */
  37:Src/stm32f3xx_it.c ****  
  38:Src/stm32f3xx_it.c **** /* USER CODE END PD */
  39:Src/stm32f3xx_it.c **** 
  40:Src/stm32f3xx_it.c **** /* Private macro -------------------------------------------------------------*/
  41:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PM */
  42:Src/stm32f3xx_it.c **** 
  43:Src/stm32f3xx_it.c **** /* USER CODE END PM */
  44:Src/stm32f3xx_it.c **** 
  45:Src/stm32f3xx_it.c **** /* Private variables ---------------------------------------------------------*/
  46:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PV */
  47:Src/stm32f3xx_it.c **** 
  48:Src/stm32f3xx_it.c **** /* USER CODE END PV */
  49:Src/stm32f3xx_it.c **** 
  50:Src/stm32f3xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  51:Src/stm32f3xx_it.c **** /* USER CODE BEGIN PFP */
  52:Src/stm32f3xx_it.c **** 
  53:Src/stm32f3xx_it.c **** /* USER CODE END PFP */
  54:Src/stm32f3xx_it.c **** 
  55:Src/stm32f3xx_it.c **** /* Private user code ---------------------------------------------------------*/
  56:Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  57:Src/stm32f3xx_it.c **** #include "usart.h"
  58:Src/stm32f3xx_it.c **** #include "flag.h"
  59:Src/stm32f3xx_it.c **** #include "pulse_counter.h"
  60:Src/stm32f3xx_it.c **** 
  61:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart2;
  62:Src/stm32f3xx_it.c **** 
  63:Src/stm32f3xx_it.c **** 
  64:Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  65:Src/stm32f3xx_it.c **** 
  66:Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  67:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  68:Src/stm32f3xx_it.c **** extern CAN_HandleTypeDef hcan;
  69:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim1;
  70:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim2;
  71:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim3;
  72:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim6;
  73:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim7;
  74:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim16;
  75:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart1;
  76:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart2;
  77:Src/stm32f3xx_it.c **** /* USER CODE BEGIN EV */
  78:Src/stm32f3xx_it.c **** 
  79:Src/stm32f3xx_it.c **** /* USER CODE END EV */
  80:Src/stm32f3xx_it.c **** 
  81:Src/stm32f3xx_it.c **** /******************************************************************************/
  82:Src/stm32f3xx_it.c **** /*           Cortex-M4 Processor Interruption and Exception Handlers          */ 
  83:Src/stm32f3xx_it.c **** /******************************************************************************/
  84:Src/stm32f3xx_it.c **** /**
  85:Src/stm32f3xx_it.c ****   * @brief This function handles System tick timer.
  86:Src/stm32f3xx_it.c ****   */
  87:Src/stm32f3xx_it.c **** void SysTick_Handler(void)
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s 			page 3


  88:Src/stm32f3xx_it.c **** {
  29              		.loc 1 88 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  89:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
  90:Src/stm32f3xx_it.c **** 
  91:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
  92:Src/stm32f3xx_it.c ****   HAL_IncTick();
  34              		.loc 1 92 0
  35 0000 FFF7FEBF 		b	HAL_IncTick
  36              	.LVL0:
  37              		.cfi_endproc
  38              	.LFE123:
  40              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
  41              		.align	1
  42              		.p2align 2,,3
  43              		.global	EXTI1_IRQHandler
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  47              		.fpu fpv4-sp-d16
  49              	EXTI1_IRQHandler:
  50              	.LFB124:
  93:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
  94:Src/stm32f3xx_it.c **** 
  95:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
  96:Src/stm32f3xx_it.c **** }
  97:Src/stm32f3xx_it.c **** 
  98:Src/stm32f3xx_it.c **** /******************************************************************************/
  99:Src/stm32f3xx_it.c **** /* STM32F3xx Peripheral Interrupt Handlers                                    */
 100:Src/stm32f3xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 101:Src/stm32f3xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 102:Src/stm32f3xx_it.c **** /* please refer to the startup file (startup_stm32f3xx.s).                    */
 103:Src/stm32f3xx_it.c **** /******************************************************************************/
 104:Src/stm32f3xx_it.c **** 
 105:Src/stm32f3xx_it.c **** /**
 106:Src/stm32f3xx_it.c ****   * @brief This function handles EXTI line 1 interrupt.
 107:Src/stm32f3xx_it.c ****   */
 108:Src/stm32f3xx_it.c **** void EXTI1_IRQHandler(void)
 109:Src/stm32f3xx_it.c **** {
  51              		.loc 1 109 0
  52              		.cfi_startproc
  53              		@ args = 0, pretend = 0, frame = 0
  54              		@ frame_needed = 0, uses_anonymous_args = 0
  55 0000 08B5     		push	{r3, lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 8
  58              		.cfi_offset 3, -8
  59              		.cfi_offset 14, -4
 110:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 0 */
 111:Src/stm32f3xx_it.c **** 
 112:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI1_IRQn 0 */
 113:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
  60              		.loc 1 113 0
  61 0002 0220     		movs	r0, #2
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s 			page 4


  62 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
  63              	.LVL1:
 114:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 1 */
 115:Src/stm32f3xx_it.c ****   
 116:Src/stm32f3xx_it.c ****   // SW Enter input
 117:Src/stm32f3xx_it.c ****   if(HAL_GPIO_ReadPin( GPIOF, GPIO_PIN_1 ) == 0 ){
  64              		.loc 1 117 0
  65 0008 0221     		movs	r1, #2
  66 000a 0448     		ldr	r0, .L6
  67 000c FFF7FEFF 		bl	HAL_GPIO_ReadPin
  68              	.LVL2:
  69 0010 10B9     		cbnz	r0, .L3
 118:Src/stm32f3xx_it.c ****     flag_sw = 3;
  70              		.loc 1 118 0
  71 0012 034B     		ldr	r3, .L6+4
  72 0014 0322     		movs	r2, #3
  73 0016 1A60     		str	r2, [r3]
  74              	.L3:
 119:Src/stm32f3xx_it.c ****   }
 120:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI1_IRQn 1 */
 121:Src/stm32f3xx_it.c **** }
  75              		.loc 1 121 0
  76 0018 08BD     		pop	{r3, pc}
  77              	.L7:
  78 001a 00BF     		.align	2
  79              	.L6:
  80 001c 00140048 		.word	1207964672
  81 0020 00000000 		.word	flag_sw
  82              		.cfi_endproc
  83              	.LFE124:
  85              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
  86              		.align	1
  87              		.p2align 2,,3
  88              		.global	EXTI4_IRQHandler
  89              		.syntax unified
  90              		.thumb
  91              		.thumb_func
  92              		.fpu fpv4-sp-d16
  94              	EXTI4_IRQHandler:
  95              	.LFB125:
 122:Src/stm32f3xx_it.c **** 
 123:Src/stm32f3xx_it.c **** /**
 124:Src/stm32f3xx_it.c ****   * @brief This function handles EXTI line 4 interrupt.
 125:Src/stm32f3xx_it.c ****   */
 126:Src/stm32f3xx_it.c **** void EXTI4_IRQHandler(void)
 127:Src/stm32f3xx_it.c **** {
  96              		.loc 1 127 0
  97              		.cfi_startproc
  98              		@ args = 0, pretend = 0, frame = 0
  99              		@ frame_needed = 0, uses_anonymous_args = 0
 100 0000 08B5     		push	{r3, lr}
 101              	.LCFI1:
 102              		.cfi_def_cfa_offset 8
 103              		.cfi_offset 3, -8
 104              		.cfi_offset 14, -4
 128:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 0 */
 129:Src/stm32f3xx_it.c **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s 			page 5


 130:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI4_IRQn 0 */
 131:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_4);
 105              		.loc 1 131 0
 106 0002 1020     		movs	r0, #16
 107 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 108              	.LVL3:
 132:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 1 */
 133:Src/stm32f3xx_it.c ****   if(HAL_GPIO_ReadPin( GPIOB, GPIO_PIN_4 ) == 0 ){ // Tacho input
 109              		.loc 1 133 0
 110 0008 1021     		movs	r1, #16
 111 000a 0448     		ldr	r0, .L12
 112 000c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 113              	.LVL4:
 114 0010 00B1     		cbz	r0, .L11
 134:Src/stm32f3xx_it.c ****     tacho_meter();
 135:Src/stm32f3xx_it.c ****   }
 136:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI4_IRQn 1 */
 137:Src/stm32f3xx_it.c **** }
 115              		.loc 1 137 0
 116 0012 08BD     		pop	{r3, pc}
 117              	.L11:
 118 0014 BDE80840 		pop	{r3, lr}
 119              	.LCFI2:
 120              		.cfi_restore 14
 121              		.cfi_restore 3
 122              		.cfi_def_cfa_offset 0
 134:Src/stm32f3xx_it.c ****     tacho_meter();
 123              		.loc 1 134 0
 124 0018 FFF7FEBF 		b	tacho_meter
 125              	.LVL5:
 126              	.L13:
 127              		.align	2
 128              	.L12:
 129 001c 00040048 		.word	1207960576
 130              		.cfi_endproc
 131              	.LFE125:
 133              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 134              		.align	1
 135              		.p2align 2,,3
 136              		.global	DMA1_Channel1_IRQHandler
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 140              		.fpu fpv4-sp-d16
 142              	DMA1_Channel1_IRQHandler:
 143              	.LFB126:
 138:Src/stm32f3xx_it.c **** 
 139:Src/stm32f3xx_it.c **** /**
 140:Src/stm32f3xx_it.c ****   * @brief This function handles DMA1 channel1 global interrupt.
 141:Src/stm32f3xx_it.c ****   */
 142:Src/stm32f3xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 143:Src/stm32f3xx_it.c **** {
 144              		.loc 1 143 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s 			page 6


 144:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 145:Src/stm32f3xx_it.c **** 
 146:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 147:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
 149              		.loc 1 147 0
 150 0000 0148     		ldr	r0, .L15
 151 0002 FFF7FEBF 		b	HAL_DMA_IRQHandler
 152              	.LVL6:
 153              	.L16:
 154 0006 00BF     		.align	2
 155              	.L15:
 156 0008 00000000 		.word	hdma_adc1
 157              		.cfi_endproc
 158              	.LFE126:
 160              		.section	.text.CAN_TX_IRQHandler,"ax",%progbits
 161              		.align	1
 162              		.p2align 2,,3
 163              		.global	CAN_TX_IRQHandler
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu fpv4-sp-d16
 169              	CAN_TX_IRQHandler:
 170              	.LFB127:
 148:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 149:Src/stm32f3xx_it.c **** 
 150:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 151:Src/stm32f3xx_it.c **** }
 152:Src/stm32f3xx_it.c **** 
 153:Src/stm32f3xx_it.c **** /**
 154:Src/stm32f3xx_it.c ****   * @brief This function handles CAN TX interrupt.
 155:Src/stm32f3xx_it.c ****   */
 156:Src/stm32f3xx_it.c **** void CAN_TX_IRQHandler(void)
 157:Src/stm32f3xx_it.c **** {
 171              		.loc 1 157 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		@ link register save eliminated.
 158:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_TX_IRQn 0 */
 159:Src/stm32f3xx_it.c **** 
 160:Src/stm32f3xx_it.c ****   /* USER CODE END CAN_TX_IRQn 0 */
 161:Src/stm32f3xx_it.c ****   HAL_CAN_IRQHandler(&hcan);
 176              		.loc 1 161 0
 177 0000 0148     		ldr	r0, .L18
 178 0002 FFF7FEBF 		b	HAL_CAN_IRQHandler
 179              	.LVL7:
 180              	.L19:
 181 0006 00BF     		.align	2
 182              	.L18:
 183 0008 00000000 		.word	hcan
 184              		.cfi_endproc
 185              	.LFE127:
 187              		.section	.text.CAN_RX0_IRQHandler,"ax",%progbits
 188              		.align	1
 189              		.p2align 2,,3
 190              		.global	CAN_RX0_IRQHandler
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s 			page 7


 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu fpv4-sp-d16
 196              	CAN_RX0_IRQHandler:
 197              	.LFB128:
 162:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_TX_IRQn 1 */
 163:Src/stm32f3xx_it.c **** 
 164:Src/stm32f3xx_it.c ****   /* USER CODE END CAN_TX_IRQn 1 */
 165:Src/stm32f3xx_it.c **** }
 166:Src/stm32f3xx_it.c **** 
 167:Src/stm32f3xx_it.c **** /**
 168:Src/stm32f3xx_it.c ****   * @brief This function handles CAN RX0 interrupt.
 169:Src/stm32f3xx_it.c ****   */
 170:Src/stm32f3xx_it.c **** void CAN_RX0_IRQHandler(void)
 171:Src/stm32f3xx_it.c **** {
 198              		.loc 1 171 0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202 0000 10B5     		push	{r4, lr}
 203              	.LCFI3:
 204              		.cfi_def_cfa_offset 8
 205              		.cfi_offset 4, -8
 206              		.cfi_offset 14, -4
 172:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_RX0_IRQn 0 */
 173:Src/stm32f3xx_it.c **** 
 174:Src/stm32f3xx_it.c ****   /* USER CODE END CAN_RX0_IRQn 0 */
 175:Src/stm32f3xx_it.c ****   HAL_CAN_IRQHandler(&hcan);
 207              		.loc 1 175 0
 208 0002 074C     		ldr	r4, .L22
 209 0004 2046     		mov	r0, r4
 210 0006 FFF7FEFF 		bl	HAL_CAN_IRQHandler
 211              	.LVL8:
 176:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_RX0_IRQn 1 */
 177:Src/stm32f3xx_it.c **** 
 178:Src/stm32f3xx_it.c ****   HAL_CAN_GetRxMessage(&hcan, CAN_RX_FIFO0, &CAN_RxHeader, CAN_RxData);
 212              		.loc 1 178 0
 213 000a 064B     		ldr	r3, .L22+4
 214 000c 064A     		ldr	r2, .L22+8
 215 000e 2046     		mov	r0, r4
 216 0010 0021     		movs	r1, #0
 217 0012 FFF7FEFF 		bl	HAL_CAN_GetRxMessage
 218              	.LVL9:
 179:Src/stm32f3xx_it.c ****   CAN_Received = 1;
 219              		.loc 1 179 0
 220 0016 054B     		ldr	r3, .L22+12
 221 0018 0122     		movs	r2, #1
 222 001a 1A70     		strb	r2, [r3]
 180:Src/stm32f3xx_it.c **** 
 181:Src/stm32f3xx_it.c ****   /* USER CODE END CAN_RX0_IRQn 1 */
 182:Src/stm32f3xx_it.c **** }
 223              		.loc 1 182 0
 224 001c 10BD     		pop	{r4, pc}
 225              	.L23:
 226 001e 00BF     		.align	2
 227              	.L22:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s 			page 8


 228 0020 00000000 		.word	hcan
 229 0024 00000000 		.word	CAN_RxData
 230 0028 00000000 		.word	CAN_RxHeader
 231 002c 00000000 		.word	CAN_Received
 232              		.cfi_endproc
 233              	.LFE128:
 235              		.section	.text.CAN_RX1_IRQHandler,"ax",%progbits
 236              		.align	1
 237              		.p2align 2,,3
 238              		.global	CAN_RX1_IRQHandler
 239              		.syntax unified
 240              		.thumb
 241              		.thumb_func
 242              		.fpu fpv4-sp-d16
 244              	CAN_RX1_IRQHandler:
 245              	.LFB139:
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 250 0000 FFF7FEBF 		b	CAN_TX_IRQHandler
 251              		.cfi_endproc
 252              	.LFE139:
 254              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 255              		.align	1
 256              		.p2align 2,,3
 257              		.global	EXTI9_5_IRQHandler
 258              		.syntax unified
 259              		.thumb
 260              		.thumb_func
 261              		.fpu fpv4-sp-d16
 263              	EXTI9_5_IRQHandler:
 264              	.LFB130:
 183:Src/stm32f3xx_it.c **** 
 184:Src/stm32f3xx_it.c **** /**
 185:Src/stm32f3xx_it.c ****   * @brief This function handles CAN RX1 interrupt.
 186:Src/stm32f3xx_it.c ****   */
 187:Src/stm32f3xx_it.c **** void CAN_RX1_IRQHandler(void)
 188:Src/stm32f3xx_it.c **** {
 189:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_RX1_IRQn 0 */
 190:Src/stm32f3xx_it.c **** 
 191:Src/stm32f3xx_it.c ****   /* USER CODE END CAN_RX1_IRQn 0 */
 192:Src/stm32f3xx_it.c ****   HAL_CAN_IRQHandler(&hcan);
 193:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN CAN_RX1_IRQn 1 */
 194:Src/stm32f3xx_it.c **** 
 195:Src/stm32f3xx_it.c ****   /* USER CODE END CAN_RX1_IRQn 1 */
 196:Src/stm32f3xx_it.c **** }
 197:Src/stm32f3xx_it.c **** 
 198:Src/stm32f3xx_it.c **** /**
 199:Src/stm32f3xx_it.c ****   * @brief This function handles EXTI line[9:5] interrupts.
 200:Src/stm32f3xx_it.c ****   */
 201:Src/stm32f3xx_it.c **** void EXTI9_5_IRQHandler(void)
 202:Src/stm32f3xx_it.c **** {
 265              		.loc 1 202 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s 			page 9


 269              		.loc 1 202 0
 270 0000 08B5     		push	{r3, lr}
 271              	.LCFI4:
 272              		.cfi_def_cfa_offset 8
 273              		.cfi_offset 3, -8
 274              		.cfi_offset 14, -4
 203:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 0 */
 204:Src/stm32f3xx_it.c **** 
 205:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 0 */
 206:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_5);
 275              		.loc 1 206 0
 276 0002 2020     		movs	r0, #32
 277 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 278              	.LVL10:
 207:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_6);
 279              		.loc 1 207 0
 280 0008 4020     		movs	r0, #64
 281 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 282              	.LVL11:
 208:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 1 */
 209:Src/stm32f3xx_it.c **** 
 210:Src/stm32f3xx_it.c ****   // SW "Up"/"Down" input
 211:Src/stm32f3xx_it.c ****   // UP key : PB5
 212:Src/stm32f3xx_it.c ****   if(HAL_GPIO_ReadPin( GPIOB, GPIO_PIN_5 ) == 0 ){
 283              		.loc 1 212 0
 284 000e 2021     		movs	r1, #32
 285 0010 0948     		ldr	r0, .L29
 286 0012 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 287              	.LVL12:
 288 0016 18B9     		cbnz	r0, .L26
 213:Src/stm32f3xx_it.c ****     flag_sw = 1;
 289              		.loc 1 213 0
 290 0018 084B     		ldr	r3, .L29+4
 291 001a 0122     		movs	r2, #1
 292 001c 1A60     		str	r2, [r3]
 293              	.L25:
 214:Src/stm32f3xx_it.c ****   // DOWN key : PA6
 215:Src/stm32f3xx_it.c ****   }else if(HAL_GPIO_ReadPin( GPIOA, GPIO_PIN_6 ) == 0 ){
 216:Src/stm32f3xx_it.c ****     flag_sw = 2;
 217:Src/stm32f3xx_it.c ****   }
 218:Src/stm32f3xx_it.c **** 
 219:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 1 */
 220:Src/stm32f3xx_it.c **** }
 294              		.loc 1 220 0
 295 001e 08BD     		pop	{r3, pc}
 296              	.L26:
 215:Src/stm32f3xx_it.c ****     flag_sw = 2;
 297              		.loc 1 215 0
 298 0020 4021     		movs	r1, #64
 299 0022 4FF09040 		mov	r0, #1207959552
 300 0026 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 301              	.LVL13:
 302 002a 0028     		cmp	r0, #0
 303 002c F7D1     		bne	.L25
 216:Src/stm32f3xx_it.c ****   }
 304              		.loc 1 216 0
 305 002e 034B     		ldr	r3, .L29+4
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s 			page 10


 306 0030 0222     		movs	r2, #2
 307 0032 1A60     		str	r2, [r3]
 308              		.loc 1 220 0
 309 0034 08BD     		pop	{r3, pc}
 310              	.L30:
 311 0036 00BF     		.align	2
 312              	.L29:
 313 0038 00040048 		.word	1207960576
 314 003c 00000000 		.word	flag_sw
 315              		.cfi_endproc
 316              	.LFE130:
 318              		.section	.text.TIM1_UP_TIM16_IRQHandler,"ax",%progbits
 319              		.align	1
 320              		.p2align 2,,3
 321              		.global	TIM1_UP_TIM16_IRQHandler
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 325              		.fpu fpv4-sp-d16
 327              	TIM1_UP_TIM16_IRQHandler:
 328              	.LFB131:
 221:Src/stm32f3xx_it.c **** 
 222:Src/stm32f3xx_it.c **** /**
 223:Src/stm32f3xx_it.c ****   * @brief This function handles TIM1 update and TIM16 interrupts.
 224:Src/stm32f3xx_it.c ****   */
 225:Src/stm32f3xx_it.c **** void TIM1_UP_TIM16_IRQHandler(void)
 226:Src/stm32f3xx_it.c **** {
 329              		.loc 1 226 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333 0000 08B5     		push	{r3, lr}
 334              	.LCFI5:
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 3, -8
 337              		.cfi_offset 14, -4
 227:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 0 */
 228:Src/stm32f3xx_it.c **** 
 229:Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_UP_TIM16_IRQn 0 */
 230:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 338              		.loc 1 230 0
 339 0002 0548     		ldr	r0, .L33
 340 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 341              	.LVL14:
 231:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim16);
 342              		.loc 1 231 0
 343 0008 0448     		ldr	r0, .L33+4
 344 000a FFF7FEFF 		bl	HAL_TIM_IRQHandler
 345              	.LVL15:
 232:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 1 */
 233:Src/stm32f3xx_it.c **** 
 234:Src/stm32f3xx_it.c ****   flag_status = 1;
 346              		.loc 1 234 0
 347 000e 044B     		ldr	r3, .L33+8
 348 0010 0122     		movs	r2, #1
 349 0012 1A60     		str	r2, [r3]
 235:Src/stm32f3xx_it.c **** 
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s 			page 11


 236:Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_UP_TIM16_IRQn 1 */
 237:Src/stm32f3xx_it.c **** }
 350              		.loc 1 237 0
 351 0014 08BD     		pop	{r3, pc}
 352              	.L34:
 353 0016 00BF     		.align	2
 354              	.L33:
 355 0018 00000000 		.word	htim1
 356 001c 00000000 		.word	htim16
 357 0020 00000000 		.word	flag_status
 358              		.cfi_endproc
 359              	.LFE131:
 361              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 362              		.align	1
 363              		.p2align 2,,3
 364              		.global	TIM2_IRQHandler
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 368              		.fpu fpv4-sp-d16
 370              	TIM2_IRQHandler:
 371              	.LFB132:
 238:Src/stm32f3xx_it.c **** 
 239:Src/stm32f3xx_it.c **** /**
 240:Src/stm32f3xx_it.c ****   * @brief This function handles TIM2 global interrupt.
 241:Src/stm32f3xx_it.c ****   */
 242:Src/stm32f3xx_it.c **** void TIM2_IRQHandler(void)
 243:Src/stm32f3xx_it.c **** {
 372              		.loc 1 243 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376 0000 08B5     		push	{r3, lr}
 377              	.LCFI6:
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 3, -8
 380              		.cfi_offset 14, -4
 244:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 245:Src/stm32f3xx_it.c **** 
 246:Src/stm32f3xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 247:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
 381              		.loc 1 247 0
 382 0002 0448     		ldr	r0, .L37
 383 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 384              	.LVL16:
 248:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 249:Src/stm32f3xx_it.c ****   // 20ms timer for diaplay update
 250:Src/stm32f3xx_it.c **** 
 251:Src/stm32f3xx_it.c ****   flag_disp = 1;
 385              		.loc 1 251 0
 386 0008 0349     		ldr	r1, .L37+4
 252:Src/stm32f3xx_it.c ****   flag_meas = 1;
 387              		.loc 1 252 0
 388 000a 044A     		ldr	r2, .L37+8
 251:Src/stm32f3xx_it.c ****   flag_meas = 1;
 389              		.loc 1 251 0
 390 000c 0123     		movs	r3, #1
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s 			page 12


 391 000e 0B60     		str	r3, [r1]
 392              		.loc 1 252 0
 393 0010 1360     		str	r3, [r2]
 253:Src/stm32f3xx_it.c **** 
 254:Src/stm32f3xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 255:Src/stm32f3xx_it.c **** }
 394              		.loc 1 255 0
 395 0012 08BD     		pop	{r3, pc}
 396              	.L38:
 397              		.align	2
 398              	.L37:
 399 0014 00000000 		.word	htim2
 400 0018 00000000 		.word	flag_disp
 401 001c 00000000 		.word	flag_meas
 402              		.cfi_endproc
 403              	.LFE132:
 405              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 406              		.align	1
 407              		.p2align 2,,3
 408              		.global	TIM3_IRQHandler
 409              		.syntax unified
 410              		.thumb
 411              		.thumb_func
 412              		.fpu fpv4-sp-d16
 414              	TIM3_IRQHandler:
 415              	.LFB133:
 256:Src/stm32f3xx_it.c **** 
 257:Src/stm32f3xx_it.c **** /**
 258:Src/stm32f3xx_it.c ****   * @brief This function handles TIM3 global interrupt.
 259:Src/stm32f3xx_it.c ****   */
 260:Src/stm32f3xx_it.c **** void TIM3_IRQHandler(void)
 261:Src/stm32f3xx_it.c **** {
 416              		.loc 1 261 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420 0000 08B5     		push	{r3, lr}
 421              	.LCFI7:
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 3, -8
 424              		.cfi_offset 14, -4
 262:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 263:Src/stm32f3xx_it.c **** 
 264:Src/stm32f3xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 265:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 425              		.loc 1 265 0
 426 0002 0348     		ldr	r0, .L41
 427 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 428              	.LVL17:
 266:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 267:Src/stm32f3xx_it.c **** 
 268:Src/stm32f3xx_it.c ****   tacho_overflow();
 269:Src/stm32f3xx_it.c **** 
 270:Src/stm32f3xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 271:Src/stm32f3xx_it.c **** }
 429              		.loc 1 271 0
 430 0008 BDE80840 		pop	{r3, lr}
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s 			page 13


 431              	.LCFI8:
 432              		.cfi_restore 14
 433              		.cfi_restore 3
 434              		.cfi_def_cfa_offset 0
 268:Src/stm32f3xx_it.c **** 
 435              		.loc 1 268 0
 436 000c FFF7FEBF 		b	tacho_overflow
 437              	.LVL18:
 438              	.L42:
 439              		.align	2
 440              	.L41:
 441 0010 00000000 		.word	htim3
 442              		.cfi_endproc
 443              	.LFE133:
 445              		.section	.text.USART1_IRQHandler,"ax",%progbits
 446              		.align	1
 447              		.p2align 2,,3
 448              		.global	USART1_IRQHandler
 449              		.syntax unified
 450              		.thumb
 451              		.thumb_func
 452              		.fpu fpv4-sp-d16
 454              	USART1_IRQHandler:
 455              	.LFB134:
 272:Src/stm32f3xx_it.c **** 
 273:Src/stm32f3xx_it.c **** /**
 274:Src/stm32f3xx_it.c ****   * @brief This function handles USART1 global interrupt / USART1 wake-up interrupt through EXT lin
 275:Src/stm32f3xx_it.c ****   */
 276:Src/stm32f3xx_it.c **** void USART1_IRQHandler(void)
 277:Src/stm32f3xx_it.c **** {
 456              		.loc 1 277 0
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 0
 459              		@ frame_needed = 0, uses_anonymous_args = 0
 460              		@ link register save eliminated.
 278:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 279:Src/stm32f3xx_it.c **** 
 280:Src/stm32f3xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 281:Src/stm32f3xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 461              		.loc 1 281 0
 462 0000 0148     		ldr	r0, .L44
 463 0002 FFF7FEBF 		b	HAL_UART_IRQHandler
 464              	.LVL19:
 465              	.L45:
 466 0006 00BF     		.align	2
 467              	.L44:
 468 0008 00000000 		.word	huart1
 469              		.cfi_endproc
 470              	.LFE134:
 472              		.section	.text.USART2_IRQHandler,"ax",%progbits
 473              		.align	1
 474              		.p2align 2,,3
 475              		.global	USART2_IRQHandler
 476              		.syntax unified
 477              		.thumb
 478              		.thumb_func
 479              		.fpu fpv4-sp-d16
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s 			page 14


 481              	USART2_IRQHandler:
 482              	.LFB135:
 282:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 283:Src/stm32f3xx_it.c **** 
 284:Src/stm32f3xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 285:Src/stm32f3xx_it.c **** }
 286:Src/stm32f3xx_it.c **** 
 287:Src/stm32f3xx_it.c **** /**
 288:Src/stm32f3xx_it.c ****   * @brief This function handles USART2 global interrupt / USART2 wake-up interrupt through EXT lin
 289:Src/stm32f3xx_it.c ****   */
 290:Src/stm32f3xx_it.c **** void USART2_IRQHandler(void)
 291:Src/stm32f3xx_it.c **** {
 483              		.loc 1 291 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487              		@ link register save eliminated.
 292:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 293:Src/stm32f3xx_it.c **** 
 294:Src/stm32f3xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 295:Src/stm32f3xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 488              		.loc 1 295 0
 489 0000 0148     		ldr	r0, .L47
 490 0002 FFF7FEBF 		b	HAL_UART_IRQHandler
 491              	.LVL20:
 492              	.L48:
 493 0006 00BF     		.align	2
 494              	.L47:
 495 0008 00000000 		.word	huart2
 496              		.cfi_endproc
 497              	.LFE135:
 499              		.section	.text.TIM6_DAC1_IRQHandler,"ax",%progbits
 500              		.align	1
 501              		.p2align 2,,3
 502              		.global	TIM6_DAC1_IRQHandler
 503              		.syntax unified
 504              		.thumb
 505              		.thumb_func
 506              		.fpu fpv4-sp-d16
 508              	TIM6_DAC1_IRQHandler:
 509              	.LFB136:
 296:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 297:Src/stm32f3xx_it.c **** 
 298:Src/stm32f3xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 299:Src/stm32f3xx_it.c **** }
 300:Src/stm32f3xx_it.c **** 
 301:Src/stm32f3xx_it.c **** /**
 302:Src/stm32f3xx_it.c ****   * @brief This function handles TIM6 global and DAC1 underrun error interrupts.
 303:Src/stm32f3xx_it.c ****   */
 304:Src/stm32f3xx_it.c **** void TIM6_DAC1_IRQHandler(void)
 305:Src/stm32f3xx_it.c **** {
 510              		.loc 1 305 0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 0, uses_anonymous_args = 0
 514 0000 08B5     		push	{r3, lr}
 515              	.LCFI9:
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s 			page 15


 516              		.cfi_def_cfa_offset 8
 517              		.cfi_offset 3, -8
 518              		.cfi_offset 14, -4
 306:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM6_DAC1_IRQn 0 */
 307:Src/stm32f3xx_it.c **** 
 308:Src/stm32f3xx_it.c **** 
 309:Src/stm32f3xx_it.c ****   /* USER CODE END TIM6_DAC1_IRQn 0 */
 310:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 519              		.loc 1 310 0
 520 0002 0348     		ldr	r0, .L51
 521 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 522              	.LVL21:
 311:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM6_DAC1_IRQn 1 */
 312:Src/stm32f3xx_it.c **** 
 313:Src/stm32f3xx_it.c ****   speed_overflow();
 314:Src/stm32f3xx_it.c **** 
 315:Src/stm32f3xx_it.c ****   /* USER CODE END TIM6_DAC1_IRQn 1 */
 316:Src/stm32f3xx_it.c **** }
 523              		.loc 1 316 0
 524 0008 BDE80840 		pop	{r3, lr}
 525              	.LCFI10:
 526              		.cfi_restore 14
 527              		.cfi_restore 3
 528              		.cfi_def_cfa_offset 0
 313:Src/stm32f3xx_it.c **** 
 529              		.loc 1 313 0
 530 000c FFF7FEBF 		b	speed_overflow
 531              	.LVL22:
 532              	.L52:
 533              		.align	2
 534              	.L51:
 535 0010 00000000 		.word	htim6
 536              		.cfi_endproc
 537              	.LFE136:
 539              		.section	.text.TIM7_DAC2_IRQHandler,"ax",%progbits
 540              		.align	1
 541              		.p2align 2,,3
 542              		.global	TIM7_DAC2_IRQHandler
 543              		.syntax unified
 544              		.thumb
 545              		.thumb_func
 546              		.fpu fpv4-sp-d16
 548              	TIM7_DAC2_IRQHandler:
 549              	.LFB137:
 317:Src/stm32f3xx_it.c **** 
 318:Src/stm32f3xx_it.c **** /**
 319:Src/stm32f3xx_it.c ****   * @brief This function handles TIM7 global and DAC2 underrun error interrupts.
 320:Src/stm32f3xx_it.c ****   */
 321:Src/stm32f3xx_it.c **** void TIM7_DAC2_IRQHandler(void)
 322:Src/stm32f3xx_it.c **** {
 550              		.loc 1 322 0
 551              		.cfi_startproc
 552              		@ args = 0, pretend = 0, frame = 0
 553              		@ frame_needed = 0, uses_anonymous_args = 0
 554 0000 08B5     		push	{r3, lr}
 555              	.LCFI11:
 556              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s 			page 16


 557              		.cfi_offset 3, -8
 558              		.cfi_offset 14, -4
 323:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM7_DAC2_IRQn 0 */
 324:Src/stm32f3xx_it.c **** 
 325:Src/stm32f3xx_it.c ****   /* USER CODE END TIM7_DAC2_IRQn 0 */
 326:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim7);
 559              		.loc 1 326 0
 560 0002 0548     		ldr	r0, .L55
 561 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 562              	.LVL23:
 327:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM7_DAC2_IRQn 1 */
 328:Src/stm32f3xx_it.c **** 
 329:Src/stm32f3xx_it.c ****   // SW external interrupt
 330:Src/stm32f3xx_it.c ****   HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 563              		.loc 1 330 0
 564 0008 0720     		movs	r0, #7
 565 000a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 566              	.LVL24:
 331:Src/stm32f3xx_it.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 567              		.loc 1 331 0
 568 000e 1720     		movs	r0, #23
 332:Src/stm32f3xx_it.c **** 
 333:Src/stm32f3xx_it.c ****   /* USER CODE END TIM7_DAC2_IRQn 1 */
 334:Src/stm32f3xx_it.c **** }
 569              		.loc 1 334 0
 570 0010 BDE80840 		pop	{r3, lr}
 571              	.LCFI12:
 572              		.cfi_restore 14
 573              		.cfi_restore 3
 574              		.cfi_def_cfa_offset 0
 331:Src/stm32f3xx_it.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 575              		.loc 1 331 0
 576 0014 FFF7FEBF 		b	HAL_NVIC_EnableIRQ
 577              	.LVL25:
 578              	.L56:
 579              		.align	2
 580              	.L55:
 581 0018 00000000 		.word	htim7
 582              		.cfi_endproc
 583              	.LFE137:
 585              		.text
 586              	.Letext0:
 587              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 588              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 589              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 590              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 591              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 592              		.file 7 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 593              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 594              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 595              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_can.h"
 596              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 597              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 598              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
 599              		.file 14 "Inc/can_obd.h"
 600              		.file 15 "Inc/usart.h"
 601              		.file 16 "/Users/imashio/Electronics/ARM/_Library/flag.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s 			page 17


 602              		.file 17 "Inc/pulse_counter.h"
 603              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 604              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s 			page 18


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_it.c
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:18     .text.SysTick_Handler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:26     .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:41     .text.EXTI1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:49     .text.EXTI1_IRQHandler:0000000000000000 EXTI1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:80     .text.EXTI1_IRQHandler:000000000000001c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:86     .text.EXTI4_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:94     .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:129    .text.EXTI4_IRQHandler:000000000000001c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:134    .text.DMA1_Channel1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:142    .text.DMA1_Channel1_IRQHandler:0000000000000000 DMA1_Channel1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:156    .text.DMA1_Channel1_IRQHandler:0000000000000008 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:161    .text.CAN_TX_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:169    .text.CAN_TX_IRQHandler:0000000000000000 CAN_TX_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:183    .text.CAN_TX_IRQHandler:0000000000000008 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:188    .text.CAN_RX0_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:196    .text.CAN_RX0_IRQHandler:0000000000000000 CAN_RX0_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:228    .text.CAN_RX0_IRQHandler:0000000000000020 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:236    .text.CAN_RX1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:244    .text.CAN_RX1_IRQHandler:0000000000000000 CAN_RX1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:255    .text.EXTI9_5_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:263    .text.EXTI9_5_IRQHandler:0000000000000000 EXTI9_5_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:313    .text.EXTI9_5_IRQHandler:0000000000000038 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:319    .text.TIM1_UP_TIM16_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:327    .text.TIM1_UP_TIM16_IRQHandler:0000000000000000 TIM1_UP_TIM16_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:355    .text.TIM1_UP_TIM16_IRQHandler:0000000000000018 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:362    .text.TIM2_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:370    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:399    .text.TIM2_IRQHandler:0000000000000014 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:406    .text.TIM3_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:414    .text.TIM3_IRQHandler:0000000000000000 TIM3_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:441    .text.TIM3_IRQHandler:0000000000000010 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:446    .text.USART1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:454    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:468    .text.USART1_IRQHandler:0000000000000008 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:473    .text.USART2_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:481    .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:495    .text.USART2_IRQHandler:0000000000000008 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:500    .text.TIM6_DAC1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:508    .text.TIM6_DAC1_IRQHandler:0000000000000000 TIM6_DAC1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:535    .text.TIM6_DAC1_IRQHandler:0000000000000010 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:540    .text.TIM7_DAC2_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:548    .text.TIM7_DAC2_IRQHandler:0000000000000000 TIM7_DAC2_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s:581    .text.TIM7_DAC2_IRQHandler:0000000000000018 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_GPIO_EXTI_IRQHandler
HAL_GPIO_ReadPin
flag_sw
tacho_meter
HAL_DMA_IRQHandler
hdma_adc1
HAL_CAN_IRQHandler
hcan
HAL_CAN_GetRxMessage
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//ccseTQpV.s 			page 19


CAN_RxData
CAN_RxHeader
CAN_Received
HAL_TIM_IRQHandler
htim1
htim16
flag_status
htim2
flag_disp
flag_meas
tacho_overflow
htim3
HAL_UART_IRQHandler
huart1
huart2
speed_overflow
htim6
HAL_NVIC_EnableIRQ
htim7
