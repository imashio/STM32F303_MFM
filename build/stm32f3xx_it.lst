ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f3xx_it.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SysTick_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	SysTick_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	SysTick_Handler:
  26              	.LFB126:
  27              		.file 1 "Src/stm32f3xx_it.c"
   1:Src/stm32f3xx_it.c **** /**
   2:Src/stm32f3xx_it.c ****   ******************************************************************************
   3:Src/stm32f3xx_it.c ****   * @file    stm32f3xx_it.c
   4:Src/stm32f3xx_it.c ****   * @brief   Interrupt Service Routines.
   5:Src/stm32f3xx_it.c ****   ******************************************************************************
   6:Src/stm32f3xx_it.c ****   *
   7:Src/stm32f3xx_it.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
   8:Src/stm32f3xx_it.c ****   *
   9:Src/stm32f3xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  10:Src/stm32f3xx_it.c ****   * are permitted provided that the following conditions are met:
  11:Src/stm32f3xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  12:Src/stm32f3xx_it.c ****   *      this list of conditions and the following disclaimer.
  13:Src/stm32f3xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  14:Src/stm32f3xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  15:Src/stm32f3xx_it.c ****   *      and/or other materials provided with the distribution.
  16:Src/stm32f3xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  17:Src/stm32f3xx_it.c ****   *      may be used to endorse or promote products derived from this software
  18:Src/stm32f3xx_it.c ****   *      without specific prior written permission.
  19:Src/stm32f3xx_it.c ****   *
  20:Src/stm32f3xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  21:Src/stm32f3xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  22:Src/stm32f3xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  23:Src/stm32f3xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  24:Src/stm32f3xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  25:Src/stm32f3xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  26:Src/stm32f3xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  27:Src/stm32f3xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  28:Src/stm32f3xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  29:Src/stm32f3xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  30:Src/stm32f3xx_it.c ****   *
  31:Src/stm32f3xx_it.c ****   ******************************************************************************
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s 			page 2


  32:Src/stm32f3xx_it.c ****   */
  33:Src/stm32f3xx_it.c **** /* Includes ------------------------------------------------------------------*/
  34:Src/stm32f3xx_it.c **** #include "stm32f3xx_hal.h"
  35:Src/stm32f3xx_it.c **** #include "stm32f3xx.h"
  36:Src/stm32f3xx_it.c **** #include "stm32f3xx_it.h"
  37:Src/stm32f3xx_it.c **** 
  38:Src/stm32f3xx_it.c **** /* USER CODE BEGIN 0 */
  39:Src/stm32f3xx_it.c **** #include "usart.h"
  40:Src/stm32f3xx_it.c **** #include "flag.h"
  41:Src/stm32f3xx_it.c **** 
  42:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart2;
  43:Src/stm32f3xx_it.c **** 
  44:Src/stm32f3xx_it.c **** /* USER CODE END 0 */
  45:Src/stm32f3xx_it.c **** 
  46:Src/stm32f3xx_it.c **** /* External variables --------------------------------------------------------*/
  47:Src/stm32f3xx_it.c **** extern DMA_HandleTypeDef hdma_adc1;
  48:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim1;
  49:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim2;
  50:Src/stm32f3xx_it.c **** extern TIM_HandleTypeDef htim6;
  51:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart1;
  52:Src/stm32f3xx_it.c **** extern UART_HandleTypeDef huart2;
  53:Src/stm32f3xx_it.c **** 
  54:Src/stm32f3xx_it.c **** /******************************************************************************/
  55:Src/stm32f3xx_it.c **** /*            Cortex-M4 Processor Interruption and Exception Handlers         */ 
  56:Src/stm32f3xx_it.c **** /******************************************************************************/
  57:Src/stm32f3xx_it.c **** 
  58:Src/stm32f3xx_it.c **** /**
  59:Src/stm32f3xx_it.c **** * @brief This function handles System tick timer.
  60:Src/stm32f3xx_it.c **** */
  61:Src/stm32f3xx_it.c **** void SysTick_Handler(void)
  62:Src/stm32f3xx_it.c **** {
  28              		.loc 1 62 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  63:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
  64:Src/stm32f3xx_it.c **** 
  65:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
  66:Src/stm32f3xx_it.c ****   HAL_IncTick();
  37              		.loc 1 66 0
  38 0002 FFF7FEFF 		bl	HAL_IncTick
  39              	.LVL0:
  67:Src/stm32f3xx_it.c ****   HAL_SYSTICK_IRQHandler();
  40              		.loc 1 67 0
  41 0006 FFF7FEFF 		bl	HAL_SYSTICK_IRQHandler
  42              	.LVL1:
  68:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
  69:Src/stm32f3xx_it.c **** 
  70:Src/stm32f3xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
  71:Src/stm32f3xx_it.c **** }
  43              		.loc 1 71 0
  44 000a 08BD     		pop	{r3, pc}
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s 			page 3


  45              		.cfi_endproc
  46              	.LFE126:
  48              		.section	.text.EXTI1_IRQHandler,"ax",%progbits
  49              		.align	1
  50              		.global	EXTI1_IRQHandler
  51              		.syntax unified
  52              		.thumb
  53              		.thumb_func
  54              		.fpu fpv4-sp-d16
  56              	EXTI1_IRQHandler:
  57              	.LFB127:
  72:Src/stm32f3xx_it.c **** 
  73:Src/stm32f3xx_it.c **** /******************************************************************************/
  74:Src/stm32f3xx_it.c **** /* STM32F3xx Peripheral Interrupt Handlers                                    */
  75:Src/stm32f3xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
  76:Src/stm32f3xx_it.c **** /* For the available peripheral interrupt handler names,                      */
  77:Src/stm32f3xx_it.c **** /* please refer to the startup file (startup_stm32f3xx.s).                    */
  78:Src/stm32f3xx_it.c **** /******************************************************************************/
  79:Src/stm32f3xx_it.c **** 
  80:Src/stm32f3xx_it.c **** /**
  81:Src/stm32f3xx_it.c **** * @brief This function handles EXTI line 1 interrupt.
  82:Src/stm32f3xx_it.c **** */
  83:Src/stm32f3xx_it.c **** void EXTI1_IRQHandler(void)
  84:Src/stm32f3xx_it.c **** {
  58              		.loc 1 84 0
  59              		.cfi_startproc
  60              		@ args = 0, pretend = 0, frame = 0
  61              		@ frame_needed = 0, uses_anonymous_args = 0
  62 0000 08B5     		push	{r3, lr}
  63              	.LCFI1:
  64              		.cfi_def_cfa_offset 8
  65              		.cfi_offset 3, -8
  66              		.cfi_offset 14, -4
  85:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 0 */
  86:Src/stm32f3xx_it.c **** 
  87:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI1_IRQn 0 */
  88:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_1);
  67              		.loc 1 88 0
  68 0002 0220     		movs	r0, #2
  69 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
  70              	.LVL2:
  89:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI1_IRQn 1 */
  90:Src/stm32f3xx_it.c ****   // SW Enter input
  91:Src/stm32f3xx_it.c ****   if(HAL_GPIO_ReadPin( GPIOF, GPIO_PIN_1 ) == 0 ){
  71              		.loc 1 91 0
  72 0008 0221     		movs	r1, #2
  73 000a 0448     		ldr	r0, .L6
  74 000c FFF7FEFF 		bl	HAL_GPIO_ReadPin
  75              	.LVL3:
  76 0010 10B9     		cbnz	r0, .L3
  92:Src/stm32f3xx_it.c ****     flag_sw = 3;
  77              		.loc 1 92 0
  78 0012 034B     		ldr	r3, .L6+4
  79 0014 0322     		movs	r2, #3
  80 0016 1A60     		str	r2, [r3]
  81              	.L3:
  93:Src/stm32f3xx_it.c ****   }
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s 			page 4


  94:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI1_IRQn 1 */
  95:Src/stm32f3xx_it.c **** }
  82              		.loc 1 95 0
  83 0018 08BD     		pop	{r3, pc}
  84              	.L7:
  85 001a 00BF     		.align	2
  86              	.L6:
  87 001c 00140048 		.word	1207964672
  88 0020 00000000 		.word	flag_sw
  89              		.cfi_endproc
  90              	.LFE127:
  92              		.section	.text.EXTI4_IRQHandler,"ax",%progbits
  93              		.align	1
  94              		.global	EXTI4_IRQHandler
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv4-sp-d16
 100              	EXTI4_IRQHandler:
 101              	.LFB128:
  96:Src/stm32f3xx_it.c **** 
  97:Src/stm32f3xx_it.c **** /**
  98:Src/stm32f3xx_it.c **** * @brief This function handles EXTI line 4 interrupt.
  99:Src/stm32f3xx_it.c **** */
 100:Src/stm32f3xx_it.c **** void EXTI4_IRQHandler(void)
 101:Src/stm32f3xx_it.c **** {
 102              		.loc 1 101 0
 103              		.cfi_startproc
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106 0000 10B5     		push	{r4, lr}
 107              	.LCFI2:
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 4, -8
 110              		.cfi_offset 14, -4
 102:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 0 */
 103:Src/stm32f3xx_it.c **** 
 104:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI4_IRQn 0 */
 105:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_4);
 111              		.loc 1 105 0
 112 0002 1020     		movs	r0, #16
 113 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 114              	.LVL4:
 106:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI4_IRQn 1 */
 107:Src/stm32f3xx_it.c ****   if(HAL_GPIO_ReadPin( GPIOB, GPIO_PIN_4 ) == 0 ){ // Tacho input
 115              		.loc 1 107 0
 116 0008 1021     		movs	r1, #16
 117 000a 0748     		ldr	r0, .L12
 118 000c FFF7FEFF 		bl	HAL_GPIO_ReadPin
 119              	.LVL5:
 120 0010 00B1     		cbz	r0, .L11
 121              	.L8:
 108:Src/stm32f3xx_it.c ****     HAL_UART_Transmit_printf(&huart1, "Tacho ");
 109:Src/stm32f3xx_it.c ****     HAL_UART_Transmit_printf(&huart2, "Tacho "); // USB
 110:Src/stm32f3xx_it.c ****   }
 111:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI4_IRQn 1 */
 112:Src/stm32f3xx_it.c **** }
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s 			page 5


 122              		.loc 1 112 0
 123 0012 10BD     		pop	{r4, pc}
 124              	.L11:
 125              	.LBB2:
 108:Src/stm32f3xx_it.c ****     HAL_UART_Transmit_printf(&huart1, "Tacho ");
 126              		.loc 1 108 0
 127 0014 054C     		ldr	r4, .L12+4
 128 0016 2146     		mov	r1, r4
 129 0018 0548     		ldr	r0, .L12+8
 130 001a FFF7FEFF 		bl	HAL_UART_Transmit_printf
 131              	.LVL6:
 109:Src/stm32f3xx_it.c ****   }
 132              		.loc 1 109 0
 133 001e 2146     		mov	r1, r4
 134 0020 0448     		ldr	r0, .L12+12
 135 0022 FFF7FEFF 		bl	HAL_UART_Transmit_printf
 136              	.LVL7:
 137              	.LBE2:
 138              		.loc 1 112 0
 139 0026 F4E7     		b	.L8
 140              	.L13:
 141              		.align	2
 142              	.L12:
 143 0028 00040048 		.word	1207960576
 144 002c 00000000 		.word	.LC0
 145 0030 00000000 		.word	huart1
 146 0034 00000000 		.word	huart2
 147              		.cfi_endproc
 148              	.LFE128:
 150              		.section	.text.DMA1_Channel1_IRQHandler,"ax",%progbits
 151              		.align	1
 152              		.global	DMA1_Channel1_IRQHandler
 153              		.syntax unified
 154              		.thumb
 155              		.thumb_func
 156              		.fpu fpv4-sp-d16
 158              	DMA1_Channel1_IRQHandler:
 159              	.LFB129:
 113:Src/stm32f3xx_it.c **** 
 114:Src/stm32f3xx_it.c **** /**
 115:Src/stm32f3xx_it.c **** * @brief This function handles DMA1 channel1 global interrupt.
 116:Src/stm32f3xx_it.c **** */
 117:Src/stm32f3xx_it.c **** void DMA1_Channel1_IRQHandler(void)
 118:Src/stm32f3xx_it.c **** {
 160              		.loc 1 118 0
 161              		.cfi_startproc
 162              		@ args = 0, pretend = 0, frame = 0
 163              		@ frame_needed = 0, uses_anonymous_args = 0
 164 0000 08B5     		push	{r3, lr}
 165              	.LCFI3:
 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 3, -8
 168              		.cfi_offset 14, -4
 119:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 0 */
 120:Src/stm32f3xx_it.c **** 
 121:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 0 */
 122:Src/stm32f3xx_it.c ****   HAL_DMA_IRQHandler(&hdma_adc1);
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s 			page 6


 169              		.loc 1 122 0
 170 0002 0248     		ldr	r0, .L16
 171 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 172              	.LVL8:
 123:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN DMA1_Channel1_IRQn 1 */
 124:Src/stm32f3xx_it.c **** 
 125:Src/stm32f3xx_it.c ****   /* USER CODE END DMA1_Channel1_IRQn 1 */
 126:Src/stm32f3xx_it.c **** }
 173              		.loc 1 126 0
 174 0008 08BD     		pop	{r3, pc}
 175              	.L17:
 176 000a 00BF     		.align	2
 177              	.L16:
 178 000c 00000000 		.word	hdma_adc1
 179              		.cfi_endproc
 180              	.LFE129:
 182              		.section	.text.EXTI9_5_IRQHandler,"ax",%progbits
 183              		.align	1
 184              		.global	EXTI9_5_IRQHandler
 185              		.syntax unified
 186              		.thumb
 187              		.thumb_func
 188              		.fpu fpv4-sp-d16
 190              	EXTI9_5_IRQHandler:
 191              	.LFB130:
 127:Src/stm32f3xx_it.c **** 
 128:Src/stm32f3xx_it.c **** /**
 129:Src/stm32f3xx_it.c **** * @brief This function handles EXTI line[9:5] interrupts.
 130:Src/stm32f3xx_it.c **** */
 131:Src/stm32f3xx_it.c **** void EXTI9_5_IRQHandler(void)
 132:Src/stm32f3xx_it.c **** {
 192              		.loc 1 132 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196 0000 08B5     		push	{r3, lr}
 197              	.LCFI4:
 198              		.cfi_def_cfa_offset 8
 199              		.cfi_offset 3, -8
 200              		.cfi_offset 14, -4
 133:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 0 */
 134:Src/stm32f3xx_it.c **** 
 135:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 0 */
 136:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_5);
 201              		.loc 1 136 0
 202 0002 2020     		movs	r0, #32
 203 0004 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 204              	.LVL9:
 137:Src/stm32f3xx_it.c ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_7);
 205              		.loc 1 137 0
 206 0008 8020     		movs	r0, #128
 207 000a FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 208              	.LVL10:
 138:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN EXTI9_5_IRQn 1 */
 139:Src/stm32f3xx_it.c ****   // SW "Up"/"Down" input
 140:Src/stm32f3xx_it.c ****   if(HAL_GPIO_ReadPin( GPIOB, GPIO_PIN_5 ) == 0 ){
 209              		.loc 1 140 0
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s 			page 7


 210 000e 2021     		movs	r1, #32
 211 0010 0848     		ldr	r0, .L22
 212 0012 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 213              	.LVL11:
 214 0016 18B9     		cbnz	r0, .L19
 141:Src/stm32f3xx_it.c ****     flag_sw = 1;
 215              		.loc 1 141 0
 216 0018 074B     		ldr	r3, .L22+4
 217 001a 0122     		movs	r2, #1
 218 001c 1A60     		str	r2, [r3]
 219              	.L18:
 142:Src/stm32f3xx_it.c ****   }else if(HAL_GPIO_ReadPin( GPIOB, GPIO_PIN_7 ) == 0 ){
 143:Src/stm32f3xx_it.c ****     flag_sw = 2;
 144:Src/stm32f3xx_it.c ****   }
 145:Src/stm32f3xx_it.c **** 
 146:Src/stm32f3xx_it.c ****   /* USER CODE END EXTI9_5_IRQn 1 */
 147:Src/stm32f3xx_it.c **** }
 220              		.loc 1 147 0
 221 001e 08BD     		pop	{r3, pc}
 222              	.L19:
 142:Src/stm32f3xx_it.c ****   }else if(HAL_GPIO_ReadPin( GPIOB, GPIO_PIN_7 ) == 0 ){
 223              		.loc 1 142 0
 224 0020 8021     		movs	r1, #128
 225 0022 0448     		ldr	r0, .L22
 226 0024 FFF7FEFF 		bl	HAL_GPIO_ReadPin
 227              	.LVL12:
 228 0028 0028     		cmp	r0, #0
 229 002a F8D1     		bne	.L18
 143:Src/stm32f3xx_it.c ****   }
 230              		.loc 1 143 0
 231 002c 024B     		ldr	r3, .L22+4
 232 002e 0222     		movs	r2, #2
 233 0030 1A60     		str	r2, [r3]
 234              		.loc 1 147 0
 235 0032 F4E7     		b	.L18
 236              	.L23:
 237              		.align	2
 238              	.L22:
 239 0034 00040048 		.word	1207960576
 240 0038 00000000 		.word	flag_sw
 241              		.cfi_endproc
 242              	.LFE130:
 244              		.section	.text.TIM1_UP_TIM16_IRQHandler,"ax",%progbits
 245              		.align	1
 246              		.global	TIM1_UP_TIM16_IRQHandler
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 250              		.fpu fpv4-sp-d16
 252              	TIM1_UP_TIM16_IRQHandler:
 253              	.LFB131:
 148:Src/stm32f3xx_it.c **** 
 149:Src/stm32f3xx_it.c **** /**
 150:Src/stm32f3xx_it.c **** * @brief This function handles TIM1 update and TIM16 interrupts.
 151:Src/stm32f3xx_it.c **** */
 152:Src/stm32f3xx_it.c **** void TIM1_UP_TIM16_IRQHandler(void)
 153:Src/stm32f3xx_it.c **** {
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s 			page 8


 254              		.loc 1 153 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258 0000 08B5     		push	{r3, lr}
 259              	.LCFI5:
 260              		.cfi_def_cfa_offset 8
 261              		.cfi_offset 3, -8
 262              		.cfi_offset 14, -4
 154:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 0 */
 155:Src/stm32f3xx_it.c **** 
 156:Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_UP_TIM16_IRQn 0 */
 157:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim1);
 263              		.loc 1 157 0
 264 0002 0248     		ldr	r0, .L26
 265 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 266              	.LVL13:
 158:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM1_UP_TIM16_IRQn 1 */
 159:Src/stm32f3xx_it.c **** 
 160:Src/stm32f3xx_it.c ****   /* USER CODE END TIM1_UP_TIM16_IRQn 1 */
 161:Src/stm32f3xx_it.c **** }
 267              		.loc 1 161 0
 268 0008 08BD     		pop	{r3, pc}
 269              	.L27:
 270 000a 00BF     		.align	2
 271              	.L26:
 272 000c 00000000 		.word	htim1
 273              		.cfi_endproc
 274              	.LFE131:
 276              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 277              		.align	1
 278              		.global	TIM2_IRQHandler
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 282              		.fpu fpv4-sp-d16
 284              	TIM2_IRQHandler:
 285              	.LFB132:
 162:Src/stm32f3xx_it.c **** 
 163:Src/stm32f3xx_it.c **** /**
 164:Src/stm32f3xx_it.c **** * @brief This function handles TIM2 global interrupt.
 165:Src/stm32f3xx_it.c **** */
 166:Src/stm32f3xx_it.c **** void TIM2_IRQHandler(void)
 167:Src/stm32f3xx_it.c **** {
 286              		.loc 1 167 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290 0000 08B5     		push	{r3, lr}
 291              	.LCFI6:
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 3, -8
 294              		.cfi_offset 14, -4
 168:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 0 */
 169:Src/stm32f3xx_it.c **** 
 170:Src/stm32f3xx_it.c ****   /* USER CODE END TIM2_IRQn 0 */
 171:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim2);
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s 			page 9


 295              		.loc 1 171 0
 296 0002 0448     		ldr	r0, .L30
 297 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 298              	.LVL14:
 172:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 173:Src/stm32f3xx_it.c ****   // 20ms timer for diaplay update
 174:Src/stm32f3xx_it.c ****   flag_disp = 1;
 299              		.loc 1 174 0
 300 0008 0123     		movs	r3, #1
 301 000a 034A     		ldr	r2, .L30+4
 302 000c 1360     		str	r3, [r2]
 175:Src/stm32f3xx_it.c ****   flag_meas_short = 1;
 303              		.loc 1 175 0
 304 000e 034A     		ldr	r2, .L30+8
 305 0010 1360     		str	r3, [r2]
 176:Src/stm32f3xx_it.c ****   /* USER CODE END TIM2_IRQn 1 */
 177:Src/stm32f3xx_it.c **** }
 306              		.loc 1 177 0
 307 0012 08BD     		pop	{r3, pc}
 308              	.L31:
 309              		.align	2
 310              	.L30:
 311 0014 00000000 		.word	htim2
 312 0018 00000000 		.word	flag_disp
 313 001c 00000000 		.word	flag_meas_short
 314              		.cfi_endproc
 315              	.LFE132:
 317              		.section	.text.USART1_IRQHandler,"ax",%progbits
 318              		.align	1
 319              		.global	USART1_IRQHandler
 320              		.syntax unified
 321              		.thumb
 322              		.thumb_func
 323              		.fpu fpv4-sp-d16
 325              	USART1_IRQHandler:
 326              	.LFB133:
 178:Src/stm32f3xx_it.c **** 
 179:Src/stm32f3xx_it.c **** /**
 180:Src/stm32f3xx_it.c **** * @brief This function handles USART1 global interrupt / USART1 wake-up interrupt through EXT line 
 181:Src/stm32f3xx_it.c **** */
 182:Src/stm32f3xx_it.c **** void USART1_IRQHandler(void)
 183:Src/stm32f3xx_it.c **** {
 327              		.loc 1 183 0
 328              		.cfi_startproc
 329              		@ args = 0, pretend = 0, frame = 0
 330              		@ frame_needed = 0, uses_anonymous_args = 0
 331 0000 08B5     		push	{r3, lr}
 332              	.LCFI7:
 333              		.cfi_def_cfa_offset 8
 334              		.cfi_offset 3, -8
 335              		.cfi_offset 14, -4
 184:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 185:Src/stm32f3xx_it.c **** 
 186:Src/stm32f3xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 187:Src/stm32f3xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 336              		.loc 1 187 0
 337 0002 0248     		ldr	r0, .L34
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s 			page 10


 338 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 339              	.LVL15:
 188:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 189:Src/stm32f3xx_it.c **** 
 190:Src/stm32f3xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 191:Src/stm32f3xx_it.c **** }
 340              		.loc 1 191 0
 341 0008 08BD     		pop	{r3, pc}
 342              	.L35:
 343 000a 00BF     		.align	2
 344              	.L34:
 345 000c 00000000 		.word	huart1
 346              		.cfi_endproc
 347              	.LFE133:
 349              		.section	.text.USART2_IRQHandler,"ax",%progbits
 350              		.align	1
 351              		.global	USART2_IRQHandler
 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 355              		.fpu fpv4-sp-d16
 357              	USART2_IRQHandler:
 358              	.LFB134:
 192:Src/stm32f3xx_it.c **** 
 193:Src/stm32f3xx_it.c **** /**
 194:Src/stm32f3xx_it.c **** * @brief This function handles USART2 global interrupt / USART2 wake-up interrupt through EXT line 
 195:Src/stm32f3xx_it.c **** */
 196:Src/stm32f3xx_it.c **** void USART2_IRQHandler(void)
 197:Src/stm32f3xx_it.c **** {
 359              		.loc 1 197 0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363 0000 08B5     		push	{r3, lr}
 364              	.LCFI8:
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 3, -8
 367              		.cfi_offset 14, -4
 198:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 0 */
 199:Src/stm32f3xx_it.c **** 
 200:Src/stm32f3xx_it.c ****   /* USER CODE END USART2_IRQn 0 */
 201:Src/stm32f3xx_it.c ****   HAL_UART_IRQHandler(&huart2);
 368              		.loc 1 201 0
 369 0002 0248     		ldr	r0, .L38
 370 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 371              	.LVL16:
 202:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN USART2_IRQn 1 */
 203:Src/stm32f3xx_it.c **** 
 204:Src/stm32f3xx_it.c ****   /* USER CODE END USART2_IRQn 1 */
 205:Src/stm32f3xx_it.c **** }
 372              		.loc 1 205 0
 373 0008 08BD     		pop	{r3, pc}
 374              	.L39:
 375 000a 00BF     		.align	2
 376              	.L38:
 377 000c 00000000 		.word	huart2
 378              		.cfi_endproc
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s 			page 11


 379              	.LFE134:
 381              		.section	.text.TIM6_DAC1_IRQHandler,"ax",%progbits
 382              		.align	1
 383              		.global	TIM6_DAC1_IRQHandler
 384              		.syntax unified
 385              		.thumb
 386              		.thumb_func
 387              		.fpu fpv4-sp-d16
 389              	TIM6_DAC1_IRQHandler:
 390              	.LFB135:
 206:Src/stm32f3xx_it.c **** 
 207:Src/stm32f3xx_it.c **** /**
 208:Src/stm32f3xx_it.c **** * @brief This function handles TIM6 global and DAC1 underrun error interrupts.
 209:Src/stm32f3xx_it.c **** */
 210:Src/stm32f3xx_it.c **** void TIM6_DAC1_IRQHandler(void)
 211:Src/stm32f3xx_it.c **** {
 391              		.loc 1 211 0
 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 0
 394              		@ frame_needed = 0, uses_anonymous_args = 0
 395 0000 08B5     		push	{r3, lr}
 396              	.LCFI9:
 397              		.cfi_def_cfa_offset 8
 398              		.cfi_offset 3, -8
 399              		.cfi_offset 14, -4
 212:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM6_DAC1_IRQn 0 */
 213:Src/stm32f3xx_it.c **** 
 214:Src/stm32f3xx_it.c ****   /* USER CODE END TIM6_DAC1_IRQn 0 */
 215:Src/stm32f3xx_it.c ****   HAL_TIM_IRQHandler(&htim6);
 400              		.loc 1 215 0
 401 0002 0548     		ldr	r0, .L42
 402 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 403              	.LVL17:
 216:Src/stm32f3xx_it.c ****   /* USER CODE BEGIN TIM6_DAC1_IRQn 1 */
 217:Src/stm32f3xx_it.c ****   // SW external interrupt
 218:Src/stm32f3xx_it.c ****   HAL_NVIC_EnableIRQ(EXTI1_IRQn);
 404              		.loc 1 218 0
 405 0008 0720     		movs	r0, #7
 406 000a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 407              	.LVL18:
 219:Src/stm32f3xx_it.c ****   HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 408              		.loc 1 219 0
 409 000e 1720     		movs	r0, #23
 410 0010 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 411              	.LVL19:
 220:Src/stm32f3xx_it.c **** 
 221:Src/stm32f3xx_it.c ****   /* USER CODE END TIM6_DAC1_IRQn 1 */
 222:Src/stm32f3xx_it.c **** }
 412              		.loc 1 222 0
 413 0014 08BD     		pop	{r3, pc}
 414              	.L43:
 415 0016 00BF     		.align	2
 416              	.L42:
 417 0018 00000000 		.word	htim6
 418              		.cfi_endproc
 419              	.LFE135:
 421              		.section	.rodata.EXTI4_IRQHandler.str1.4,"aMS",%progbits,1
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s 			page 12


 422              		.align	2
 423              	.LC0:
 424 0000 54616368 		.ascii	"Tacho \000"
 424      6F2000
 425              		.text
 426              	.Letext0:
 427              		.file 2 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_type
 428              		.file 3 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 429              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 430              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 431              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f303x8.h"
 432              		.file 7 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 433              		.file 8 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 434              		.file 9 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef.
 435              		.file 10 "/usr/local/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 436              		.file 11 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 437              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 438              		.file 13 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 439              		.file 14 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_uart.h"
 440              		.file 15 "Inc/usart.h"
 441              		.file 16 "Inc/flag.h"
 442              		.file 17 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_cortex.h"
 443              		.file 18 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 444              		.file 19 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f3xx_it.c
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:18     .text.SysTick_Handler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:25     .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:49     .text.EXTI1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:56     .text.EXTI1_IRQHandler:0000000000000000 EXTI1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:87     .text.EXTI1_IRQHandler:000000000000001c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:93     .text.EXTI4_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:100    .text.EXTI4_IRQHandler:0000000000000000 EXTI4_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:143    .text.EXTI4_IRQHandler:0000000000000028 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:151    .text.DMA1_Channel1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:158    .text.DMA1_Channel1_IRQHandler:0000000000000000 DMA1_Channel1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:178    .text.DMA1_Channel1_IRQHandler:000000000000000c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:183    .text.EXTI9_5_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:190    .text.EXTI9_5_IRQHandler:0000000000000000 EXTI9_5_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:239    .text.EXTI9_5_IRQHandler:0000000000000034 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:245    .text.TIM1_UP_TIM16_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:252    .text.TIM1_UP_TIM16_IRQHandler:0000000000000000 TIM1_UP_TIM16_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:272    .text.TIM1_UP_TIM16_IRQHandler:000000000000000c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:277    .text.TIM2_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:284    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:311    .text.TIM2_IRQHandler:0000000000000014 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:318    .text.USART1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:325    .text.USART1_IRQHandler:0000000000000000 USART1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:345    .text.USART1_IRQHandler:000000000000000c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:350    .text.USART2_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:357    .text.USART2_IRQHandler:0000000000000000 USART2_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:377    .text.USART2_IRQHandler:000000000000000c $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:382    .text.TIM6_DAC1_IRQHandler:0000000000000000 $t
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:389    .text.TIM6_DAC1_IRQHandler:0000000000000000 TIM6_DAC1_IRQHandler
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:417    .text.TIM6_DAC1_IRQHandler:0000000000000018 $d
/var/folders/v3/wysfpd052nz8jkbx04pk0ym80000gn/T//cc0ZXw4G.s:422    .rodata.EXTI4_IRQHandler.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_SYSTICK_IRQHandler
HAL_GPIO_EXTI_IRQHandler
HAL_GPIO_ReadPin
flag_sw
HAL_UART_Transmit_printf
huart1
huart2
HAL_DMA_IRQHandler
hdma_adc1
HAL_TIM_IRQHandler
htim1
htim2
flag_disp
flag_meas_short
HAL_UART_IRQHandler
HAL_NVIC_EnableIRQ
htim6
